{"version":3,"sources":["webpack:///C:/Dropbox/www/amcharts4dev/node_modules/ieee754/index.js","webpack:///../es2015/.internal/bundled/xlsx/xlsx.mjs","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/isarray/index.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/buffer/index.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/process/browser.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/base64-js/index.js"],"names":["exports","read","buffer","offset","isLE","mLen","nBytes","e","m","eLen","eMax","eBias","nBits","i","d","s","NaN","Infinity","Math","pow","write","value","c","rt","abs","isNaN","floor","log","LN2","Object","defineProperty","__webpack_exports__","Buffer","process","__webpack_require__","parse_xlscfb","parse_zip","readSync","readFileSync","writeSync","writeFileSync","writeFileAsync","writeSyncXLSX","writeFileSyncXLSX","utils","set_fs","set_cptable","__stream","SSF","CFB","$cptable","XLSX","version","current_codepage","current_ansi","VALID_ANSI","CS2CP","0","1","2","77","128","129","130","134","136","161","162","163","177","178","186","204","222","238","255","69","set_ansi","cp","indexOf","set_cp","reset_cp","char_codes","data","o","len","length","charCodeAt","utf16leread","String","fromCharCode","join","utf16beread","debom","c1","c2","slice","_getchar","x","_getansi","cptable","decode","cpdoit","DENSE","DIF_XL","Base64_map","Base64_encode","input","c3","e1","e2","e3","e4","charAt","Base64_decode","replace","has_buf","versions","node","Buffer_from","nbfs","from","buf","enc","bind","buf_utf16le","toString","new_raw_buf","alloc","Uint8Array","Array","new_unsafe_buf","allocUnsafe","s2a","split","map","s2ab","ArrayBuffer","view","a2s","isArray","ab2a","Error","bconcat","bufs","concat","isBuffer","maxlen","set","apply","call","chr0","chr1","_strrev","pad0","v","t","fill","pad_","rpad_","p2_32","pad0r","round","pad0r1","pad0r2","SSF_isgeneral","days","months","table_fmt","3","4","9","10","11","12","13","14","15","16","17","18","19","20","21","22","37","38","39","40","45","46","47","48","49","56","SSF_default_map","5","6","7","8","23","24","25","26","27","28","29","30","31","50","51","52","53","54","55","57","58","59","60","61","62","67","68","70","71","72","73","74","75","76","78","79","80","81","82","SSF_default_str","63","64","65","66","41","42","43","44","SSF_frac","D","mixed","sgn","B","P_2","P_1","P","Q_2","Q_1","Q","A","q","SSF_parse_date_code","opts","b2","date","time","dow","dout","out","T","u","y","H","M","S","date1904","Date","setDate","getDate","getFullYear","getMonth","getDay","SSF_fix_hijri","SSFbasedate","SSFdnthresh","getTime","SSFbase1904","datenum_local","epoch","getTimezoneOffset","SSF_strip_decimal","SSF_general_num","V","LOG10E","SSF_normalize_exp","toPrecision","w","toFixed","toExponential","SSF_small_exp","substr","SSF_large_exp","toUpperCase","SSF_general","SSF_format","SSF_write_date","type","fmt","val","ss0","ss","tt","outl","commaify","j","pct1","frac1","dec1","closeparen","phone","hashq","str","cc","rnd","dd","dec","_frac","write_num_flt","match","ffmt","idx","write_num","write_num_cm","sfmt","mul","write_num_pct","write_num_exp","period","ee","fakee","$$","$1","$2","$3","r","ri","ff","aval","sign","den","parseInt","rr","base","myn","myd","write_num_f1","carry","oa","min","max","lres","rres","flr","write_num_int","write_num_cm2","write_num_pct2","write_num_exp2","write_num_f2","lastIndexOf","SSF_abstime","fmt_is_date","cfregex2","chkcond","thresh","parseFloat","choose_fmt","f","in_str","SSF_split_fmt","l","lat","m1","m2","dateNF","table","flen","dt","lst","hr","toLowerCase","ssm","bt","jj","nstr","myv","ostr","vv","decpt","lasti","retval","eval_fmt","SSF_load","undefined","SSF_load_table","tbl","make_ssf","SSF_init_table","format","load","_table","load_table","parse_date_code","is_date","get_table","SSFImplicit","32","33","34","35","36","dateNFregex","bad_formats","d.m","SSF__load","_fs","CRC32","T0","n","Int32Array","signed_crc_table","TT","subarray","slice_by_16_tables","T1","T2","T3","T4","T5","T6","T7","T8","T9","Ta","Tb","Tc","Td","Te","Tf","bstr","seed","C","L","fs","dirname","p","filename","write_dos_date","hms","getHours","getMinutes","getSeconds","write_shift","ymd","parse_extra_field","blob","prep_blob","flags","read_shift","sz","tgt","mtime","atime","ctime","mt","sz1","sz2","usz","csz","get_fs","parse","file","options","root","di","row","test","mboundary","boundary","FileIndex","FullPaths","init_cfb","start_di","fcnt","line","parse_mime","parse_mad","mver","nmfs","difat_sec_cnt","dir_start","minifat_start","difat_start","ssz","fat_addrs","mv","chk","HEADER_SIGNATURE","check_get_mver","header","shift","check_shifts","dir_cnt","sectors","nsectors","ceil","sectorify","sleuth_fat","cnt","ENDOFCHAIN","sector","__readInt32LE","push","sector_list","sl","chkd","buf_chain","modulus","k","seen","addr","nodes","__toBuffer","make_sector_list","name","Paths","files","mini","minifat_store","pl","namelen","__utf16le","color","R","clsid","state","start","size","ct","read_date","storage","get_sector_list","content","get_mfat_entry","read_directory","FI","FP","dad","build_full_paths","raw","entry","payload","MSSZ","new_buf","__readUInt32LE","cfb","CLSID","nm","find","rebuild_cfb","seed_cfb","gc","_file","pop","now","fullPaths","create","HEADER_CLSID","sort","Z","namecmp","elt","_write","_opts","fileType","fp","fi","ca","cstr","dispcnt","csl","qp","get_content_type","write_quoted_printable","write_base64_76","write_mad","cdirs","method","compression","start_cd","crcs","sz_cd","namebuf","outbuf","_deflateRawSync","write_zip","mini_size","fat_size","mfat_cnt","fat_base","fat_cnt","difat_cnt","HEADER_SIG","chainit","consts","DIFSECT","FATSECT","_nm","console","error","copy","_zlib","MAXREGSECT","FREESECT","HEADER_MINOR_VERSION","MAXREGSID","NOSTREAM","EntryTypes","deflateRawSync","_deflate","CLEN_ORDER","LEN_LN","DST_LN","bit_swap_8","use_typed_arrays","bitswap8","bit_swap_n","b","rev","read_bits_2","bl","h","read_bits_3","read_bits_5","read_bits_7","read_bits_n","write_bits_3","write_bits_1","write_bits_8","write_bits_16","realloc","a","zero_fill_array","build_tree","clens","cmap","MAX","ccode","bl_count","Uint16Array","ctree","cleni","fix_lmap","fix_dmap","dlens","_deflateRaw","DST_LN_RE","LEN_LN_RE","boff","write_stored","addrs","hash","mlen","len_eb","dst_eb","write_huff_fixed","off","dyn_lmap","dyn_dmap","dyn_cmap","dyn_len_1","dyn_len_2","dyn","_HLIT","_HDIST","_HCLEN","read_bits_4","next_code","hcodes","h1","h2","_inflate","woff","OL","max_len_1","max_len_2","bits","code","dst","inflate","warn_or_throw","wrn","msg","efsz","fcsz","EF","parse_local_file","meth","setMilliseconds","setFullYear","setMonth","setHours","setMinutes","setSeconds","parse_dos_date","_csz","_usz","ef","InflRaw","InflateRaw","_processChunk","_finishFlushFlag","bytesRead","_inflateRawSync","cfb_add","unsafe","ContentTypeMap","htm","xml","gif","jpg","png","mso","thmx","sh33tj5","ctype","ext","text","encoded","si","end","tmp","fdata","fname","cte","trim","oi","parse_quoted_printable","fpath","cfb_gc","path","UCFullPaths","UCPaths","UCPath","read_file","writeFile","cfb_new","cfb_del","splice","cfb_mov","old_name","new_name","ReadShift","CheckField","use_zlib","zlib","message","_inflateRaw","blobify","a2u","write_dl","Deno","TextEncoder","encode","utf8write","IE_SaveFile","Blob","navigator","msSaveBlob","saveAs","URL","document","createElement","createObjectURL","url","chrome","downloads","download","revokeObjectURL","setTimeout","href","body","appendChild","click","removeChild","$","File","Folder","open","encoding","close","keys","ks","o2","prototype","hasOwnProperty","evert_key","obj","key","K","evert","evert_num","basedate","datenum","refdate","dnthresh","refoffset","numdate","setTime","parse_isodur","sec","good_pd_date_1","good_pd_date","good_pd","parseDate","fixdate","cc2str","arr","debomit","TextDecoder","€","‚","ƒ","„","…","†","‡","ˆ","‰","Š","‹","Œ","Ž","‘","’","“","”","•","–","—","˜","™","š","›","œ","ž","Ÿ","dup","JSON","stringify","fuzzynum","Number","isFinite","wt","FDRE1","lower_months","fuzzydate","lower","fuzzytime1","getYear","split_regex","safe_split_regex","re","def","getdatastr","asNodeBuffer","asBinary","_data","getContent","getdatabin","safegetzipfile","zip","g","getzipfile","getzipdata","safe","getdata","getzipstr","zipentries","zip_add_file","res","widx","ridx","utf8decode","zip_new","zip_read","resolve_path","result","target","step","XML_HEADER","attregexg","tagregex1","tagregex","nsregex","nsregex2","parsexmltag","tag","skip_root","skip_LC","z","eq","quot","strip_ns","encodings","&quot;","&apos;","&gt;","&lt;","&amp;","rencoding","unescapexml","encregex","coderegex","xlsx","raw_unescapexml","decregex","charegex","escapexml","escapexmltag","htmlcharegex","escapehtml","xlml_fixstr","entregex","entrepl","parsexmlbool","utf8reada","orig","utf8readb","ww","utf8readc","utf8corpus","utf8read","matchtag","mtcache","RegExp","htmldecode","entities","vtregex","vt_cache","vtvregex","vtmregex","parseVector","matches","baseType","WTF","forEach","wtregex","writetag","wxt_helper","writextag","write_w3cdtf","toISOString","xlml_normalize","xlmlregex","XMLNS","CORE_PROPS","CUST_PROPS","EXT_PROPS","CT","RELS","TCMNT","dc","dcterms","dcmitype","mx","sjs","vt","xsi","xsd","XMLNS_main","XLMLNS","html","___toBuffer","___utf16le","__readUInt16LE","___hexlify","__hexlify","___utf8","__readUInt8","__utf8","___lpstr","__lpstr","___cpstr","__cpstr","___lpwstr","__lpwstr","___lpp4","__lpp4","___8lpp4","__8lpp4","___double","read_double_le","__double","is_buf","readUInt32LE","readDoubleLE","__readInt16LE","__readInt32BE","oI","oR","loc","oo","this","lens","__writeUInt32LE","__writeInt32LE","__writeUInt16LE","WriteShift","cpp","bs","av","write_double_le","hexstr","fld","pos","parsenoop","recordhopper","cb","tmpbyte","cntbyte","RT","XLSBRecordEnum","buf_array","blksz","newblk","curbuf","endbuf","next","_bufs","write_record","ba","shift_cell_xls","cell","cRel","rRel","biff","shift_range_xls","range","encode_cell_xls","encode_cell","fix_col","fix_row","encode_range_xls","encode_row","encode_col","decode_row","rowstr","unfix_row","decode_col","colstr","unfix_col","col","decode_cell","decode_range","encode_range","cs","ce","fix_range","a1","formula_quote_sheet_name","sname","safe_decode_range","safe_format_cell","XF","numFmtId","format_cell","BErr","sheet_to_workbook","sheet","sheets","SheetNames","Sheets","sheet_add_aoa","_ws","dense","ws","_R","_C","origin","_origin","_range","__R","__Rstr","__C","nullError","sheetStubs","cellDates","cell_ref","aoa_to_sheet","write_UInt32LE","parse_XLWideString","cchCharacters","write_XLWideString","_null","parse_StrRun","ich","ifnt","parse_RichStr","rgsStrRun","dwSizeStrRun","parse_BrtCommentText","write_BrtCommentText","run","write_StrRun","parse_XLSBCell","iStyleRef","write_XLSBCell","parse_XLSBShortCell","write_XLSBShortCell","parse_XLSBCodeName","write_XLSBCodeName","parse_XLNullableWideString","write_XLNullableWideString","parse_XLNameWideString","parse_RelID","write_RelID","parse_RkNumber","fX100","fInt","RK","write_RkNumber","d100","parse_RfX","parse_UncheckedRfX","write_UncheckedRfX","parse_Xnum","write_Xnum","write_BrtColor","auto","index","theme","nTS","tint","rgb","parse_ClipboardFormatOrString","VT_I2","VT_I4","VT_VARIANT","VT_USTR","VT_CUSTOM","DocSummaryPIDDSI","2147483648","2147483651","1919054434","SummaryPIDSI","CountryEnum","84","86","90","105","213","216","218","351","354","358","420","886","961","962","963","964","965","966","971","972","974","981","65535","XLSFillPattern","XLSIcv","rgbify","RBErr","#NULL!","#DIV/0!","#VALUE!","#REF!","#NAME?","#NUM!","#N/A","#GETTING_DATA","#WTF?","XLSLblBuiltIn","ct2type","application/vnd.openxmlformats-officedocument.spreadsheetml.sheet.main+xml","application/vnd.ms-excel.sheet.macroEnabled.main+xml","application/vnd.ms-excel.sheet.binary.macroEnabled.main","application/vnd.ms-excel.addin.macroEnabled.main+xml","application/vnd.openxmlformats-officedocument.spreadsheetml.template.main+xml","application/vnd.openxmlformats-officedocument.spreadsheetml.worksheet+xml","application/vnd.ms-excel.worksheet","application/vnd.ms-excel.binIndexWs","application/vnd.openxmlformats-officedocument.spreadsheetml.chartsheet+xml","application/vnd.ms-excel.chartsheet","application/vnd.ms-excel.macrosheet+xml","application/vnd.ms-excel.macrosheet","application/vnd.ms-excel.intlmacrosheet","application/vnd.ms-excel.binIndexMs","application/vnd.openxmlformats-officedocument.spreadsheetml.dialogsheet+xml","application/vnd.ms-excel.dialogsheet","application/vnd.openxmlformats-officedocument.spreadsheetml.sharedStrings+xml","application/vnd.ms-excel.sharedStrings","application/vnd.openxmlformats-officedocument.spreadsheetml.styles+xml","application/vnd.ms-excel.styles","application/vnd.openxmlformats-package.core-properties+xml","application/vnd.openxmlformats-officedocument.custom-properties+xml","application/vnd.openxmlformats-officedocument.extended-properties+xml","application/vnd.openxmlformats-officedocument.customXmlProperties+xml","application/vnd.openxmlformats-officedocument.spreadsheetml.customProperty","application/vnd.openxmlformats-officedocument.spreadsheetml.comments+xml","application/vnd.ms-excel.comments","application/vnd.ms-excel.threadedcomments+xml","application/vnd.ms-excel.person+xml","application/vnd.openxmlformats-officedocument.spreadsheetml.sheetMetadata+xml","application/vnd.ms-excel.sheetMetadata","application/vnd.ms-excel.pivotTable","application/vnd.openxmlformats-officedocument.spreadsheetml.pivotTable+xml","application/vnd.openxmlformats-officedocument.drawingml.chart+xml","application/vnd.ms-office.chartcolorstyle+xml","application/vnd.ms-office.chartstyle+xml","application/vnd.ms-office.chartex+xml","application/vnd.ms-excel.calcChain","application/vnd.openxmlformats-officedocument.spreadsheetml.calcChain+xml","application/vnd.openxmlformats-officedocument.spreadsheetml.printerSettings","application/vnd.ms-office.activeX","application/vnd.ms-office.activeX+xml","application/vnd.ms-excel.attachedToolbars","application/vnd.ms-excel.connections","application/vnd.openxmlformats-officedocument.spreadsheetml.connections+xml","application/vnd.ms-excel.externalLink","application/vnd.openxmlformats-officedocument.spreadsheetml.externalLink+xml","application/vnd.ms-excel.pivotCacheDefinition","application/vnd.ms-excel.pivotCacheRecords","application/vnd.openxmlformats-officedocument.spreadsheetml.pivotCacheDefinition+xml","application/vnd.openxmlformats-officedocument.spreadsheetml.pivotCacheRecords+xml","application/vnd.ms-excel.queryTable","application/vnd.openxmlformats-officedocument.spreadsheetml.queryTable+xml","application/vnd.ms-excel.userNames","application/vnd.ms-excel.revisionHeaders","application/vnd.ms-excel.revisionLog","application/vnd.openxmlformats-officedocument.spreadsheetml.revisionHeaders+xml","application/vnd.openxmlformats-officedocument.spreadsheetml.revisionLog+xml","application/vnd.openxmlformats-officedocument.spreadsheetml.userNames+xml","application/vnd.ms-excel.tableSingleCells","application/vnd.openxmlformats-officedocument.spreadsheetml.tableSingleCells+xml","application/vnd.ms-excel.slicer","application/vnd.ms-excel.slicerCache","application/vnd.ms-excel.slicer+xml","application/vnd.ms-excel.slicerCache+xml","application/vnd.ms-excel.wsSortMap","application/vnd.ms-excel.table","application/vnd.openxmlformats-officedocument.spreadsheetml.table+xml","application/vnd.openxmlformats-officedocument.theme+xml","application/vnd.openxmlformats-officedocument.themeOverride+xml","application/vnd.ms-excel.Timeline+xml","application/vnd.ms-excel.TimelineCache+xml","application/vnd.ms-office.vbaProject","application/vnd.ms-office.vbaProjectSignature","application/vnd.ms-office.volatileDependencies","application/vnd.openxmlformats-officedocument.spreadsheetml.volatileDependencies+xml","application/vnd.ms-excel.controlproperties+xml","application/vnd.openxmlformats-officedocument.model+data","application/vnd.ms-excel.Survey+xml","application/vnd.openxmlformats-officedocument.drawing+xml","application/vnd.openxmlformats-officedocument.drawingml.chartshapes+xml","application/vnd.openxmlformats-officedocument.drawingml.diagramColors+xml","application/vnd.openxmlformats-officedocument.drawingml.diagramData+xml","application/vnd.openxmlformats-officedocument.drawingml.diagramLayout+xml","application/vnd.openxmlformats-officedocument.drawingml.diagramStyle+xml","application/vnd.openxmlformats-officedocument.vmlDrawing","application/vnd.openxmlformats-package.relationships+xml","application/vnd.openxmlformats-officedocument.oleObject","image/png","CT_LIST","workbooks","xlsm","xlsb","xlam","xltx","strs","comments","charts","dialogs","macros","metadata","styles","write_ct","type2ct","evert_arr","xmlns","xmlns:xsd","xmlns:xsi","Extension","ContentType","f1","PartName","bookType","f2","f3","WB","SHEET","HLINK","VML","XPATH","XMISS","XLINK","CXML","CXMLP","CMNT","SST","STY","THEME","CHART","CHARTEX","CS","WS","DS","MS","IMG","DRAW","XLMETA","PEOPLE","CONN","VBA","get_rels_path","parse_rels","currentFilePath","rels","!id","rel","Type","Target","Id","TargetMode","canonictarget","write_rels","rid","add_rels","rId","relobj","targetmode","CT_ODS","write_rdf_type","write_rdf_has","write_meta_ods","wb","CORE_PROPS_REGEX","parse_core_props","cur","cp_doit","write_core_props","xmlns:cp","xmlns:dc","xmlns:dcterms","xmlns:dcmitype","Props","CreatedDate","xsi:type","ModifiedDate","PseudoPropsPairs","load_props_pairs","HP","TOP","props","hp","parts","Worksheets","NamedRanges","DefinedNames","Chartsheets","ChartNames","write_ext_props","W","Application","xmlns:vt","custregex","write_cust_props","pid","write_vt","fmtid","evert_XLMLDPM","XLMLDocPropsMap","Title","Subject","Author","Keywords","Comments","LastAuthor","RevNumber","LastPrinted","Category","Manager","Company","AppVersion","ContentStatus","Identifier","Language","xlml_set_prop","parse_FILETIME","dwLowDateTime","dwHighDateTime","parse_lpstr","pad","parse_lpwstr","parse_VtStringBase","stringType","parse_VtString","parse_VtHeadingPair","headingString","parse_TypedPropertyValue","parse_dictionary","CodePage","dict","parse_BLOB","bytes","ret","Size","parse_ClipboardData","parse_VtUnalignedString","cElements","parse_VtVecHeadingPairValue","parse_VtVecLpwstrValue","parse_VtVecUnalignedLpstrValue","write_TypedPropertyValue","write_FILETIME","parse_PropertySet","PIDSI","start_addr","NumProps","Dictionary","DictObj","PropID","Offset","PropH","fail","piddsi","oldpos","parsebool","XLSPSSkip","guess_property_type","write_PropertySet","entries","RE","hdr","piao","prop","pr","pio","unshift","pinfo","parse_PropertySetStream","NumSets","FMTID0","FMTID1","Offset0","Offset1","SystemIdentifier","PSet1","PSet0","rval","FMTID","write_PropertySetStream","entries2","clsid2","ps0","ps1","parsenoop2","writebool","parseuint16","writeuint16","parseuint16a","parslurp","write_Bes","parse_ShortXLUnicodeString","cch","parse_XLUnicodeRichExtendedString","cbExtRst","fExtSt","fRichSt","width","cRun","write_XLUnicodeRichExtendedString","xlstr","otext","parse_XLUnicodeStringNoCch","parse_XLUnicodeString","parse_XLUnicodeString2","write_XLUnicodeString","parse_HyperlinkMoniker","extra","parse_URLMoniker","cAnti","preamble","ansiPath","parse_FileMoniker","parse_HyperlinkString","write_HyperlinkString","parse_LongRGBA","parse_LongRGB","parse_XLSCell","ixfe","write_XLSCell","parse_XTI","parse_RkRec","parse_Ref8U","rwFirst","rwLast","write_Ref8U","parse_RefU","parse_Ref","parse_FtCmo","ot","id","parse_FtSkip","FtTab","cf","fSharedNote","parse_BOF","BIFFVer","write_BOF","write_BoundSheet8","hs","parse_DefaultRowHeight","miyRw","Unsynced","DyZero","ExAsc","ExDsc","write_Format","b5","parse_BIFF2Format","parse_Dimensions","write_XF","ixfeP","style","parse_BoolErr","parse_Bes","parse_XLHeaderFooter","parse_ExternName","fBuiltIn","fWantAdvise","fWantPict","fOle","fOleLink","fIcon","sbcch","udfName","parse_AddinUdf","Name","parse_Lbl","chKey","cce","itab","npflen","rgce","rgcb","parse_Rgce","parse_RgbExtra","parse_NameParsedFormula","parse_ExternSheet","parse_BIFF5ExternSheet","parse_Array","ref","parse_ArrayParsedFormula","parse_BIFF5OT","cchName","write_HLink","hl","O","hashidx","F","Pretarget","write_Hyperlink","write_HLinkTooltip","Tooltip","parse_ColInfo","cellStyles","colFirst","colLast","coldx","level","parse_Blank","parse_Scl","parse_String","DBF_SUPPORTED_VERSIONS","DBF","dbf_codepage_map","100","101","102","103","104","106","107","120","121","122","123","124","125","126","150","151","152","200","201","202","203","87","88","89","108","135","dbf_reverse_map","dbf_to_sheet","ft","memo","vfp","l7","nrow","fpos","rlen","current_cp","codepage","fields","field","hend","sheetRows","dbf_to_aoa","wch","_RLEN","?","","to_workbook","to_sheet","from_sheet","old_cp","aoa","sheet_to_json","headers","cols","hcnt","coltypes","colwidths","coldecimals","guess","_guess","hf","_f","hb","rout","_n","_l","_s","SYLK","sylk_escapes","AA","BA","CA","DA","HA","JA","AE","BE","CE","HE","AI","BI","CI","HI","AO","BO","CO","DO","HO","AU","BU","CU","HU","Aa","Ba","Ca","Da","Ha","Ja","Ae","Be","Ce","He","Ai","Bi","Ci","Hi","Ao","Bo","Co","Do","Ho","Au","Bu","Cu","Hu","KC","Kc","DN","Dn","Hy","B ","!","\"","#","(","%","'","H ","+",";","<","=",">","{","sylk_char_regex","sylk_char_fn","_","decode_sylk_char","newcc","sylk_to_aoa_str","records","rj","formats","next_cell_format","sht","rowinfo","colinfo","cw","Mval","Workbook","WBProps","Names","rstr","record","d1904","nn","Sheet","Ref","rc_to_a1","C_seen_K","C_seen_X","C_seen_S","C_seen_E","formula","cell_t","cellText","shrbase","shift_formula_str","F_seen","hidden","hpt","hpx","pt2px","process_col","write_ws_cell_sylk","a1_to_rc","aoasht","sylk_to_aoa","outwb","RS","rec","wpx","width2px","px2char","write_ws_cols_sylk","rows","px2pt","write_ws_rows_sylk","DIF","dif_to_aoa_str","dif_to_sheet","dif_to_aoa","make_value","make_value_str","_DIF_XL","ETH","eth_to_sheet","eth_to_aoa","sep","meta","coord","sheet_to_eth_data","PRN","set_text_arr","guess_seps","guess_sep_weights","guess_sep","instr","dsv_to_sheet_str","FS","sepcc","startcc","_re","dateNF_regex","finish_cell","fuzzyfmla","Y","datestr","timestr","dateNF_fix","cellNF","outer","prn_to_sheet_str","lines","prn_to_aoa_str","prn_to_sheet","firstbyte","WK_","lotushopper","Enum","WK1Enum","lotus_to_workbook_buf","next_n","sidx","snames","realnames","sdata","refguess","book_append_sheet","CC","delta","qpw_to_workbook_buf","vers","qpro","works","works2","tmpcell","WK3Enum","osheets","rnames","!ref","parse_cell","write_LABEL","write_INTEGER","write_NUMBER","wk1_parse_rc","FuncTab","83","109","111","BinOpTab","parse_cell_3","write_LABEL_16","wsidx","parse_NUMBER_17","v1","v2","write_NUMBER_17","log2","parse_NUMBER_27","parse_SHEETNAMECS","write_XFORMAT_SHEETNAME","argc","argL","argR","args","wk1_fmla_to_csf","142","147","153","154","155","156","174","175","176","184","185","187","188","195","205","206","207","208","256","259","260","261","262","263","265","266","267","268","270","271","384","389","390","393","396","512","514","513","516","517","640","641","642","643","644","645","646","647","648","658","659","660","661","662","665","666","768","772","1537","1600","1602","1793","1794","1795","1796","1920","2048","2049","2052","2688","10998","12849","28233","28484","sheet_to_wk1","write_biff_rec","write_BOF_WK1","write_RANGE","max_R","book_to_wk3","wscnt","write_BOF_WK3","parse_rs","tregex","rpregex","parse_r","rpr","font","pass","shadow","outline","strike","uval","family","valign","parse_rpr","rregex","rend","rs","filter","rs_to_html","nlregex","r_to_html","terms","intro","outro","align","parse_rpr2","sitregex","sirregex","sirphregex","parse_si","cellHTML","sstr0","sstr1","sstr2","straywsregex","write_BrtSSTItem","write_sst_bin","sst","Count","Unique","write_BrtBeginSst","_JS2ANSI","parse_CRYPTOVersion","Major","Minor","parse_DataSpaceMapEntry","comps","parse_Primary","U","parse_TransformInfoHeader","ename","cmode","parse_EncryptionHeader","Flags","AlgID","valid","AlgIDHash","KeySize","ProviderType","CSPName","parse_EncryptionVerifier","Salt","Verifier","VerifierHash","parse_EncryptionInfo","verifier","parse_EncInfoStd","parse_EncInfoExt","KeyData","encryptedHmacKey","encryptedHmacValue","encs","uri","parse_EncInfoAgl","crypto_CreatePasswordVerifier_Method1","Password","PasswordArray","PasswordByte","PasswordDecoded","crypto_CreateXorArray_Method1","PadArray","InitialCode","XorMatrix","XorRor","byte1","byte2","Byte","Ror","password","Temp","PasswordLastChar","PadIndex","XorKey","CurrentElement","Char","CreateXorKey_Method1","Index","ObfuscationArray","crypto_MakeXorDecryptor","XorArrayIndex","XorArray","Data","Value","crypto_DecryptData_Method1","parse_FilePassHeader","Info","EncryptionVersionInfo","EncryptedVerifier","EncryptedVerifierHash","parse_RC4Header","EncryptionHeader","EncryptionVerifier","parse_RC4CryptoHeader","rtf_to_sheet_str","rowtf","rtfre","last_index","exec","lastIndex","rtf_to_workbook","rtf_to_sheet","rgb2Hex","rgb_tint","hex","hsl","G","H6","L2","rgb2HSL","hex2RGB","X","h6","hsl2RGB","DEF_MDW","MAX_MDW","MIN_MDW","MDW","px","char2width","chr","cycle_width","collw","find_mdw_colw","_MDW","coll","customWidth","PPI","pt","XLMLPatternTypeMap","None","Solid","Gray50","Gray75","Gray25","HorzStripe","VertStripe","ReverseDiagStripe","DiagStripe","DiagCross","ThickDiagCross","ThinHorzStripe","ThinVertStripe","ThinReverseDiagStripe","ThinHorzCross","cellXF_uint","cellXF_bool","parse_sty_xml","numFmtRegex","cellXfRegex","fillsRegex","fontsRegex","bordersRegex","themes","NumberFmt","formatCode","parse_numFmts","Fonts","bold","italic","underline","condense","extend","vertAlign","scheme","indexed","icv","themeElements","clrScheme","parse_fonts","Fills","patternType","bgColor","fgColor","parse_fills","Borders","border","diagonalUp","diagonalDown","parse_borders","xf","CellXf","alignment","vertical","horizontal","textRotation","indent","wrapText","parse_cellXfs","write_sty_xml","NF","count","write_numFmts","cellXfs","write_cellXfs","write_BrtFmt","write_BrtFont","grbit","write_FontFlags","sss","charset","rev_XLSBFillPTNames","XLSBFillPTNames","parse_BrtFill","write_BrtFill","fls","write_BrtXF","write_Blxf","parse_BrtBorder","write_BORDERS_bin","write_BrtBorder","write_STYLES_bin","xfId","builtinId","write_BrtStyle","write_TABLESTYLES_bin","defTableStyle","defPivotStyle","write_BrtBeginTableStyles","write_sty_bin","write_FMTS_bin","write_FONTS_bin","write_FILLS_bin","fontId","fillId","borderId","write_CELLSTYLEXFS_bin","write_CELLXFS_bin","write_DXFS_bin","XLSXThemeClrScheme","clrsregex","fntsregex","fmtsregex","parse_themeElements","lastClr","themeltregex","parse_theme_xml","write_theme","Themes","themeXLSX","parse_FullColorExt","xclrType","nTintShade","xclrValue","parse_IcvXF","parse_ColorTheme","parse_ExtProp","extType","parse_XFExtGradient","update_xfext","xfext","xfe","write_xlmeta_bin","write_BrtMdtinfo","write_BrtBeginEsfmd","cm","write_BrtBeginEsmdb","mdb","write_BrtMdb","write_vml","csize","bbox","xmlns:v","xmlns:o","xmlns:x","xmlns:mv","v:ext","_shapeid","_comments","joinstyle","gradientshapeok","o:connecttype","coordsize","o:spt","fillopts","color2","angle","fillxml","fillcolor","strokecolor","on","obscured","write_vml_comment","sheet_insert_comments","threaded","people","comment","author","write_comments_xml","iauthor","ID","lastauthor","ts","tcnt","write_tcmnt_xml","carr","rootid","tcopts","tcid","parentId","personId","parse_BrtCommentAuthor","write_comments_bin","write_BrtCommentAuthor","write_BrtBeginComment","CT_VBA","VBAFMTS","rcregex","rcbase","rcfunc","fstr","crefregex","$0","$4","$5","shift_formula_xlsx","_xlfn","parseread1","parse_ColRelU","parse_RgceArea","parse_RgceArea_BIFF2","parse_RgceLoc","parse_RgceLoc_BIFF2","parse_PtgAttrBaxcel","bitSemi","parse_PtgAttrSpaceType","parse_SerAr","parse_PtgExtraMem","parse_PtgExtraArray","parse_PtgElfLoc","fQuoted","parse_RgceElfLoc","parse_PtgElfNoop","parse_PtgElfLel","PtgListRT","PtgTypes","iftab","FtabArgc","Ftab","cparams","tab","parsetab","Cetab","nameindex","rl","parse_RgceLocRel_BIFF2","cl","parse_RgceLocRel","parse_RgceAreaRel","ixti","parse_PtgNameX_BIFF5","PtgDupes","96","97","98","99","110","91","92","93","Ptg18","coltype","Ptg19","bitIf","bitGoto","ptgs","stringify_array","PtgBinOp","PtgAdd","PtgConcat","PtgDiv","PtgEq","PtgGe","PtgGt","PtgLe","PtgLt","PtgMul","PtgNe","PtgPower","PtgSub","make_3d_range","get_ixti_raw","supbooks","XTI","SID","get_ixti","ixtiraw","stringify_formula","stack","nameidx","last_sp","sp","fflen","func","lbl","names","xlfn","externbook","bookidx","ixtidata","lp","rp","sharedf","parsedf","fnd","arrayf","_left","parse_Formula","parse_FormulaValue","cbf","parse_XLSCellParsedFormula","shared","write_Formula","os","o1","write_FormulaValue","o3","bf","parse_XLSBParsedFormula","parse_XLSBArrayParsedFormula","parse_XLSBCellParsedFormula","parse_XLSBNameParsedFormula","parse_XLSBSharedParsedFormula","write_XLSBFormulaNum","oint","num","write_XLSBNameParsedFormula","write_XLSBFormulaBool","write_XLSBFormulaErr","write_XLSBFormulaRef","_str","write_XLSBFormulaRange","lastbang","write_XLSBFormulaArea3D","write_XLSBFormulaRef3D","write_XLSBFormulaRangeWS","write_XLSBFormulaRefErr3D","postamble","write_XLSBFormulaStr","85","94","95","112","113","114","115","116","117","118","119","127","131","132","133","137","138","139","140","143","144","145","146","148","149","159","164","166","167","168","169","170","171","172","173","189","190","191","192","193","194","196","197","198","199","209","210","211","212","214","215","217","219","220","223","224","225","226","227","228","229","240","243","249","250","251","252","253","254","269","272","273","274","276","277","278","279","280","281","282","283","284","285","288","289","290","291","292","293","295","296","297","298","302","305","306","307","308","309","310","311","312","313","314","315","316","318","319","320","321","322","323","324","325","328","330","336","338","339","342","343","344","350","352","355","356","370","373","374","375","376","377","378","379","380","381","382","383","385","386","388","391","392","394","395","397","398","399","400","412","413","414","415","416","417","421","422","423","424","425","430","431","432","433","434","435","436","437","438","439","440","441","442","443","444","445","446","447","448","449","450","451","452","453","454","455","456","458","459","460","461","462","463","464","465","466","467","468","469","470","471","472","473","474","475","476","477","478","480","481","482","485","489","491","493","494","495","509","510","511","518","519","520","521","522","523","545","546","547","548","549","620","621","653","667","673","753","755","808","141","157","158","160","165","179","180","181","182","183","221","230","231","232","233","234","235","236","237","239","241","242","244","245","246","247","248","257","258","264","275","286","287","294","299","300","301","303","304","317","326","327","329","331","332","334","335","337","340","341","345","346","347","348","349","353","357","359","360","361","362","363","364","365","366","367","368","369","371","372","387","401","402","403","404","405","406","407","408","409","410","411","418","419","426","427","428","429","457","724","479","483","484","ods_to_csf_formula","csf_to_ods_formula","ods_to_csf_3D","csf_to_ods_3D","_ssfopts","browser_has_Map","Map","get_sst_id","has","revarr","get","col_obj_w","outlineLevel","default_margins","margins","mode","defs","left","right","top","bottom","footer","get_cell_style","revssf","ssf","applyNumberFormat","safe_format","fillid","raw_rgb","check_ws","mergecregex","sheetdataregex","hlinkregex","dimregex","colregex","afregex","marginregex","sheetprregex","sheetprregex2","svsregex","parse_ws_xml","data1","data2","mtch","sheetPr","parse_ws_xml_sheetpr","parse_ws_xml_sheetpr2","nodim","parse_ws_xml_dim","svs","Views","sviewregex","zoomScale","zoom","rightToLeft","RTL","parse_ws_xml_sheetviews","columns","seencol","coli","colm","colM","parse_ws_xml_cols","parse_ws_xml_data","afilter","parse_ws_xml_autofilter","merges","_merge","hlink","location","Rel","tooltip","rng","parse_ws_xml_hlinks","margin","parse_ws_xml_margins","tmpref","codeName","CodeName","sheetprot_deffalse","sheetprot_deftrue","write_ws_xml_cell","oldt","oldv","bookSST","Strings","revStrings","display","cellregex","rowregex","isregex","refregex","match_v","match_f","sstr","ftag","cells","cref","tagr","tagc","do_format","rowobj","rowrite","marr","marrlen","xlen","rstarti","outa","ht","rslice","cellFormula","___f","_tag","xlmeta","Cell","_r","write_ws_xml","xmlns:r","rdata","_drawing","needed","vbaraw","cname","outlineprops","summaryBelow","summaryRight","above","write_ws_xml_sheetpr","sview","workbookViewId","write_ws_xml_sheetviews","sheetFormat","defaultRowHeight","baseColWidth","outlineLevelRow","params","height","_cell","customHeight","write_ws_xml_data","write_ws_xml_protection","write_ws_xml_autofilter","relc","write_ws_xml_margins","ignoreEC","numberStoredAsText","sqref","r:id","write_row_header","ncolspan","lcs","caddr","first","last","write_BrtRowHdr","parse_BrtWsDim","write_BrtWsDim","parse_BrtShortReal","parse_BrtMergeCell","write_BrtMergeCell","BrtMarginKeys","write_ws_bin_cell","last_seen","ncell","write_BrtShortIsst","write_BrtCellIsst","write_BrtShortSt","write_BrtCellSt","write_BrtShortRk","write_BrtCellRk","write_BrtShortReal","write_BrtCellReal","write_BrtShortBool","write_BrtCellBool","write_BrtShortError","write_BrtCellError","write_BrtShortBlank","write_BrtCellBlank","write_MERGECELLS","write_BrtBeginMergeCells","write_COLINFOS","write_BrtColInfo","write_IGNOREECS","write_BrtCellIgnoreEC","write_HLINKS","locidx","write_BrtHLink","write_WSVIEWS2","write_BrtBeginWsView","write_SHEETPROTECT","write_BrtSheetProtection","write_ws_bin","write_BrtWsProp","cap","write_CELLTABLE","write_AUTOFILTER","write_BrtMargins","write_LEGACYDRAWING","parse_chart","csheet","!type","nc","cache","nf","parse_Cache","WBPropsDef","WBViewDef","SheetDef","CalcPrDef","push_defaults_array","defaults","push_defaults","parse_wb_defaults","CalcPr","WBView","badchars","check_ws_name","check_wb","N","codes","cn","check_wb_names","dn","wbnsregex","write_BrtBundleSh","Hidden","iTabID","strRelID","parse_BrtFRTArchID$","ArchID","write_BOOKVIEWS","vistab","write_BrtBookView","write_BRTNAMES","dname","Comment","write_BrtName","write_EXTERNALS_xlsb","write_SELF_EXTERNS_xlsb","write_wb_bin","write_BrtFileVersion","filterPrivacy","write_BrtWbProp","write_BUNDLESHS","parse_wb","Ptg","parse_wb_bin","dnstart","localSheetId","parse_wb_xml","parse_ws","ai","af","vm","RR","aii","_d","relId","rfx","parse_ws_bin","parse_cs","!drawel","!rel","parse_cs_bin","parse_cs_xml","parse_sty","parse_sty_bin","parse_sst","parse_sst_bin","uniqueCount","parse_sst_xml","parse_cmnt","authors","parse_comments_bin","commentList","authtag","cmnttag","authorId","guid","textMatch","parse_comments_xml","parse_cc","parse_cc_bin","parse_cc_xml","parse_xlink","parse_xlink_bin","parse_xlmeta","Types","metatype","parse_xlmeta_bin","lastmeta","offsets","parse_xlmeta_xml","XLMLFormatMap","attregexg2","attregex2","xlml_parsexmltag","words","xlml_parsexmltagobj","xlml_set_custprop","Custprops","oval","safe_format_xlml","xlml_format","process_style_xlml","stag","Interior","I","Pattern","parse_xlml_data","csty","sid","StyleID","interiors","Parent","UTC","Formula","ArrayRange","xlml_prefix_dname","xlml_clean_comment","parse_xlml_xml","Rn","opening","ishtml","_o","html_to_sheet","html_to_workbook","General Number","General Date","Long Date","Medium Date","Short Date","Long Time","Medium Time","Short Time","Currency","Fixed","Standard","Percent","Scientific","Yes/No","True/False","On/Off","sheetnames","cursheet","sheetname","dtag","didx","fidx","pidx","cstys","wsprops","raw_Rn3","HRef","HRefScreenTip","MergeAcross","MergeDown","cma","cmd","AutoFitHeight","Height","Format","ssfidx","Width","_col","Span","_NamedRange","_DefinedName","RefersTo","AutoFilter","Range","parse_fods","Margin","pagemargins","Top","Left","Right","Bottom","bookSheets","bookProps","parse_xlml","fix_read_opts","write_props_xlml","xlml_write_docprops","BLACKLIST","dt:dt","xlml_write_custprops","write_name_xlml","ss:Name","ss:RefersTo","write_ws_xlml_cell","attr","mi","escapexlml","_v","xlml_unfixstr","ss:Author","write_ws_xlml_comment","write_ws_xlml_row","write_ws_xlml","write_ws_xlml_names","ss:Index","skip","write_ws_xlml_table","x:Margin","x:Bottom","x:Left","x:Right","x:Top","objects","scenarios","selectLockedCells","selectUnlockedCells","write_ws_xlml_wsopts","write_xlml","General","write_wb_xlml","ss:Format","ss:ID","write_sty_xlml","write_names_xlml","xmlns:ss","xmlns:dt","xmlns:html","parse_compobj","AnsiUserType","AnsiClipboardFormat","parse_ClipboardFormatOrAnsiString","Reserved1","UnicodeClipboardFormat","parse_ClipboardFormatOrUnicodeString","Reserved2","CONTINUE_RT","slurp","RecordType","insitu","nextrt","XLSRecordEnum","ll","safe_format_xf","make_cell","parse_workbook","lastcell","cmnt","rngC","rngR","temp_val","country","Directory","last_formula","cur_sheet","Preamble","last_cell","XFs","palette","get_rgb","addcell","file_depth","xfd","icvFore","icvBack","process_cell_style","afi","rrtabid","lastuser","winlocked","wtf","last_lbl","last_RT","BIFF2Fmt","BIFF2FmtTable","FilterDatabases","seen_codepage","Date1904","WriteProtect","cpval","CalcRefMode","FullCalc","fDialog","fBelow","fRight","ExternCount","tmpri","1033","1024","1280","1536","biffguess","fakebs8","rknum","rkrec","_fr","_fc","_fe","_arraystart","isst","_j","_ixfe","b4idx","b2idx","cmo","lastobj","TxO","ImData","noteobj","Encryption","Metadata","Country","PSCLSID","SI","DSI","UDI","CompObj","WorkbookP","bookVBA","newcfb","newpath","make_vba_xls","DocSummary","Summary","HeadingPairs","TitlesOfParts","parse_xls_props","bookFiles","write_xlscfb","wbpath","write_biff_buf","Keys","DSEntries","SEntries","CEntries","DocSummaryRE","SummaryRE","CEntries2","write_xls_props","vba","fill_vba_xls","fBold","fItalic","fUnderline","fStrikeout","fOutline","fShadow","fCondense","fExtend","parse_FontFlags","bCharSet","xColorType","bR","bG","bB","parse_BrtColor","ixfeParent","ifmt","defaultThemeVersion","strName","autoCompressPictures","backupFile","checkCompatibility","hidePivotFieldList","promptedSolutions","publishItems","refreshAllConnections","saveExternalLinkValues","showBorderUnselectedTables","showInkAnnotation","showObjects","showPivotChartFilter","updateLinks","333","fAlwaysCalc","486","487","488","490","492","496","497","498","499","500","501","502","503","504","505","506","507","508","515","524","525","526","527","528","529","530","531","532","533","534","535","536","537","538","539","540","541","542","550","551","552","553","554","555","556","557","558","559","560","561","562","564","565","566","569","570","572","573","574","577","578","579","580","581","582","583","584","585","586","587","588","589","590","591","592","593","594","595","596","597","598","599","600","601","602","603","604","605","606","607","608","609","610","611","612","613","614","615","616","617","618","619","625","626","627","628","629","630","631","632","633","634","635","636","637","638","639","649","650","651","652","654","655","656","657","663","664","668","669","671","672","674","675","676","677","678","679","680","681","1025","1026","1027","1028","1029","1030","1031","1032","1034","1035","1036","1037","1038","1039","1040","1041","1042","1043","1044","1045","1046","1047","1048","1049","1050","1051","1052","1053","1054","1055","1056","1057","1058","1059","1061","1062","1063","1064","1065","1066","1067","1068","1069","1070","1071","1072","1073","1075","1076","1077","1078","1079","1080","1081","1082","1083","1084","1085","1086","1087","1088","1089","1090","1091","1092","1093","1094","1095","1096","1097","1098","1099","1100","1101","1102","1103","1104","1105","1111","1112","1113","1114","1115","1116","1117","1118","1119","1120","1121","1122","1123","1124","1125","1126","1128","1129","1130","1131","1132","1133","1134","1135","1136","1137","1138","1139","1140","1141","1142","1143","1144","1145","1146","1147","1148","1149","1150","1152","1153","1154","1155","1156","1157","1158","1159","1160","1161","1162","1163","1164","1165","1166","1167","1168","1169","1170","1171","1172","1173","1177","1178","1180","1181","1182","2050","2051","2053","2054","2055","2056","2057","2058","2060","2067","2068","2069","2070","2071","2072","2073","2075","2076","2077","2078","2079","2080","2081","2082","2083","2084","2085","2086","2087","2088","2089","2090","2091","2092","2093","2094","2095","2096","2097","2098","2099","2100","2101","2102","2103","2104","2105","2106","2107","2108","2109","2110","2111","2112","2113","2114","2115","2116","2117","2118","2119","2120","2121","2122","2123","2124","2125","2126","2127","2128","2129","2130","2131","2132","2133","2134","2135","2136","2137","2138","2139","2140","2141","3072","3073","4096","4097","5002","5003","5081","5082","5083","5084","5085","5086","5087","5088","5089","5090","5092","5093","5094","5095","5096","5097","5099","idObj","stAuthor","parse_NoteSh","verificationBytes","parse_XORObfuscation","dyHeight","fl","Pos","Dim","CurTab","FirstTab","Selected","TabRatio","UserName","fts","parse_BIFF5Obj","parse_FtArray","ccv","rw","rkrecs","lastcol","ixfes","fStyle","alc","fWrap","alcV","fJustLast","trot","cIndent","fShrinkToFit","iReadOrder","fAtrNum","fAtrFnt","fAtrAlc","fAtrBdr","fAtrPat","fAtrProt","dgLeft","dgRight","dgTop","dgBottom","icvLeft","icvRight","grbitDiag","icvTop","icvBottom","icvDiag","dgDiag","fsxButton","parse_CellStyleXF","cmcs","ucnt","extsst","dsst","ctab","virtPath","rgst","texts","accel","parse_ControlInfo","cchText","sVer","displayName","targetFrameName","moniker","oleMoniker","fileTime","Loc","parse_Hyperlink","xnum","1212","cUse","parse_SharedParsedFormula","wzTooltip","2059","2061","2062","2063","2064","2066","2146","2147","2148","2149","2150","2151","2152","2154","2155","2156","2161","2162","2164","2165","2166","2167","2168","2169","2170","2171","2172","cxfs","crc","2173","cexts","2174","2175","2180","2181","2182","2183","2184","2185","2186","2187","2188","2189","2190","2191","2192","2194","2195","2196","cchComment","2197","2198","themeXML","2199","2200","2201","2202","2203","2204","2205","2206","2207","2211","parse_frtHeader","2212","2213","2214","2215","4098","4099","4102","4103","4105","4106","4107","4108","4109","4116","4117","4118","4119","4120","4121","4122","4123","4124","4125","4126","4127","4128","4129","4130","4132","4133","4134","4135","4146","4147","4148","4149","4154","4156","4157","4158","4159","4160","4161","4163","4164","area","4165","4166","4168","4170","4171","4174","4175","4176","4177","4187","4188","4189","4191","4192","4193","4194","4195","4196","4197","4198","4199","4200","env","lcb","2157","2163","2177","2240","2241","2242","2243","2244","2245","2246","2247","2248","2249","2250","2251","2262","29282","write_BIFF2Cell","write_ws_biff2_cell","write_BIFF2INT","write_BIFF2NUM","write_BIFF2BERR","write_BIFF2LABEL","write_biff2_buf","write_ws_biff2","write_FONTS_biff8","write_Font","write_ws_cols_biff8","write_ColInfo","write_ws_biff8_cell","write_Number","write_BoolErr","write_LabelSst","b8","write_Label","write_ws_biff8","_WB","_sheet","MAX_ROWS","guts","write_Guts","write_Dimensions","write_Window2","write_MergeCells","HL","write_ws_biff8_hlinks","write_FEAT","write_biff8_global","_sheets","_wb","writezeroes","write_WriteAccess","write_RRTabId","write_Window1","safe1904","write_FMTS_biff8","write_CELLXFS_biff8","write_Country","write_biff_continue","write_SST","blen","fix_write_opts","write_biff8_buf","mtch2","hd","midx","colspan","rowspan","_t","make_html_row","editable","HTML_BEGIN","HTML_END","make_html_preamble","sheet_to_html","sheet_add_dom","tagName","or_R","or_C","is_dom_element_hidden","elts","hasAttribute","getAttribute","innerHTML","Aelts","getElementsByTagName","Aelti","parse_dom_table","element","get_computed_style","ownerDocument","defaultView","getComputedStyle","get_get_computed_style_function","getPropertyValue","parse_text_p","fixed","parse_ods_styles","_nfm","number_format_map","NFtag","tNF","etpos","tidx","parse_content_xml","nfidx","sheetag","rowtag","ctag","textp","textpidx","textR","row_ol","mrange","rowpeat","colpeat","atag","_Ref","creator","creatoridx","isstub","intable","baddate","rptR","rpt","xlmlidx","styletag","nrange","ptp","parse_ods","FEtag","parse_manifest","Styles","write_styles_ods","master_styles","xmlns:office","xmlns:table","xmlns:style","xmlns:text","xmlns:draw","xmlns:fo","xmlns:xlink","xmlns:number","xmlns:svg","xmlns:of","office:version","write_number_format_ods","nopts","style:name","number:min-integer-digits","number:min-numerator-digits","number:max-denominator-value","number:denominator-value","number:decimal-places","number:min-decimal-places","has_time","np","write_names_ods","scoped","odsref","table:name","table:cell-range-address","table:base-cell-address","write_content_ods","write_text_p","null_cell_xml","write_ws","nfs","ods","ROWS","_Fref","text_p","_tgt","xlink:href","xmlns:meta","xmlns:presentation","xmlns:chart","xmlns:dr3d","xmlns:math","xmlns:form","xmlns:script","xmlns:ooo","xmlns:ooow","xmlns:oooc","xmlns:dom","xmlns:xforms","xmlns:sheet","xmlns:rpt","xmlns:xhtml","xmlns:grddl","xmlns:tableooo","xmlns:drawooo","xmlns:calcext","xmlns:loext","xmlns:field","xmlns:formx","xmlns:css3t","fods","xmlns:config","office:mimetype","cidx","colobj","nfi","write_automatic_styles_ods","write_ods","manifest","rdf","write_rdf","write_manifest","u8_to_dataview","array","DataView","byteOffset","byteLength","u8str","u8","stru8","u8concat","u8a","popcnt","parse_varint49","ptr","varint","write_varint49","parse_packed_varints","write_packed_varints","nums","varint_to_i32","i32","parse_shallow","write_shallow","proto","item","mappa","parse_iwa_file","_a","messages","merge","write_iwa_file","ias","ia","midata","aipayload","mid","parse_snappy_chunk","chunks","clen","u8i","decompress_iwa_file","compress_iwa_file","frame","numbers_lut_new","rsst","ofmt","nfmt","numbers_format_cell","_b","_c","ver","dur","dstyle","dmin","dmax","autodur","dstr","zstr","parse_new_storage","lut","dv","getUint32","doff","zidx","d128","ieee","exp","mantissa","readDecimal128LE","getFloat64","write_new_storage","writeDecimal128LE","setFloat64","setUint32","write_old_storage","parse_cell_storage","parse_old_storage","parse_TSP_Reference","write_TSP_Reference","numbers_add_oref","iwa","orefs","numbers_del_oref","parse_TST_TableDataList","pb","le","rtp","rtpref","mtype","tswpsa","parse_TST_Tile","_e","_g","_h","_i","_k","_m","used_storage_u8","used_storage","wide_offsets","used_storage_offsets","getUint16","parse_TST_TileRowInfo","nrows","reduce","acc","parse_TST_TableInfoArchive","tableref","dws","store","tl","ref2","mtype2","_tile","pi","parse_TST_TableModelArchive","parse_TN_DocumentArchive","root2","parse_TN_SheetArchive","parse_numbers_iwa","indices","packets","packet","docroot","iwam","write_TST_TileRowInfo","wide","tri","new_7","new_4","last_offset","cell_storage","_dv","_last_offset","_cell_storage","celload","_celload","setUint16","write_iwam","get_unique_msgid","dep","dependents","write_numbers_iwa","numbers","deps","mess","build_numbers_deps","numbers_iwa_find","sheetrefs","sheetref","newsheetref","remap","numbers_iwa_doit","arch","doc","tiaref","sheetroot","sa","drawables","tia","loc2","mlist","parentidx","findIndex","mm","parent","tmaref","tiaroot","da","dap","oldtmaref","tma","tmaroot","uuid","new_uuid","padStart","srrta","hsoa","hsa","hseadata","hsea","_a2","oldref","newref","newloc","_a3","_b2","row_headers","tspref","tiles","tst","oldtileref","newtileref","oldtile","numbers_add_ws","wsname","sheetidx","rootref","tmafile","trunc","row_header_ref","rowhead","_x","base_bucket","R2","_bucket","col_header_ref","colhead","rbtree","tilestore","tileref","save_token","mlst","ntiles","newtileid","tiledata","USE_WIDE_ROWS","tilerow","newtile","tilecontent","mergeid","sstref","sstroot","sstdata","write_numbers_tma","write_numbers_ws","fix_opts_func","safe_parse_wbrels","wbrels","get_sheet_type","safe_parse_sheet","relsPath","sheetRels","stype","dfile","drelsp","chartp","parse_drawing","crelsp","parse_ms","parse_ds","tcomments","parse_tcmnt_xml","strip_front_slash","_zip","getzipbin","index_zip","Bun","binname","dir","threadedcomments","links","coreprops","extprops","custprops","calcchains","drawings","TODO","ctext","calcchain","parse_ct","link","propdata","parse_ext_props","toks","warn","parse_cust_props","bookDeps","wbsheets","wbext","wbrelsi","wbrelsfile","displayname","parse_people_xml","nmode","wsloop","snjseen","snj","Deps","bin","parse_xlsxcfb","parse_DataSpaceVersionInfo","dsm","parse_DataSpaceMap","seds","parse_DataSpaceDefinition","einfo","decrypt_agile","decrypt_std76","write_zip_xlsx","foo","vbafmt","_sn","wsrels","need_vml","needtc","rId1","sitag","write_sst_xml","write_names","workbookPr","sheetId","write_wb_xml","write_xlmeta_xml","person","userId","providerId","write_people_xml","read_plaintext","main","read_utf16","utf16lereadu","read_prn","infile","read_binary","bstrify","ab","vu","read_cfb","OLD_WTF","read_wb_ID","read_zip","read_plaintext_raw","write_cfb_ctr","write_zip_xlsb","write_zip_denouement","oopts","ftype","nodebuffer","string","generate","encrypt_agile","write_string_type","bom","write_stxt_type","Base64_encode_pass","write_binary_type","write_zip_typeXLSX","sheet_to_txt","sheet_to_csv","sheet_to_rtf","write_cfb_type","write_zip_type","resolve_book_type","xls","slk","socialcalc","Sh33tJS","_cb","Function","make_json_row","defval","isempty","enumerable","__rowNum__","rawNumbers","outi","counter","header_cnt","skipHidden","blankrows","qreg","make_csv_row","txt","datarow","forceQuotes","endregex","strip","sheet_add_json","js","skipHeader","ROW","JS","ws_get_cell_stub","RC","book_new","roll","cell_set_hyperlink","_Readable","split_cell","json_to_sheet","table_to_sheet","table_to_book","sheet_to_formulae","cmds","sheet_to_row_object_array","sheet_get_cell","book_set_sheet_visibility","sh","vis","wb_sheet_idx","cell_set_number_format","cell_set_internal_link","cell_add_comment","sheet_set_array_formula","dynamic","rngstr","wsr","SHEET_VISIBLE","SHEET_HIDDEN","SHEET_VERY_HIDDEN","to_json","stream","objectMode","_read","to_html","to_csv","BOM","set_readable","readFile","writeXLSX","writeFileXLSX","module","global","base64","ieee754","kMaxLength","TYPED_ARRAY_SUPPORT","createBuffer","that","RangeError","__proto__","arg","encodingOrOffset","TypeError","fromArrayLike","fromArrayBuffer","isEncoding","actual","fromString","checked","isnan","fromObject","assertSize","isView","loweredCase","utf8ToBytes","base64ToBytes","swap","bidirectionalIndexOf","arrayIndexOf","indexSize","arrLength","valLength","readUInt16BE","foundIndex","found","hexWrite","remaining","strLen","parsed","utf8Write","blitBuffer","asciiWrite","byteArray","asciiToBytes","latin1Write","base64Write","ucs2Write","units","hi","lo","utf16leToBytes","base64Slice","fromByteArray","utf8Slice","secondByte","thirdByte","fourthByte","tempCodePoint","firstByte","codePoint","bytesPerSequence","codePoints","MAX_ARGUMENTS_LENGTH","decodeCodePointsArray","SlowBuffer","INSPECT_MAX_BYTES","typedArraySupport","poolSize","_augment","Symbol","species","configurable","allocUnsafeSlow","_isBuffer","compare","list","swap16","swap32","swap64","arguments","hexSlice","asciiSlice","latin1Slice","utf16leSlice","equals","inspect","thisStart","thisEnd","thisCopy","targetCopy","includes","toJSON","_arr","toHex","checkOffset","checkInt","objectWriteUInt16","littleEndian","objectWriteUInt32","checkIEEE754","writeFloat","noAssert","writeDouble","newBuf","sliceLen","readUIntLE","readUIntBE","readUInt8","readUInt16LE","readUInt32BE","readIntLE","readIntBE","readInt8","readInt16LE","readInt16BE","readInt32LE","readInt32BE","readFloatLE","readFloatBE","readDoubleBE","writeUIntLE","writeUIntBE","writeUInt8","writeUInt16LE","writeUInt16BE","writeUInt32LE","writeUInt32BE","writeIntLE","limit","sub","writeIntBE","writeInt8","writeInt16LE","writeInt16BE","writeInt32LE","writeInt32BE","writeFloatLE","writeFloatBE","writeDoubleLE","writeDoubleBE","targetStart","INVALID_BASE64_RE","leadSurrogate","toByteArray","stringtrim","base64clean","src","cachedSetTimeout","cachedClearTimeout","defaultSetTimout","defaultClearTimeout","runTimeout","fun","clearTimeout","currentQueue","queue","draining","queueIndex","cleanUpNextTick","drainQueue","timeout","marker","runClearTimeout","Item","noop","nextTick","title","browser","argv","addListener","once","removeListener","removeAllListeners","emit","prependListener","prependOnceListener","listeners","binding","cwd","chdir","umask","b64","getLens","validLen","placeHoldersLen","Arr","_byteLength","curByte","revLookup","uint8","extraBytes","len2","encodeChunk","lookup","tripletToBase64","output"],"mappings":"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OAEAgjC,YAA4BptB,EAAA,SAAA3Q,EAnF5B,IAoFAg+B,YAA4BrtB,EAAA,WAAA3Q,EApF5B,IAqFAi+B,eAIAE,IACArkC,EAAA,KACAC,EAAA,KACA8G,EAAA,GACA6B,EAAA,KACAhB,GAAA,KACAyB,GAAA,KACAC,GAAA,KACA2M,GAAA,KACAC,GAAA,KACAC,GAAA,KACAE,GAAA,KACApO,GAAA,KACAqD,GAAA,KACAE,GAAA,KACAC,GAAA,KACAtD,GAAA,KACAC,GAAA,KACAC,GAAA,KACAC,GAAA,KACAC,GAAA,KACAkB,GAAA,KACAG,GAAA,KACAK,GAAA,KACAkB,GAAA,KACAE,GAAA,KACAN,GAAA,KACAC,GAAA,KACAs5B,GAAA,KACAC,GAAA,KACAC,GAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,MAAA,MAIAC,IACA,KACA,QACA,aACA,WACA,YACA,iBACA,eACA,WACA,SACA,WACA,cACA,kBACA,gBACA,YACA,UACA,YACA,eACA,UACA,YAOA,IA4FAC,GAAApU,GAhGA,SAAA9B,GAA4E,OAAAA,EAAA/qB,IAAA,SAAArC,GAA6B,OAAAA,GAAA,OAAAA,GAAA,UAAAA,KAIzGujC,EAEA,EACA,SACA,SACA,MACA,IACA,SACA,SACA,MAGA,EACA,SACA,SACA,MACA,IACA,SACA,SACA,MAEA,QACA,MACA,IACA,QACA,QACA,MACA,SACA,QACA,SACA,SACA,SACA,SACA,QACA,SACA,MACA,SAEA,IACA,SACA,SACA,MACA,QACA,QACA,MACA,IACA,MACA,SACA,SACA,SACA,SACA,SACA,SACA,SAEA,QACA,QACA,SACA,SACA,SACA,SACA,QACA,QACA,MACA,QACA,MACA,QACA,SACA,SACA,QACA,QAGA,EACA,SACA,EA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AA,QACAC,IAAA,UACAC,IAAA,UACAC,IAAA,QACAC,IAAA,OACAC,IAAA,OACAC,IAAA,QACAC,IAAA,QACAsK,IAAA,QACAC,IAAA,WACAtK,IAAA,aACAuK,IAAA,cACAtK,IAAA,OACAuK,IAAA,WACAC,IAAA,OACAC,IAAA,gBACAC,IAAA,YACAzK,IAAA,cACA0K,IAAA,QACAzK,IAAA,iBACAC,IAAA,kBACAyK,IAAA,kBACAC,IAAA,iBACAzK,IAAA,UACAC,IAAA,UACAC,IAAA,WACAwK,IAAA,QACAC,IAAA,UACAC,IAAA,aACAC,IAAA,eACAC,IAAA,oBACA3K,IAAA,QACA71C,IAAA,UACA81C,IAAA,aACA2K,IAAA,eACAxgD,IAAA,QACA81C,IAAA,cACAC,IAAA,cACA0K,IAAA,WACAxgD,IAAA,eACAygD,IAAA,YACAC,IAAA,WACAC,IAAA,WACAC,IAAA,OACAC,IAAA,OACAC,IAAA,UACAC,IAAA,QACAC,IAAA,SACAC,IAAA,OACAC,IAAA,WACAC,IAAA,gBACApL,IAAA,YACAqL,IAAA,kBACAC,IAAA,eACArL,IAAA,gBACAC,IAAA,mBACAC,IAAA,cACAC,IAAA,gBACAC,IAAA,cACAC,IAAA,WACAC,IAAA,MACAC,IAAA,YACAC,IAAA,aACAC,IAAA,qBACAC,IAAA,mBACAvoB,IAAA,UACAwoB,IAAA,UACAC,IAAA,UACA0K,IAAA,UACAzK,IAAA,UACAzoB,IAAA,UACAC,IAAA,UACAyoB,IAAA,UACAC,IAAA,UACAzoB,IAAA,UACA0oB,IAAA,UACAC,IAAA,UACA1oB,IAAA,QACA2oB,IAAA,QACAC,IAAA,UACAC,IAAA,QACAC,IAAA,SACAkK,IAAA,OACAC,IAAA,SACAC,IAAA,UACAC,IAAA,QACAC,IAAA,QACAC,IAAA,QACAC,IAAA,aACAC,IAAA,cACAC,IAAA,YACAC,IAAA,SACAC,IAAA,UACA3K,IAAA,QACAC,IAAA,YACAC,IAAA,YACAC,IAAA,aACAC,IAAA,SACAC,IAAA,WACAuK,IAAA,QACAC,IAAA,SACAliD,IAAA,SACA23C,IAAA,QACAC,IAAA,SACAC,IAAA,MACAC,IAAA,OACAC,IAAA,UACAoK,IAAA,UACAC,IAAA,UACAC,IAAA,UACAC,IAAA,OACAtK,IAAA,OACAC,IAAA,WACAC,IAAA,WACAC,IAAA,UACAC,IAAA,WACAC,IAAA,OACAC,IAAA,YACAC,IAAA,YACAC,IAAA,UACAC,IAAA,aACAC,IAAA,aACAC,IAAA,QACAC,IAAA,QACAC,IAAA,WACAC,IAAA,WACAC,IAAA,UACAC,IAAA,SACAC,IAAA,WACAC,IAAA,UACAC,IAAA,QACAC,IAAA,UACAC,IAAA,WACAC,IAAA,YACAC,IAAA,WACAC,IAAA,aACAC,IAAA,UACAC,IAAA,UACA6I,IAAA,UACA5I,IAAA,WACAC,IAAA,YACAC,IAAA,YACAC,IAAA,YACAC,IAAA,YACAC,IAAA,YACAC,IAAA,cACAC,IAAA,UACAC,IAAA,YACAC,IAAA,WACAC,IAAA,UACAmI,IAAA,UACAlI,IAAA,UACAC,IAAA,WACAC,IAAA,UACAC,IAAA,cACAC,IAAA,MACAC,IAAA,cACAC,IAAA,MACAC,IAAA,aACAC,IAAA,gBACAC,IAAA,UACA0H,IAAA,eACAzH,IAAA,UACAC,IAAA,WACAC,IAAA,SACAwH,IAAA,YACAC,IAAA,cAEAjb,IACAzsE,EAAA,EACA8G,EAAA,EACAG,GAAA,EACAK,GAAA,EACAC,GAAA,EACAC,GAAA,EACAC,GAAA,EACAC,GAAA,EACAC,GAAA,EACAC,GAAA,EACAC,GAAA,EACAgB,GAAA,EACAC,GAAA,EACAC,GAAA,EACAC,GAAA,EACAC,GAAA,EACAG,GAAA,EACAC,GAAA,EACA2M,GAAA,EACAC,GAAA,EACAC,GAAA,EACAC,GAAA,EACApO,GAAA,EACAC,GAAA,EACAC,GAAA,EACAoD,GAAA,EACAC,GAAA,EACAC,GAAA,EACAC,GAAA,EACAtD,GAAA,EACAE,GAAA,EACAC,GAAA,EACAoB,GAAA,EACAO,GAAA,EACAiB,GAAA,EACAE,GAAA,EACAC,GAAA,EACAlB,GAAA,EACAC,GAAA,EACAlJ,GAAA,EACAmJ,GAAA,EACAC,GAAA,EACAC,GAAA,EACAC,GAAA,EACAC,GAAA,EACAC,GAAA,EACAC,GAAA,EACAzK,GAAA,EACA2K,GAAA,EACAC,GAAA,EACAklD,GAAA,EACAgjB,GAAA,EACAzuC,GAAA,EACA+c,GAAA,EACA9c,GAAA,EACAyuC,GAAA,EACAC,GAAA,EACAxF,GAAA,EACAC,GAAA,EACAC,GAAA,EACA5tB,IAAA,EACAC,IAAA,EACAxb,IAAA,EACA2b,IAAA,EACAmB,IAAA,EACA2O,IAAA,EACAijB,IAAA,EACAC,IAAA,EACAC,IAAA,EACAG,IAAA,EACAC,IAAA,EACAC,IAAA,EACAnzB,IAAA,EACAK,IAAA,EACA+yB,IAAA,EACAxzE,IAAA,EACAC,IAAA,EACAC,IAAA,EACAuzE,IAAA,EACAE,IAAA,EACAxzE,IAAA,EACAkhD,IAAA,EACAjhD,IAAA,EACAwzE,IAAA,EACAC,IAAA,EACAE,IAAA,EACA6N,IAAA,EACA3wB,IAAA,EACA+iB,IAAA,EACAC,IAAA,EACA5zE,IAAA,EACAC,IAAA,EACAC,IAAA,EACAg0E,IAAA,EACAyN,IAAA,EACAlN,IAAA,EACAtjB,IAAA,EACAC,IAAA,EACAjxD,IAAA,EACAC,IAAA,EACAwhF,IAAA,EACAvwB,IAAA,EACAhxD,IAAA,EACAs0E,IAAA,EACAC,IAAA,EACAnjB,IAAA,EACAwjB,IAAA,EACAC,IAAA,EACAC,IAAA,EACAC,IAAA,EACA30B,IAAA,EACAmR,IAAA,EACA0jB,IAAA,EACAC,IAAA,EACAC,IAAA,EACAtxC,IAAA,EACAuxC,IAAA,EACAC,IAAA,EACAM,IAAA,EACAI,IAAA,EACA8L,IAAA,EACAC,IAAA,EACAC,IAAA,EACAC,IAAA,EACAC,IAAA,EACAC,IAAA,EACAM,IAAA,EACAG,IAAA,EACAtM,IAAA,EACAwM,IAAA,EACAjxB,IAAA,EACAQ,IAAA,EACAskB,IAAA,EACAC,IAAA,EACAqM,IAAA,EACApM,IAAA,EACAC,IAAA,EACAC,IAAA,EACAC,IAAA,EACAC,IAAA,EACAC,IAAA,EACAC,IAAA,EACAC,IAAA,EACAC,IAAA,EACAC,IAAA,EACA4L,IAAA,EACAC,IAAA,EACA5L,IAAA,EACAC,IAAA,EACAC,IAAA,EACAC,IAAA,EACAC,IAAA,EACAC,IAAA,EACAwL,IAAA,EACAvL,IAAA,EACAC,IAAA,EACAC,IAAA,EACAC,IAAA,EACAqL,IAAA,EACAC,IAAA,EACAC,IAAA,EACAtL,IAAA,EACAuL,IAAA,EACAC,IAAA,EACAvL,IAAA,EACAC,IAAA,EACAC,IAAA,EACAC,IAAA,EACAC,IAAA,EACAC,IAAA,EACAC,IAAA,EACAC,IAAA,EACAC,IAAA,EACAC,IAAA,EACAC,IAAA,EACAC,IAAA,EACAQ,IAAA,EACAsK,IAAA,EACAC,IAAA,EACAtK,IAAA,EACAwK,IAAA,EACAC,IAAA,EACAG,IAAA,EACAvK,IAAA,EACAC,IAAA,EACA0K,IAAA,EACAC,IAAA,EACAzK,IAAA,EACA71C,IAAA,EACA81C,IAAA,EACA2K,IAAA,EACAG,IAAA,EACAQ,IAAA,EACAC,IAAA,EACApL,IAAA,EACAqL,IAAA,EACAC,IAAA,EACArL,IAAA,EACAC,IAAA,EACAC,IAAA,EACAC,IAAA,EACAC,IAAA,EACAC,IAAA,EACAI,IAAA,EACAE,IAAA,EACAI,IAAA,EACAzoB,IAAA,EACAC,IAAA,EACA2oB,IAAA,EACAC,IAAA,EACAC,IAAA,EACAC,IAAA,EACAkK,IAAA,EACAC,IAAA,EACAC,IAAA,EACAC,IAAA,EACAC,IAAA,EACAC,IAAA,EACAC,IAAA,EACAC,IAAA,EACAC,IAAA,EACAC,IAAA,EACAxK,IAAA,EACAC,IAAA,EACAC,IAAA,EACAC,IAAA,EACA13C,IAAA,EACA23C,IAAA,EACAC,IAAA,EACAE,IAAA,EACAC,IAAA,EACAoK,IAAA,EACAC,IAAA,EACAC,IAAA,EACArK,IAAA,EACAQ,IAAA,EACAC,IAAA,EACAC,IAAA,EACAG,IAAA,EACAC,IAAA,EACAC,IAAA,EACAC,IAAA,EACAC,IAAA,EACAC,IAAA,EACAC,IAAA,EACAC,IAAA,EACAa,IAAA,EACAI,IAAA,EACAQ,IAAA,EACA4H,IAAA,EACAzH,IAAA,EACAp6C,MAAA,GAGA,SAAAgiD,GAAAl0E,GAcA,MAbA,OAAAA,EAAApR,MAAA,OAAAoR,IAAApR,MAAA,IAEA,IAAAoR,EAAA7R,WAAA,IAEA,KADA6R,IAAApR,MAAA,IACAT,WAAA,KAAA6R,IAAApR,MAAA,KAQAoR,GAFAA,GADAA,GADAA,GAFAA,IAAAjQ,QAAA,yBAEAA,QAAA,yDAAA6N,EAAAC,GAAkF,OAAAA,EAAA9N,QAAA,aAClFA,QAAA,2BAAA6N,GAAgD,OAAAA,EAAAhP,MAAA,MAChDmB,QAAA,4BAAA6N,EAAAC,GAAqD,SAAAb,MAAA,uIAAoJY,EAAAC,KAEzM9N,QAAA,6BACAA,QAAA,QAAqB,KAAAA,QAAA,WAGrB,SAAAokF,GAAAn0E,GAGA,OAFA,OAAAA,EAAAjQ,QAAAunE,GAAA,iBAAAvnE,QAAA,eAEAA,QAAA,KAAoB,KAAAA,QAAA,UAGpB,SAAAqkF,GAAAp2E,GAGA,IAAAkT,GADAlT,GADAA,IAAAjO,QAAA,2BAAA6N,GAAgD,OAAAA,EAAAhP,MAAA,MAChDmB,QAAA,4BAAA6N,EAAAC,GAAqD,SAAAb,MAAA,uIAAoJY,EAAAC,KACzM3M,MAAA,KAEA,OADAggB,EAAA,GAAAhgB,MAAA,QACAggB,EAAA,GAAAhgB,MAAA,SAAAggB,EAAAhjB,OAAA,OAAAgjB,EAAA,GAAAhgB,MAAA,SAAAggB,EAAA,GAAAhgB,MAAA,cAGA,SAAAmjF,GAAAr2E,GACA,OAAAA,EAAAjO,QAAA,SAGA,IAAAkpC,MACAq7C,MAIAC,GAAA,oBAAAC,IAEA,SAAAC,GAAAxvB,EAAAxoD,EAAA4T,GACA,IAAA5mB,EAAA,EAAAwE,EAAAg3D,EAAA/2D,OACA,GAAAmiB,GACA,GAAAkkE,GAAAlkE,EAAAqkE,IAAAj4E,GAAAhS,OAAAkwB,UAAAC,eAAA1oB,KAAAme,EAAA5T,GAEA,IADA,IAAAk4E,EAAAJ,GAAAlkE,EAAAukE,IAAAn4E,GAAA4T,EAAA5T,GACQhT,EAAAkrF,EAAAzmF,SAAmBzE,EAC3B,GAAAw7D,EAAA0vB,EAAAlrF,IAAA+I,IAAAiK,EAAgD,OAAdwoD,EAAAC,QAAcyvB,EAAAlrF,QAG9C,KAAWA,EAAAwE,IAASxE,EACtB,GAAAw7D,EAAAx7D,GAAA+I,IAAAiK,EAAsC,OAAdwoD,EAAAC,QAAcz7D,EAYtC,OAVAw7D,EAAAh3D,IAAcuE,EAAAiK,GAAgBwoD,EAAAC,QAAcD,EAAAE,SAC5C90C,IACAkkE,IACAlkE,EAAAqkE,IAAAj4E,IAAA4T,EAAAre,IAAAyK,MACA4T,EAAAukE,IAAAn4E,GAAAwM,KAAAhb,KAEAxD,OAAAkwB,UAAAC,eAAA1oB,KAAAme,EAAA5T,KAAA4T,EAAA5T,OACA4T,EAAA5T,GAAAwM,KAAAhb,KAGAA,EAGA,SAAA4mF,GAAAnwE,EAAAmmB,GACA,IAAA/lB,GAAWhG,IAAA4F,EAAA,EAAA3F,IAAA2F,EAAA,GAEXqqC,GAAA,EASA,OARAlkB,EAAAugC,SAAAvgC,EAAAugC,KACA,MAAAvgC,EAAA4a,MAAA3gC,EAAA+mD,YAAA,EACA,MAAAhhC,EAAA6sB,IAAA3I,EAAA6I,GAAA/sB,EAAA6sB,KACA,MAAA7sB,EAAAkkB,QAAAlkB,EAAAkkB,KACAA,GAAA,GAAejqC,EAAA2gC,MAAA6lB,GAAAvc,GAA2BjqC,EAAA+mD,YAAA,GAC1C,MAAAhhC,EAAA4a,QAAA3gC,EAAA2gC,MAAA5a,EAAA4a,OACA5a,EAAAisB,SAAAhyC,EAAAgyC,QAAA,GACA,MAAAjsB,EAAAihB,QAAwBhnC,EAAAgwE,aAAAhwE,EAAAgnC,MAAAjhB,EAAAihB,OACxBhnC,EAGA,SAAAiwE,GAAAC,EAAAC,GACA,GAAAD,EAAA,CACA,IAAAE,GAAA,qBACA,QAAAD,IAAAC,GAAA,gBACA,MAAAF,EAAAG,OAAAH,EAAAG,KAAAD,EAAA,IACA,MAAAF,EAAAI,QAAAJ,EAAAI,MAAAF,EAAA,IACA,MAAAF,EAAAK,MAAAL,EAAAK,IAAAH,EAAA,IACA,MAAAF,EAAAM,SAAAN,EAAAM,OAAAJ,EAAA,IACA,MAAAF,EAAA5sE,SAAA4sE,EAAA5sE,OAAA8sE,EAAA,IACA,MAAAF,EAAAO,SAAAP,EAAAO,OAAAL,EAAA,KAGA,SAAAM,GAAAj8C,EAAA7P,EAAA5wB,GACA,IAAAuoB,EAAAvoB,EAAA28E,OAAA,MAAA/rD,EAAArI,EAAAqI,EAAArI,EAAA,WACA53B,EAAA,GAAAwE,EAAAsrC,EAAArrC,OACA,SAAAmzB,GAAAvoB,EAAA48E,IACA,KAAOjsF,EAAA,MAAWA,EAAA,SAAAqP,EAAA48E,IAAAjsF,GAAA,CAClBsZ,GAAA2mB,EAAArI,EAAA53B,GAEAqP,EAAA48E,IAAAjsF,GAAAigC,EAAArI,EACAvoB,EAAA28E,OAAA/rD,EAAArI,KAAA53B,EACA,MAGA,IAAAA,EAAA,EAAWA,GAAAwE,IAAUxE,EAAA,GAAA8vC,EAAA9vC,GAAAiiC,WAAArK,EAAA,OAAA53B,EASrB,OARA8vC,EAAAtrC,IACAy9B,SAAArK,EACAywC,OAAA,EACAC,OAAA,EACAC,SAAA,EACAb,KAAA,EACAwkB,kBAAA,GAEA1nF,EAGA,SAAA2nF,GAAA9wE,EAAAu6B,EAAAw2C,EAAA/8E,EAAA00D,EAAAj0B,GACA,IACAzgC,EAAAmhD,SAAAn1C,EAAAuc,EAAAjuB,EAAAisC,IACE,MAAAl2C,GAAW,GAAA2P,EAAAorB,IAAA,MAAA/6B,EACb,SAAA2b,EAAAtS,GAAAsG,EAAA4yC,WAAA,CAEA,GADA,MAAA5mC,EAAAtS,GAAA,iBAAAsS,EAAAvS,IAAAuS,EAAAvS,EAAAwpB,GAAAjX,EAAAvS,MACAuG,IAAA,IAAAA,EAAA49C,WAAA,MAAA5xC,EAAAtS,EAAA,IAEA,GADA,MAAAY,EAAAisC,IAAAt8B,GAAAT,GAAA+8B,IAAA,UAAAA,GACA,MAAAv6B,EAAAtS,EAAAsS,EAAA9J,EAAA8J,EAAA9J,GAAA4wB,GAAA9mB,EAAAvS,QACA,OAAA8sC,EACA,SAAAv6B,EAAAtS,GACA,EAAAsS,EAAAvS,KAAAuS,EAAAvS,EAAAuS,EAAA9J,EAAA8J,EAAAvS,EAAA7B,SAAA,IACAoU,EAAA9J,EAAAL,GAAAmK,EAAAvS,QAEA,SAAAuS,EAAAtS,EAAA,CACA,IAAAoK,EAAAwe,GAAAtW,EAAAvS,GACAuS,EAAA9J,GAAA,EAAA4B,SAAAlM,SAAA,IACAiK,GAAAiC,OAEA,SAAA8E,IAAAoD,EAAAvS,EAAA,SACAuS,EAAA9J,EAAAO,GAAAuJ,EAAAvS,EAAA+hF,QAEA,MAAAxvE,EAAAtS,EAAAsS,EAAA9J,EAAAQ,GAAA6jC,EAAAjkB,GAAAtW,EAAAvS,GAAA+hF,IACAxvE,EAAA9J,EAAAQ,GAAA6jC,EAAAv6B,EAAAvS,EAAA+hF,IACE,MAAAnrF,GAAW,GAAA2P,EAAAorB,IAAA,MAAA/6B,EACb,GAAA2P,EAAA4yC,YACA,MAAAmqC,EAAA,IACA/wE,EAAAnb,EAAA4vC,EAAAk1B,MAAAonB,GACA/wE,EAAAnb,EAAAilE,SAAA9pD,EAAAnb,EAAAilE,QAAAh/B,QAAA9qB,EAAAnb,EAAAilE,QAAA7+B,MACAjrB,EAAAnb,EAAAilE,QAAA7+B,IAAAu6B,GAAAkD,EAAAc,cAAAC,UAAAzpD,EAAAnb,EAAAilE,QAAAh/B,OAAAG,IAAAjrB,EAAAnb,EAAAilE,QAAA9+B,MAAA,GACAh3B,EAAAorB,MAAApf,EAAAnb,EAAAilE,QAAAknB,QAAAtoB,EAAAc,cAAAC,UAAAzpD,EAAAnb,EAAAilE,QAAAh/B,OAAAG,MAEAjrB,EAAAnb,EAAAglE,SAAA7pD,EAAAnb,EAAAglE,QAAA/+B,QACA9qB,EAAAnb,EAAAglE,QAAA5+B,IAAAu6B,GAAAkD,EAAAc,cAAAC,UAAAzpD,EAAAnb,EAAAglE,QAAA/+B,OAAAG,IAAAjrB,EAAAnb,EAAAglE,QAAA7+B,MAAA,GACAh3B,EAAAorB,MAAApf,EAAAnb,EAAAglE,QAAAmnB,QAAAtoB,EAAAc,cAAAC,UAAAzpD,EAAAnb,EAAAglE,QAAA/+B,OAAAG,MAEE,MAAA5mC,GAAW,GAAA2P,EAAAorB,KAAAqV,EAAAk1B,MAAA,MAAAtlE,IAGb,SAAA4sF,GAAA1pD,EAAAf,EAAA7hC,GACA,GAAA4iC,KAAA,SACA,IAAAtC,EAAAwB,GAAAc,EAAA,SACA,GAAAtC,EAAA5gC,EAAAe,EAAA6/B,EAAApgC,EAAAO,GAAA6/B,EAAA5gC,EAAA6U,EAAA+rB,EAAApgC,EAAAqU,EAAA,UAAAtM,MAAA,cAAAjI,EAAA,MAAA4iC,EAAA,UAOA,IAAA2pD,GAAA,gDACAC,GAAA,2DACAC,GAAA,8BACAC,GAAA,cACAC,GAAA,6BACAC,GAAA,mEACAC,GAAA,gCACAC,GAAA,yCACAC,GAAA,8DACAC,GAAA,oEAGA,SAAAC,GAAA3oF,EAAA+K,EAAAoE,EAAA++B,EAAAkB,EAAAqwB,EAAAj0B,GACA,IAAAxrC,EAAA,OAAAA,EACAkuC,OAAmBC,WACnB,MAAA/sC,GAAA,MAAA2J,EAAAszB,QAAAtzB,EAAAszB,MAAAj9B,GAGA,IAAAxF,KAAsBmP,EAAAszB,QAAAziC,EAAA,aACtB,IAAAuxD,GAA4BvxD,GAAIqU,EAAA,IAAA9T,EAAA,KAAqBf,GAAM6U,EAAA,EAAA9T,EAAA,IAE3DysF,EAAA,GAAAC,EAAA,GACAC,EAAA9oF,EAAAiP,MAAAi5E,IACAY,GACAF,EAAA5oF,EAAAa,MAAA,EAAAioF,EAAAlnD,OACAinD,EAAA7oF,EAAAa,MAAAioF,EAAAlnD,MAAAknD,EAAA,GAAA3oF,SACEyoF,EAAAC,EAAA7oF,EAGF,IAAA+oF,EAAAH,EAAA35E,MAAAu5E,IACAO,EAAAC,GAAAD,EAAA,GAAAntF,EAAAwzC,EAAAjgC,IACA45E,EAAAH,EAAA35E,MAAAw5E,MA0EA,SAAAM,EAAAh9D,EAAAnwB,EAAAwzC,EAAAjgC,GACA65E,GAAAD,EAAAloF,MAAA,EAAAkoF,EAAAnpF,QAAA,MAAAhE,EAAAwzC,EAAAjgC,GA3EA85E,CAAAF,EAAA,GAAAA,EAAA,GAAAntF,EAAAwzC,EAAAjgC,GAGA,IAAAijB,GAAAw2D,EAAA35E,MAAA,yBAAkD2yB,OAAA,IAASA,MAC3D,GAAAxP,EAAA,GACA,IAAAyqB,EAAA+rC,EAAA/nF,MAAAuxB,IAAA,IAAAnjB,MAAAm5E,KACAvrC,GAAA9xC,KAAAm+E,OAzCA,SAAA5qD,EAAA1iC,GACA,IAAAD,EAAA6hC,GAAA5hC,GACAD,EAAAC,EAAAqU,GAAAtU,EAAAP,EAAA6U,GAAAtU,EAAAC,EAAAO,GAAAR,EAAAP,EAAAe,GAAAR,EAAAC,EAAAqU,GAAA,GAAAtU,EAAAC,EAAAO,GAAA,IAAAmiC,EAAA,QAAArB,GAAAthC,IAuCAwtF,CAAAvtF,EAAAihD,EAAA,IAIA,IAAAusC,EAAAR,EAAA35E,MAAAy5E,IACAU,KAAA,IAkMA,SAAAppF,EAAAovC,GACAA,EAAAi6C,QAAAj6C,EAAAi6C,aACArpF,EAAAiP,MAAAq6E,SAAAlzD,QAAA,SAAAnmB,EAAAvU,GACA,IAAAy3B,EAAAD,GAAAjjB,GAEAm/B,EAAAi6C,MAAA3tF,KAAA0zC,EAAAi6C,MAAA3tF,QAEAy3B,EAAAo2D,YAAAn6C,EAAAi6C,MAAA3tF,GAAA8tF,MAAAr2D,EAAAo2D,WAEAp2D,EAAAs2D,aAAA10D,GAAA5B,EAAAs2D,eAAAr6C,EAAAi6C,MAAA3tF,GAAAguF,KAAA,KA3MAC,CAAAP,EAAA,GAAAh6C,GAGA,IAAAw6C,KACA,GAAA7+E,EAAA4yC,WAAA,CAEA,IAAAgE,EAAAinC,EAAA35E,MAAAo5E,IACA1mC,GA4IA,SAAAioC,EAAAjoC,GAEA,IADA,IAAAkoC,GAAA,EACAC,EAAA,EAAkBA,GAAAnoC,EAAAxhD,SAAqB2pF,EAAA,CACvC,IAAAjsB,EAAA3qC,GAAAyuB,EAAAmoC,IAAA,GACAjsB,EAAA9U,SAAA8U,EAAA9U,OAAAh0B,GAAA8oC,EAAA9U,SACA,IAAAghC,EAAAx5E,SAAAstD,EAAA9sD,IAAA,MAAAi5E,EAAAz5E,SAAAstD,EAAA7sD,IAAA,MAKA,IAJA6sD,EAAAkpB,eAAAlpB,EAAA9f,OAAA8f,EAAAkpB,cAAA,UACAlpB,EAAA9sD,WAAkB8sD,EAAA7sD,IAAiB6sD,EAAAnmB,OAAAmmB,EAAAnmB,OACnCmyC,GAAAhsB,EAAAnmB,QAA8BmyC,GAAA,EAAgBlsB,GAAAE,EAAAnmB,QAC9CyR,GAAA0U,GACAksB,GAAAC,GAAAJ,EAAAG,KAAA95D,GAAA4tC,IAtJAosB,CAAAL,EAAAjoC,GAIAmnC,GAAAoB,GAAApB,EAAA,GAAAltF,EAAAmP,EAAAoiD,EAAAsS,EAAAj0B,GAGA,IAAA2+C,EAAAtB,EAAA55E,MAAAq5E,IACA6B,IAAAvuF,EAAA,eA2JA,SAAAoE,GAEA,OADU68C,KAAA78C,EAAAiP,MAAA,0BA5JVm7E,CAAAD,EAAA,KAGA,IAAAE,KACAC,EAAAzB,EAAA55E,MAAAg5E,IACA,GAAAqC,EAAA,IAAAl4D,EAAA,EAAyBA,GAAAk4D,EAAAnqF,SAAuBiyB,EAChDi4D,EAAAj4D,GAAAoL,GAAA8sD,EAAAl4D,GAAAvxB,MAAAypF,EAAAl4D,GAAAxyB,QAAA,SAGA,IAAA2qF,EAAA1B,EAAA55E,MAAAk5E,IACAoC,GAgFA,SAAA3uF,EAAAoE,EAAAkuC,GAEA,IADA,IAAA7P,EAAA,MAAAziC,EAAA,SACAF,EAAA,EAAeA,GAAAsE,EAAAG,SAAkBzE,EAAA,CACjC,IAAAmS,EAAAqlB,GAAAoC,GAAAt1B,EAAAtE,KAAA,GACA,IAAAmS,EAAAgvC,IAAA,OACA,IAAAzO,IAAAF,OAAwB,YAAArgC,EAAA8rC,IACxBvL,GACAvgC,EAAAygC,OAAAF,EAAAE,OACAzgC,EAAA28E,WAAA38E,EAAAygC,QAAA,IAAAra,GAAApmB,EAAA28E,aAEA38E,EAAAygC,OAAA,IAAAra,GAAApmB,EAAA28E,UACAp8C,GAAUE,OAAAzgC,EAAAygC,OAAAE,WAAA,aAEV3gC,EAAA48E,IAAAr8C,EACAvgC,EAAA68E,UAAmB78E,EAAA4vC,QAAA5vC,EAAA68E,eAA2B78E,EAAA68E,SAE9C,IADA,IAAAC,EAAAntD,GAAA3vB,EAAAgvC,KACAtgC,EAAAouE,EAAA/uF,EAAAqU,EAAoBsM,GAAAouE,EAAAvvF,EAAA6U,IAAWsM,EAAA,QAAA5F,EAAAg0E,EAAA/uF,EAAAO,EAAuBwa,GAAAg0E,EAAAvvF,EAAAe,IAAWwa,EAAA,CACjE,IAAA+E,EAAA6gB,GAAA5lB,GAAA2lB,GAAA/f,GACA8hB,GACAziC,EAAA,SAAA2gB,KAAA3gB,EAAA,SAAA2gB,OACA3gB,EAAA,SAAA2gB,GAAA5F,KAAA/a,EAAA,SAAA2gB,GAAA5F,IAA8ClS,EAAA,IAAAD,OAAAmP,IAC9C/X,EAAA,SAAA2gB,GAAA5F,GAAAvE,EAAAvE,IAEAjS,EAAA8f,KAAA9f,EAAA8f,IAA4BjX,EAAA,IAAAD,OAAAmP,IAC5B/X,EAAA8f,GAAAtJ,EAAAvE,KAxGA+8E,CAAAhvF,EAAA2uF,EAAAr8C,GAGA,IAAA+4C,EAAA4B,EAAA55E,MAAAs5E,IAKA,GAJAtB,IAAArrF,EAAA,YA0GA,SAAAivF,GACA,IAAA5qF,KAIA,OAHA,iDAAAm2B,QAAA,SAAA5a,GACAqvE,EAAArvE,KAAAvb,EAAAub,GAAAzJ,WAAA84E,EAAArvE,OAEAvb,EA/GA6qF,CAAA53D,GAAA+zD,EAAA,MAEAl8E,KAAAm+E,QAAA/7B,EAAAvxD,EAAAO,EAAAgxD,EAAAvxD,EAAAqU,EAAA,IACArU,EAAA,SAAAuxD,EAAA/xD,EAAAe,GAAAgxD,EAAAvxD,EAAAO,GAAAgxD,EAAA/xD,EAAA6U,GAAAk9C,EAAAvxD,EAAAqU,IAAArU,EAAA,QAAAqhC,GAAAkwB,IACApiD,EAAA+1C,UAAA,GAAAllD,EAAA,SACA,IAAAmvF,EAAAvtD,GAAA5hC,EAAA,SACAmP,EAAA+1C,YAAAiqC,EAAA3vF,EAAA6U,IACA86E,EAAA3vF,EAAA6U,EAAAlF,EAAA+1C,UAAA,EACAiqC,EAAA3vF,EAAA6U,EAAAk9C,EAAA/xD,EAAA6U,IAAA86E,EAAA3vF,EAAA6U,EAAAk9C,EAAA/xD,EAAA6U,GACA86E,EAAA3vF,EAAA6U,EAAA86E,EAAAnvF,EAAAqU,IAAA86E,EAAAnvF,EAAAqU,EAAA86E,EAAA3vF,EAAA6U,GACA86E,EAAA3vF,EAAAe,EAAAgxD,EAAA/xD,EAAAe,IAAA4uF,EAAA3vF,EAAAe,EAAAgxD,EAAA/xD,EAAAe,GACA4uF,EAAA3vF,EAAAe,EAAA4uF,EAAAnvF,EAAAO,IAAA4uF,EAAAnvF,EAAAO,EAAA4uF,EAAA3vF,EAAAe,GACAP,EAAA,YAAAA,EAAA,QACAA,EAAA,QAAAqhC,GAAA8tD,IAKA,OAFAnB,EAAAzpF,OAAA,IAAAvE,EAAA,SAAAguF,GACAS,EAAAlqF,OAAA,IAAAvE,EAAA,WAAAyuF,GACAzuF,EAWA,SAAAotF,GAAAD,EAAAntF,EAAAwzC,EAAAjgC,GACA,IAAAnP,EAAAkzB,GAAA61D,GACA35C,EAAAlR,OAAA/uB,KAAAigC,EAAAlR,OAAA/uB,OACAnP,EAAAgrF,WAAA57C,EAAAlR,OAAA/uB,GAAA87E,SAAAh3D,GAAAqB,GAAAt1B,EAAAgrF,YA2BA,IAAAE,IAAA,iEACAC,IACA,2CACA,gDACA,6BACA,mCAoGA,IAAA7B,GAAA,2CAoBA,SAAA8B,GAAAzvD,EAAAkhB,EAAAve,EAAAvzB,GAEA,GADA4wB,EAAAx/B,GAAAmiC,EAAA,aAAApjB,MAAA2hC,EAAAlhB,EAAAx/B,UACAwX,IAAAgoB,EAAAn3B,GAAA,MAAAm3B,EAAAl3B,KAAAsG,OAAyDi0B,aAAA,iBAAArD,EAAA1pB,QAAA,IAAA0pB,EAAArI,EAAA,SACzD,IAAAjgB,EAAA,GACAg4E,EAAA1vD,EAAAl3B,EAAA6mF,EAAA3vD,EAAAn3B,EACA,SAAAm3B,EAAAl3B,EAAA,OAAAk3B,EAAAl3B,GACA,QAAA4O,EAAAsoB,EAAAn3B,EAAA,QAAoC,MACpC,QAAA6O,EAAA,GAAAsoB,EAAAn3B,EAA2B,MAC3B,QAAA6O,EAAAwqB,GAAAlC,EAAAn3B,GAA8B,MAC9B,QACAuG,KAAAk0B,UAAA5rB,EAAA2a,GAAA2N,EAAAn3B,GAAA,GAAAkyB,gBAEAiF,EAAA1L,GAAA0L,IACAl3B,EAAA,IACA4O,EAAA,IAAAsoB,EAAAn3B,EAAA6oB,GAAAW,GAAA2N,EAAAn3B,WAEA,IAAAm3B,EAAArI,IAAAqI,EAAArI,EAAAjuB,EAAA,KACA,MACA,QAAAgO,EAAAsoB,EAAAn3B,EAEA,IAAAA,EAAA,KAAAm3B,EAAAl3B,GAAA,MAAAk3B,EAAAn3B,EAAA,GAAA8xB,GAAA,IAAA9B,GAAAnhB,IAAApT,GAAqFgQ,EAAA4sC,GAErFgzB,EAAA4X,GAAA18E,EAAAk3D,QAAAtmC,EAAA5wB,GAEA,OADA,IAAA8kE,IAAA5vE,EAAArE,EAAAi0E,GACAl0C,EAAAl3B,GACA,cACA,QAAAxE,EAAAwE,EAAA,IAAsB,MACtB,QAAAxE,EAAAwE,EAAA,IAAsB,MACtB,QAAAxE,EAAAwE,EAAA,IAAsB,MACtB,cACA,iBAAAk3B,EAAAn3B,EAAA,QAA+Bm3B,EAAAl3B,EAAe,MAC9C,GAAAk3B,EAAAn3B,EAAArE,OAAA,gBAAAwD,MAAA,gDACA,GAAAoH,KAAAwgF,QAAA,CACA/mF,EAAA8xB,GAAA,OAAAowD,GAAA37E,EAAAygF,QAAA7vD,EAAAn3B,EAAAuG,EAAA0gF,aACAxrF,EAAAwE,EAAA,IAAc,MAEdxE,EAAAwE,EAAA,MAGA,GADAk3B,EAAAl3B,GAAA4mF,IAAqB1vD,EAAAl3B,EAAA4mF,EAAe1vD,EAAAn3B,EAAA8mF,GACpC,iBAAA3vD,EAAA1pB,GAAA0pB,EAAA1pB,EAAA,CACA,IAAA9B,EAAAwrB,EAAA0hB,GAAA1hB,EAAA0hB,EAAAx8C,MAAA,EAAAg8C,EAAA18C,SAAA08C,GAA2Dp4C,EAAA,QAAAo4C,IAAAlhB,EAAA0hB,GAAsB,KACjF74C,EAAAgyB,GAAA,IAAAhC,GAAAmH,EAAA1pB,GAAA9B,IAAA,MAAAwrB,EAAAn3B,IAAA,IAOA,OALAm3B,EAAAvpB,IACAupB,EAAAvpB,EAAAs5E,QAAAl3D,GAAAnhB,GACAirB,EAAA,UAAApjB,MAAA2hC,EAAAlhB,EAAAvpB,KAEAupB,EAAAzxB,IAAAjK,EAAA8lE,GAAA,GACAvvC,GAAA,IAAAhyB,EAAAvE,GAGA,IAAAiqF,GAAA,WACA,IAAAyB,EAAA,oBAAAC,EAAA,mBACAj2B,EAAA,qBAAAk2B,EAAA,yCACAC,EAAA,uBACAC,EAAAx2D,GAAA,KAAAy2D,EAAAz2D,GAAA,KAEA,gBAAA23B,EAAAtxD,EAAAmP,EAAAi3C,EAAAyd,EAAAj0B,GAWA,IAVA,IAAAz0B,EACAoc,EACA84D,EAAAC,EAEApyC,EAJA5pC,EAAA,EAAAnP,EAAA,GAAAorF,KAAAC,KAAAj9E,EAAA,EAAAzT,EAAA,EAAAiT,EAAA,EAAAhT,EAAA,GACA0wF,EAAA,EAAAC,EAAA,EAEAh7C,EAAA,EAAAw2C,EAAA,EACAyE,EAAAxpF,MAAAU,QAAA+nC,EAAA61B,QACAgO,KACAH,KACA7wC,EAAA,MAAAziC,EAAA,SACAmuD,KAAAyiC,KAA8CC,GAAA,EAC9CztD,IAAAj0B,EAAAi0B,WACA0tD,EAAAx/B,EAAA/pD,MAAAyoF,GAAA1zE,EAAA,EAAAy0E,EAAAD,EAAAvsF,OAAqE+X,GAAAy0E,IAAez0E,EAAA,CAEpF,IAAA00E,GADA7rF,EAAA2rF,EAAAx0E,GAAA+Q,QACA9oB,OACA,OAAAysF,EAAA,CAGA,IAAAC,EAAA,EACAC,EAAA,IAAA58E,EAAA,EAAmBA,EAAA08E,IAAW18E,EAAA,OAAAnP,EAAAmP,IAC9B,QACA,QAAAnP,EAAAmP,EAAA,MAAoDA,EAAM,MAAA48E,EAC1D,GAAA/hF,KAAA4yC,WAAA,CAIA,GADA0uC,EAAA,OADAl5D,EAAAD,GAAAnyB,EAAAF,MAAAgsF,EAAA38E,IAAA,IACAD,EAAAM,SAAA4iB,EAAAljB,EAAA,IAAAo8E,EAAA,EAAyDC,GAAA,EACzDvhF,EAAA+1C,WAAA/1C,EAAA+1C,UAAAurC,EAAA,SACAG,KAAiBC,GAAA,EACjBt5D,EAAA45D,KAAiBN,GAAA,EAAgBD,EAAAxjC,IAAAj3C,WAAAohB,EAAA45D,IAAiCP,EAAAvjC,IAAAC,GAAAsjC,EAAAxjC,MAClE71B,EAAA41B,QAAAh0B,GAAA5B,EAAA41B,UAAiD0jC,GAAA,EAAgBD,EAAAzjC,QAAA,GACjE,MAAA51B,EAAA4zD,eAAmC0F,GAAA,EAAgBD,EAAAzuC,OAAA5qB,EAAA4zD,cACnD0F,IAAA1iC,EAAAsiC,EAAA,GAAAG,GAEA,MACA,QAAAK,EAAA38E,EAEA,GAAA28E,GAAA38E,EAAA,MAGA,GADAm8E,EAAA,OADAl5D,EAAAD,GAAAnyB,EAAAF,MAAAgsF,EAAA38E,IAAA,IACAD,EAAAM,SAAA4iB,EAAAljB,EAAA,IAAAo8E,EAAA,EAAsDC,GAAA,IACtDvhF,EAAA+1C,WAAA/1C,EAAA+1C,UAAAurC,GAAA,CACAthF,EAAAm+E,QACAlnC,EAAApmD,EAAAqU,EAAAo8E,EAAA,IAAArqC,EAAApmD,EAAAqU,EAAAo8E,EAAA,GACArqC,EAAA5mD,EAAA6U,EAAAo8E,EAAA,IAAArqC,EAAA5mD,EAAA6U,EAAAo8E,EAAA,IAGAthF,KAAA4yC,aACA6uC,KAAeC,GAAA,EACft5D,EAAA45D,KAAeN,GAAA,EAAgBD,EAAAxjC,IAAAj3C,WAAAohB,EAAA45D,IAAiCP,EAAAvjC,IAAAC,GAAAsjC,EAAAxjC,MAChE71B,EAAA41B,QAAAh0B,GAAA5B,EAAA41B,UAA+C0jC,GAAA,EAAgBD,EAAAzjC,QAAA,GAC/D,MAAA51B,EAAA4zD,eAAiC0F,GAAA,EAAgBD,EAAAzuC,OAAA5qB,EAAA4zD,cACjD0F,IAAA1iC,EAAAsiC,EAAA,GAAAG,IAIAL,EAAAprF,EAAAF,MAAAqP,GAAA/M,MAAAwoF,GACA,QAAAqB,EAAA,EAAqBA,GAAAb,EAAAhsF,QAAwB,KAAAgsF,EAAAa,GAAA/jE,OAAAnnB,OAAA,KAAAkrF,GAE7C,IADAb,IAAAtrF,MAAAmsF,GACA98E,EAAA,EAAaA,GAAAi8E,EAAAhsF,SAAoB+P,EAEjC,QADAnP,EAAAorF,EAAAj8E,GAAA+Y,QACA9oB,OAAA,CAGA,GAFAisF,EAAArrF,EAAAkO,MAAA0mD,GAA0BxmD,EAAAe,EAAUxU,EAAA,EAAKiT,EAAA,EACzC5N,EAAA,YAAAA,EAAAF,MAAA,aAAAE,EACA,MAAAqrF,GAAA,IAAAA,EAAAjsF,OAAA,CAEA,IADAgP,EAAA,EAAYxT,EAAAywF,EAAA,GACZ1wF,EAAA,EAAYA,GAAAC,EAAAwE,WACZwO,EAAAhT,EAAAyE,WAAA1E,GAAA,OAAAiT,EAAA,MAD2BjT,EAE3ByT,EAAA,GAAAA,EAAAR,EAGA29E,IADAn9E,QAEIm9E,EACJ,IAAA5wF,EAAA,EAAaA,GAAAqF,EAAAZ,QAAe,KAAAY,EAAAX,WAAA1E,QAO5B,KAPmEA,GACnEy3B,EAAAD,GAAAnyB,EAAAF,MAAA,EAAAnF,IAAA,IACAuU,IAAAkjB,EAAAljB,EAAAisB,IAAmCjsB,EAAAo8E,EAAA,EAAAlwF,EAAAmwF,KAEnCv1E,GAAStS,EAAA,IAET,OAAA2nF,GAHAzwF,EAAAoF,EAAAF,MAAAnF,IAGAuT,MAAA88E,KAAA,KAAAK,EAAA,KAAAr1E,EAAAvS,EAAAyvB,GAAAm4D,EAAA,KACArhF,EAAAkiF,YAAA,CACA,UAAAb,EAAAzwF,EAAAsT,MAAA+8E,KAAA,KAAAI,EAAA,IAIA,GAFAr1E,EAAA9E,EAAAgiB,GAAAqB,GAAA82D,EAAA,QACArhF,EAAA6jE,OAAA73D,EAAA9E,EAAA23D,GAAA7yD,EAAA9E,IACAm6E,EAAA,GAAAxsF,QAAA,gBACAmX,EAAAsmC,GAAA1hD,EAAAsT,MAAA68E,QAAA,GACA/0E,EAAAsmC,EAAAz9C,QAAA,SAAAyvE,EAAAn0D,MAAAsiB,GAAAzmB,EAAAsmC,GAAAtmC,EAAAsmC,SACM,GAAA+uC,EAAA,GAAAxsF,QAAA,kBAENssF,EAAAh5D,GAAAk5D,EAAA,IACA,IAAAc,EAAAj5D,GAAAqB,GAAA82D,EAAA,KACArhF,EAAA6jE,OAAAse,EAAAtjB,GAAAsjB,IACAhe,EAAA3+D,SAAA27E,EAAAvjE,GAAA,MAAAujE,EAAAgB,EAAA/5D,EAAAljB,SAEKm8E,EAAAzwF,EAAAsT,MAAA,gBAELigE,GADAgd,EAAAh5D,GAAAk5D,EAAA,KACAzjE,MAAA5R,EAAA9E,EAAA03D,GAAAuF,EAAAgd,EAAAvjE,IAAA,GAAAumD,EAAAgd,EAAAvjE,IAAA,GAAAwK,EAAAljB,IAGA,IAAAk9E,EAAApwD,GAAA5J,EAAAljB,GACA,IAAAvU,EAAA,EAAcA,EAAA2zE,EAAAlvE,SAAmBzE,EACjCyxF,EAAAl9E,GAAAo/D,EAAA3zE,GAAA,GAAAE,EAAAqU,GAAAk9E,EAAAl9E,GAAAo/D,EAAA3zE,GAAA,GAAAN,EAAA6U,GACAk9E,EAAAhxF,GAAAkzE,EAAA3zE,GAAA,GAAAE,EAAAO,GAAAgxF,EAAAhxF,GAAAkzE,EAAA3zE,GAAA,GAAAN,EAAAe,IACA4a,EAAAsmC,EAAAgyB,EAAA3zE,GAAA,IAGA,SAAAy3B,EAAA1uB,QAAAkP,IAAAoD,EAAAvS,EACA,GAAAuS,EAAA9E,GAAA8E,EAAAsmC,EACAtmC,EAAAvS,EAAA,EAAauS,EAAAtS,EAAA,QACR,KAAAu6B,EAAA,SACLjoB,EAAAtS,EAAA,SAEAsS,EAAAtS,EAAA0uB,EAAA1uB,GAAA,IAIA,OAHAu9C,EAAApmD,EAAAO,EAAAmwF,IAAAtqC,EAAApmD,EAAAO,EAAAmwF,GACAtqC,EAAA5mD,EAAAe,EAAAmwF,IAAAtqC,EAAA5mD,EAAAe,EAAAmwF,GAEAv1E,EAAAtS,GACA,QACA,OAAAsS,EAAAvS,GAAA,MAAAuS,EAAAvS,EAAA,CACA,IAAAw6B,EAAA,SACAjoB,EAAAtS,EAAA,SACMsS,EAAAvS,EAAAuN,WAAAgF,EAAAvS,GACN,MACA,QACA,YAAAuS,EAAAvS,EAAA,CACA,IAAAw6B,EAAA,SACAjoB,EAAAtS,EAAA,SAEAwnF,EAAA/gD,GAAA36B,SAAAwG,EAAAvS,EAAA,KACAuS,EAAAvS,EAAAynF,EAAAxnF,EACAsS,EAAA9G,EAAAg8E,EAAAh8E,EACAlF,EAAA4rD,WAAA5/C,EAAA0L,EAAAwpE,EAAAxpE,GAEA,MACA,UACA1L,EAAAtS,EAAA,IACAsS,EAAAvS,EAAA,MAAAuS,EAAAvS,EAAAyvB,GAAAqB,GAAAve,EAAAvS,IAAA,MACAuG,EAAA4rD,WAAA5/C,EAAA0L,EAAAkS,GAAA5d,EAAAvS,IACA,MACA,gBACA4nF,EAAAzwF,EAAAsT,MAAA48E,GACA90E,EAAAtS,EAAA,IACA,MAAA2nF,IAAAH,EAAAv1B,GAAA01B,EAAA,MACAr1E,EAAAvS,EAAAynF,EAAAxnF,EACAsG,EAAA4rD,WAAA5/C,EAAA0L,EAAAwpE,EAAAxpE,IACM1L,EAAAvS,EAAA,GACN,MACA,QAAAuS,EAAAvS,EAAAuwB,GAAAhe,EAAAvS,GAAsC,MACtC,QACAuG,EAAAk0B,UAAAloB,EAAAvS,EAAAwpB,GAAAjX,EAAAvS,EAAA,IACWuS,EAAAvS,EAAA6oB,GAAAW,GAAAjX,EAAAvS,EAAA,IAAkCuS,EAAAtS,EAAA,KAC7C,MAEA,QACAsG,IAAA,IAAAA,EAAA49C,WAAA5xC,EAAA9J,EAAA8J,EAAAvS,GACAuS,EAAAvS,EAAA+/B,GAAAxtB,EAAAvS,GAgBA,GAbA8sC,EAAAw2C,EAAA,EACAhuC,EAAA,KACAyyC,QAAA54E,IAAAwf,EAAAv3B,GAEA,OADAk+C,EAAAtO,EAAA61B,OAAAluC,EAAAv3B,MAEA,MAAAk+C,EAAAnc,WAAA2T,EAAAwI,EAAAnc,UACA5yB,EAAA4yC,YACA,MAAA7D,EAAAkqB,SAAA8jB,EAAAhuC,EAAAkqB,SAIA6jB,GAAA9wE,EAAAu6B,EAAAw2C,EAAA/8E,EAAA00D,EAAAj0B,GACAzgC,EAAAk0B,WAAAstD,GAAA,KAAAx1E,EAAAtS,GAAAkN,GAAAtM,EAAAisC,MAAmFv6B,EAAAtS,EAAA,IAAWsS,EAAAvS,EAAAipB,GAAA1W,EAAAvS,IAC9F2uB,EAAA4yC,IAAAh7D,EAAAqiF,OAAA,CACA,IAAArnB,GAAAh7D,EAAAqiF,OAAAC,WAAAl6D,EAAA4yC,GAAA,GACAA,GAAA,UAAAA,EAAAp4D,OAAAoJ,EAAA7M,GAAA,GAEA,IAAAojF,EACAviF,EAAAm+E,QACAoE,EAAAvwD,GAAA5J,EAAAljB,GACA+xC,EAAApmD,EAAAqU,EAAAq9E,EAAAr9E,IAAA+xC,EAAApmD,EAAAqU,EAAAq9E,EAAAr9E,GACA+xC,EAAA5mD,EAAA6U,EAAAq9E,EAAAr9E,IAAA+xC,EAAA5mD,EAAA6U,EAAAq9E,EAAAr9E,IAEAouB,GACAivD,EAAAvwD,GAAA5J,EAAAljB,GACArU,EAAA,SAAA0xF,EAAAr9E,KAAArU,EAAA,SAAA0xF,EAAAr9E,OACArU,EAAA,SAAA0xF,EAAAr9E,GAAAq9E,EAAAnxF,GAAA4a,GACInb,EAAAu3B,EAAAljB,GAAA8G,KAGJgzC,EAAA5pD,OAAA,IAAAvE,EAAA,SAAAmuD,IAhMA,GA+OA,SAAAwjC,GAAAp+E,EAAApE,EAAAqkC,EAAAlB,GACA,IAIA6e,EAJA9sD,GAAA2yB,GAAA4D,GAAA,kBACAoV,MAAAhU,GAAA,GACA41D,UAAA32D,GAAA5mB,KAEArU,EAAAwzC,EAAAnR,WAAA9uB,GAAAs+E,EAAA,GACAnvD,EAAA8Q,EAAAlR,OAAAtiC,GACA,MAAA0iC,UACA,IAAAue,EAAAve,EAAA,cACAtC,EAAAwB,GAAAqf,GACA,GAAA7gB,EAAA5gC,EAAAe,EAAA,OAAA6/B,EAAA5gC,EAAA6U,EAAA,SACA,GAAAlF,EAAAorB,IAAA,UAAAxyB,MAAA,SAAAk5C,EAAA,uCACA7gB,EAAA5gC,EAAAe,EAAAJ,KAAAgV,IAAAirB,EAAA5gC,EAAAe,EAAA,OACA6/B,EAAA5gC,EAAA6U,EAAAlU,KAAAgV,IAAAirB,EAAA5gC,EAAAe,EAAA,SACA0gD,EAAA5f,GAAAjB,GAEAkS,UACA5P,EAAA,gBACA,IAAAovD,MAvcA,SAAApvD,EAAA8Q,EAAAjgC,EAAApE,EAAA9K,GACA,IAAA0tF,GAAA,EACAr9C,KAAe7yB,EAAA,KACf,YAAA1S,EAAAohC,UAAAiD,EAAAw+C,OAAA,CACA,IAAAC,EAAAz+C,EAAAnR,WAAA9uB,GACA,IAAOigC,EAAAuY,WAAAkmC,EAAAz+C,EAAAuY,SAAAzpB,OAAA/uB,GAAA87E,UAAA4C,GAAqE,MAAAzyF,IAC5EuyF,GAAA,EACAr9C,EAAA06C,SAAAlgE,GAAA0J,GAAAq5D,IAGA,GAAAvvD,KAAA,aACA,IAAAwvD,GAAsBC,aAAA,EAAAC,aAAA,GACtB1vD,EAAA,YAAA2vD,QAAAH,EAAAC,aAAA,GACAzvD,EAAA,YAAA8oD,OAAA0G,EAAAE,aAAA,GACAvwE,MAAA,IAAA+Y,GAAA,iBAAAs3D,IAGAH,GAAAlwE,KACAxd,IAAAE,QAAAq2B,GAAA,UAAA/Y,EAAA6yB,IAubA49C,CAAA5vD,EAAA8Q,EAAAjgC,EAAApE,EAAA9K,GAEAA,IAAAE,QAAAq2B,GAAA,kBAA8CqmB,QAE9C58C,IAAAE,QAjUA,SAAAm+B,EAAAvzB,EAAAoE,EAAAigC,GACA,IAAA++C,GAAeC,eAAA,KAGf,SADAh/C,OAAauY,cAAc0hC,WAAA,KAAA8E,EAAA1E,YAAAr6C,EAAAuY,SAAA0hC,MAAA,GAAAK,IAAA,SAC3BlzD,GAAA,aAAAA,GAAA,iBAAA23D,OA6TAE,CAAA/vD,EAAAvzB,EAAAoE,EAAAigC,GAGArkC,EAAAujF,cAAAruF,IAAAE,QAAAq2B,GAAA,sBACA+3D,iBAAAxjF,EAAAujF,YAAAC,kBAAA,KACAC,aAAAzjF,EAAAujF,YAAAE,cAAA,KACAC,gBAAA1jF,EAAAujF,YAAAG,iBAAA,OAGA,MAAAnwD,EAAA,UAAAA,EAAA,SAAAn+B,OAAA,IAAAF,IAAAE,QAxXA,SAAAm+B,EAAAqjB,GAEA,IADA,IAAA7kB,EAAA78B,GAAA,UACAvE,EAAA,EAAeA,GAAAimD,EAAAxhD,SAAkBzE,GACjCohC,EAAA6kB,EAAAjmD,MACAuE,IAAAE,QAAAq2B,GAAA,WAAAswD,GAAAprF,EAAAohC,KAGA,OADA78B,IAAAE,QAAA,UACAF,EAAAO,KAAA,IAiXA,CAAA89B,IAAA,WAEAr+B,EAAA8sD,EAAA9sD,EAAAE,QAAA,eACAm+B,EAAA,aACA,MAAAA,EAAA,UACAmvD,EAlFA,SAAAnvD,EAAAvzB,EAAAoE,EAAAigC,GACA,IAAAyN,EAEqBhkC,EAFrB5Y,KAAAgQ,KAAA+rB,EAAAwB,GAAAc,EAAA,SAAA3C,EAAA,GAAAnrB,EAAA,GAAAmxC,KAAAplC,EAAA,EAAA5F,EAAA,EAAAozC,EAAAzrB,EAAA,SACAD,EAAA,MAAAC,EAAA,SACAowD,GAAgBz+E,EAAAO,GAAKm+E,GAAA,EACrB,IAAAh4E,EAAAqlB,EAAApgC,EAAAO,EAAmBwa,GAAAqlB,EAAA5gC,EAAAe,IAAgBwa,EAAAgrC,EAAAhrC,GAAA4lB,GAAA5lB,GACnC,IAAA4F,EAAAyf,EAAApgC,EAAAqU,EAAmBsM,GAAAyf,EAAA5gC,EAAA6U,IAAgBsM,EAAA,CAGnC,IAFAtM,KACAO,EAAA8rB,GAAA/f,GACA5F,EAAAqlB,EAAApgC,EAAAO,EAAoBwa,GAAAqlB,EAAA5gC,EAAAe,IAAgBwa,EAAA,CACpCkmC,EAAA8E,EAAAhrC,GAAAnG,EACA,IAAAo+E,EAAAvwD,GAAAC,EAAA,SAAA/hB,QAAA5F,GAAA2nB,EAAAue,QACAlpC,IAAAi7E,GACA,OAAAjzD,EAAAyvD,GAAAwD,EAAA/xC,EAAAve,EAAAvzB,KAAAkF,EAAAiL,KAAAygB,IAEA1rB,EAAA9P,OAAA,GAAA4pD,KAAAxtC,MACAmyE,GAAcz+E,EAAAO,GACdu5C,KAAAxtC,MACA1D,EAAAkxC,EAAAxtC,IACAwsC,SAAA2lC,EAAA3lC,OAAA,GACA4lC,GAAA,EACA91E,EAAAowC,IAAA0lC,EAAA3kC,GAAAnxC,EAAAowC,KACApwC,EAAAmwC,MAAA2lC,EAAA91E,EAAAmwC,KACA2lC,GAAA,IAAqBD,EAAA3B,GAAA4B,EAAoBD,EAAAG,aAAA,GACzCh2E,EAAAklC,QAAmB2wC,EAAA3H,aAAAluE,EAAAklC,QAEnB99C,IAAAE,QAAAq2B,GAAA,MAAAvmB,EAAAzP,KAAA,IAAAkuF,IAGA,GAAA3kC,EAAA,KAAextC,EAAAwtC,EAAA5pD,SAAiBoc,EAChCwtC,KAAAxtC,KACAmyE,GAAcz+E,EAAAsM,EAAA,IACd1D,EAAAkxC,EAAAxtC,IACAwsC,SAAA2lC,EAAA3lC,OAAA,GACA4lC,GAAA,EACA91E,EAAAowC,IAAA0lC,EAAA3kC,GAAAnxC,EAAAowC,KACApwC,EAAAmwC,MAAA2lC,EAAA91E,EAAAmwC,KACA2lC,GAAA,IAAqBD,EAAA3B,GAAA4B,EAAoBD,EAAAG,aAAA,GACzCh2E,EAAAklC,QAAmB2wC,EAAA3H,aAAAluE,EAAAklC,OACnB99C,IAAAE,QAAAq2B,GAAA,SAAAk4D,IAGA,OAAAzuF,EAAAO,KAAA,IAyCAsuF,CAAAxwD,EAAAvzB,EAAAoE,EAAAigC,IACAjvC,OAAA,IAAAF,IAAAE,QAAA,GAEAF,EAAAE,OAAA4sD,EAAA,IAAsB9sD,IAAAE,QAAA,eAAgCF,EAAA8sD,GAAA9sD,EAAA8sD,GAAA/qD,QAAA,WAItDs8B,EAAA,cAAAr+B,IAAAE,QArcA,SAAAouE,GAEA,IAAAtuE,GAAW89B,MAAA,GAKX,OAJAmtD,GAAA90D,QAAA,SAAAhhB,GAAyC,MAAAm5D,EAAAn5D,IAAAm5D,EAAAn5D,KAAAnV,EAAAmV,GAAA,OACzC+1E,GAAA/0D,QAAA,SAAAhhB,GAAwC,MAAAm5D,EAAAn5D,IAAAm5D,EAAAn5D,KAAAnV,EAAAmV,GAAA,OAExCm5D,EAAAlU,WAAAp6D,EAAAo6D,SAAAd,GAAAgV,EAAAlU,UAAA13D,SAAA,IAAA4K,eACAipB,GAAA,uBAAAv2B,GA8bA8uF,CAAAzwD,EAAA,cAKA,MAAAA,EAAA,iBAAAr+B,IAAAE,QA3XA,SAAAH,EAAAs+B,EAAA8Q,EAAAjgC,GACA,IAAA0tC,EAAA,iBAAA78C,EAAA68C,IAAA78C,EAAA68C,IAAA5f,GAAAj9B,EAAA68C,KACAzN,EAAAuY,WAAAvY,EAAAuY,UAAkCzpB,YAClCkR,EAAAuY,SAAAE,QAAAzY,EAAAuY,SAAAE,UACA,IAAA8mB,EAAAv/B,EAAAuY,SAAAE,MACA7rB,EAAAgB,GAAA6f,GACA7gB,EAAApgC,EAAAqU,GAAA+rB,EAAA5gC,EAAA6U,IAA6B+rB,EAAA5gC,EAAA6U,EAAA+sB,GAAAsB,EAAA,SAAAljC,EAAA6U,EAA0C4sC,EAAA5f,GAAAjB,IACvE,QAAAtgC,EAAA,EAAeA,EAAAizE,EAAAxuE,SAAkBzE,EAAA,CACjC,IAAAogB,EAAA6yD,EAAAjzE,GACA,4BAAAogB,EAAAigC,MACAjgC,EAAAosC,OAAA/4C,EAAA,CACA2M,EAAAqsC,IAAA7qB,GAAA8R,EAAAnR,WAAA9uB,IAAA,IAAAiuB,GAAAyf,GAAiF,OAGjF,OADAnhD,GAAAizE,EAAAxuE,QAAAwuE,EAAAzzD,MAAmC6gC,KAAA,wBAAAmM,MAAA/4C,EAAAg5C,IAAA,IAAA/Y,EAAAnR,WAAA9uB,GAAA,KAAA0tC,IACnCrmB,GAAA,mBAAuCqmB,QA6WvCmyC,CAAA1wD,EAAA,eAAAA,EAAA8Q,EAAAjgC,IAMA,MAAAmvB,EAAA,YAAAA,EAAA,WAAAn+B,OAAA,IAAAF,IAAAE,QA7fA,SAAAkqF,GACA,OAAAA,EAAAlqF,OAAA,SAEA,IADA,IAAAF,EAAA,sBAAAoqF,EAAAlqF,OAAA,KACAzE,EAAA,EAAeA,GAAA2uF,EAAAlqF,SAAoBzE,EAAAuE,GAAA,mBAAAg9B,GAAAotD,EAAA3uF,IAAA,MACnC,OAAAuE,EAAA,gBAyfA,CAAAq+B,EAAA,aAMA,IAAA8P,EAAA6gD,GAAA,EAAApgD,GAAA,EAuDA,OAtDAvQ,EAAA,UAAAn+B,OAAA,IACAF,IAAAE,QAAA,eACAm+B,EAAA,UAAAlI,QAAA,SAAAhkB,GACAA,EAAA,GAAAk8B,SACAF,GAAWyO,IAAAzqC,EAAA,IACX,KAAAA,EAAA,GAAAk8B,OAAAxsC,OAAA,KACA+sC,EAAAD,GAAAV,GAAA,EAAA1Z,GAAApiB,EAAA,GAAAk8B,QAAAtsC,QAAA,WAAAk1B,GAAAsV,OACA4B,EAAA,cAAAS,IAEAogD,EAAA78E,EAAA,GAAAk8B,OAAA1uC,QAAA,WAAAwuC,EAAAo8C,SAAAh2D,GAAApiB,EAAA,GAAAk8B,OAAAztC,MAAAouF,EAAA,KACA78E,EAAA,GAAAqrC,UAAArP,EAAAs8C,QAAAl2D,GAAApiB,EAAA,GAAAqrC,UACArP,EAAAs9C,QAAAt5E,EAAA,GAAAs5E,QACAzrF,IAAAE,QAAAq2B,GAAA,iBAAA4X,MAEAnuC,IAAAE,QAAA,wBAEAm+B,EAAA,UAIA,MAAAA,EAAA,cAAAr+B,IAAAE,QA5bA,SAAA0qF,GAEA,OADA7D,GAAA6D,GACAr0D,GAAA,mBAAAq0D,GA0bAqE,CAAA5wD,EAAA,cASAvzB,MAAAokF,eAAA,GAAApkF,EAAAokF,WAAAlvF,IAAAE,QAAAm2B,GAAA,gBAAAE,GAAA,qBAAoI44D,mBAAA,EAAAC,MAAAxyC,MAIpI6wC,EAAAvtF,OAAA,IACA0uC,EAAAD,GAAAV,GAAA,yBAAA/+B,EAAA,UAAA+nB,GAAAwW,MACAztC,IAAAE,QAAAq2B,GAAA,gBAA4C84D,OAAA,MAAAzgD,IAC5CvQ,EAAA,YAAAovD,GAGApvD,EAAA,aAAAn+B,OAAA,IACA0uC,EAAAD,GAAAV,GAAA,4BAAA/+B,EAAA,UAAA+nB,GAAAuV,KACAxsC,IAAAE,QAAAq2B,GAAA,sBAAkD84D,OAAA,MAAAzgD,IAClDvQ,EAAA,WAAAuQ,GAWA5uC,EAAAE,OAAA,IAAiBF,IAAAE,QAAA,eAAgCF,EAAA,GAAAA,EAAA,GAAA+B,QAAA,WACjD/B,EAAAO,KAAA,IAmEA,SAAA+uF,GAAA9zD,EAAA6C,EAAAtC,EAAAzf,GACA,IAAAtc,EAlDA,SAAAsc,EAAAyf,EAAAsC,GACA,IAAAr+B,EAAA0d,GAAA,KACA9E,GAAAylB,EAAA,cAAA/hB,OACAtc,EAAAqX,YAAA,EAAAiF,GAEAtc,EAAAqX,YAAA,KAEA,IAAAgjC,EAAA,IACAzhC,EAAAowC,IAAA3O,EAAA,GAAA0P,GAAAnxC,EAAAowC,KACApwC,EAAAmwC,MAAA1O,EAAA,GAAAzhC,EAAAmwC,KACA/oD,EAAAqX,YAAA,EAAAgjC,GAEAr6C,EAAAqX,YAAA,KAEA,IAAAK,EAAA,EACAkB,EAAAklC,QAAApmC,GAAAkB,EAAAklC,OACAllC,EAAAkwC,SAAApxC,GAAA,KACAkB,EAAAowC,KAAApwC,EAAAmwC,OAAArxC,GAAA,IACA1X,EAAAqX,YAAA,EAAAK,GAEA1X,EAAAqX,YAAA,KAGA,IAAAk4E,EAAA,EAAAC,EAAAxvF,EAAAmS,EACAnS,EAAAmS,GAAA,EAIA,IAFA,IAAAs9E,GAAcz/E,EAAAsM,EAAApgB,EAAA,GACdkiC,EAAA,MAAAC,EAAA,SACA5iC,EAAA,EAAeA,EAAA,KAAQA,EACvB,KAAAsgC,EAAApgC,EAAAO,EAAAT,EAAA,OAAAsgC,EAAA5gC,EAAAe,EAAAT,GAAA,KAEA,IADA,IAAAi0F,GAAA,EAAAC,GAAA,EACAzhF,EAAAzS,GAAA,GAAsByS,EAAAzS,EAAA,QAAiByS,EACvCuhF,EAAAvzF,EAAAgS,GACAkwB,GAAAC,EAAA,SAAAoxD,EAAAz/E,QAAAy/E,EAAAvzF,GAAAmiC,EAAApC,GAAAwzD,OACaC,EAAA,IAAAA,EAAAxhF,GAAyByhF,EAAAzhF,GAEtCwhF,EAAA,MACAH,EACAvvF,EAAAqX,YAAA,EAAAq4E,GACA1vF,EAAAqX,YAAA,EAAAs4E,IAGA,IAAAx9E,EAAAnS,EAAAmS,EAKA,OAJAnS,EAAAmS,EAAAq9E,EACAxvF,EAAAqX,YAAA,EAAAk4E,GACAvvF,EAAAmS,IAEAnS,EAAAE,OAAAF,EAAAmS,EAAAnS,EAAAY,MAAA,EAAAZ,EAAAmS,GAAAnS,EAGA4vF,CAAAtzE,EAAAyf,EAAAsC,IACAr+B,EAAAE,OAAA,KAAAm+B,EAAA,cAAA/hB,KAAAif,GAAAC,EAAA,EAAAx7B,GAIA,IAAA6vF,GAAAxuD,GACAyuD,GAAAxuD,GA2IA,SAAAyuD,GAAAhwF,GAGA,OAFAsgC,GAAAtgC,GACAwhC,GAAAxhC,GACA,KAmIA,IAAAiwF,GAAA3uD,GACA4uD,GAAA3uD,GAiFA,IAAA4uD,IAAA,iDA4XA,SAAAC,GAAA30D,EAAAE,EAAApf,EAAA5F,EAAA5L,EAAAuzB,EAAA+xD,GACA,IAAApwF,GAAmBgQ,EAAAsM,EAAApgB,EAAAwa,GAEnB,GADAglB,EAAAx/B,GAAAmiC,EAAA,aAAApjB,MAAAghB,GAAAj8B,GAAA07B,EAAAx/B,SACAwX,IAAAgoB,EAAAn3B,EAAA,SACA,IAAA6O,EAAA,GACA,OAAAsoB,EAAAl3B,GACA,QAAA4O,EAAAsoB,EAAAn3B,EAAA,QAAoC,MACpC,SACAm3B,EAAA1L,GAAA0L,IACArI,EAAAqI,EAAArI,GAAAjuB,EAAA,IACAs2B,EAAAn3B,EAAA6oB,GAAAW,GAAA2N,EAAAn3B,IAAuCm3B,EAAAl3B,EAAA,IACvC,MAEA,gBAAA4O,EAAA,GAAAsoB,EAAAn3B,EAAqC,MACrC,QAAA6O,EAAAsoB,EAAAn3B,EAKA,OAFAvE,EAAArE,EAAA6rF,GAAA18E,EAAAk3D,QAAAtmC,EAAA5wB,GACA4wB,EAAAvpB,GAAAksB,EAAA,UAAApjB,MAAAghB,GAAAj8B,GAAA07B,EAAAvpB,IACAupB,EAAAl3B,GACA,kBAWA,OAVAsG,EAAAwgF,SACAl4E,EAAAqzE,GAAA37E,EAAAygF,QAAA,MAAA7vD,EAAAn3B,EAAA,GAAAlE,OAAAq7B,EAAAn3B,GAAAuG,EAAA0gF,YACAxrF,EAAAwE,EAAA,IAAcxE,EAAAuE,EAAA6O,EACdg9E,EAAA70D,GAAAC,EAAA,GA/nBA,SAAAE,EAAA20D,EAAArwF,GAIA,OAHA,MAAAA,MAAA0d,GAAA,IACA4iB,GAAA+vD,EAAArwF,GACAA,EAAAqX,YAAA,EAAAg5E,EAAA9rF,GACAvE,EA2nBAswF,CAAA50D,EAAA17B,IACAu7B,GAAAC,EAAA,EA3oBA,SAAAE,EAAA20D,EAAArwF,GAIA,OAHA,MAAAA,MAAA0d,GAAA,KACA0iB,GAAAiwD,EAAArwF,GACAA,EAAAqX,YAAA,EAAAg5E,EAAA9rF,GACAvE,EAuoBAuwF,CAAA70D,EAAA17B,MAEAA,EAAAwE,EAAA,MACA4rF,EAAA70D,GAAAC,EAAA,GAnjBA,SAAAE,EAAA20D,EAAArwF,GACA,IAAAD,EAAA,MAAA27B,EAAAn3B,EAAA,GAAAlE,OAAAq7B,EAAAn3B,GAIA,OAHA,MAAAvE,MAAA0d,GAAA,IAAA3d,EAAAG,SACAogC,GAAA+vD,EAAArwF,GACAs/B,GAAAv/B,EAAAC,GACAA,EAAAE,OAAAF,EAAAmS,EAAAnS,EAAAY,MAAA,EAAAZ,EAAAmS,GAAAnS,EA8iBAwwF,CAAA90D,EAAA17B,IACAu7B,GAAAC,EAAA,EAhkBA,SAAAE,EAAA20D,EAAArwF,GACA,IAAAD,EAAA,MAAA27B,EAAAn3B,EAAA,GAAAlE,OAAAq7B,EAAAn3B,GAIA,OAHA,MAAAvE,MAAA0d,GAAA,KAAAge,EAAAn3B,EAAArE,SACAkgC,GAAAiwD,EAAArwF,GACAs/B,GAAAv/B,EAAAC,GACAA,EAAAE,OAAAF,EAAAmS,EAAAnS,EAAAY,MAAA,EAAAZ,EAAAmS,GAAAnS,EA2jBAywF,CAAA/0D,EAAA17B,MAEA,EACA,QAQI,OANJ07B,EAAAn3B,IAAA,EAAAm3B,EAAAn3B,IAAAm3B,EAAAn3B,GAAA,KAAAm3B,EAAAn3B,EAAA,IACA6rF,EAAA70D,GAAAC,EAAA,GA1lBA,SAAAE,EAAA20D,EAAArwF,GAIA,OAHA,MAAAA,MAAA0d,GAAA,IACA4iB,GAAA+vD,EAAArwF,GACAkhC,GAAAxF,EAAAn3B,EAAAvE,GACAA,EAslBA0wF,CAAAh1D,EAAA17B,IACAu7B,GAAAC,EAAA,EAtmBA,SAAAE,EAAA20D,EAAArwF,GAIA,OAHA,MAAAA,MAAA0d,GAAA,KACA0iB,GAAAiwD,EAAArwF,GACAkhC,GAAAxF,EAAAn3B,EAAAvE,GACAA,EAkmBA2wF,CAAAj1D,EAAA17B,IAEAowF,EAAA70D,GAAAC,EAAA,GArnBA,SAAAE,EAAA20D,EAAArwF,GAIA,OAHA,MAAAA,MAAA0d,GAAA,KACA4iB,GAAA+vD,EAAArwF,GACAwhC,GAAA9F,EAAAn3B,EAAAvE,GACAA,EAinBA4wF,CAAAl1D,EAAA17B,IACAu7B,GAAAC,EAAA,EAjoBA,SAAAE,EAAA20D,EAAArwF,GAIA,OAHA,MAAAA,MAAA0d,GAAA,KACA0iB,GAAAiwD,EAAArwF,GACAwhC,GAAA9F,EAAAn3B,EAAAvE,GACAA,EA6nBA6wF,CAAAn1D,EAAA17B,KACI,EACJ,QAIA,OAHAA,EAAAwE,EAAA,IACA4rF,EAAA70D,GAAAC,EAAA,GArsBA,SAAAE,EAAA20D,EAAArwF,GAIA,OAHA,MAAAA,MAAA0d,GAAA,IACA4iB,GAAA+vD,EAAArwF,GACAA,EAAAqX,YAAA,EAAAqkB,EAAAn3B,EAAA,KACAvE,EAisBA8wF,CAAAp1D,EAAA17B,IACAu7B,GAAAC,EAAA,EAjtBA,SAAAE,EAAA20D,EAAArwF,GAIA,OAHA,MAAAA,MAAA0d,GAAA,IACA0iB,GAAAiwD,EAAArwF,GACAA,EAAAqX,YAAA,EAAAqkB,EAAAn3B,EAAA,KACAvE,EA6sBA+wF,CAAAr1D,EAAA17B,KACA,EACA,QAIA,OAHAA,EAAAwE,EAAA,IACA4rF,EAAA70D,GAAAC,EAAA,GAlrBA,SAAAE,EAAA20D,EAAArwF,GAMA,OALA,MAAAA,MAAA0d,GAAA,IACA4iB,GAAA+vD,EAAArwF,GACAA,EAAAqX,YAAA,EAAAqkB,EAAAn3B,GACAvE,EAAAqX,YAAA,KACArX,EAAAqX,YAAA,KACArX,EA4qBAgxF,CAAAt1D,EAAA17B,IACAu7B,GAAAC,EAAA,EA9rBA,SAAAE,EAAA20D,EAAArwF,GAIA,OAHA,MAAAA,MAAA0d,GAAA,IACA0iB,GAAAiwD,EAAArwF,GACAA,EAAAqX,YAAA,EAAAqkB,EAAAn3B,GACAvE,EA0rBAixF,CAAAv1D,EAAA17B,KACA,EAIA,OAFAowF,EAAA70D,GAAAC,EAAA,GApuBA,SAAAE,EAAA20D,EAAArwF,GAEA,OADA,MAAAA,MAAA0d,GAAA,IACA4iB,GAAA+vD,EAAArwF,GAkuBAkxF,CAAAx1D,EAAA17B,IACAu7B,GAAAC,EAAA,EA7uBA,SAAAE,EAAA20D,EAAArwF,GAEA,OADA,MAAAA,MAAA0d,GAAA,IACA0iB,GAAAiwD,EAAArwF,GA2uBAmxF,CAAAz1D,EAAA17B,KACA,EA4BA,SAAAoxF,GAAA51D,EAAA6C,GACAA,KAAA,aACA9C,GAAAC,EAAA,IA/hBA,SAAA3gB,EAAA7a,GAGA,OAFA,MAAAA,MAAA0d,GAAA,IACA1d,EAAAqX,YAAA,EAAAwD,GACA7a,EA4hBAqxF,CAAAhzD,EAAA,WAAAn+B,SACAm+B,EAAA,WAAAlI,QAAA,SAAA/6B,GAAoCmgC,GAAAC,EAAA,IAAAy0D,GAAA70F,MACpCmgC,GAAAC,EAAA,MAGA,SAAA81D,GAAA91D,EAAA6C,GACAA,KAAA,WACA9C,GAAAC,EAAA,KACA6C,EAAA,SAAAlI,QAAA,SAAA/6B,EAAAK,GAAqCL,GAAAmgC,GAAAC,EAAA,GAxerC,SAAA9kB,EAAAmmB,EAAA78B,GACA,MAAAA,MAAA0d,GAAA,KACA,IAAA5G,EAAA+vE,GAAAnwE,EAAAmmB,GACA78B,EAAAqX,aAAA,EAAAX,GACA1W,EAAAqX,aAAA,EAAAX,GACA1W,EAAAqX,YAAA,OAAAP,EAAA2gC,OAAA,KACAz3C,EAAAqX,YAAA,KACA,IAAAK,EAAA,EAKA,OAJAmlB,EAAAisB,SAAApxC,GAAA,GACA,iBAAAZ,EAAA2gC,QAAA//B,GAAA,GACAmlB,EAAAihB,QAAApmC,GAAAmlB,EAAAihB,OAAA,GACA99C,EAAAqX,YAAA,EAAAK,GACA1X,EA4dqCuxF,CAAA91F,EAAAL,MACrCmgC,GAAAC,EAAA,MAGA,SAAAg2D,GAAAh2D,EAAA6C,GACAA,KAAA,UACA9C,GAAAC,EAAA,KACAD,GAAAC,EAAA,IAxbA,SAAAohB,GACA,IAAA58C,EAAA0d,GAAA,IAIA,OAHA1d,EAAAqX,YAAA,KACArX,EAAAqX,YAAA,KACAiqB,GAAAsb,EAAA58C,GACAA,EAmbAyxF,CAAAl0D,GAAAc,EAAA,WACA9C,GAAAC,EAAA,MAGA,SAAAk2D,GAAAl2D,EAAA6C,EAAA4P,GAEA5P,EAAA,UAAAlI,QAAA,SAAAhkB,GACA,GAAAA,EAAA,GAAAk8B,OAAA,CACA,IAAAO,EAAAD,GAAAV,GAAA,EAAA97B,EAAA,GAAAk8B,OAAAtsC,QAAA,WAAAk1B,GAAAsV,OACAhR,GAAAC,EAAA,IApiBA,SAAArpB,EAAAy8B,GACA,IAAA5uC,EAAA0d,GAAA,MAAAvL,EAAA,GAAAk8B,OAAAnuC,QAAAiS,EAAA,GAAAqrC,SAAA,IAAAt9C,SACAohC,IAAqB3lC,EAAAmhC,GAAA3qB,EAAA,IAAAhX,EAAA2hC,GAAA3qB,EAAA,KAAyCnS,GAC9D6gC,GAAA,MAAA+N,EAAA5uC,GACA,IAAA2xF,EAAAx/E,EAAA,GAAAk8B,OAAA1uC,QAAA,KAKA,OAHA2/B,KADA,GAAAqyD,EAAA,GAAAx/E,EAAA,GAAAk8B,OAAAztC,MAAA+wF,EAAA,KACA,GAAA3xF,GACAs/B,GAAAntB,EAAA,GAAAqrC,SAAA,GAAAx9C,GACAs/B,GAAA,GAAAt/B,GACAA,EAAAY,MAAA,EAAAZ,EAAAmS,GA2hBAy/E,CAAAz/E,EAAAy8B,cAEAvQ,EAAA,UAqCA,SAAAwzD,GAAAr2D,EAAA6C,EAAAqpB,GACAnsB,GAAAC,EAAA,KAGAD,GAAAC,EAAA,IAhgBA,SAAA6C,EAAAqpB,EAAA1nD,GACA,MAAAA,MAAA0d,GAAA,KACA,IAAA1L,EAAA,IAcA,SAbA01C,OAAmB0hC,WAAA,QAAmBK,MAAAz3E,GAAA,IACtChS,EAAAqX,YAAA,EAAArF,GACAhS,EAAAqX,YAAA,KACArX,EAAAqX,YAAA,KACArX,EAAAqX,YAAA,KACArX,EAAAqX,YAAA,KACArX,EAAAqX,YAAA,KACArX,EAAAqX,YAAA,KACArX,EAAAqX,YAAA,OACArX,EAAAqX,YAAA,KACArX,EAAAqX,YAAA,KACArX,EAAAqX,YAAA,KACArX,EAAAqX,YAAA,KACArX,EAgfA8xF,CAAAzzD,EAAAqpB,IAKAnsB,GAAAC,EAAA,KAGAD,GAAAC,EAAA,KAQA,SAAAu2D,GAAAv2D,EAAA6C,GACAA,EAAA,aAEA9C,GAAAC,EAAA,IAtfA,SAAA8yC,EAAAtuE,GAyBA,OAxBA,MAAAA,MAAA0d,GAAA,KACA1d,EAAAqX,YAAA,EAAAi3D,EAAAlU,SAAAd,GAAAgV,EAAAlU,UAAA,GACAp6D,EAAAqX,YAAA,OAEA,eACA,iBACA,mBACA,qBACA,kBACA,qBACA,kBACA,wBACA,qBACA,kBACA,yBACA,YACA,kBACA,mBACA,2BACA8e,QAAA,SAAAhhB,GAEAA,EAAA,GAAAnV,EAAAqX,YAAA,QAAAi3D,EAAAn5D,EAAA,KAAAm5D,EAAAn5D,EAAA,SACAnV,EAAAqX,YAAA,QAAAi3D,EAAAn5D,EAAA,KAAAm5D,EAAAn5D,EAAA,WAEAnV,EA6dAgyF,CAAA3zD,EAAA,cAGA,SAAA4zD,GAAA/iF,EAAApE,EAAAqkC,EAAAlB,GACA,IAAAzS,EAAAR,KACAr/B,EAAAwzC,EAAAnR,WAAA9uB,GAAAmvB,EAAA8Q,EAAAlR,OAAAtiC,OACAO,EAAAP,EAAsB,IAAMwzC,KAAAuY,WAAAxrD,EAAAizC,EAAAuY,SAAAzpB,OAAA/uB,GAAA87E,UAAA9uF,GAAmE,MAAAf,IAC/F,IAAA6U,EAAAutB,GAAAc,EAAA,eACA,GAAAruB,EAAA7U,EAAAe,EAAA,OAAA8T,EAAA7U,EAAA6U,EAAA,SACA,GAAAlF,EAAAorB,IAAA,UAAAxyB,MAAA,UAAA26B,EAAA,sDACAruB,EAAA7U,EAAAe,EAAAJ,KAAAgV,IAAAd,EAAA7U,EAAAe,EAAA,OACA8T,EAAA7U,EAAA6U,EAAAlU,KAAAgV,IAAAd,EAAA7U,EAAAe,EAAA,SA6CA,OA3CAmiC,EAAA,aAEAA,EAAA,gBACA9C,GAAAC,EAAA,MACA2T,EAAAw+C,QAAAtvD,EAAA,cAAA9C,GAAAC,EAAA,IAx4BA,SAAA/sB,EAAAT,EAAAhO,GACA,MAAAA,MAAA0d,GAAA,KAAAjP,EAAAvO,SACA,IAAA8R,EAAA,IACAhE,IACAA,EAAAggF,QAAAh8E,IAAA,IACAhE,EAAAm5E,OAAAn1E,IAAA,MAEAhS,EAAAqX,YAAA,EAAArF,GACA,QAAAvW,EAAA,EAAeA,EAAA,IAAOA,EAAAuE,EAAAqX,YAAA,KAKtB,OAJAoqB,IAAiBC,KAAA,GAAO1hC,GACxBA,EAAAqX,aAAA,MACArX,EAAAqX,aAAA,MACAmpB,GAAA/xB,EAAAzO,GACAA,EAAAY,MAAA,EAAAZ,EAAAmS,GA23BA+/E,CAAAh2F,EAAAmiC,EAAA,cACA9C,GAAAC,EAAA,IAAAs0D,GAAA9/E,IACA6hF,GAAAr2D,EAAA6C,EAAA8Q,EAAAuY,UAEA4pC,GAAA91D,EAAA6C,GAtIA,SAAA7C,EAAA6C,EAAAnvB,EAAApE,GACA,IAAA8xC,EAAA7gB,EAAAwB,GAAAc,EAAA,eAAA9tB,EAAA,GAAAmxC,KACAnmB,GAAAC,EAAA,KACA,IAAA4C,EAAA,MAAAC,EAAA,SACA8zD,EAAAp2D,EAAA5gC,EAAA6U,EACAquB,EAAA,WAAA8zD,EAAAr2F,KAAAiV,IAAAgrB,EAAA5gC,EAAA6U,EAAAquB,EAAA,SAAAn+B,OAAA,IACA,QAAAoc,EAAAyf,EAAApgC,EAAAqU,EAAuBsM,GAAA61E,IAAU71E,EAAA,CACjC/L,EAAA8rB,GAAA/f,GAGAgzE,GAAA9zD,EAAA6C,EAAAtC,EAAAzf,GACA,IAAA8zE,GAAA,EACA,GAAA9zE,GAAAyf,EAAA5gC,EAAA6U,EAAA,QAAA0G,EAAAqlB,EAAApgC,EAAAO,EAA2Cwa,GAAAqlB,EAAA5gC,EAAAe,IAAgBwa,EAAA,CAE3D4F,IAAAyf,EAAApgC,EAAAqU,IAAA0xC,EAAAhrC,GAAA4lB,GAAA5lB,IACAkmC,EAAA8E,EAAAhrC,GAAAnG,EACA,IAAAmrB,EAAA0C,GAAAC,EAAA,SAAA/hB,QAAA5F,GAAA2nB,EAAAue,GAGAwzC,IAFA10D,GAEAy0D,GAAA30D,EAAAE,EAAApf,EAAA5F,EAAA5L,EAAAuzB,EAAA+xD,IAGA70D,GAAAC,EAAA,KAiHA42D,CAAA52D,EAAA6C,EAAAnvB,EAAApE,GAEAinF,GAAAv2D,EAAA6C,GAzEA,SAAA7C,EAAA6C,EAAA8Q,EAAAjgC,GACA,GAAAmvB,EAAA,gBACA,IAAAt+B,EAAAs+B,EAAA,eACAue,EAAA,iBAAA78C,EAAA68C,IAAA78C,EAAA68C,IAAA5f,GAAAj9B,EAAA68C,KAGAzN,EAAAuY,WAAAvY,EAAAuY,UAAkCzpB,YAClCkR,EAAAuY,SAAAE,QAAAzY,EAAAuY,SAAAE,UACA,IAAA8mB,EAAAv/B,EAAAuY,SAAAE,MACA7rB,EAAAgB,GAAA6f,GACA7gB,EAAApgC,EAAAqU,GAAA+rB,EAAA5gC,EAAA6U,IAA6B+rB,EAAA5gC,EAAA6U,EAAA+sB,GAAAsB,EAAA,SAAAljC,EAAA6U,EAA0C4sC,EAAA5f,GAAAjB,IACvE,QAAAtgC,EAAA,EAAeA,EAAAizE,EAAAxuE,SAAkBzE,EAAA,CACjC,IAAAogB,EAAA6yD,EAAAjzE,GACA,4BAAAogB,EAAAigC,MACAjgC,EAAAosC,OAAA/4C,EAAA,CACA2M,EAAAqsC,IAAA7qB,GAAA8R,EAAAnR,WAAA9uB,IAAA,IAAAiuB,GAAAyf,GAAiF,OAEjFnhD,GAAAizE,EAAAxuE,QAAAwuE,EAAAzzD,MAAmC6gC,KAAA,wBAAAmM,MAAA/4C,EAAAg5C,IAAA7qB,GAAA8R,EAAAnR,WAAA9uB,IAAA,IAAAiuB,GAAAyf,KAEnCrhB,GAAAC,EAAA,IAAA8F,GAAA/D,GAAAqf,KAIArhB,GAAAC,EAAA,MAqDA62D,CAAA72D,EAAA6C,EAAA8Q,EAAAjgC,GAIAkiF,GAAA51D,EAAA6C,GAIAqzD,GAAAl2D,EAAA6C,EAAA4P,GAEA5P,EAAA,aAAA9C,GAAAC,EAAA,IArkBA,SAAAwrD,EAAAhnF,GAIA,OAHA,MAAAA,MAAA0d,GAAA,KACAqpE,GAAAC,GACAkJ,GAAA/5D,QAAA,SAAA5a,GAAoCimB,GAAA,EAAAjmB,GAAAvb,KACpCA,EAikBAsyF,CAAAj0D,EAAA,cAOAvzB,MAAAokF,eAAA,GAAApkF,EAAAokF,UAAAsC,GAAAh2D,EAAA6C,GAtGA,SAAA7C,EAAA6C,EAAAnvB,EAAA++B,GAEA,GAAA5P,EAAA,aAAAn+B,OAAA,GACA,IAAA0uC,EAAAD,GAAAV,GAAA,4BAAA/+B,EAAA,UAAA+nB,GAAAuV,KACAjR,GAAAC,EAAA,IAAAqF,GAAA,MAAA+N,IACAvQ,EAAA,WAAAuQ,GAoGA2jD,CAAA/2D,EAAA6C,EAAAnvB,EAAA++B,GAQA1S,GAAAC,EAAA,KACAA,EAAA7S,MAuBA,SAAA6pE,GAAAzyF,EAAA8b,EAAA/Q,EAAAmjC,EAAAkB,EAAAsjD,GACA,IAAAx1D,EAAAw1D,IAAqCC,QAAA,SACrC,IAAA3yF,EAAA,OAAA0yF,EAGA,IAAA/7E,EAAA,EAAA4F,EAAA,EAAAugB,EAAA,IACAqwB,GAAiBvxD,GAAIqU,EAAA,IAAA9T,EAAA,KAAqBf,GAAM6U,EAAA,EAAA9T,EAAA,IAmBhD,OAhBA6D,EAAAiP,MAAA,6CAAAmnB,QAAA,SAAAw8D,GACA,IAAAC,EA/BA,SAAA7yF,GACA,IAEAiS,EAFA6qB,KACA2zC,EAAAzwE,EAAAiP,MAAA,kBAIAjP,EAAAiP,MAAA,0CAAAmnB,QAAA,SAAA4nC,GACA,IAAAnzD,EAAAmzD,EAAA/uD,MAAA,+CACApE,IACAiyB,GAAAjyB,EAAA,IAAA4lE,GAAA5lE,EAAA,GAAAA,EAAA,MAIA,IAAAioF,EAAA7+D,IAAAj0B,EAAAiP,MAAA,iEAIA,OAFAjP,EAAAiP,MAAA,4BAAAmnB,QAAA,SAAAinB,GAA8DprC,EAAAorC,EAAAr7C,QAAA,gBAE9D86B,EAAAg2D,EAAA7gF,GAcA8gF,CAAAH,GACAzlC,EAAAvxD,EAAAqU,EAAAk9C,EAAAvxD,EAAAO,EAAA,EACAgxD,EAAA/xD,EAAAe,EAAAwa,EACAmmB,EAAAP,GAAA5lB,GACAk8E,EAAA,GAAAz8D,QAAA,SAAAhhB,EAAA1Z,GACAwhC,EAAA,UACAA,EAAA,SAAAxhC,KAAAwhC,EAAA,SAAAxhC,OACAwhC,EAAA,SAAAxhC,GAAAib,IAAyBlS,EAAA,IAAAD,EAAA4Q,EAAAke,EAAAu/D,EAAA,KACrB31D,EAAAJ,EAAAR,GAAA5gC,KAAiC+I,EAAA,IAAAD,EAAA4Q,EAAAke,EAAAu/D,EAAA,IACrCt2E,EAAA7gB,IAEAyxD,EAAA/xD,EAAA6U,EAAAsM,IAAA4wC,EAAA/xD,EAAA6U,EAAAsM,KACA5F,IAEAA,EAAA,IAAAumB,EAAA,QAAAD,GAAAkwB,IACAjwB,EAyGA,IAAA81D,KACA,gCACA,mCACA,yBACA,iCACA,gBACA,uBACA,gCACA,4BACA,iCACA,gCACA,2BACA,oCACA,qCACA,yCACA,gCACA,sBACA,mCACA,0BAIAC,KACA,sBACA,qCACA,uBACA,wBACA,mCACA,4BACA,iCACA,uBACA,yBAKAC,MAKAC,KACA,yBACA,oBACA,sBACA,0BACA,2BACA,yBACA,oBACA,uBACA,yBACA,iBAyBA,SAAAC,GAAA1gE,EAAA2gE,GACA,QAAAllF,EAAA,EAAeA,GAAAukB,EAAAvyB,SAAoBgO,EACnC,IAD0C,IAAAlB,EAAAylB,EAAAvkB,GAC1CzS,EAAA,EAAcA,GAAA23F,EAAAlzF,SAAsBzE,EAAA,CAAO,IAAA43B,EAAA+/D,EAAA33F,GAC3C,SAAAuR,EAAAqmB,EAAA,IAAArmB,EAAAqmB,EAAA,IAAAA,EAAA,QACA,OAAAA,EAAA,IACA,4BAAArmB,EAAAqmB,EAAA,MAAArmB,EAAAqmB,EAAA,IAAAyB,GAAA9nB,EAAAqmB,EAAA,MAA+E,MAC/E,2BAAArmB,EAAAqmB,EAAA,MAAArmB,EAAAqmB,EAAA,IAAA/iB,SAAAtD,EAAAqmB,EAAA,WAKA,SAAAggE,GAAA5gE,EAAA2gE,GACA,QAAA33F,EAAA,EAAeA,GAAA23F,EAAAlzF,SAAsBzE,EAAA,CAAO,IAAA43B,EAAA+/D,EAAA33F,GAC5C,SAAAg3B,EAAAY,EAAA,IAAAZ,EAAAY,EAAA,IAAAA,EAAA,QACA,OAAAA,EAAA,IACA,4BAAAZ,EAAAY,EAAA,MAAAZ,EAAAY,EAAA,IAAAyB,GAAArC,EAAAY,EAAA,MAA8F,MAC9F,2BAAAZ,EAAAY,EAAA,MAAAZ,EAAAY,EAAA,IAAA/iB,SAAAmiB,EAAAY,EAAA,WAKA,SAAAigE,GAAAnkD,GACAkkD,GAAAlkD,EAAAwY,QAAAorC,IACAM,GAAAlkD,EAAAokD,OAAAL,IAEAC,GAAAhkD,EAAAqkD,OAAAR,IACAG,GAAAhkD,EAAAlR,OAAAg1D,IAEA3M,GAAA36E,SAAAmpB,GAAAqa,EAAAwY,QAAAh8C,UAUA,IAAA8nF,GAAA,WAAAvwF,MAAA,IACA,SAAAwwF,GAAAv+E,EAAAyc,GACA,IACA,OAAAzc,EAAA,UAAAzR,MAAA,8BACA,GAAAyR,EAAAjV,OAAA,aAAAwD,MAAA,qCACA,OAAAyR,EAAAhV,WAAA,QAAAgV,EAAAhV,WAAAgV,EAAAjV,OAAA,aAAAwD,MAAA,sDACA,cAAAyR,EAAAtC,cAAA,UAAAnP,MAAA,kCACA+vF,GAAAt9D,QAAA,SAAAj6B,GACA,OAAAiZ,EAAAxV,QAAAzD,GACA,UAAAwH,MAAA,8CAEE,MAAAvI,GAAW,GAAAy2B,EAAA,SAAuB,MAAAz2B,EACpC,SAYA,SAAAw4F,GAAAxkD,GACA,IAAAA,MAAAnR,aAAAmR,EAAAlR,OAAA,UAAAv6B,MAAA,oBACA,IAAAyrC,EAAAnR,WAAA99B,OAAA,UAAAwD,MAAA,qBACA,IAAAu6B,EAAAkR,EAAAuY,UAAAvY,EAAAuY,SAAAzpB,YAbA,SAAA21D,EAAAloF,EAAAmoF,GACAD,EAAAz9D,QAAA,SAAAhhB,EAAA1Z,GACAi4F,GAAAv+E,GACA,QAAAjH,EAAA,EAAgBA,EAAAzS,IAAOyS,EAAA,GAAAiH,GAAAy+E,EAAA1lF,GAAA,UAAAxK,MAAA,yBAAAyR,GACvB,GAAA0+E,EAAA,CACA,IAAAC,EAAApoF,KAAAjQ,IAAAiQ,EAAAjQ,GAAAuvF,UAAA71E,EACA,OAAA2+E,EAAA3zF,WAAA,IAAA2zF,EAAA5zF,OAAA,aAAAwD,MAAA,2BAAAowF,MAQAC,CAAA5kD,EAAAnR,WAAAC,IAAAkR,EAAAw+C,QACA,QAAAlyF,EAAA,EAAeA,EAAA0zC,EAAAnR,WAAA99B,SAA0BzE,EAAAssF,GAAA54C,EAAAlR,OAAAkR,EAAAnR,WAAAviC,IAAA0zC,EAAAnR,WAAAviC,MACzC0zC,EAAAnR,WAAA7H,QAAA,SAAAhhB,EAAA1Z,GACA,IAAA4iC,EAAA8Q,EAAAlR,OAAA9oB,GACA,GAAAkpB,KAAA,gBACA,IAAAqnB,EACAvW,EAAAuY,WAAAvY,EAAAuY,aACAvY,EAAAuY,SAAAE,QAAAzY,EAAAuY,SAAAE,UACAzY,EAAAuY,SAAAE,MAAAzxB,QAAA,SAAA69D,GAA0C,yBAAAA,EAAAl4C,MAAAk4C,EAAA/rC,OAAAxsD,IAAAiqD,EAAAsuC,KAC1C,IAAAhsC,EAAA3qB,GAAAloB,GAAA,IAAAgoB,GAAAkB,EAAA,eAAAue,KACA8I,IAAAwC,IAAAF,EACA7Y,EAAAuY,SAAAE,MAAA3sC,MAA+B6gC,KAAA,wBAAAmM,MAAAxsD,EAAAysD,IAAAF,OAK/B,IAAAisC,GAAA,gBA+PA,SAAAC,GAAAn0F,EAAAC,GAMA,OALAA,MAAA0d,GAAA,MACA1d,EAAAqX,YAAA,EAAAtX,EAAAo0F,QACAn0F,EAAAqX,YAAA,EAAAtX,EAAAq0F,QACAvzD,GAAA9gC,EAAAs0F,SAAAr0F,GACAs/B,GAAAv/B,EAAA8b,KAAAjb,MAAA,MAAAZ,GACAA,EAAAE,OAAAF,EAAAmS,EAAAnS,EAAAY,MAAA,EAAAZ,EAAAmS,GAAAnS,EAyCA,SAAAs0F,GAAAv0F,EAAAG,GACA,IAAAF,KAIA,OAHAD,EAAA4X,WAAA,GACA3X,EAAAu0F,OAAAx0F,EAAA4X,WAAA,GACA5X,EAAAoS,GAAAjS,EAAA,EACAF,EA0MA,SAAAw0F,GAAAh5D,EAAA2T,GAEA,GAAAA,EAAAuY,UAAAvY,EAAAuY,SAAAzpB,OAAA,CAGA,IAFA,IAAAF,EAAAoR,EAAAuY,SAAAzpB,OACAxiC,EAAA,EAAAg5F,GAAA,EAAA3rC,GAAA,EACMrtD,EAAAsiC,EAAA79B,SAAmBzE,GACzBsiC,EAAAtiC,KAAAsiC,EAAAtiC,GAAA04F,SAAA,GAAAM,IAAAh5F,EACA,GAAAsiC,EAAAtiC,GAAA04F,SAAA,GAAArrC,MAAArtD,GAEAqtD,EAAA2rC,IACAl5D,GAAAC,EAAA,KACAD,GAAAC,EAAA,IAzBA,SAAAtsB,EAAAlP,GAWA,OAVAA,MAAA0d,GAAA,KACA1d,EAAAqX,aAAA,KACArX,EAAAqX,aAAA,OACArX,EAAAqX,YAAA,SACArX,EAAAqX,YAAA,SACArX,EAAAqX,YAAA,OACArX,EAAAqX,YAAA,EAAAnI,GACAlP,EAAAqX,YAAA,EAAAnI,GAEAlP,EAAAqX,YAAA,EADA,KAEArX,EAAAE,OAAAF,EAAAmS,EAAAnS,EAAAY,MAAA,EAAAZ,EAAAmS,GAAAnS,EAcA00F,CAAAD,IAEAl5D,GAAAC,EAAA,OAGA,SAAAm5D,GAAAn5D,EAAA2T,GACAA,EAAAuY,UAAAvY,EAAAuY,SAAAE,OACAzY,EAAAuY,SAAAE,MAAAzxB,QAAA,SAAAta,GAA2C,IAC3C,MAAAA,EAAAo8C,MAAA,OACA18B,GAAAC,EAAA,GArMA,SAAA3f,EAAAszB,GACA,IAAAnvC,EAAA0d,GAAA,GACAhG,EAAA,EACAk9E,EAAA/4E,EAAAigC,KACA9W,GAAArlC,QAAAi1F,IAAA,IAAwCl9E,GAAA,GAAek9E,IAAAh0F,MAAA,IACvDZ,EAAAqX,YAAA,EAAAK,GACA1X,EAAAqX,YAAA,KACArX,EAAAqX,YAAA,QAAAwE,EAAAosC,MAAA,WAAApsC,EAAAosC,OAEA,IAAA/5B,GACAluB,EACAs/B,GAAAs1D,GACAnkB,GAAA50D,EAAAqsC,IAAA/Y,IAEA,GAAAtzB,EAAAg5E,QAAA3mE,EAAAjT,KAAAylB,GAAA7kB,EAAAg5E,cACA,CACA,IAAA/zF,EAAA4c,GAAA,GACA5c,EAAAuW,YAAA,cACA6W,EAAAjT,KAAAna,GASA,OAAA6C,EAAAuqB,GA0KA4mE,CAAAj5E,EAAAszB,IACE,MAAAh0C,GACF8lB,QAAAC,MAAA,oCAAA+O,KAAAC,UAAArU,OAeA,SAAAk5E,GAAAv5D,EAAA2T,GACA5T,GAAAC,EAAA,KACAD,GAAAC,EAAA,KACAD,GAAAC,EAAA,IAdA,SAAA2T,GACA,IAAAx4B,EAAAw4B,EAAAnR,WAAA99B,OACAF,EAAA0d,GAAA,GAAA/G,EAAA,IACA3W,EAAAqX,YAAA,EAAAV,EAAA,GACA3W,EAAAqX,YAAA,KAAqBrX,EAAAqX,YAAA,MAAsBrX,EAAAqX,YAAA,MAC3CrX,EAAAqX,YAAA,KAAqBrX,EAAAqX,YAAA,MAAsBrX,EAAAqX,YAAA,MAC3C,QAAA5b,EAAA,EAAeA,EAAAkb,IAAOlb,EACtBuE,EAAAqX,YAAA,KAAsBrX,EAAAqX,YAAA,EAAA5b,GAAqBuE,EAAAqX,YAAA,EAAA5b,GAE3C,OAAAuE,EAKAg1F,CAAA7lD,IACA5T,GAAAC,EAAA,KAwBA,SAAAy5D,GAAA9lD,EAAArkC,GACA,IAAA0wB,EAAAR,KAyBA,OAxBAO,GAAAC,EAAA,KACAD,GAAAC,EAAA,IA7FA,SAAAz7B,EAAAC,GACAA,MAAA0d,GAAA,MACA,QAAAjiB,EAAA,EAAe,GAAAA,IAAQA,EAAAuE,EAAAqX,YAAA,KAKvB,OAJAioB,GAAA,UAAAt/B,GACAs/B,GAAAvhC,EAAAC,QAAAgC,GACAs/B,GAAAvhC,EAAAC,QAAAgC,GACAs/B,GAAA,OAAAt/B,GACAA,EAAAE,OAAAF,EAAAmS,EAAAnS,EAAAY,MAAA,EAAAZ,EAAAmS,GAAAnS,EAsFAk1F,IAEA35D,GAAAC,EAAA,IAnSA,SAAAz7B,EAAAC,GACAA,MAAA0d,GAAA,KACA,IAAAhG,EAAA,EASA,OARA3X,IAEAA,EAAA4L,WAAA+L,GAAA,GACA3X,EAAAo1F,gBAAAz9E,GAAA,IAEA1X,EAAAqX,YAAA,EAAAK,GACA1X,EAAAqX,YAAA,KACAmpB,GAAAzgC,KAAAirF,UAAA,eAAAhrF,GACAA,EAAAY,MAAA,EAAAZ,EAAAmS,GAwRAijF,CAAAjmD,EAAAuY,UAAAvY,EAAAuY,SAAAC,SAAA,OAGA6sC,GAAAh5D,EAAA2T,GA7GA,SAAA3T,EAAA2T,GACA5T,GAAAC,EAAA,KACA,QAAAtsB,EAAA,EAAiBA,GAAAigC,EAAAnR,WAAA99B,SAA6BgP,EAG9CqsB,GAAAC,EAAA,IAAA04D,IADWC,OADXhlD,EAAAuY,UAAAvY,EAAAuY,SAAAzpB,QAAAkR,EAAAuY,SAAAzpB,OAAA/uB,IAAAigC,EAAAuY,SAAAzpB,OAAA/uB,GAAAilF,QAAA,EACWC,OAAAllF,EAAA,EAAAmlF,SAAA,OAAAnlF,EAAA,GAAA2M,KAAAszB,EAAAnR,WAAA9uB,MAGXqsB,GAAAC,EAAA,KAuGA65D,CAAA75D,EAAA2T,GAEA4lD,GAAAv5D,EAAA2T,IACAA,EAAAuY,cAAoBE,OAAA+sC,GAAAn5D,EAAA2T,GAYpB5T,GAAAC,EAAA,KAEAA,EAAA7S,MAEA,SAAA2sE,GAAAv1F,EAAA8b,EAAA/Q,GACA,eAAA+Q,EAAAjb,OAAA,GAhPA,SAAAb,EAAA+K,GACA,IAAAqkC,GAAWgD,cAAcwV,WAAY6rC,UAAAv1D,UAAAs1D,UAAiC5nD,MAAA,IACtEnvB,KACA04C,GAAA,EAEApqD,UACAA,EAAA+wB,KAAA,GAEA,IAAA+rB,KACAimB,OAkGA,OAjGAA,EAAA7vC,cACA6vC,EAAAC,OAEA/yC,GAAA,KAA2B5lB,EAAA,gBAAAnD,EAAAsiF,IAE3B55D,GAAA36B,EAAA,SAAA6N,EAAA0O,EAAAwe,GACA,OAAAA,GACA,SACA+yC,EAAA7vC,WAAA/iB,KAAArN,EAAAiO,MACAszB,EAAAlR,OAAAhjB,KAAArN,GAAwB,MAExB,SACAuhC,EAAAwY,QAAA/5C,EAAqB,MAErB,QACA,MAAAA,EAAAq6C,QAAAn9C,EAAAijE,IAAAngE,EAAAq6C,OACAr6C,EAAAs6C,IAAAgmB,GAAAtgE,EAAA2nF,IAAA,OAAA1nB,EAAA/iE,UACAA,EAAAijE,WACAngE,EAAA2nF,IACA3tC,EAAA3sC,KAAArN,GACA,MACA,gBAEA,SACA,SACA,SACA,SACAigE,EAAA,GAAA3tE,OACA2tE,EAAA5yD,MAAA6f,EAAAltB,IADAigE,EAAA,IAAA/yC,EAAAltB,GAEAigE,IAAA3tE,OAAA,GAAA4tE,OACA,MACA,SACA,IAAAD,EAAA3tE,SAA+B2tE,EAAA,MAAkBA,EAAA,GAAAC,QACjDD,IAAA3tE,OAAA,GAAA4tE,IAAAD,IAAA3tE,OAAA,GAAA4tE,IAAAjqE,OAAA+J,GACAigE,EAAAC,IAAAD,EAAAC,IAAAjqE,OAAA+J,GACA,MACA,SACA,MAEA,UACA,SACA,SACA,SACA,SACA,MAGA,UACA,UACA,SACA,SACA,SACA,SACA,UACA,SACA,SACA,SACA,SACA,SACA,UACA,UACA,SACA,UACA,SACA,UACA,UACA,UACA,SACA,SACA,UACA,SACA,UACA,MAEA,QACA4O,EAAAvB,KAAA6f,GAAmBo6B,GAAA,EAAa,MAChC,QACA14C,EAAA4B,MAAgB82C,GAAA,EAAc,MAC9B,QACA14C,EAAAvB,KAAA6f,GAAmBo6B,GAAA,EAAa,MAChC,QACA14C,EAAA4B,MAAgB82C,GAAA,EAAc,MAE9B,cAEA,QACA,GAAA54C,EAAAjR,QACA,IAAA6pD,GAAApqD,EAAAorB,KAAA,IAAA1Z,IAAAtc,OAAA,QAAAsc,IAAAtc,OAAA,aAAAwD,MAAA,uBAAAo3B,EAAAp4B,SAAA,OAEEoI,GAEFwoF,GAAAnkD,GAGAA,EAAAyY,QAEA,EAAAimB,WACA1+B,EAqIAqmD,CAAA,EAAA1qF,GA1lBA,SAAA/K,EAAA+K,GACA,IAAA/K,EAAA,UAAA2D,MAAA,uBACA,IAAAyrC,GAAkBgD,cAAcwV,WAAY6rC,UAAAv1D,UAAAs1D,UAAiC3rC,SAAAjc,MAAA,IAC7EupB,GAAA,EAAAvpB,EAAA,QACAipD,KAAea,EAAA,EAmJf,GAlJA11F,EAAAgC,QAAA+wB,GAAA,SAAAhyB,EAAAoO,GACA,IAAA3D,EAAA0nB,GAAAnyB,GACA,OAAA0yB,GAAAjoB,EAAA,KACA,kBAGA,gBACAzK,EAAAkO,MAAAilF,MAAAtoD,EAAA,QAAA7qC,EAAAkO,MAAA,eACAmgC,EAAAxD,MAAApgC,EAAAogC,GACA,MACA,wBAGA,0BAAApgC,EAAA,GAAoC4jC,EAAAgD,WAAA5mC,EAAmB,MACvD,0CAGA,mBAEA,2BAGA,kBACA,oBACAwnF,GAAA58D,QAAA,SAAAnpB,GACA,SAAAzB,EAAAyB,EAAA,IACA,OAAAA,EAAA,IACA,WAAAmiC,EAAAwY,QAAA36C,EAAA,IAAA8nB,GAAAvpB,EAAAyB,EAAA,KAA4D,MAC5D,UAAAmiC,EAAAwY,QAAA36C,EAAA,IAAAsD,SAAA/E,EAAAyB,EAAA,QAA2D,MAC3D,QAAAmiC,EAAAwY,QAAA36C,EAAA,IAAAzB,EAAAyB,EAAA,OAGAzB,EAAAw/E,WAAA57C,EAAAwY,QAAAqjC,SAAA31D,GAAA9pB,EAAAw/E,WACA,MACA,oBAGA,0BAEA,kCAGA,4DAEA,iDAAAx/E,EAAA,GAA6D4jC,EAAAqkD,OAAAv4E,KAAA1P,GAAmB,MAChF,4BAGA,mDAEA,aACA,OAAAA,EAAAiR,OACA,aAAAjR,EAAA4oF,OAAA,EAAiC,MACjC,iBAAA5oF,EAAA4oF,OAAA,EAAqC,MACrC,QAAA5oF,EAAA4oF,OAAA,SAEA5oF,EAAAiR,MACAjR,EAAAsQ,KAAAmY,GAAAqB,GAAA9pB,EAAAsQ,cACAtQ,EAAA,GAAgB4jC,EAAAlR,OAAAhjB,KAAA1P,GAAmB,MACnC,qBAGA,8CAEA,2BAGA,iFAEA,yBAGA,4BACA,yCAAA2pD,GAAA,EAA0D,MAC1D,sBAAAA,GAAA,EAAsC,MAEtC,oBACA0/B,MACA94C,KAAAzmB,GAAA9pB,EAAAsQ,MACAtQ,EAAAs8D,UAAA+sB,EAAAC,QAAAtpF,EAAAs8D,SACAt8D,EAAAmqF,eAAAd,EAAA3sC,OAAA18C,EAAAmqF,cACA5gE,GAAAvpB,EAAAu9C,QAAA,OAAA8rC,EAAAT,QAAA,GACAsB,EAAAvmF,EAAApO,EAAAZ,OACI,MACJ,qBACA00F,EAAA1sC,IAAAl0B,GAAAqB,GAAAt1B,EAAAa,MAAA60F,EAAAvmF,KACAigC,EAAAyY,MAAA3sC,KAAA25E,GACI,MACJ,2BAGA,cACA,uBAAArpF,EAAA,GAAiC4jC,EAAAokD,OAAAhoF,EAAe,MAChD,gBAGA,qBAGA,0FAEA,4DAGA,4DAEA,wBAGA,4CAGA,kEAEA,0BAGA,kDAGA,oDAGA,8EAEA,8BAGA,mEAEA,WAAA2pD,GAAA,EAA0B,MAC1B,aAAAA,GAAA,EAA6B,MAG7B,oBACA,wBACA,yBAAAA,GAAA,EAAwC,MACxC,0BAAAA,GAAA,EAA0C,MAG1C,yBAEA,YAAAA,GAAApqD,EAAAorB,IAAA,UAAAxyB,MAAA,gBAAA6H,EAAA,mBAEA,OAAAzK,KAEA,IAAA62B,GAAAh4B,QAAAwvC,EAAAxD,OAAA,UAAAjoC,MAAA,sBAAAyrC,EAAAxD,OAIA,OAFA2nD,GAAAnkD,GAEAA,EAgcAwmD,CAAA,EAAA7qF,GAGA,SAAA8qF,GAAA71F,EAAA8b,EAAA3M,EAAApE,EAAAmjC,EAAAkB,EAAAqwB,EAAAj0B,GACA,eAAA1vB,EAAAjb,OAAA,GAp6CA,SAAAb,EAAA+e,EAAA5P,EAAA++B,EAAAkB,EAAAqwB,EAAAj0B,GACA,IAAAxrC,EAAA,OAAAA,EACA,IAAA+K,EAAAgU,MACAmvB,OAAmBC,WACnB,MAAA/sC,GAAA,MAAA2J,EAAAszB,QAAAtzB,EAAAszB,MAAAj9B,GACA,IAEAy7C,EAFAjhD,KAA4BmP,EAAAszB,QAAAziC,EAAA,aAG5B,IAIAid,EAAA9B,EAAA+iC,EAAAv9B,EAAA5F,EAAA+E,EAAAuwE,EAAAz7E,EAAAmrB,EAJAwxB,GAAiBvxD,GAAIqU,EAAA,IAAA9T,EAAA,KAAqBf,GAAM6U,EAAA,EAAA9T,EAAA,IAEhDsgB,KACA04C,GAAA,EAAAvsC,GAAA,EAEAyhE,KACAt/E,EAAA+wB,KAAA,GACA/wB,EAAA,UAEA,IAAA+qF,EAAA,EAAAC,GAAA,EAEA1mB,KACAH,KACApB,EAAA/iE,EAAA+iE,UAAA1+B,EAAA0+B,eAIA,GAHAA,EAAAoB,UACApB,EAAAuB,SACAvB,EAAA7vC,WAAAmR,EAAAnR,YAAAmR,EAAAlR,OAAA96B,IAAA,SAAArC,GAAmE,OAAAA,EAAA+a,QACnE/Q,EAAA+iE,WACA/iE,EAAA+iE,WACA1+B,EAAAyY,OAAA,QAAAnsD,EAAA,EAA6BA,EAAA0zC,EAAAyY,MAAA1nD,SAAqBzE,EAAAoyE,EAAA,GAAApyE,EAAA,GAAA0zC,EAAAyY,MAAAnsD,GAGlD,IAKAqqE,EAAAiwB,EALAxuC,KAAAD,KACAsiC,GAAA,EAyPA,GAvPA7uD,GAAA,KAA2B5lB,EAAA,eAAAnD,EAAA+9E,IAI3Br1D,GAAA36B,EAAA,SAAA6N,EAAAooF,EAAAl7D,GACA,IAAAnS,EACA,OAAAmS,GACA,SACA8hB,EAAAhvC,EAAc,MACd,OACAgL,EAAAhL,EACA9C,EAAA+1C,WAAA/1C,EAAA+1C,WAAAjoC,EAAA5I,IAAA2Y,GAAA,GACApY,EAAA8rB,GAAA/f,EAAA1D,EAAA5I,GACAlF,EAAA,QAAA8N,EAAA5I,GACApC,EAAAk7C,QAAAl7C,EAAAm7C,KAAA,MAAAn7C,EAAAkwC,SACAlwC,EAAAm7C,MAAAn7C,EAAAo7C,IAAAC,GAAAr7C,EAAAm7C,MACAzB,EAAA15C,EAAAoC,GAAApC,GAEA,MAEA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QAEA,OADAkJ,GAAUtS,EAAAoJ,EAAA,IACVA,EAAA,IACA,QAAAkJ,EAAAvS,EAAAqJ,EAAA,GAA4B,MAC5B,QAAAo+E,EAAA/gD,GAAAr9B,EAAA,IAAmCkJ,EAAAvS,EAAAynF,EAAAxnF,EAAcsS,EAAA9G,EAAAg8E,EAAAh8E,EAAc,MAC/D,QAAA8G,EAAAvS,IAAAqJ,EAAA,GAA2C,MAC3C,QAAAkJ,EAAAvS,EAAAqJ,EAAA,IAA4B,IAAA9C,EAAA49C,WAAA5xC,EAAA9J,EAAA4wB,GAAA9mB,EAAAvS,IAA6C,MACzE,UAAAuS,EAAAtS,EAAA,IAA2BsS,EAAAvS,EAAAqJ,EAAA,GAAc,MACzC,SAAAkJ,EAAAtS,EAAA,IAA0BsS,EAAAvS,EAAAqJ,EAAA,GAAApJ,EAM1B,IAJAq1C,EAAAtO,EAAA61B,OAAAxzD,EAAA,GAAAuyB,aAAAynD,GAAA9wE,EAAA+iC,EAAAnc,SAAA,KAAA5yB,EAAA00D,EAAAj0B,GACA70B,GAAA,GAAA9I,EAAA,GAAA1R,EAAAwa,EAAA,EAAA9I,EAAA,GAAA1R,EACA4O,EAAAszB,OAAoBziC,EAAA,SAAA2gB,KAAA3gB,EAAA,SAAA2gB,OAAuC3gB,EAAA,SAAA2gB,GAAA5F,GAAAI,GAC3Dnb,EAAA2gC,GAAA5lB,GAAAnG,GAAAuG,EACAhM,EAAAkiF,YAAA,CAEA,IADA8I,GAAA,EACAD,EAAA,EAAgBA,EAAAzmB,EAAAlvE,SAAoB21F,EAAA,CACpC,IAAAI,EAAA7mB,EAAAymB,GACAj9E,EAAA5I,GAAAimF,EAAA,GAAAt6F,EAAAqU,GAAA4I,EAAA5I,GAAAimF,EAAA,GAAA96F,EAAA6U,GACA0G,GAAAu/E,EAAA,GAAAt6F,EAAAO,GAAAwa,GAAAu/E,EAAA,GAAA96F,EAAAe,IACA4a,EAAAsmC,EAAApgB,GAAAi5D,EAAA,IAAmCH,GAAA,IAGnCA,GAAAloF,EAAA1N,OAAA,IAAA4W,EAAA9E,EAAApE,EAAA,IAOA,GAJAs/C,EAAAvxD,EAAAqU,EAAA4I,EAAA5I,IAAAk9C,EAAAvxD,EAAAqU,EAAA4I,EAAA5I,GACAk9C,EAAAvxD,EAAAO,EAAAwa,IAAAw2C,EAAAvxD,EAAAO,EAAAwa,GACAw2C,EAAA/xD,EAAA6U,EAAA4I,EAAA5I,IAAAk9C,EAAA/xD,EAAA6U,EAAA4I,EAAA5I,GACAk9C,EAAA/xD,EAAAe,EAAAwa,IAAAw2C,EAAA/xD,EAAAe,EAAAwa,GACA5L,EAAAk0B,WAAA6a,GAAA,KAAA/iC,EAAAtS,GAAAkN,GAAAtM,EAAAy0C,EAAAnc,WAAA,CACA,IAAAw4D,EAAArrF,EAAAiM,EAAAvS,GAAuC2xF,IAASp/E,EAAAtS,EAAA,IAAWsS,EAAAvS,EAAA,IAAAqH,KAAAsqF,EAAA3qF,EAAA2qF,EAAA96F,EAAA,EAAA86F,EAAAx6F,EAAAw6F,EAAA1qF,EAAA0qF,EAAAzqF,EAAAyqF,EAAAxqF,EAAAwqF,EAAA5qF,IAE3Dw6D,IACA,UAAAA,EAAAp4D,OAAAoJ,EAAA7M,GAAA,GACA67D,OAAA,GAEAiwB,WAAA,GACA,MAEA,OACA,QACA,IAAAjrF,EAAAi0B,YAAAm2B,EAAA,MACAp+C,GAAUtS,EAAA,IAAAD,OAAA,GACVmS,GAAA,GAAA9I,EAAA,GAAA1R,EAAAwa,EAAA,EAAA9I,EAAA,GAAA1R,EACA4O,EAAAszB,OAAoBziC,EAAA,SAAA2gB,KAAA3gB,EAAA,SAAA2gB,OAAuC3gB,EAAA,SAAA2gB,GAAA5F,GAAAI,GAC3Dnb,EAAA2gC,GAAA5lB,GAAAnG,GAAAuG,EACAo2C,EAAAvxD,EAAAqU,EAAA4I,EAAA5I,IAAAk9C,EAAAvxD,EAAAqU,EAAA4I,EAAA5I,GACAk9C,EAAAvxD,EAAAO,EAAAwa,IAAAw2C,EAAAvxD,EAAAO,EAAAwa,GACAw2C,EAAA/xD,EAAA6U,EAAA4I,EAAA5I,IAAAk9C,EAAA/xD,EAAA6U,EAAA4I,EAAA5I,GACAk9C,EAAA/xD,EAAAe,EAAAwa,IAAAw2C,EAAA/xD,EAAAe,EAAAwa,GACAovD,IACA,UAAAA,EAAAp4D,OAAAoJ,EAAA7M,GAAA,GACA67D,OAAA,GAEAiwB,WAAA,GACA,MAEA,SACA3L,EAAAnvE,KAAArN,GAAqB,MAErB,QACAk4D,IAAAh7D,EAAAqiF,YAA0BC,UAAAx/E,EAAA,GACtB,MAEJ,SACA,IAAAugC,EAAAF,EAAA,OAAArgC,EAAAuoF,OAQA,IAPAhoD,GACAvgC,EAAAygC,OAAAF,EAAAE,OACAzgC,EAAA8rB,MAAA9rB,EAAAygC,QAAA,IAAAzgC,EAAA8rB,KACA9rB,EAAA48E,IAAAr8C,GACK,IAAAvgC,EAAAuoF,QACLvoF,EAAAygC,OAAA,IAAAzgC,EAAA8rB,KAEApd,EAAA1O,EAAAwoF,IAAAz6F,EAAAqU,EAAsBsM,GAAA1O,EAAAwoF,IAAAj7F,EAAA6U,IAAesM,EAAA,IAAA5F,EAAA9I,EAAAwoF,IAAAz6F,EAAAO,EAAuBwa,GAAA9I,EAAAwoF,IAAAj7F,EAAAe,IAAewa,EAC3E5L,EAAAszB,OACAziC,EAAA,SAAA2gB,KAAA3gB,EAAA,SAAA2gB,OACA3gB,EAAA,SAAA2gB,GAAA5F,KAAA/a,EAAA,SAAA2gB,GAAA5F,IAAgDlS,EAAA,IAAAD,OAAAmP,IAChD/X,EAAA,SAAA2gB,GAAA5F,GAAAvE,EAAAvE,IAEA6N,EAAA6gB,GAAA5lB,GAAA2lB,GAAA/f,GACA3gB,EAAA8f,KAAA9f,EAAA8f,IAA8BjX,EAAA,IAAAD,OAAAmP,IAC9B/X,EAAA8f,GAAAtJ,EAAAvE,GAGA,MAEA,SACA,IAAA9C,EAAAkiF,YAAA,MACA5d,EAAAn0D,KAAArN,IACA8tB,EAAA5wB,EAAAszB,MAAAziC,EAAA,SAAA2gB,GAAA5F,GAAA/a,EAAA2gC,GAAA5lB,GAAAnG,IACAyB,EAAAk8D,GAAAtgE,EAAA,GAAAs/C,GAAkDl9C,EAAA4I,EAAA5I,EAAA9T,EAAAwa,GAAam3D,EAAA/iE,GAC/D4wB,EAAA0hB,EAAApgB,GAAApvB,EAAA,IACA,MACA,SACA,IAAA9C,EAAAkiF,YAAA,MACA/d,EAAAhzC,GAAAruB,EAAA,GAAAjS,IAAAiS,EAAA,IACA8tB,EAAA5wB,EAAAszB,MAAAziC,EAAA,SAAA2gB,GAAA5F,GAAA/a,EAAA2gC,GAAA5lB,GAAAnG,IACAyB,EAAAk8D,GAAAtgE,EAAA,GAAAs/C,GAAkDl9C,EAAA4I,EAAA5I,EAAA9T,EAAAwa,GAAam3D,EAAA/iE,GAC/D,MAGA,QACA,IAAAA,EAAA4yC,WAAA,MACA,KAAA9vC,EAAAzS,GAAAyS,EAAAjS,GACA4rD,EAAA35C,EAAAzS,MAAyBs8C,MAAA7pC,EAAAZ,EAAA,IAAA87C,UAAA,EAAAl7C,EAAA8J,OAAAomC,MAAAlwC,EAAAkwC,OACzB8rC,IAAmBA,GAAA,EAAgBlsB,GAAA9vD,EAAAZ,EAAA,MACnCk8C,GAAA3B,EAAA35C,EAAAzS,EAAA,IAEA,MAEA,SACAQ,EAAA,gBAAwBihD,IAAA5f,GAAApvB,IACxB,MAEA,SACAjS,EAAA,YAAAiS,EACA,MAEA,SACAuhC,EAAAlR,OAAA/uB,KAAAigC,EAAAlR,OAAA/uB,OACAtB,EAAAiO,OAAAszB,EAAAlR,OAAA/uB,GAAA87E,SAAAp9E,EAAAiO,OACAjO,EAAAogF,OAAApgF,EAAAu5E,QAAAxrF,EAAA,aAA+CqyF,MAAApgF,EAAAogF,MAAA7G,KAAAv5E,EAAAu5E,OAC/C,MAEA,SACAh4C,EAAAi6C,QAAAj6C,EAAAi6C,YACAj6C,EAAAi6C,MAAA,KAAAj6C,EAAAi6C,MAAA,OACAx7E,EAAA67E,MAAAt6C,EAAAi6C,MAAA,GAAAK,KAAA,GACA,MAEA,SACA,MAEA,QACA,UAGA,SACA,MACA,SACA,SACA,SACA,SACA,SACA,SACA,UACA,UACA,SACA,UACA,SACA,UACA,SACA,SACA,SACA,UACA,SACA,SACA,UACA,SACA,SACA,SACA,SACA,SACA,UACA,SACA,UACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,UACA,SACA,UACA,UACA,SACA,SACA,SACA,SACA,UACA,SACA,SACA,UACA,QACA,UACA,UACA,MAEA,QACAv0B,GAAA,EAAgB,MAChB,QACAA,GAAA,EAAiB,MACjB,QACA14C,EAAAvB,KAAA6f,GAAmBo6B,GAAA,EAAa,MAChC,QACA14C,EAAA4B,MAAgB82C,GAAA,EAAc,MAE9B,QACA,GAAA8gC,EAAA3qF,QACA,IAAA6pD,GAAApqD,EAAAorB,IAAA,UAAAxyB,MAAA,uBAAAo3B,EAAAp4B,SAAA,OAEEoI,UAEFA,EAAA+iE,gBACA/iE,EAAA,SAEAnP,EAAA,UAAAuxD,EAAAvxD,EAAAqU,EAAA,KAAA4sC,MAAAzhD,EAAA6U,EAAA,GAAA4sC,EAAAzhD,EAAAe,EAAA,GAAA0gD,EAAAjhD,EAAAqU,EAAA,GAAA4sC,EAAAjhD,EAAAO,EAAA,MAAAP,EAAA,QAAAqhC,GAAA4f,GAAAsQ,IACApiD,EAAA+1C,WAAAllD,EAAA,SACA,IAAAmvF,EAAAvtD,GAAA5hC,EAAA,SACAmP,EAAA+1C,YAAAiqC,EAAA3vF,EAAA6U,IACA86E,EAAA3vF,EAAA6U,EAAAlF,EAAA+1C,UAAA,EACAiqC,EAAA3vF,EAAA6U,EAAAk9C,EAAA/xD,EAAA6U,IAAA86E,EAAA3vF,EAAA6U,EAAAk9C,EAAA/xD,EAAA6U,GACA86E,EAAA3vF,EAAA6U,EAAA86E,EAAAnvF,EAAAqU,IAAA86E,EAAAnvF,EAAAqU,EAAA86E,EAAA3vF,EAAA6U,GACA86E,EAAA3vF,EAAAe,EAAAgxD,EAAA/xD,EAAAe,IAAA4uF,EAAA3vF,EAAAe,EAAAgxD,EAAA/xD,EAAAe,GACA4uF,EAAA3vF,EAAAe,EAAA4uF,EAAAnvF,EAAAO,IAAA4uF,EAAAnvF,EAAAO,EAAA4uF,EAAA3vF,EAAAe,GACAP,EAAA,YAAAA,EAAA,QACAA,EAAA,QAAAqhC,GAAA8tD,IAMA,OAHAV,EAAAlqF,OAAA,IAAAvE,EAAA,WAAAyuF,GACA7iC,EAAArnD,OAAA,IAAAvE,EAAA,SAAA4rD,GACAD,EAAApnD,OAAA,IAAAvE,EAAA,SAAA2rD,GACA3rD,EA6nCA06F,CAAA,EAAAvrF,EAAAoE,EAAA++B,EAAAkB,EAAAqwB,EAAAj0B,GACAm9C,GAAA,EAAA59E,EAAAoE,EAAA++B,EAAAkB,EAAAqwB,EAAAj0B,GAGA,SAAA+qD,GAAAv2F,EAAA8b,EAAA3M,EAAApE,EAAAmjC,EAAAkB,EAAAqwB,EAAAj0B,GACA,eAAA1vB,EAAAjb,OAAA,GAr0BA,SAAAb,EAAA+K,EAAAoE,EAAA++B,EAAAkB,GACA,IAAApvC,EAAA,OAAAA,EACAkuC,OAAmBC,WACnB,IAAAvyC,GAAU+2F,QAAA,QAAA6D,UAAA,KAAAC,OAAA,IACVh6E,KACA04C,GAAA,EAuCA,OAtCAx6B,GAAA36B,EAAA,SAAA6N,EAAA0O,EAAAwe,GACA,OAAAA,GAEA,SACAn/B,EAAA,QAAAiS,EAAoB,MAEpB,SACAuhC,EAAAlR,OAAA/uB,KAAAigC,EAAAlR,OAAA/uB,OACAtB,EAAAiO,OAAAszB,EAAAlR,OAAA/uB,GAAA87E,SAAAp9E,EAAAiO,MACA,MAEA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,UACA,MAEA,QACAq5C,GAAA,EAAgB,MAChB,QACAA,GAAA,EAAiB,MACjB,QACA14C,EAAAvB,KAAA6f,GAAmB,MACnB,QACAte,EAAA4B,MAAgB,MAEhB,QACA,GAAA9B,EAAAjR,EAAA,EAAAmR,EAAAvB,KAAA6f,QACA,GAAAxe,EAAAjR,EAAA,EAAAmR,EAAA4B,WACA,IAAA82C,GAAApqD,EAAAorB,IAAA,UAAAxyB,MAAA,uBAAAo3B,EAAAp4B,SAAA,OAEEoI,GAEFmjC,EAAA,OAAAtyC,EAAA,WAAAA,EAAA,WAAAsyC,EAAA,OAAAtyC,EAAA,UACAA,EAyxBA86F,CAAA,EAAA3rF,EAAAoE,EAAA++B,EAAAkB,GAz2BA,SAAApvC,EAAA+K,EAAAoE,EAAA++B,EAAAkB,GACA,IAAApvC,EAAA,OAAAA,EAEAkuC,OAAmBC,WACnB,IACA9yC,EADAO,GAAW+2F,QAAA,QAAA6D,UAAA,KAAAC,OAAA,IAIX1N,EAAA/oF,EAAAiP,MAAAu5E,IAOA,OANAO,GAAAC,GAAAD,EAAA,GAAAntF,EAAAwzC,EAAAjgC,IAGA9T,EAAA2E,EAAAiP,MAAA,2BAAArT,EAAA,QAAAP,EAAA,IAEA6yC,EAAA,OAAAtyC,EAAA,WAAAA,EAAA,WAAAsyC,EAAA,OAAAtyC,EAAA,UACAA,EA21BA+6F,CAAA,EAAA5rF,EAAAoE,EAAA++B,EAAAkB,GAaA,SAAAwnD,GAAA52F,EAAA8b,EAAA2jD,EAAA10D,GACA,eAAA+Q,EAAAjb,OAAA,GA9/MA,SAAAb,EAAAy/D,EAAA10D,GACA,IAAAygC,GACAk0B,cACA,QAAAl0D,KAAAnG,EAAAmmC,EAAAk0B,UAAAl0D,GAAAnG,EAAAmG,GAEAggC,EAAA61B,UACA71B,EAAAq0B,SACA,IAAApjD,KACA04C,GAAA,EAmDA,OAlDAx6B,GAAA36B,EAAA,SAAA6N,EAAA0O,EAAAwe,GACA,OAAAA,GACA,QACAyQ,EAAAk0B,UAAA7xD,EAAA,IAAAA,EAAA,GAAsCmH,GAAAnH,EAAA,GAAAA,EAAA,IACtC,MACA,QACA29B,EAAAq0B,MAAA3kD,KAAArN,GACA,MAAAA,EAAAyO,MAAAulB,OAAA49B,KAAAc,eAAAd,EAAAc,cAAAC,YACA3yD,EAAAyO,MAAA0lB,IAAAu6B,GAAAkD,EAAAc,cAAAC,UAAA3yD,EAAAyO,MAAAulB,OAAAG,IAAAn0B,EAAAyO,MAAAylB,MAAA,IAEA,MACA,UACA,QAEA,QACA,MACA,QACA,KAAAtlB,IAAAtc,OAAA,IACAqrC,EAAA61B,OAAAnmD,KAAArN,GAEA,MACA,QACA,SACA,SACA,SACA,MAEA,UACA,UACA,UACA,SACA,UACA,UACA,MAEA,QACAsnD,GAAA,EAAgB,MAChB,QACAA,GAAA,EAAiB,MACjB,QACA14C,EAAAvB,KAAA6f,GAAmBo6B,GAAA,EAAa,MAChC,QACA14C,EAAA4B,MAAgB82C,GAAA,EAAc,MAE9B,QACA,GAAA54C,EAAAjR,EAAA,EAAAmR,EAAAvB,KAAA6f,QACA,GAAAxe,EAAAjR,EAAA,EAAAmR,EAAA4B,WACA,IAAA82C,GAAApqD,EAAAorB,KAAA,IAAA1Z,IAAAtc,OAAA,aAAAwD,MAAA,uBAAAo3B,EAAAp4B,SAAA,QAGA6oC,EAm8MAqrD,CAAA,EAAAp3B,EAAA10D,GACAo0D,GAAA,EAAAM,EAAA10D,GAGA,SAAA+rF,GAAA92F,EAAA8b,EAAA/Q,GACA,eAAA+Q,EAAAjb,OAAA,GAjsPA,SAAAb,EAAA+K,GACA,IAAAnP,KACAu5D,GAAA,EAoBA,OAnBAx6B,GAAA36B,EAAA,SAAA6N,EAAA0O,EAAAwe,GACA,OAAAA,GACA,SACAn/B,EAAAu7D,MAAAtpD,EAAA,GAAqBjS,EAAAw7D,OAAAvpD,EAAA,GAAmB,MACxC,QACAjS,EAAAsf,KAAArN,GAAgB,MAChB,SACA,SAEA,QACAsnD,GAAA,EAAgB,MAChB,QACAA,GAAA,EAAiB,MAEjB,QAEA,GADA54C,EAAAjR,GACA6pD,GAAApqD,EAAAorB,IAAA,UAAAxyB,MAAA,uBAAAo3B,EAAAp4B,SAAA,QAGA/G,EA2qPAm7F,CAAA,EAAAhsF,GAjvPA,SAAA/K,EAAA+K,GACA,IAAAnP,KAAAmS,EAAA,GACA,IAAA/N,EAAA,OAAApE,EAEA,IAAAs7D,EAAAl3D,EAAAiP,MAAA2nD,IACA,GAAAM,EAAA,CACAnpD,EAAAmpD,EAAA,GAAAl1D,QAAA60D,GAAA,IAAA1zD,MAAA2zD,IACA,QAAAp7D,EAAA,EAAgBA,GAAAqS,EAAA5N,SAAgBzE,EAAA,CAChC,IAAAuE,EAAAy2D,GAAA3oD,EAAArS,GAAAutB,OAAAle,GACA,MAAA9K,IAAArE,IAAAuE,QAAAF,GAEAi3D,EAAAhkC,GAAAgkC,EAAA,IAA4Bt7D,EAAAu7D,MAAAD,EAAA6K,MAAqBnmE,EAAAw7D,OAAAF,EAAA8/B,YAEjD,OAAAp7F,EAquPAq7F,CAAA,EAAAlsF,GAGA,SAAAmsF,GAAAl3F,EAAA8b,EAAA/Q,GACA,eAAA+Q,EAAAjb,OAAA,GA12KA,SAAAb,EAAA+K,GACA,IAAAM,KACA8rF,KACAh7F,KACAg5D,GAAA,EAgCA,OA/BAx6B,GAAA36B,EAAA,SAAA6N,EAAA0O,EAAAwe,GACA,OAAAA,GACA,SACAo8D,EAAAj8E,KAAArN,GAAsB,MACtB,SACA1R,EAAA0R,EAAY,MACZ,SACA1R,EAAAsI,EAAAoJ,EAAApJ,EAAgBtI,EAAAsmB,EAAA5U,EAAA4U,EAAatmB,EAAA8T,EAAApC,EAAAoC,EAAa,MAC1C,SAGA,GAFA9T,EAAA4rE,OAAAovB,EAAAh7F,EAAA8rE,gBACA,EAAAA,QACAl9D,EAAA+1C,WAAA3kD,EAAAk6F,KAAAtrF,EAAA+1C,WAAA3kD,EAAAk6F,IAAApmF,EAAA,MACA9T,EAAAsI,IAAAtI,EAAAsI,EAAA,WACAtI,EAAAk6F,IAAiBhrF,EAAA6P,KAAA/e,GAAa,MAE9B,UACA,MAEA,QACAg5D,GAAA,EAAgB,MAChB,QACAA,GAAA,EAAiB,MACjB,QACA,cAGA,QACA,GAAA54C,EAAAjR,QACA,IAAA6pD,GAAApqD,EAAAorB,IAAA,UAAAxyB,MAAA,uBAAAo3B,EAAAp4B,SAAA,QAGA0I,EAs0KA+rF,CAAA,EAAArsF,GA5jLA,SAAA/K,EAAA+K,GAEA,GAAA/K,EAAAiP,MAAA,oCACA,IAAAkoF,KACAE,KACAC,EAAAt3F,EAAAiP,MAAA,mDACAqoF,KAAA,IAAAA,EAAA,GAAAn0F,MAAA,mBAAAizB,QAAA,SAAAr1B,GACA,QAAAA,GAAA,KAAAA,EAAAkoB,OAAA,CACA,IAAA9F,EAAApiB,EAAAkO,MAAA,8BACAkU,GAAAg0E,EAAAj8E,KAAAiI,EAAA,OAEA,IAAAo0E,EAAAv3F,EAAAiP,MAAA,2DAiBA,OAhBAsoF,KAAA,IAAAA,EAAA,GAAAp0F,MAAA,oBAAAizB,QAAA,SAAAr1B,GACA,QAAAA,GAAA,KAAAA,EAAAkoB,OAAA,CACA,IAAA88C,EAAAhlE,EAAAkO,MAAA,2BACA,GAAA82D,EAAA,CACA,IAAAv6D,EAAA0nB,GAAA6yC,EAAA,IACA+B,GAAiCC,OAAAv8D,EAAAgsF,UAAAL,EAAA3rF,EAAAgsF,WAAA,eAAA36C,IAAArxC,EAAAqxC,IAAA46C,KAAAjsF,EAAAisF,MACjC97D,EAAAoB,GAAAvxB,EAAAqxC,KACA,KAAA9xC,EAAA+1C,WAAA/1C,EAAA+1C,WAAAnlB,EAAA1rB,GAAA,CACA,IAAAynF,EAAA32F,EAAAkO,MAAA,6CACA7S,IAAAs7F,OAAA,IAAAhhC,GAAAghC,EAAA,MAAuEznF,EAAA,GAAAxL,EAAA,GAAAge,EAAA,IACvEqlD,EAAA73D,EAAA7T,EAAA6T,EACA,WAAA7T,EAAA6T,IAAA7T,EAAAqI,EAAArI,EAAAqmB,EAAA,IACAqlD,EAAArjE,GAAArI,EAAAqI,GAAA,IAAAzC,QAAA,cAAAA,QAAA,YACA+I,EAAA4rD,WAAAmR,EAAArlD,EAAArmB,EAAAqmB,GACA40E,EAAAn8E,KAAA4sD,QAEAuvB,EAiiLAM,CAAA,EAAA5sF,GAGA,SAAA6sF,GAAA53F,EAAA8b,EAAA/Q,GACA,eAAA+Q,EAAAjb,OAAA,GAxvLA,SAAAb,EAAA8b,EAAA/Q,GACA,IAAAM,KAYA,OAVAsvB,GAAA36B,EAAA,SAAA6N,EAAA0O,EAAAwe,GACA,OAAAA,GACA,QACA1vB,EAAA6P,KAAArN,GAAkB,MAElB,QACA,IAAA0O,EAAAjR,EACA,UAAA3H,MAAA,uBAAAo3B,EAAAp4B,SAAA,QAGA0I,EA2uLAwsF,CAAA,GA1xLA,SAAA73F,GACA,IAAArE,KACA,IAAAqE,EAAA,OAAArE,EACA,IAAAD,EAAA,EAWA,OAVAsE,EAAAiP,MAAA8jB,SAAAqD,QAAA,SAAAr1B,GACA,IAAAyK,EAAA0nB,GAAAnyB,GACA,OAAAyK,EAAA,IACA,kBAEA,4DAEA,gBAAAA,EAAA,GAA0BA,EAAA9P,IAAA8P,EAAA9P,EAAiB8P,EAAA9P,IAAcC,EAAAuf,KAAA1P,MAGzD7P,EA6wLAm8F,CAAA,GAGA,SAAAC,GAAA/3F,EAAAouC,EAAAtyB,EAAA/Q,GACA,YAAA+Q,EAAAjb,OAAA,UAruLA,SAAAb,EAAAouC,EAAAtyB,EAAAiD,GACA,IAAA/e,EAAA,OAAAA,EACA,IAAA+K,EAAAgU,MAEAo2C,GAAA,EAEAx6B,GAAA36B,EAAA,SAAA6N,EAAA0O,EAAAwe,GAEA,OAAAA,GACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,MAEA,QACAo6B,GAAA,EAAgB,MAChB,QACAA,GAAA,EAAiB,MAEjB,QACA,GAAA54C,EAAAjR,QACA,IAAA6pD,GAAApqD,EAAAorB,IAAA,UAAAxyB,MAAA,uBAAAo3B,EAAAp4B,SAAA,OAEEoI,GA4rLFitF,CAAA,EAAA5pD,EAAAtyB,EAAA/Q,GAIA,SAAAktF,GAAAj4F,EAAA8b,EAAA/Q,GACA,eAAA+Q,EAAAjb,OAAA,GA37LA,SAAAb,EAAA8b,EAAAiD,GACA,IAAA1T,GAAa6sF,SAAA7K,QAAAlyB,UACbpwD,EAAAgU,MACAtC,KACA04C,GAAA,EACAgjC,EAAA,EAkCA,OAjCAx9D,GAAA36B,EAAA,SAAA6N,EAAA0O,EAAAwe,GACA,OAAAA,GACA,SACA1vB,EAAA6sF,MAAAh9E,MAAwBY,KAAAjO,EAAAiO,OACxB,MACA,QACAjO,EAAAuoB,QAAA,SAAAnmB,GACA,GAAAkoF,EACA9sF,EAAAgiF,KAAAnyE,MAA2BvN,KAAAtC,EAAA6sF,MAAAjoF,EAAA,MAAA6L,KAAA8lB,MAAA3xB,EAAA,KAC3B,GAAAkoF,GACA9sF,EAAA8vD,MAAAjgD,MAA4BvN,KAAAtC,EAAA6sF,MAAAjoF,EAAA,MAAA6L,KAAA8lB,MAAA3xB,EAAA,OAE5B,MACA,SACAkoF,EAAAtqF,EAAA,IACA,MACA,SACAsqF,EAAA,EACA,MACA,QACA17E,EAAAvB,KAAA6f,GACAo6B,GAAA,EACA,MACA,QACA14C,EAAA4B,MACA82C,GAAA,EACA,MACA,QACA,GAAA54C,EAAAjR,QACS,IAAA6pD,GAAApqD,EAAAorB,KAAA,IAAA1Z,IAAAtc,OAAA,GACT,UAAAwD,MAAA,uBAAAo3B,EAAAp4B,SAAA,QAGA0I,EAo5LA+sF,CAAA,EAAAt8E,EAAA/Q,GA13LA,SAAA/K,EAAA8b,EAAA/Q,GACA,IAAAM,GAAa6sF,SAAA7K,QAAAlyB,UACb,IAAAn7D,EACA,OAAAqL,EACA,IAEAgtF,EAFAljC,GAAA,EACAgjC,EAAA,EAyEA,OAvEAn4F,EAAAgC,QAAA+wB,GAAA,SAAAhyB,GACA,IAAAyK,EAAA0nB,GAAAnyB,GACA,OAAA0yB,GAAAjoB,EAAA,KACA,YACA,MACA,gBACA,kBACA,MACA,qBACA,uBACA,MACA,oBACAH,EAAA6sF,MAAAh9E,MAAwBY,KAAAtQ,EAAAsQ,OACxB,MACA,sBACA,MACA,sBACA,QAAA3N,EAAA,EAAuBA,EAAA9C,EAAA6sF,MAAA/3F,SAAsBgO,EAC7C9C,EAAA6sF,MAAA/pF,GAAA2N,MAAAtQ,EAAAsQ,OACAu8E,EAAAhtF,EAAA6sF,MAAA/pF,IACA,MACA,wBAEA,WAEA,YACA,MACA,UACA,GAAAgqF,EACA9sF,EAAAgiF,KAAAnyE,MAAyBvN,KAAAtC,EAAA6sF,MAAA1sF,EAAA/G,EAAA,GAAAqX,KAAA8lB,OAAAp2B,EAAAhH,IACzB,GAAA2zF,GACA9sF,EAAA8vD,MAAAjgD,MAA0BvN,KAAAtC,EAAA6sF,MAAA1sF,EAAA/G,EAAA,GAAAqX,KAAA8lB,OAAAp2B,EAAAhH,IAC1B,MACA,YACA,MACA,oBACA2zF,EAAA,EACA,MACA,sBACAA,EAAA,EACA,MACA,qBACAA,EAAA,EACA,MACA,uBACAA,EAAA,EACA,MACA,cACA,eACA,gBACA,gBACA,MACA,WACAhjC,GAAA,EACA,MACA,aACAA,GAAA,EACA,MACA,WACA,IAAAkjC,EACA,MACAA,EAAAC,UACAD,EAAAC,YACAD,EAAAC,QAAAp9E,MAAA1P,EAAA9P,GACA,MACA,QACA,IAAAy5D,IAAA,MAAApqD,OAAA,EAAAA,EAAAorB,KACA,UAAAxyB,MAAA,gBAAA6H,EAAA,mBAEA,OAAAzK,IAEAsK,EA6yLAktF,CAAA,EAAAz8E,EAAA/Q,GAEA,IAwCAytF,GAxCAC,GAAA,kDACAC,GAAA,qDACA,SAAAC,GAAAxlE,EAAAC,GACA,IAAAwlE,EAAAzlE,EAAAhwB,MAAA,OACAmwB,KACA,GAD8BF,IAAAE,EAAA,GAAAslE,EAAA,IAC9B,IAAAA,EAAAz4F,OAAA,OAAAmzB,EACA,IAAA9nB,EAAA2C,EAAAzS,EAAAL,EAAA83B,EAAAlkB,MAAAwpF,IACA,GAAAp9F,EAAA,IAAAK,EAAA,EAAiBA,GAAAL,EAAA8E,SAAezE,GAGhC,KAAAyS,GAFA3C,EAAAnQ,EAAAK,GAAAuT,MAAAypF,KAEA,GAAA94F,QAAA,MAAA0zB,EAAA9nB,EAAA,IAAAA,EAAA,GAAA3K,MAAA,EAAA2K,EAAA,GAAArL,OAAA,GAIAmzB,EAFA,WAAA9nB,EAAA,GAAA3K,MAAA,aAAA2K,EAAA,GAAA3K,MAAA,GACA2K,EAAA,GAAA3K,MAAAsN,EAAA,IACA3C,EAAA,GAAA3K,MAAA,EAAA2K,EAAA,GAAArL,OAAA,GAGA,OAAAmzB,EAEA,SAAAulE,GAAA1lE,GACA,IACAG,KACA,OAFAH,EAAAhwB,MAAA,OAEAhD,OAAA,OAAAmzB,EACA,IAAA9nB,EAAA2C,EAAAzS,EAAAL,EAAA83B,EAAAlkB,MAAAwpF,IACA,GAAAp9F,EAAA,IAAAK,EAAA,EAAiBA,GAAAL,EAAA8E,SAAezE,GAGhC,KAAAyS,GAFA3C,EAAAnQ,EAAAK,GAAAuT,MAAAypF,KAEA,GAAA94F,QAAA,MAAA0zB,EAAA9nB,EAAA,IAAAA,EAAA,GAAA3K,MAAA,EAAA2K,EAAA,GAAArL,OAAA,GAIAmzB,EAFA,WAAA9nB,EAAA,GAAA3K,MAAA,aAAA2K,EAAA,GAAA3K,MAAA,GACA2K,EAAA,GAAA3K,MAAAsN,EAAA,IACA3C,EAAA,GAAA3K,MAAA,EAAA2K,EAAA,GAAArL,OAAA,GAGA,OAAAmzB,EAcA,SAAAwlE,GAAAC,EAAA/rE,EAAArtB,EAAAkO,GACA,IAAAmrF,EAAAnrF,EACA,QAAAlO,EAAA,GAAAsP,MAAA,kCACA,cAAA+pF,EAAAjkE,GAAAlnB,GAA2C,MAC3C,mBAAAmrF,EAAAzoF,SAAA1C,EAAA,IAAkD,MAClD,qBAAAmrF,EAAAjnF,WAAAlE,GAAkD,MAClD,6BAAAmrF,EAAAhrE,GAAAngB,GAAyD,MACzD,oEACA,kBAAAlK,MAAA,gBAAAhE,EAAA,IAEAo5F,EAAA9kE,GAAAjH,IAAAgsE,EAGA,SAAAC,GAAAt9D,EAAAm3D,EAAA7yF,GACA,SAAA07B,EAAAl3B,EAAA,CACA,IAAAxE,IAAA,IAAAA,EAAA0oD,SAAA,IACA,MAAAhtB,EAAAl3B,EAAsBk3B,EAAA1uB,EAAA0uB,EAAA1uB,GAAA4wB,GAAAlC,EAAAn3B,GACtB,YAAAsuF,EACA,MAAAn3D,EAAAl3B,GACA,EAAAk3B,EAAAn3B,KAAAm3B,EAAAn3B,EAAAm3B,EAAA1uB,EAAA0uB,EAAAn3B,EAAA7B,SAAA,IACAg5B,EAAA1uB,EAAAL,GAAA+uB,EAAAn3B,GAEAm3B,EAAA1uB,EAAAO,GAAAmuB,EAAAn3B,GAEAm3B,EAAA1uB,EA9BA,SAAA+G,EAAA9X,GACA,IAAA0R,EAAA4qF,GAAAxkF,IAAAigB,GAAAjgB,GACA,kBAAApG,EAAAJ,GAAAtR,GACAuR,GAAAG,EAAA1R,GA2BAg9F,CAAApG,GAAA,UAAAn3D,EAAAn3B,GACE,MAAApJ,GAAW,GAAA6E,EAAAk2B,IAAA,MAAA/6B,EACb,IACA,IAAAk4B,EAAAklE,GAAA1F,OAAA,UAEA,GADA7yF,EAAAisD,SAAAvwB,EAAArI,KACArzB,EAAAg/B,WAAA,KAAAtD,EAAAl3B,GAAAkN,GAAA2hB,GAAA,CACA,IAAA6iE,EAAArrF,EAAA6wB,EAAAn3B,GAAwC2xF,IAASx6D,EAAAl3B,EAAA,IAAck3B,EAAAn3B,EAAA,IAAAqH,KAAAsqF,EAAA3qF,EAAA2qF,EAAA96F,EAAA,EAAA86F,EAAAx6F,EAAAw6F,EAAA1qF,EAAA0qF,EAAAzqF,EAAAyqF,EAAAxqF,EAAAwqF,EAAA5qF,KAE7D,MAAAnQ,GAAW,GAAA6E,EAAAk2B,IAAA,MAAA/6B,IAGb,SAAA+9F,GAAA3tD,EAAA4tD,EAAAruF,GACA,GAAAA,EAAA4yC,YACAy7C,EAAAC,SAAA,CACA,IAAAC,EAAAF,EAAAC,SACAC,EAAAC,UAAAD,EAAA34B,YAAA1C,GAAAq7B,EAAAC,UAAAD,EAAAC,SAGA/tD,EAAA4tD,EAAAlxB,IAAAkxB,EAIA,SAAAI,GAAAxxE,EAAAja,EAAA/N,EAAA27B,EAAAlrB,EAAA+6B,EAAAiuD,EAAA5gF,EAAAw2D,EAAApvE,GACA,IAAA6yF,EAAA,UAAA4G,EAAA/9D,EAAAg+D,QAAAhuF,KAAgD1L,QAChD,IAAA25F,KACAl+F,EAAA,EAGA,SAFAiY,IAAA+lF,GAAA7gF,IAAA6gF,EAAA7gF,EAAA8gF,cACAhmF,IAAA+lF,GAAAD,IAAAC,EAAAD,EAAAE,cACAhmF,IAAA63B,EAAAkuD,KACAluD,EAAAkuD,GAAA5G,OAAAtnD,EAAAkuD,GAAA5G,IACAtnD,EAAAkuD,GAAAL,UAAAO,EAAA1+E,KAAAswB,EAAAkuD,GAAAL,UACA7tD,EAAAkuD,GAAAG,SACAH,EAAAluD,EAAAkuD,GAAAG,OAEA,OAAA75F,EAAAquC,MACA,cACA1S,EAAAl3B,EAAA,IACAk3B,EAAAn3B,EAAAuwB,GAAA/M,GACA,MACA,aACA2T,EAAAl3B,EAAA,IAAgBk3B,EAAA1rB,EAAA2kB,GAAAX,GAAAjM,IAChB2T,EAAAn3B,EAAAwjB,EAAApoB,QAAA,QAAAq0B,GAAAlmB,GAAAia,GAAAhmB,QAAA,aAAA25B,EAAA1rB,EACA,MACA,eACA,KAAA+X,EAAAnnB,OAAA,KAAAmnB,GAAA,KACA2T,EAAAn3B,GAAAwpB,GAAAhG,GAAA,IAAAnc,UAAAiuF,IAAA,oBACAn+D,EAAAn3B,GAAAm3B,EAAAn3B,EAAAm3B,EAAAn3B,EAAAyvB,GAAAjM,GACA2T,EAAAn3B,EAAA,KAAAm3B,EAAAn3B,EAAAm3B,EAAAn3B,EAAA,GACAsuF,GAAA,WAAAA,MAAA,cAEA,kBACAn/E,IAAAgoB,EAAAn3B,IAAAm3B,EAAAn3B,GAAAwjB,GACA2T,EAAAl3B,IAAAk3B,EAAAl3B,EAAA,KACA,MACA,YAAAk3B,EAAAl3B,EAAA,IAA6Bk3B,EAAAn3B,EAAA+/B,GAAAvc,IAAqB,IAAA/nB,EAAA0oD,WAAAhtB,EAAA1uB,EAAA+a,GAAuC,MACzF,QACA,IAAAA,GAAA,IAAAja,EAA8B4tB,EAAAl3B,EAAA,KACrBk3B,EAAAl3B,EAAA,IAAck3B,EAAAn3B,EAAAowB,GAAA7mB,GAAAia,IAIvB,GADAixE,GAAAt9D,EAAAm3D,EAAA7yF,IACA,IAAAA,EAAAgtF,YACA,GAAAtxD,EAAAo+D,QAAA,CACA,IAAAzwB,EAAAr1C,GAAA0H,EAAAo+D,SAEA,IAAAzwB,EAAAlpE,WAAA,KAAAkpE,IAAAzoE,MAAA,IACA86B,EAAA1pB,EAAAm2C,GAAAkhB,EAAA74D,UACAkrB,EAAAo+D,QACA,MAAAp+D,EAAAq+D,WAAAr+D,EAAA0hB,EAAA+K,GAAA,QAAA33C,GACAkrB,EAAAq+D,aACAr+D,EAAA0hB,EAAA+K,GAAAzsB,EAAAq+D,WAAAvpF,GACA4+D,EAAAn0D,MAAAsiB,GAAA7B,EAAA0hB,GAAA1hB,EAAA0hB,UAGA,IAAA3hD,EAAA,EAAaA,EAAA2zE,EAAAlvE,SAAmBzE,EAChC+U,EAAAR,GAAAo/D,EAAA3zE,GAAA,GAAAE,EAAAqU,GAAAQ,EAAAR,GAAAo/D,EAAA3zE,GAAA,GAAAN,EAAA6U,GACAQ,EAAAtU,GAAAkzE,EAAA3zE,GAAA,GAAAE,EAAAO,GAAAsU,EAAAtU,GAAAkzE,EAAA3zE,GAAA,GAAAN,EAAAe,IACAw/B,EAAA0hB,EAAAgyB,EAAA3zE,GAAA,IAGAuE,EAAA09C,aACAi8C,EAAAxjE,QAAA,SAAAr1B,IACA4K,EAAAg1D,aAAA5/D,EAAA4/D,cAAAh1D,EAAAg1D,YAAA5/D,EAAA4/D,eAEAhlC,EAAA//B,EAAA+P,QAEAgI,IAAAgoB,EAAAg+D,UAAAh+D,EAAAod,KAAApd,EAAAg+D,SAGA,SAAAM,GAAApF,GACA,OAAA5vD,GAAArlC,QAAA,SAAAi1F,IAAA,WAAAA,IAGA,SAAAqF,GAAApyB,GACAA,EAAArjE,EAAAqjE,EAAAtjE,GAAA,GACAsjE,EAAArjE,EAAAqjE,EAAArjE,EAAAzC,QAAA,cAAAA,QAAA,YACA8lE,EAAAtjE,EAAAsjE,EAAA76D,EAAA66D,EAAA/uB,UAAAplC,EAIA,SAAAwmF,GAAAx+F,EAAAojB,GACA,IAAAhU,EAAAgU,MACAjL,KACA,IAAApF,EAAAhO,EAAAi2B,GAAAh7B,IACA,UAAAoP,EAAA4C,MAAA,SAAA5C,EAAA4C,MAAA,UAAA5C,EAAA4C,OACAe,OAAA,IAAA3Q,IAAAN,MAAAyD,OAAA,MAAAnB,EAAA2O,IACA4mB,GAAA5mB,IAEA,IA0BA0rF,EA1BAC,EAAA3rF,EAAA7N,MAAA,QAAAiS,cAAAwnF,GAAA,EAEA,UADAD,IAAAr4F,QAAA,cACApC,QAAA,MAAA7D,KAAAgV,IAAA,KAAAspF,EAAAz6F,QAAA,KAA+F,KAA/Fy6F,EAAAz6F,QAAA,MAA+F,CAAY,IAAA26F,EAAAtqE,GAAAllB,GAAwC,OAApBwvF,EAAA5sF,KAAA,SAAoBq9C,GAAA5J,YAAA1yC,EAAA6rF,GAEnJ,IADA,GAAAF,EAAAz6F,QAAA,gEAAAw2B,QAAA,SAAAjD,GAAuHknE,EAAAz6F,QAAA,IAAAuzB,IAAA,IAAAmnE,GAAA,KACvHA,EAAA,OA6iHA,SAAA5rF,EAAA3D,GACA,IAAA+9E,EAAAp6E,EAAAO,MAAA,sCACA,IAAA65E,GAAA,GAAAA,EAAA3oF,OAAA,UAAAwD,MAAA,wCACA,MAAAmlF,EAAA3oF,OAAA,CACA,IAAA8M,EAAA6wB,GAAA08D,GAAA1R,EAAA,GAAA/9E,MAEA,OADAkC,EAAAk/B,SAAA,OACAl/B,EAEA,IAAAmiC,GA88ISnR,cAAAC,WA38IT,OAFA4qD,EAAA1yD,QAAA,SAAAx6B,EAAAuT,GAAgCi+C,GAAAhe,EAAAorD,GAAA5+F,EAAAmP,GAAA,SAAAoE,EAAA,MAChCigC,EAAAjD,SAAA,OACAiD,EAxjHAqrD,CAAA/rF,EAAA3D,GAEAytF,IACAkC,iBAAA,UACAC,eAAAt1F,EAAA,IACAu1F,YAAA,sBACAC,cAAAx1F,EAAA,IACAy1F,aAAAz1F,EAAA,IACA01F,YAAA11F,EAAA,IACA21F,cAAA31F,EAAA,IACA41F,aAAA51F,EAAA,IACA61F,SAAA,uCACAC,MAAA91F,EAAA,GACA+1F,SAAA/1F,EAAA,GACAg2F,QAAAh2F,EAAA,IACAi2F,WAAAj2F,EAAA,IACAk2F,SAAA,qBACAC,aAAA,0BACAC,SAAA,sBAKA,IAAA5yE,EAAApM,KACA,MAAArb,GAAA,MAAA2J,EAAAszB,QAAAtzB,EAAAszB,MAAAj9B,GACA,IAAA48B,KAAgB09D,KAAAC,KAAiEC,EAAA,GAAkB7wF,EAAAszB,QAAAs9D,EAAA,aACnG,IASAlC,EATA99D,KAAe9iB,KACfgjF,EAAAlD,GAAA,2BAAAmD,EAAA,EACA3/F,EAAA,EAAA8T,EAAA,EACAk9C,GAA2BvxD,GAAIqU,EAAA,IAAA9T,EAAA,KAAqBf,GAAM6U,EAAA,EAAA9T,EAAA,IAC1DqvC,KAAgB4tD,KAChBrrF,EAAA,GAAAguF,EAAA,EACA1R,KACAv6C,KAAeipD,KAAgBiD,EAAA,EAAAr8F,KAC/BwrC,KAAA28B,KACAm0B,KAAApS,GAAA,EACAxa,KACA9nB,KAAAilC,KAAiD79E,EAAA,EAAA6B,EAAA,EACjDm3C,GAAgCzpB,UAAA0pB,SAAqBh8C,UAAA,IAAiBswF,KACtEtlE,GAAAulC,UAAA,EACAztD,IAAA1M,QAAA,0BAEA,IADA,IAAAm6F,EAAA,GACA/B,EAAAxjE,GAAAslC,KAAAxtD,IAAA,OAAA0rF,EAAA,IAAA+B,EAAA/B,EAAA,IAAAtnF,eACA,WACA,WAAAqpF,EAAA,CACA,SAAA/B,EAAA,IAAoB,IAAAvxE,EAAApM,EAAA4B,OAAA,KAAA+7E,EAAA,aAAAz2F,MAAA,cAAAklB,EAAAroB,KAAA,UACpB,MAAA45F,EAAA,GAAAt4F,OAAAs4F,EAAA,GAAAj6F,OAAA,IAAAsc,EAAAvB,MAAAk/E,EAAA,QACA,MAEA,GAAA39E,IAAAtc,OAAA,YACA,MAAAi6F,EAAA,GAAAZ,GAAA9qF,EAAA7N,MAAAi7F,EAAA1B,EAAAx4D,OAAA7zB,EAAA8tF,EAAA,WAAAp/E,IAAAtc,OAAA,MAAA2nE,EAAAnsC,GAAwIx/B,IAAA8T,KAAQu7B,EAAAywD,EAAA9/F,GAAA0c,EAAAw2D,EAAAtkE,IACvIgD,EAAA,GAAS8tF,EAAAlD,GAAAyB,EAAA,IAAgC0B,EAAA1B,EAAAx4D,MAAAw4D,EAAA,GAAAj6F,QAClD,MACA,WACA,SAAAi6F,EAAA,GAkBA,GAjBAjvD,EAAAhrC,OAAA,IAAAw7B,EAAAx/B,EAAAgvC,KACApgC,EAAA+1C,WAAA/1C,EAAA+1C,UAAA7wC,SAAA,IAAA0rB,EAAAn3B,IACAuG,EAAAszB,OACAs9D,EAAA,SAAA1rF,KAAA0rF,EAAA,SAAA1rF,OACA0rF,EAAA,SAAA1rF,GAAA9T,GAAAw/B,GACMggE,EAAAp/D,GAAApgC,GAAAmgC,GAAArsB,IAAA0rB,GAENA,EAAAygE,OACAzgE,EAAAvpB,GAAgBk8B,OAAAra,GAAA0H,EAAAygE,OAChBzgE,EAAA0gE,gBAAA1gE,EAAAvpB,EAAAqrC,QAAA9hB,EAAA0gE,sBACA1gE,EAAAygE,YAAsBzgE,EAAA0gE,gBAEtB1gE,EAAA2gE,aAAA3gE,EAAA4gE,aACA5tF,EAAAxS,GAAA,EAAAoU,SAAAorB,EAAA2gE,YAAA,KACA9rF,EAAAP,GAAA,EAAAM,SAAAorB,EAAA4gE,UAAA,MACA5tF,EAAAxS,GAAAqU,EAAAP,IAAAo6E,EAAAnvE,MAAuCtf,GAAGO,IAAA8T,KAAQ7U,GAAIe,EAAAwS,EAAAsB,EAAAO,MAEtDzF,EAAAi0B,WACA,GAAArD,EAAA2gE,aAAA3gE,EAAA4gE,UAAA,CAEA,QAAAC,EAAArgG,EAAqBqgG,GAAA7tF,IAAW6tF,EAChC,QAAAC,EAAAxsF,EAAsBwsF,GAAAjsF,IAAWisF,GACjCD,EAAArgG,GAAAsgG,EAAAxsF,KACAlF,EAAAszB,OACAs9D,EAAA,SAAAc,KAAAd,EAAA,SAAAc,OACAd,EAAA,SAAAc,GAAAD,IAAwC/3F,EAAA,MAC/Bk3F,EAAAp/D,GAAAigE,GAAAlgE,GAAAmgE,KAAqDh4F,EAAA,MAI9DtI,EAAAwS,EAAA,QAEAxS,OAf0Bw/B,EAAA2gE,YAAAngG,EAAAwS,EAAA,IAAiCxS,OAiB3Dw/B,EAAAk9D,GAAAuB,EAAA,KACAv/B,QAAA1+D,GAAAw/B,EAAAk/B,MAAA,GACA1+D,EAAAgxD,EAAAvxD,EAAAO,IAAAgxD,EAAAvxD,EAAAO,KACAA,EAAAgxD,EAAA/xD,EAAAe,IAAAgxD,EAAA/xD,EAAAe,KACA,OAAAi+F,EAAA,GAAAv5F,OAAA,MAAA1E,EACAgvC,KAEA,MACA,UACA,MAAAivD,EAAA,WAAAA,EAAA,GAAAv5F,OAAA,IACAoP,EAAAk9C,EAAAvxD,EAAAqU,IAAAk9C,EAAAvxD,EAAAqU,KACAA,EAAAk9C,EAAA/xD,EAAA6U,IAAAk9C,EAAA/xD,EAAA6U,KACA,OAAAmqF,EAAA,GAAAv5F,OAAA,KACAgY,EAAA8/E,GAAAyB,EAAA,KACAv/B,QAAA5qD,GAAA4I,EAAAgiD,MAAA,GAEA1+D,EAAA,IAAU8T,KAEV4I,EAAA8/E,GAAAyB,EAAA,KACAv/B,QAAA5qD,GAAA4I,EAAAgiD,MAAA,GACA2xB,MACA,KAAA3zE,EAAA6jF,eAAA7jF,EAAA8jF,UACAnQ,EAAAvjC,IAAA14C,SAAAsI,EAAA8jF,OAAA,IAA2CnQ,EAAAxjC,IAAAgB,GAAAwiC,EAAAvjC,KAC3C1B,EAAAt3C,GAAAu8E,GAEA,KAAA3zE,EAAAu7E,SAA2B5H,EAAAzjC,QAAA,EAAsBxB,EAAAt3C,GAAAu8E,IAEjD,MACA,gBACA,SAAA4N,EAAA,IACA,IAAAvxE,EAAApM,EAAA4B,OAAA,KAAA+7E,EAAA,aAAAz2F,MAAA,cAAAklB,EAAAroB,KAAA,MACAk7F,EAAAxgF,KAAA0gF,GACAzuC,EAAAvxD,EAAAqU,GAAAk9C,EAAA/xD,EAAA6U,GAAAk9C,EAAAvxD,EAAAO,GAAAgxD,EAAA/xD,EAAAe,IACAw/F,EAAA,QAAA1+D,GAAAkwB,GACApiD,EAAA+1C,WAAA/1C,EAAA+1C,WAAAqM,EAAA/xD,EAAA6U,IACA0rF,EAAA,YAAAA,EAAA,QACAxuC,EAAA/xD,EAAA6U,EAAAlF,EAAA+1C,UAAA,EACA66C,EAAA,QAAA1+D,GAAAkwB,KAGAk9B,EAAAlqF,SAAAw7F,EAAA,WAAAtR,GACA4R,EAAA97F,OAAA,IAAAw7F,EAAA,SAAAM,GACA10C,EAAApnD,OAAA,IAAAw7F,EAAA,SAAAp0C,GACAvpB,EAAA49D,GAAAD,OAEAxuC,GAAgBvxD,GAAIqU,EAAA,IAAA9T,EAAA,KAAqBf,GAAM6U,EAAA,EAAA9T,EAAA,IAC/C8T,EAAA9T,EAAA,EACAsgB,EAAAvB,MAAAk/E,EAAA,QACAvxE,EAAA8vE,GAAAyB,EAAA,IACAwB,EAAA3nE,GAAApL,EAAAkzB,MACA4/C,KAAoB5wF,EAAAszB,QAAAs9D,EAAA,aACpBtR,KACAhb,KACA9nB,KACA20C,GAAepgF,KAAA8/E,EAAAxH,OAAA,GACfzsC,EAAAzpB,OAAAhjB,KAAAghF,GAEA,MACA,YACA,SAAA9B,EAAA,IAAmB,IAAAvxE,EAAApM,EAAA4B,OAAA,KAAA+7E,EAAA,aAAAz2F,MAAA,cAAAklB,EAAAroB,KAAA,UACnB,UAAA45F,EAAA,GAAAv5F,OAAA,SAEA4b,EAAAvB,MAAAk/E,EAAA,QACA6B,KAAepS,GAAA,EAEf,MAEA,YACA,MAAAuQ,EAAA,GAAAjB,GAAA3tD,EAAA4tD,EAAAruF,GACAquF,EAAAT,GAAAyB,EAAA,IACA,MAEA,mBACAhB,EAAAtG,GAAA7+D,GAAA0kE,GAAAyB,EAAA,IAAAwC,QAAA,WACApE,GAAAY,EAAAtG,MAAAsG,EAAAtG,GAAA0F,GAAAY,EAAAtG,KACA,QAAA+J,EAAA,EAAsB,KAAAA,GAAiBx3F,EAAAw3F,IAAAzD,EAAAtG,KAAA+J,GACvC,QAAAA,EAAA,IAAAA,EAAA,GAAyC,KAAAA,IAAiBA,EAAA,SAAAx3F,EAAAw3F,GAAA,CAA0C7nF,GAAAokF,EAAAtG,GAAA+J,GAA4B,MAChI,MAEA,aACA,aAAApgF,IAAAtc,OAAA,YACA,SAAAi6F,EAAA,SAIA,IAHAX,EAAAd,GAAAyB,EAAA,KACAhG,SAAoBqF,EAAA1wC,QAAA,SAAoB0wC,EAAArF,QACxCqF,EAAAqD,QAAArD,EAAA9vC,IAAAp5C,SAAAkpF,EAAAqD,MAAA,MACAjT,GAAA4P,EAAA9vC,IAAA,IACAkgC,GAAA,EAAmBxsB,GAAAH,GACnB,QAAA6/B,EAAA,EAAqBA,EAAAd,EAAA97F,SAAqB48F,EAAAd,EAAAc,IAAA5zC,GAAA8yC,EAAAc,IAE1ClT,GAAA1gC,GAAAswC,GACAwC,EAAAxC,EAAA5+B,MAAA,GAAAohC,EAAA97F,QAAAs5F,EACA,QAAA/9F,EAAA,EAAiBA,GAAA+9F,EAAAuD,OAAgBthG,EAAAugG,IAAA97F,QAAA8vB,GAAAwpE,GACjC,MAEA,iBACA,SAAAW,EAAA,SACAzyC,EAAAE,QAAAF,EAAAE,UACA,IAAAo1C,EAAA/pE,GAAAknE,EAAA,IACA8C,IACAnhD,KAAAk+C,GAAAgD,EAAAlhD,MACAoM,IAAAC,GAAA60C,EAAAE,SAAAt8F,MAAA,IAAkDoP,EAAA,EAAA9T,EAAA,KAElDwrD,EAAAzpB,OAAA/9B,OAAA,IAAA+8F,GAAAh1C,MAAAP,EAAAzpB,OAAA/9B,OAAA,GACAwnD,EAAAE,MAAA3sC,KAAAgiF,IACA,MAEA,gBACA,QACA,QACA,QACA,QACA,SACA,SACA,SACA,UACA,UACA,WACA,gBAEA,cACA,mBACA,WACA,UAAA9C,EAAA,GAAAv5F,OAAA,SACA,MAAAu5F,EAAA,GAAArsF,GAAAW,EAAA7N,MAAAk7F,EAAA3B,EAAAx4D,OACAm6D,EAAA3B,EAAAx4D,MAAAw4D,EAAA,GAAAj6F,OACA,MACA,eACA,IAAA4K,EAAA4yC,WAAA,MACAy7C,EAAAC,SAAAV,GAAAyB,EAAA,IACA,MACA,uBAEA,aACA,YACA,kBACA,cACA,eACA,cACA,eACA,cACA,iBACA,gBACA,kBACA,cACA,eACA,gBACA,oBACA,cACA,oBACA,iBACA,eACA,cACA,UAAAA,EAAA,GAAAv5F,OAAA,SACA,MAAAu5F,EAAA,GAAA5nD,GAAA1C,EAAAqsD,EAAAztF,EAAA7N,MAAAm7F,EAAA5B,EAAAx4D,QACAo6D,EAAA5B,EAAAx4D,MAAAw4D,EAAA,GAAAj6F,OACA,MACA,uBAEA,aACA,eACA,SAAAi6F,EAAA,IAAmB,IAAAvxE,EAAApM,EAAA4B,OAAA,KAAA+7E,EAAA,aAAAz2F,MAAA,cAAAklB,EAAAroB,KAAA,WACnBic,EAAAvB,MAAAk/E,EAAA,QACA,MAEA,cACA,SAAAA,EAAA,IACA,IAAAvxE,EAAApM,EAAA4B,OAAA,KAAA+7E,EAAA,aAAAz2F,MAAA,cAAAklB,EAAAroB,KAAA,MACA05F,GAAApyB,GACA38B,EAAAjwB,KAAA4sD,QAEArrD,EAAAvB,MAAAk/E,EAAA,QAEAtyB,GAAgB3kD,GADhB0F,EAAA8vE,GAAAyB,EAAA,KACgBzoD,QAEhB,MAEA,iBACA,SAAAyoD,EAAA,IAAmB,IAAAvxE,EAAApM,EAAA4B,OAAA,KAAA+7E,EAAA,aAAAz2F,MAAA,cAAAklB,EAAAroB,KAAA,WACnB,SAAA45F,EAAA,GAAAt4F,OAAAs4F,EAAA,GAAAj6F,OAAA,IACA,IAAAi9F,GAAAzE,GAAAyB,EAAA,IACAuB,EAAA,gBAA+B9+C,IAAAuL,GAAAg1C,GAAAC,OAAAr7F,QAAA,WAC/Bya,EAAAvB,MAAAk/E,EAAA,QAEA,MAEA,iBAEA,qBACA,SAAAA,EAAA,IACA,IAAAvxE,EAAApM,EAAA4B,OAAA,KAAA+7E,EAAA,aAAAz2F,MAAA,cAAAklB,EAAAroB,KAAA,UAEA,MAAA45F,EAAA,GAAAt4F,OAAAs4F,EAAA,GAAAj6F,OAAA,IAAAsc,EAAAvB,MAAAk/E,EAAA,QAEA,MAEA,oBACA,MACA,uBACA,yBACA,+BACA,6BACA,iBACA,iBACA,YACA,cACA,iBACA,iBACA,cACA,aACA,4BACA,mBACA,gBACA,oBACA,sBACA,uBACA,SAAAA,EAAA,IAAmB,IAAAvxE,EAAApM,EAAA4B,OAAA,KAAA+7E,EAAA,aAAAz2F,MAAA,cAAAklB,EAAAroB,KAAA,UACnB,MAAA45F,EAAA,GAAAt4F,OAAAs4F,EAAA,GAAAj6F,OAAA,IAAAsc,EAAAvB,MAAAk/E,EAAA,QACA,MAEA,iBAEA,QAEA,MAAA39E,EAAAtc,QAAA,YAAAi6F,EAAA,UAAAkD,GAAA5uF,EAAA3D,GAEA,MAAA0R,EAAAtc,QAAA,OAAAi6F,EAAA,UAAAkD,GAAA5uF,EAAA3D,GAEA,IAAA0Q,IAAA,EACA,OAAAgB,IAAAtc,OAAA,OAEA,oCAAAi6F,EAAA,IACA,eACA,gCACA,yBACA,2BACA,aACA,YACA,YACA,UACA,uBACA,gCACA,QAAA3+E,IAAA,EACK,MAGL,8BAAA2+E,EAAA,IACA,cACA,qBACA,yBACA,YACA,cACA,gBACA,eACA,4BACA,QAAA3+E,IAAA,EACK,MAGL,2BAAA2+E,EAAA,IACA,eAEAzyC,EAAAC,QAAAh8C,UAAA,EACA,MACA,mBACA,kBACA,iBACA,iBACA,eACA,uBACA,oBACA,qBACA,kBACA,sBACA,wBACA,cACA,gBACA,iBACA,sBACA,qBACA,UACA,6BACA,0BACA,gBACA,oBACA,gBACA,WACA,UACA,YACA,qBACA,kBACA,eACA,oBACA,UACA,iBACA,cACA,eACA,cACA,iBACA,cACA,YACA,WACA,UACA,oBACA,qBACA,+BACA,aACA,kBACA,+BACA,QAAA6P,IAAA,EACK,MAGL,6BAAA2+E,EAAA,IACA,iBACA,aACA,kBACA,QAAA3+E,IAAA,EACK,MAGL,8BAAA2+E,EAAA,IACA,cACA,UAAAA,EAAA,GAAAv5F,OAAA,SACA,SAAAu5F,EAAA,UAAA1rF,EAAA7N,MAAAm7F,EAAA5B,EAAAx4D,QACA,kBAAAs6D,EAAA9H,OAAA,EAA8C,MAC9C,sBAAA8H,EAAA9H,OAAA,OAEA4H,EAAA5B,EAAAx4D,MAAAw4D,EAAA,GAAAj6F,OACA,MACA,aACAw7F,EAAA,aAAA3U,GAAA2U,EAAA,eAAuE,QACvEr/F,OAAA42B,GAAAknE,EAAA,IAAAmD,UAAA5B,EAAA,YAAAthF,QAAA6Y,GAAAknE,EAAA,IAAAmD,QACA,MACA,aACA5B,EAAA,aAAA3U,GAAA2U,EAAA,eAAuE,QACvEr/F,OAAA42B,GAAAknE,EAAA,IAAAmD,UAAA5B,EAAA,YAAAnU,QAAAt0D,GAAAknE,EAAA,IAAAmD,QACA,MACA,kBACA,IAAAC,GAAAtqE,GAAAknE,EAAA,IACAuB,EAAA,aAAA3U,GAAA2U,EAAA,eAAuE,QACvEr/F,OAAAkhG,GAAAC,OAAA9B,EAAA,YAAArU,KAAAkW,GAAAC,KACAnhG,OAAAkhG,GAAAE,QAAA/B,EAAA,YAAAvU,MAAAoW,GAAAE,MACAphG,OAAAkhG,GAAAG,SAAAhC,EAAA,YAAAtU,OAAAmW,GAAAG,OACArhG,OAAAkhG,GAAAI,UAAAjC,EAAA,YAAApU,QAAAiW,GAAAI,QACA,MACA,yBACAj2C,EAAA0hC,QAAA1hC,EAAA0hC,UACA1hC,EAAA0hC,MAAA,KAAA1hC,EAAA0hC,MAAA,OACA1hC,EAAA0hC,MAAA,GAAAK,KAAA,EACA,MAEA,kBACA,0BAEA,sBACA,oBAGA,4BAGA,gBACA,gBACA,uBACA,0BAEA,eACA,YACA,kBACA,YACA,YACA,WACA,aACA,aACA,gBACA,eACA,qBACA,sBACA,uBACA,uBACA,2BACA,yBACA,qBACA,iBACA,oBACA,wBACA,gBACA,qBACA,qBACA,qBACA,oBACA,eACA,eACA,gBACA,qBACA,WACA,kBACA,gBACA,gBACA,kBACA,sBACA,sBACA,sBACA,sBACA,4BACA,uBACA,oBACA,0BACA,+BACAiS,EAAA,cAAAA,EAAA,gBACAA,EAAA,YAAA1N,OAAA,EACA,MACA,oBACA,2BACA,+BACA,kCACA0N,EAAA,cAAAA,EAAA,gBACAA,EAAA,YAAAvU,MAAA,EACA,MACA,oBACA,wBACA,uBACA,qBACA,0BACA,oBACA,0BACA,iBACA,oBACA,gBACA,4BACA,QAAA3rE,IAAA,EACK,MAGL,yCAAA2+E,EAAA,IACA,2BACA,gCACA,uBACA,eACA,iBACA,kBACA,iBACA,6BACA,uBACA,eACA,gBACA,eACA,gBACA,iBACA,kBACA,kBACA,iBACA,uBACA,WACA,eACA,eACA,iBACA,6BACA,eACA,gBACA,oBACA,iBACA,0BACA,aACA,eACA,gBACA,oBACA,eACA,wBACA,qBACA,kBACA,qBACA,kBACA,kBACA,sBACA,yBACA,wBACA,2BACA,4BACA,wBACA,QAAA3+E,IAAA,EACK,MAGL,wBAAA2+E,EAAA,IACA,gBACA,eACA,gBACA,eACA,eACA,aACA,mBACA,QAAA3+E,IAAA,EACK,MAGL,wBAAA2+E,EAAA,IACA,uBACA,0BACA,oBACA,yBACA,QAAA3+E,IAAA,EACK,MAGL,wBAAA2+E,EAAA,IACA,SACA,qBACA,wBACA,kBACA,gBACA,yBACA,qBACA,gBACA,iBACA,iBACA,kBACA,kBACA,eACA,aACA,iBACA,qBACA,yBACA,yBACA,aACA,aACA,cACA,wBACA,2BACA,qBACA,gBACA,iBACA,UACA,YACA,qBACA,sBACA,+BACA,QAAA3+E,IAAA,EACK,MAEL,qBACA,OAAA2+E,EAAA,IACA,YAEA,WACA,UACA,UACA,WACA,iBACA,YACA,oBACA,YACA,iBACA,mBACA,iBACA,mBACA,iBACA,gBACA,gBACA,gBACA,gBACA,eACA,aACA,aACA,aAEA,0BACA,QAAA3+E,IAAA,EACK,MAEL,cACA,4BACA,OAAA2+E,EAAA,IACA,YACA,WACA,UACA,UACA,WACA,iBACA,YACA,oBACA,YACA,iBACA,mBACA,iBACA,oBACA,mBACA,iBACA,gBACA,gBACA,gBACA,gBACA,eACA,aACA,aAC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,YACA,mBACA,wBACA,iBAEA,yBACA,2BACA,0BAEA,gBAEA,QADA/jG,EAAAD,GAAAknE,EAAA,QACA,eACA,iBAAA9tD,EAAAsb,QAAAh8C,UAAA,EAEA,iBAAAirH,EAAA,EAEA,MAEA,yBACA,2BACA,wBACA,kBACA,mBACA,uBACA,WACA,cACA,kBAEA,UACA,iBACA,iBACA,kBACA,qBAAAj3H,QAAA6c,IAAAtc,OAAA,gBACA,SAAAi6F,EAAA,IAAA27B,KAAA,gBAGY7iG,GAAAknE,EAAA,OAAsC67B,EAAA77B,EAAAx4D,MAAAw4D,EAAA,GAAAj6F,WAHlD,CACA,IAAAg3H,EAAAjC,GAAAxmH,EAAA7N,MAAAo1H,EAAA77B,EAAAx4D,QACAo0F,KAAA71H,OAAA,EAAA61H,EAAA,SAAAmB,EAAA,GAEA,MACA,cAEA,qBACA,SAAA/8B,EAAA,SACA,IAEAl8D,GADAs4F,EAAAnwC,GAAAnzD,GAAAknE,EAAA,8BACA,oBAAuCv9C,IAAA25E,EAAA,IAClC,MAAAp7H,IACL,MAEA,WAEA,mBACA,qBACA,WACA,kBAGA,mBACA,eAEA,gBACA,0BACA,yBACA,mBACA,oBACA,sBACA,aACA,iBACA,gBACA,uBAEA,8BACA,8BACA,kCAGA,uBACA,sBACA,sBACA,mBACA,sBACA,mBACA,2BACA,iBACA,qBACA,wBACA,oBACA,kBACA,yBACA,qBACA,+BACA,kBACA,sBACA,cACA,gBACA,oBACA,iBAGA,qBACA,MAEA,sBACA,oBACA,iBACA,gBACA,yBACA,mBACA,uBACA,qBAIA,kBAIA,kBACA,iBACA,WAGA,wBACA,gBACA,gBACA,8BAGA,uBACA,wBACA,qBACA,uBACA,uBACA,2BACA,0BACA,yBACA,wBACA,8BACA,2BACA,6BACA,iCACA,wBACA,uBACA,8BAIA,WACA,MAGA,2BACA,0BACA,eACA,iBAGA,iBACA,qBAEA,QACA,SAAAg/F,EAAA,IAEA,KADAm8B,EAAArjG,GAAAknE,EAAA,QACAtuE,KAAA,MACAyqG,EAAAjoF,OAAAra,GAAAsiG,EAAAzqG,aAA0CyqG,EAAAz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","file":"deps/xlsx.js","sourcesContent":["/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */\nexports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Dropbox/www/amcharts4dev/node_modules/ieee754/index.js\n// module id = 1x5Z\n// module chunks = 71c9 bf3e","/*! xlsx.js (C) 2013-present SheetJS -- http://sheetjs.com */\n/* vim: set ts=2: */\n/*exported XLSX */\n/*global process:false, Buffer:false, ArrayBuffer:false, DataView:false, Deno:false */\nvar XLSX = {};\nXLSX.version = '0.19.3';\nvar current_codepage = 1200, current_ansi = 1252;\n/*:: declare var cptable:any; */\n/*global cptable:true, window */\nvar $cptable;\n\nvar VALID_ANSI = [ 874, 932, 936, 949, 950, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 10000 ];\n/* ECMA-376 Part I 18.4.1 charset to codepage mapping */\nvar CS2CP = ({\n\t/*::[*/0/*::]*/:    1252, /* ANSI */\n\t/*::[*/1/*::]*/:   65001, /* DEFAULT */\n\t/*::[*/2/*::]*/:   65001, /* SYMBOL */\n\t/*::[*/77/*::]*/:  10000, /* MAC */\n\t/*::[*/128/*::]*/:   932, /* SHIFTJIS */\n\t/*::[*/129/*::]*/:   949, /* HANGUL */\n\t/*::[*/130/*::]*/:  1361, /* JOHAB */\n\t/*::[*/134/*::]*/:   936, /* GB2312 */\n\t/*::[*/136/*::]*/:   950, /* CHINESEBIG5 */\n\t/*::[*/161/*::]*/:  1253, /* GREEK */\n\t/*::[*/162/*::]*/:  1254, /* TURKISH */\n\t/*::[*/163/*::]*/:  1258, /* VIETNAMESE */\n\t/*::[*/177/*::]*/:  1255, /* HEBREW */\n\t/*::[*/178/*::]*/:  1256, /* ARABIC */\n\t/*::[*/186/*::]*/:  1257, /* BALTIC */\n\t/*::[*/204/*::]*/:  1251, /* RUSSIAN */\n\t/*::[*/222/*::]*/:   874, /* THAI */\n\t/*::[*/238/*::]*/:  1250, /* EASTEUROPE */\n\t/*::[*/255/*::]*/:  1252, /* OEM */\n\t/*::[*/69/*::]*/:   6969  /* MISC */\n}/*:any*/);\n\nvar set_ansi = function(cp/*:number*/) { if(VALID_ANSI.indexOf(cp) == -1) return; current_ansi = CS2CP[0] = cp; };\nfunction reset_ansi() { set_ansi(1252); }\n\nvar set_cp = function(cp/*:number*/) { current_codepage = cp; set_ansi(cp); };\nfunction reset_cp() { set_cp(1200); reset_ansi(); }\n\nfunction char_codes(data/*:string*/)/*:Array<number>*/ { var o/*:Array<number>*/ = []; for(var i = 0, len = data.length; i < len; ++i) o[i] = data.charCodeAt(i); return o; }\n\nfunction utf16leread(data/*:string*/)/*:string*/ {\n\tvar o/*:Array<string>*/ = [];\n\tfor(var i = 0; i < (data.length>>1); ++i) o[i] = String.fromCharCode(data.charCodeAt(2*i) + (data.charCodeAt(2*i+1)<<8));\n\treturn o.join(\"\");\n}\nfunction utf16lereadu(data/*:Uint8Array*/)/*:string*/ {\n\tvar o/*:Array<string>*/ = [];\n\tfor(var i = 0; i < (data.length>>1); ++i) o[i] = String.fromCharCode(data[2*i] + (data[2*i+1]<<8));\n\treturn o.join(\"\");\n}\nfunction utf16beread(data/*:string*/)/*:string*/ {\n\tvar o/*:Array<string>*/ = [];\n\tfor(var i = 0; i < (data.length>>1); ++i) o[i] = String.fromCharCode(data.charCodeAt(2*i+1) + (data.charCodeAt(2*i)<<8));\n\treturn o.join(\"\");\n}\n\nvar debom = function(data/*:string*/)/*:string*/ {\n\tvar c1 = data.charCodeAt(0), c2 = data.charCodeAt(1);\n\tif(c1 == 0xFF && c2 == 0xFE) return utf16leread(data.slice(2));\n\tif(c1 == 0xFE && c2 == 0xFF) return utf16beread(data.slice(2));\n\tif(c1 == 0xFEFF) return data.slice(1);\n\treturn data;\n};\n\nvar _getchar = function _gc1(x/*:number*/)/*:string*/ { return String.fromCharCode(x); };\nvar _getansi = function _ga1(x/*:number*/)/*:string*/ { return String.fromCharCode(x); };\n\nfunction set_cptable(cptable) {\n\t$cptable = cptable;\n\tset_cp = function(cp/*:number*/) { current_codepage = cp; set_ansi(cp); };\n\tdebom = function(data/*:string*/) {\n\t\tif(data.charCodeAt(0) === 0xFF && data.charCodeAt(1) === 0xFE) { return $cptable.utils.decode(1200, char_codes(data.slice(2))); }\n\t\treturn data;\n\t};\n\t_getchar = function _gc2(x/*:number*/)/*:string*/ {\n\t\tif(current_codepage === 1200) return String.fromCharCode(x);\n\t\treturn $cptable.utils.decode(current_codepage, [x&255,x>>8])[0];\n\t};\n\t_getansi = function _ga2(x/*:number*/)/*:string*/ {\n\t\treturn $cptable.utils.decode(current_ansi, [x])[0];\n\t};\n\tcpdoit();\n}\nvar DENSE = null;\nvar DIF_XL = true;\nvar Base64_map = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\";\nfunction Base64_encode(input) {\n  var o = \"\";\n  var c1 = 0, c2 = 0, c3 = 0, e1 = 0, e2 = 0, e3 = 0, e4 = 0;\n  for (var i = 0; i < input.length; ) {\n    c1 = input.charCodeAt(i++);\n    e1 = c1 >> 2;\n    c2 = input.charCodeAt(i++);\n    e2 = (c1 & 3) << 4 | c2 >> 4;\n    c3 = input.charCodeAt(i++);\n    e3 = (c2 & 15) << 2 | c3 >> 6;\n    e4 = c3 & 63;\n    if (isNaN(c2)) {\n      e3 = e4 = 64;\n    } else if (isNaN(c3)) {\n      e4 = 64;\n    }\n    o += Base64_map.charAt(e1) + Base64_map.charAt(e2) + Base64_map.charAt(e3) + Base64_map.charAt(e4);\n  }\n  return o;\n}\nfunction Base64_encode_pass(input) {\n  var o = \"\";\n  var c1 = 0, c2 = 0, c3 = 0, e1 = 0, e2 = 0, e3 = 0, e4 = 0;\n  for (var i = 0; i < input.length; ) {\n    c1 = input.charCodeAt(i++);\n    if (c1 > 255)\n      c1 = 95;\n    e1 = c1 >> 2;\n    c2 = input.charCodeAt(i++);\n    if (c2 > 255)\n      c2 = 95;\n    e2 = (c1 & 3) << 4 | c2 >> 4;\n    c3 = input.charCodeAt(i++);\n    if (c3 > 255)\n      c3 = 95;\n    e3 = (c2 & 15) << 2 | c3 >> 6;\n    e4 = c3 & 63;\n    if (isNaN(c2)) {\n      e3 = e4 = 64;\n    } else if (isNaN(c3)) {\n      e4 = 64;\n    }\n    o += Base64_map.charAt(e1) + Base64_map.charAt(e2) + Base64_map.charAt(e3) + Base64_map.charAt(e4);\n  }\n  return o;\n}\nfunction Base64_decode(input) {\n  var o = \"\";\n  var c1 = 0, c2 = 0, c3 = 0, e1 = 0, e2 = 0, e3 = 0, e4 = 0;\n  input = input.replace(/^data:([^\\/]+\\/[^\\/]+)?;base64\\,/, \"\").replace(/[^\\w\\+\\/\\=]/g, \"\");\n  for (var i = 0; i < input.length; ) {\n    e1 = Base64_map.indexOf(input.charAt(i++));\n    e2 = Base64_map.indexOf(input.charAt(i++));\n    c1 = e1 << 2 | e2 >> 4;\n    o += String.fromCharCode(c1);\n    e3 = Base64_map.indexOf(input.charAt(i++));\n    c2 = (e2 & 15) << 4 | e3 >> 2;\n    if (e3 !== 64) {\n      o += String.fromCharCode(c2);\n    }\n    e4 = Base64_map.indexOf(input.charAt(i++));\n    c3 = (e3 & 3) << 6 | e4;\n    if (e4 !== 64) {\n      o += String.fromCharCode(c3);\n    }\n  }\n  return o;\n}\nvar has_buf = /*#__PURE__*/(function() { return typeof Buffer !== 'undefined' && typeof process !== 'undefined' && typeof process.versions !== 'undefined' && !!process.versions.node; })();\n\nvar Buffer_from = /*#__PURE__*/(function() {\n\tif(typeof Buffer !== 'undefined') {\n\t\tvar nbfs = !Buffer.from;\n\t\tif(!nbfs) try { Buffer.from(\"foo\", \"utf8\"); } catch(e) { nbfs = true; }\n\t\treturn nbfs ? function(buf, enc) { return (enc) ? new Buffer(buf, enc) : new Buffer(buf); } : Buffer.from.bind(Buffer);\n\t}\n\treturn function() {};\n})();\nvar buf_utf16le = /*#__PURE__*/(function() {\n\tif(typeof Buffer === 'undefined') return false;\n\tvar x = Buffer_from([65,0]);\n\tif(!x) return false;\n\tvar o = x.toString(\"utf16le\");\n\treturn o.length == 1;\n})();\n\n\nfunction new_raw_buf(len/*:number*/) {\n\t/* jshint -W056 */\n\tif(has_buf) return Buffer.alloc ? Buffer.alloc(len) : new Buffer(len);\n\treturn typeof Uint8Array != \"undefined\" ? new Uint8Array(len) : new Array(len);\n\t/* jshint +W056 */\n}\n\nfunction new_unsafe_buf(len/*:number*/) {\n\t/* jshint -W056 */\n\tif(has_buf) return Buffer.allocUnsafe ? Buffer.allocUnsafe(len) : new Buffer(len);\n\treturn typeof Uint8Array != \"undefined\" ? new Uint8Array(len) : new Array(len);\n\t/* jshint +W056 */\n}\n\nvar s2a = function s2a(s/*:string*/)/*:any*/ {\n\tif(has_buf) return Buffer_from(s, \"binary\");\n\treturn s.split(\"\").map(function(x/*:string*/)/*:number*/{ return x.charCodeAt(0) & 0xff; });\n};\n\nfunction s2ab(s/*:string*/)/*:any*/ {\n\tif(typeof ArrayBuffer === 'undefined') return s2a(s);\n\tvar buf = new ArrayBuffer(s.length), view = new Uint8Array(buf);\n\tfor (var i=0; i!=s.length; ++i) view[i] = s.charCodeAt(i) & 0xFF;\n\treturn buf;\n}\n\nfunction a2s(data/*:any*/)/*:string*/ {\n\tif(Array.isArray(data)) return data.map(function(c) { return String.fromCharCode(c); }).join(\"\");\n\tvar o/*:Array<string>*/ = []; for(var i = 0; i < data.length; ++i) o[i] = String.fromCharCode(data[i]); return o.join(\"\");\n}\n\nfunction a2u(data/*:Array<number>*/)/*:Uint8Array*/ {\n\tif(typeof Uint8Array === 'undefined') throw new Error(\"Unsupported\");\n\treturn new Uint8Array(data);\n}\n\nfunction ab2a(data/*:ArrayBuffer|Uint8Array*/)/*:Array<number>*/ {\n\tif(typeof ArrayBuffer == 'undefined') throw new Error(\"Unsupported\");\n\tif(data instanceof ArrayBuffer) return ab2a(new Uint8Array(data));\n\t/*:: if(data instanceof ArrayBuffer) throw new Error(\"unreachable\"); */\n\tvar o = new Array(data.length);\n\tfor(var i = 0; i < data.length; ++i) o[i] = data[i];\n\treturn o;\n}\n\nvar bconcat = has_buf ? function(bufs) { return Buffer.concat(bufs.map(function(buf) { return Buffer.isBuffer(buf) ? buf : Buffer_from(buf); })); } : function(bufs) {\n\tif(typeof Uint8Array !== \"undefined\") {\n\t\tvar i = 0, maxlen = 0;\n\t\tfor(i = 0; i < bufs.length; ++i) maxlen += bufs[i].length;\n\t\tvar o = new Uint8Array(maxlen);\n\t\tvar len = 0;\n\t\tfor(i = 0, maxlen = 0; i < bufs.length; maxlen += len, ++i) {\n\t\t\tlen = bufs[i].length;\n\t\t\tif(bufs[i] instanceof Uint8Array) o.set(bufs[i], maxlen);\n\t\t\telse if(typeof bufs[i] == \"string\") o.set(new Uint8Array(s2a(bufs[i])), maxlen);\n\t\t\telse o.set(new Uint8Array(bufs[i]), maxlen);\n\t\t}\n\t\treturn o;\n\t}\n\treturn [].concat.apply([], bufs.map(function(buf) { return Array.isArray(buf) ? buf : [].slice.call(buf); }));\n};\n\nfunction utf8decode(content/*:string*/) {\n\tvar out = [], widx = 0, L = content.length + 250;\n\tvar o = new_raw_buf(content.length + 255);\n\tfor(var ridx = 0; ridx < content.length; ++ridx) {\n\t\tvar c = content.charCodeAt(ridx);\n\t\tif(c < 0x80) o[widx++] = c;\n\t\telse if(c < 0x800) {\n\t\t\to[widx++] = (192|((c>>6)&31));\n\t\t\to[widx++] = (128|(c&63));\n\t\t} else if(c >= 0xD800 && c < 0xE000) {\n\t\t\tc = (c&1023)+64;\n\t\t\tvar d = content.charCodeAt(++ridx)&1023;\n\t\t\to[widx++] = (240|((c>>8)&7));\n\t\t\to[widx++] = (128|((c>>2)&63));\n\t\t\to[widx++] = (128|((d>>6)&15)|((c&3)<<4));\n\t\t\to[widx++] = (128|(d&63));\n\t\t} else {\n\t\t\to[widx++] = (224|((c>>12)&15));\n\t\t\to[widx++] = (128|((c>>6)&63));\n\t\t\to[widx++] = (128|(c&63));\n\t\t}\n\t\tif(widx > L) {\n\t\t\tout.push(o.slice(0, widx));\n\t\t\twidx = 0;\n\t\t\to = new_raw_buf(65535);\n\t\t\tL = 65530;\n\t\t}\n\t}\n\tout.push(o.slice(0, widx));\n\treturn bconcat(out);\n}\n\nvar chr0 = /\\u0000/g, chr1 = /[\\u0001-\\u0006]/g;\n/*::\ndeclare type Block = any;\ndeclare type BufArray = {\n\tnewblk(sz:number):Block;\n\tnext(sz:number):Block;\n\tend():any;\n\tpush(buf:Block):void;\n};\n\ntype RecordHopperCB = {(d:any, Rn:string, RT:number):?boolean;};\n\ntype EvertType = {[string]:string};\ntype EvertNumType = {[string]:number};\ntype EvertArrType = {[string]:Array<string>};\n\ntype StringConv = {(string):string};\n\n*/\n/* ssf.js (C) 2013-present SheetJS -- http://sheetjs.com */\n/*jshint -W041 */\nfunction _strrev(x/*:string*/)/*:string*/ { var o = \"\", i = x.length-1; while(i>=0) o += x.charAt(i--); return o; }\nfunction pad0(v/*:any*/,d/*:number*/)/*:string*/{var t=\"\"+v; return t.length>=d?t:fill('0',d-t.length)+t;}\nfunction pad_(v/*:any*/,d/*:number*/)/*:string*/{var t=\"\"+v;return t.length>=d?t:fill(' ',d-t.length)+t;}\nfunction rpad_(v/*:any*/,d/*:number*/)/*:string*/{var t=\"\"+v; return t.length>=d?t:t+fill(' ',d-t.length);}\nfunction pad0r1(v/*:any*/,d/*:number*/)/*:string*/{var t=\"\"+Math.round(v); return t.length>=d?t:fill('0',d-t.length)+t;}\nfunction pad0r2(v/*:any*/,d/*:number*/)/*:string*/{var t=\"\"+v; return t.length>=d?t:fill('0',d-t.length)+t;}\nvar p2_32 = /*#__PURE__*/Math.pow(2,32);\nfunction pad0r(v/*:any*/,d/*:number*/)/*:string*/{if(v>p2_32||v<-p2_32) return pad0r1(v,d); var i = Math.round(v); return pad0r2(i,d); }\n/* yes, in 2022 this is still faster than string compare */\nfunction SSF_isgeneral(s/*:string*/, i/*:?number*/)/*:boolean*/ { i = i || 0; return s.length >= 7 + i && (s.charCodeAt(i)|32) === 103 && (s.charCodeAt(i+1)|32) === 101 && (s.charCodeAt(i+2)|32) === 110 && (s.charCodeAt(i+3)|32) === 101 && (s.charCodeAt(i+4)|32) === 114 && (s.charCodeAt(i+5)|32) === 97 && (s.charCodeAt(i+6)|32) === 108; }\nvar days/*:Array<Array<string> >*/ = [\n\t['Sun', 'Sunday'],\n\t['Mon', 'Monday'],\n\t['Tue', 'Tuesday'],\n\t['Wed', 'Wednesday'],\n\t['Thu', 'Thursday'],\n\t['Fri', 'Friday'],\n\t['Sat', 'Saturday']\n];\nvar months/*:Array<Array<string> >*/ = [\n\t['J', 'Jan', 'January'],\n\t['F', 'Feb', 'February'],\n\t['M', 'Mar', 'March'],\n\t['A', 'Apr', 'April'],\n\t['M', 'May', 'May'],\n\t['J', 'Jun', 'June'],\n\t['J', 'Jul', 'July'],\n\t['A', 'Aug', 'August'],\n\t['S', 'Sep', 'September'],\n\t['O', 'Oct', 'October'],\n\t['N', 'Nov', 'November'],\n\t['D', 'Dec', 'December']\n];\nfunction SSF_init_table(t/*:any*/) {\n\tif(!t) t = {};\n\tt[0]=  'General';\n\tt[1]=  '0';\n\tt[2]=  '0.00';\n\tt[3]=  '#,##0';\n\tt[4]=  '#,##0.00';\n\tt[9]=  '0%';\n\tt[10]= '0.00%';\n\tt[11]= '0.00E+00';\n\tt[12]= '# ?/?';\n\tt[13]= '# ??/??';\n\tt[14]= 'm/d/yy';\n\tt[15]= 'd-mmm-yy';\n\tt[16]= 'd-mmm';\n\tt[17]= 'mmm-yy';\n\tt[18]= 'h:mm AM/PM';\n\tt[19]= 'h:mm:ss AM/PM';\n\tt[20]= 'h:mm';\n\tt[21]= 'h:mm:ss';\n\tt[22]= 'm/d/yy h:mm';\n\tt[37]= '#,##0 ;(#,##0)';\n\tt[38]= '#,##0 ;[Red](#,##0)';\n\tt[39]= '#,##0.00;(#,##0.00)';\n\tt[40]= '#,##0.00;[Red](#,##0.00)';\n\tt[45]= 'mm:ss';\n\tt[46]= '[h]:mm:ss';\n\tt[47]= 'mmss.0';\n\tt[48]= '##0.0E+0';\n\tt[49]= '@';\n\tt[56]= '\"上午/下午 \"hh\"時\"mm\"分\"ss\"秒 \"';\n\treturn t;\n}\n/* repeated to satiate webpack */\nvar table_fmt = {\n\t0:  'General',\n\t1:  '0',\n\t2:  '0.00',\n\t3:  '#,##0',\n\t4:  '#,##0.00',\n\t9:  '0%',\n\t10: '0.00%',\n\t11: '0.00E+00',\n\t12: '# ?/?',\n\t13: '# ??/??',\n\t14: 'm/d/yy',\n\t15: 'd-mmm-yy',\n\t16: 'd-mmm',\n\t17: 'mmm-yy',\n\t18: 'h:mm AM/PM',\n\t19: 'h:mm:ss AM/PM',\n\t20: 'h:mm',\n\t21: 'h:mm:ss',\n\t22: 'm/d/yy h:mm',\n\t37: '#,##0 ;(#,##0)',\n\t38: '#,##0 ;[Red](#,##0)',\n\t39: '#,##0.00;(#,##0.00)',\n\t40: '#,##0.00;[Red](#,##0.00)',\n\t45: 'mm:ss',\n\t46: '[h]:mm:ss',\n\t47: 'mmss.0',\n\t48: '##0.0E+0',\n\t49: '@',\n\t56: '\"上午/下午 \"hh\"時\"mm\"分\"ss\"秒 \"'\n};\n\n/* Defaults determined by systematically testing in Excel 2019 */\n\n/* These formats appear to default to other formats in the table */\nvar SSF_default_map = {\n\t5:  37, 6:  38, 7:  39, 8:  40,         //  5 -> 37 ...  8 -> 40\n\n\t23:  0, 24:  0, 25:  0, 26:  0,         // 23 ->  0 ... 26 ->  0\n\n\t27: 14, 28: 14, 29: 14, 30: 14, 31: 14, // 27 -> 14 ... 31 -> 14\n\n\t50: 14, 51: 14, 52: 14, 53: 14, 54: 14, // 50 -> 14 ... 58 -> 14\n\t55: 14, 56: 14, 57: 14, 58: 14,\n\t59:  1, 60:  2, 61:  3, 62:  4,         // 59 ->  1 ... 62 ->  4\n\n\t67:  9, 68: 10,                         // 67 ->  9 ... 68 -> 10\n\t69: 12, 70: 13, 71: 14,                 // 69 -> 12 ... 71 -> 14\n\t72: 14, 73: 15, 74: 16, 75: 17,         // 72 -> 14 ... 75 -> 17\n\t76: 20, 77: 21, 78: 22,                 // 76 -> 20 ... 78 -> 22\n\t79: 45, 80: 46, 81: 47,                 // 79 -> 45 ... 81 -> 47\n\t82: 0                                   // 82 ->  0 ... 65536 -> 0 (omitted)\n};\n\n\n/* These formats technically refer to Accounting formats with no equivalent */\nvar SSF_default_str = {\n\t//  5 -- Currency,   0 decimal, black negative\n\t5:  '\"$\"#,##0_);\\\\(\"$\"#,##0\\\\)',\n\t63: '\"$\"#,##0_);\\\\(\"$\"#,##0\\\\)',\n\n\t//  6 -- Currency,   0 decimal, red   negative\n\t6:  '\"$\"#,##0_);[Red]\\\\(\"$\"#,##0\\\\)',\n\t64: '\"$\"#,##0_);[Red]\\\\(\"$\"#,##0\\\\)',\n\n\t//  7 -- Currency,   2 decimal, black negative\n\t7:  '\"$\"#,##0.00_);\\\\(\"$\"#,##0.00\\\\)',\n\t65: '\"$\"#,##0.00_);\\\\(\"$\"#,##0.00\\\\)',\n\n\t//  8 -- Currency,   2 decimal, red   negative\n\t8:  '\"$\"#,##0.00_);[Red]\\\\(\"$\"#,##0.00\\\\)',\n\t66: '\"$\"#,##0.00_);[Red]\\\\(\"$\"#,##0.00\\\\)',\n\n\t// 41 -- Accounting, 0 decimal, No Symbol\n\t41: '_(* #,##0_);_(* \\\\(#,##0\\\\);_(* \"-\"_);_(@_)',\n\n\t// 42 -- Accounting, 0 decimal, $  Symbol\n\t42: '_(\"$\"* #,##0_);_(\"$\"* \\\\(#,##0\\\\);_(\"$\"* \"-\"_);_(@_)',\n\n\t// 43 -- Accounting, 2 decimal, No Symbol\n\t43: '_(* #,##0.00_);_(* \\\\(#,##0.00\\\\);_(* \"-\"??_);_(@_)',\n\n\t// 44 -- Accounting, 2 decimal, $  Symbol\n\t44: '_(\"$\"* #,##0.00_);_(\"$\"* \\\\(#,##0.00\\\\);_(\"$\"* \"-\"??_);_(@_)'\n};\n\nfunction SSF_frac(x/*:number*/, D/*:number*/, mixed/*:?boolean*/)/*:Array<number>*/ {\n\tvar sgn = x < 0 ? -1 : 1;\n\tvar B = x * sgn;\n\tvar P_2 = 0, P_1 = 1, P = 0;\n\tvar Q_2 = 1, Q_1 = 0, Q = 0;\n\tvar A = Math.floor(B);\n\twhile(Q_1 < D) {\n\t\tA = Math.floor(B);\n\t\tP = A * P_1 + P_2;\n\t\tQ = A * Q_1 + Q_2;\n\t\tif((B - A) < 0.00000005) break;\n\t\tB = 1 / (B - A);\n\t\tP_2 = P_1; P_1 = P;\n\t\tQ_2 = Q_1; Q_1 = Q;\n\t}\n\tif(Q > D) { if(Q_1 > D) { Q = Q_2; P = P_2; } else { Q = Q_1; P = P_1; } }\n\tif(!mixed) return [0, sgn * P, Q];\n\tvar q = Math.floor(sgn * P/Q);\n\treturn [q, sgn*P - q*Q, Q];\n}\nfunction SSF_parse_date_code(v/*:number*/,opts/*:?any*/,b2/*:?boolean*/) {\n\tif(v > 2958465 || v < 0) return null;\n\tvar date = (v|0), time = Math.floor(86400 * (v - date)), dow=0;\n\tvar dout=[];\n\tvar out={D:date, T:time, u:86400*(v-date)-time,y:0,m:0,d:0,H:0,M:0,S:0,q:0};\n\tif(Math.abs(out.u) < 1e-6) out.u = 0;\n\tif(opts && opts.date1904) date += 1462;\n\tif(out.u > 0.9999) {\n\t\tout.u = 0;\n\t\tif(++time == 86400) { out.T = time = 0; ++date; ++out.D; }\n\t}\n\tif(date === 60) {dout = b2 ? [1317,10,29] : [1900,2,29]; dow=3;}\n\telse if(date === 0) {dout = b2 ? [1317,8,29] : [1900,1,0]; dow=6;}\n\telse {\n\t\tif(date > 60) --date;\n\t\t/* 1 = Jan 1 1900 in Gregorian */\n\t\tvar d = new Date(1900, 0, 1);\n\t\td.setDate(d.getDate() + date - 1);\n\t\tdout = [d.getFullYear(), d.getMonth()+1,d.getDate()];\n\t\tdow = d.getDay();\n\t\tif(date < 60) dow = (dow + 6) % 7;\n\t\tif(b2) dow = SSF_fix_hijri(d, dout);\n\t}\n\tout.y = dout[0]; out.m = dout[1]; out.d = dout[2];\n\tout.S = time % 60; time = Math.floor(time / 60);\n\tout.M = time % 60; time = Math.floor(time / 60);\n\tout.H = time;\n\tout.q = dow;\n\treturn out;\n}\nvar SSFbasedate = /*#__PURE__*/new Date(1899, 11, 31, 0, 0, 0);\nvar SSFdnthresh = /*#__PURE__*/SSFbasedate.getTime();\nvar SSFbase1904 = /*#__PURE__*/new Date(1900, 2, 1, 0, 0, 0);\nfunction datenum_local(v/*:Date*/, date1904/*:?boolean*/)/*:number*/ {\n\tvar epoch = /*#__PURE__*/v.getTime();\n\tif(date1904) epoch -= 1461*24*60*60*1000;\n\telse if(v >= SSFbase1904) epoch += 24*60*60*1000;\n\treturn (epoch - (SSFdnthresh + (/*#__PURE__*/v.getTimezoneOffset() - /*#__PURE__*/SSFbasedate.getTimezoneOffset()) * 60000)) / (24 * 60 * 60 * 1000);\n}\n/* ECMA-376 18.8.30 numFmt*/\n/* Note: `toPrecision` uses standard form when prec > E and E >= -6 */\n/* exponent >= -9 and <= 9 */\nfunction SSF_strip_decimal(o/*:string*/)/*:string*/ {\n\treturn (o.indexOf(\".\") == -1) ? o : o.replace(/(?:\\.0*|(\\.\\d*[1-9])0+)$/, \"$1\");\n}\n\n/* General Exponential always shows 2 digits exp and trims the mantissa */\nfunction SSF_normalize_exp(o/*:string*/)/*:string*/ {\n\tif(o.indexOf(\"E\") == -1) return o;\n\treturn o.replace(/(?:\\.0*|(\\.\\d*[1-9])0+)[Ee]/,\"$1E\").replace(/(E[+-])(\\d)$/,\"$10$2\");\n}\n\n/* exponent >= -9 and <= 9 */\nfunction SSF_small_exp(v/*:number*/)/*:string*/ {\n\tvar w = (v<0?12:11);\n\tvar o = SSF_strip_decimal(v.toFixed(12)); if(o.length <= w) return o;\n\to = v.toPrecision(10); if(o.length <= w) return o;\n\treturn v.toExponential(5);\n}\n\n/* exponent >= 11 or <= -10 likely exponential */\nfunction SSF_large_exp(v/*:number*/)/*:string*/ {\n\tvar o = SSF_strip_decimal(v.toFixed(11));\n\treturn (o.length > (v<0?12:11) || o === \"0\" || o === \"-0\") ? v.toPrecision(6) : o;\n}\n\nfunction SSF_general_num(v/*:number*/)/*:string*/ {\n\tvar V = Math.floor(Math.log(Math.abs(v))*Math.LOG10E), o;\n\n\tif(V >= -4 && V <= -1) o = v.toPrecision(10+V);\n\telse if(Math.abs(V) <= 9) o = SSF_small_exp(v);\n\telse if(V === 10) o = v.toFixed(10).substr(0,12);\n\telse o = SSF_large_exp(v);\n\n\treturn SSF_strip_decimal(SSF_normalize_exp(o.toUpperCase()));\n}\n\n\n/*\n\t\"General\" rules:\n\t- text is passed through (\"@\")\n\t- booleans are rendered as TRUE/FALSE\n\t- \"up to 11 characters\" displayed for numbers\n\t- Default date format (code 14) used for Dates\n\n\tThe longest 32-bit integer text is \"-2147483648\", exactly 11 chars\n\tTODO: technically the display depends on the width of the cell\n*/\nfunction SSF_general(v/*:any*/, opts/*:any*/) {\n\tswitch(typeof v) {\n\t\tcase 'string': return v;\n\t\tcase 'boolean': return v ? \"TRUE\" : \"FALSE\";\n\t\tcase 'number': return (v|0) === v ? v.toString(10) : SSF_general_num(v);\n\t\tcase 'undefined': return \"\";\n\t\tcase 'object':\n\t\t\tif(v == null) return \"\";\n\t\t\tif(v instanceof Date) return SSF_format(14, datenum_local(v, opts && opts.date1904), opts);\n\t}\n\tthrow new Error(\"unsupported value in General format: \" + v);\n}\n\nfunction SSF_fix_hijri(date/*:Date*/, o/*:[number, number, number]*/) {\n  /* TODO: properly adjust y/m/d and  */\n  o[0] -= 581;\n  var dow = date.getDay();\n  if(date < 60) dow = (dow + 6) % 7;\n  return dow;\n}\n//var THAI_DIGITS = \"\\u0E50\\u0E51\\u0E52\\u0E53\\u0E54\\u0E55\\u0E56\\u0E57\\u0E58\\u0E59\".split(\"\");\nfunction SSF_write_date(type/*:number*/, fmt/*:string*/, val, ss0/*:?number*/)/*:string*/ {\n\tvar o=\"\", ss=0, tt=0, y = val.y, out, outl = 0;\n\tswitch(type) {\n\t\tcase 98: /* 'b' buddhist year */\n\t\t\ty = val.y + 543;\n\t\t\t/* falls through */\n\t\tcase 121: /* 'y' year */\n\t\tswitch(fmt.length) {\n\t\t\tcase 1: case 2: out = y % 100; outl = 2; break;\n\t\t\tdefault: out = y % 10000; outl = 4; break;\n\t\t} break;\n\t\tcase 109: /* 'm' month */\n\t\tswitch(fmt.length) {\n\t\t\tcase 1: case 2: out = val.m; outl = fmt.length; break;\n\t\t\tcase 3: return months[val.m-1][1];\n\t\t\tcase 5: return months[val.m-1][0];\n\t\t\tdefault: return months[val.m-1][2];\n\t\t} break;\n\t\tcase 100: /* 'd' day */\n\t\tswitch(fmt.length) {\n\t\t\tcase 1: case 2: out = val.d; outl = fmt.length; break;\n\t\t\tcase 3: return days[val.q][0];\n\t\t\tdefault: return days[val.q][1];\n\t\t} break;\n\t\tcase 104: /* 'h' 12-hour */\n\t\tswitch(fmt.length) {\n\t\t\tcase 1: case 2: out = 1+(val.H+11)%12; outl = fmt.length; break;\n\t\t\tdefault: throw 'bad hour format: ' + fmt;\n\t\t} break;\n\t\tcase 72: /* 'H' 24-hour */\n\t\tswitch(fmt.length) {\n\t\t\tcase 1: case 2: out = val.H; outl = fmt.length; break;\n\t\t\tdefault: throw 'bad hour format: ' + fmt;\n\t\t} break;\n\t\tcase 77: /* 'M' minutes */\n\t\tswitch(fmt.length) {\n\t\t\tcase 1: case 2: out = val.M; outl = fmt.length; break;\n\t\t\tdefault: throw 'bad minute format: ' + fmt;\n\t\t} break;\n\t\tcase 115: /* 's' seconds */\n\t\t\tif(fmt != 's' && fmt != 'ss' && fmt != '.0' && fmt != '.00' && fmt != '.000') throw 'bad second format: ' + fmt;\n\t\t\tif(val.u === 0 && (fmt == \"s\" || fmt == \"ss\")) return pad0(val.S, fmt.length);\n\t\t\t/*::if(!ss0) ss0 = 0; */\n\t\t\tif(ss0 >= 2) tt = ss0 === 3 ? 1000 : 100;\n\t\t\telse tt = ss0 === 1 ? 10 : 1;\n\t\t\tss = Math.round((tt)*(val.S + val.u));\n\t\t\tif(ss >= 60*tt) ss = 0;\n\t\t\tif(fmt === 's') return ss === 0 ? \"0\" : \"\"+ss/tt;\n\t\t\to = pad0(ss,2 + ss0);\n\t\t\tif(fmt === 'ss') return o.substr(0,2);\n\t\t\treturn \".\" + o.substr(2,fmt.length-1);\n\t\tcase 90: /* 'Z' absolute time */\n\t\tswitch(fmt) {\n\t\t\tcase '[h]': case '[hh]': out = val.D*24+val.H; break;\n\t\t\tcase '[m]': case '[mm]': out = (val.D*24+val.H)*60+val.M; break;\n\t\t\tcase '[s]': case '[ss]': out = ((val.D*24+val.H)*60+val.M)*60+Math.round(val.S+val.u); break;\n\t\t\tdefault: throw 'bad abstime format: ' + fmt;\n\t\t} outl = fmt.length === 3 ? 1 : 2; break;\n\t\tcase 101: /* 'e' era */\n\t\t\tout = y; outl = 1; break;\n\t}\n\tvar outstr = outl > 0 ? pad0(out, outl) : \"\";\n\treturn outstr;\n}\n\n\n/*jshint -W086 */\n/*jshint +W086 */\nfunction commaify(s/*:string*/)/*:string*/ {\n\tvar w = 3;\n\tif(s.length <= w) return s;\n\tvar j = (s.length % w), o = s.substr(0,j);\n\tfor(; j!=s.length; j+=w) o+=(o.length > 0 ? \",\" : \"\") + s.substr(j,w);\n\treturn o;\n}\nvar pct1 = /%/g;\nfunction write_num_pct(type/*:string*/, fmt/*:string*/, val/*:number*/)/*:string*/{\n\tvar sfmt = fmt.replace(pct1,\"\"), mul = fmt.length - sfmt.length;\n\treturn write_num(type, sfmt, val * Math.pow(10,2*mul)) + fill(\"%\",mul);\n}\n\nfunction write_num_cm(type/*:string*/, fmt/*:string*/, val/*:number*/)/*:string*/{\n\tvar idx = fmt.length - 1;\n\twhile(fmt.charCodeAt(idx-1) === 44) --idx;\n\treturn write_num(type, fmt.substr(0,idx), val / Math.pow(10,3*(fmt.length-idx)));\n}\n\nfunction write_num_exp(fmt/*:string*/, val/*:number*/)/*:string*/{\n\tvar o/*:string*/;\n\tvar idx = fmt.indexOf(\"E\") - fmt.indexOf(\".\") - 1;\n\tif(fmt.match(/^#+0.0E\\+0$/)) {\n\t\tif(val == 0) return \"0.0E+0\";\n\t\telse if(val < 0) return \"-\" + write_num_exp(fmt, -val);\n\t\tvar period = fmt.indexOf(\".\"); if(period === -1) period=fmt.indexOf('E');\n\t\tvar ee = Math.floor(Math.log(val)*Math.LOG10E)%period;\n\t\tif(ee < 0) ee += period;\n\t\to = (val/Math.pow(10,ee)).toPrecision(idx+1+(period+ee)%period);\n\t\tif(o.indexOf(\"e\") === -1) {\n\t\t\tvar fakee = Math.floor(Math.log(val)*Math.LOG10E);\n\t\t\tif(o.indexOf(\".\") === -1) o = o.charAt(0) + \".\" + o.substr(1) + \"E+\" + (fakee - o.length+ee);\n\t\t\telse o += \"E+\" + (fakee - ee);\n\t\t\twhile(o.substr(0,2) === \"0.\") {\n\t\t\t\to = o.charAt(0) + o.substr(2,period) + \".\" + o.substr(2+period);\n\t\t\t\to = o.replace(/^0+([1-9])/,\"$1\").replace(/^0+\\./,\"0.\");\n\t\t\t}\n\t\t\to = o.replace(/\\+-/,\"-\");\n\t\t}\n\t\to = o.replace(/^([+-]?)(\\d*)\\.(\\d*)[Ee]/,function($$,$1,$2,$3) { return $1 + $2 + $3.substr(0,(period+ee)%period) + \".\" + $3.substr(ee) + \"E\"; });\n\t} else o = val.toExponential(idx);\n\tif(fmt.match(/E\\+00$/) && o.match(/e[+-]\\d$/)) o = o.substr(0,o.length-1) + \"0\" + o.charAt(o.length-1);\n\tif(fmt.match(/E\\-/) && o.match(/e\\+/)) o = o.replace(/e\\+/,\"e\");\n\treturn o.replace(\"e\",\"E\");\n}\nvar frac1 = /# (\\?+)( ?)\\/( ?)(\\d+)/;\nfunction write_num_f1(r/*:Array<string>*/, aval/*:number*/, sign/*:string*/)/*:string*/ {\n\tvar den = parseInt(r[4],10), rr = Math.round(aval * den), base = Math.floor(rr/den);\n\tvar myn = (rr - base*den), myd = den;\n\treturn sign + (base === 0 ? \"\" : \"\"+base) + \" \" + (myn === 0 ? fill(\" \", r[1].length + 1 + r[4].length) : pad_(myn,r[1].length) + r[2] + \"/\" + r[3] + pad0(myd,r[4].length));\n}\nfunction write_num_f2(r/*:Array<string>*/, aval/*:number*/, sign/*:string*/)/*:string*/ {\n\treturn sign + (aval === 0 ? \"\" : \"\"+aval) + fill(\" \", r[1].length + 2 + r[4].length);\n}\nvar dec1 = /^#*0*\\.([0#]+)/;\nvar closeparen = /\\).*[0#]/;\nvar phone = /\\(###\\) ###\\\\?-####/;\nfunction hashq(str/*:string*/)/*:string*/ {\n\tvar o = \"\", cc;\n\tfor(var i = 0; i != str.length; ++i) switch((cc=str.charCodeAt(i))) {\n\t\tcase 35: break;\n\t\tcase 63: o+= \" \"; break;\n\t\tcase 48: o+= \"0\"; break;\n\t\tdefault: o+= String.fromCharCode(cc);\n\t}\n\treturn o;\n}\nfunction rnd(val/*:number*/, d/*:number*/)/*:string*/ { var dd = Math.pow(10,d); return \"\"+(Math.round(val * dd)/dd); }\nfunction dec(val/*:number*/, d/*:number*/)/*:number*/ {\n\tvar _frac = val - Math.floor(val), dd = Math.pow(10,d);\n\tif (d < ('' + Math.round(_frac * dd)).length) return 0;\n\treturn Math.round(_frac * dd);\n}\nfunction carry(val/*:number*/, d/*:number*/)/*:number*/ {\n\tif (d < ('' + Math.round((val-Math.floor(val))*Math.pow(10,d))).length) {\n\t\treturn 1;\n\t}\n\treturn 0;\n}\nfunction flr(val/*:number*/)/*:string*/ {\n\tif(val < 2147483647 && val > -2147483648) return \"\"+(val >= 0 ? (val|0) : (val-1|0));\n\treturn \"\"+Math.floor(val);\n}\nfunction write_num_flt(type/*:string*/, fmt/*:string*/, val/*:number*/)/*:string*/ {\n\tif(type.charCodeAt(0) === 40 && !fmt.match(closeparen)) {\n\t\tvar ffmt = fmt.replace(/\\( */,\"\").replace(/ \\)/,\"\").replace(/\\)/,\"\");\n\t\tif(val >= 0) return write_num_flt('n', ffmt, val);\n\t\treturn '(' + write_num_flt('n', ffmt, -val) + ')';\n\t}\n\tif(fmt.charCodeAt(fmt.length - 1) === 44) return write_num_cm(type, fmt, val);\n\tif(fmt.indexOf('%') !== -1) return write_num_pct(type, fmt, val);\n\tif(fmt.indexOf('E') !== -1) return write_num_exp(fmt, val);\n\tif(fmt.charCodeAt(0) === 36) return \"$\"+write_num_flt(type,fmt.substr(fmt.charAt(1)==' '?2:1),val);\n\tvar o;\n\tvar r/*:?Array<string>*/, ri, ff, aval = Math.abs(val), sign = val < 0 ? \"-\" : \"\";\n\tif(fmt.match(/^00+$/)) return sign + pad0r(aval,fmt.length);\n\tif(fmt.match(/^[#?]+$/)) {\n\t\to = pad0r(val,0); if(o === \"0\") o = \"\";\n\t\treturn o.length > fmt.length ? o : hashq(fmt.substr(0,fmt.length-o.length)) + o;\n\t}\n\tif((r = fmt.match(frac1))) return write_num_f1(r, aval, sign);\n\tif(fmt.match(/^#+0+$/)) return sign + pad0r(aval,fmt.length - fmt.indexOf(\"0\"));\n\tif((r = fmt.match(dec1))) {\n\t\to = rnd(val, r[1].length).replace(/^([^\\.]+)$/,\"$1.\"+hashq(r[1])).replace(/\\.$/,\".\"+hashq(r[1])).replace(/\\.(\\d*)$/,function($$, $1) { return \".\" + $1 + fill(\"0\", hashq(/*::(*/r/*::||[\"\"])*/[1]).length-$1.length); });\n\t\treturn fmt.indexOf(\"0.\") !== -1 ? o : o.replace(/^0\\./,\".\");\n\t}\n\tfmt = fmt.replace(/^#+([0.])/, \"$1\");\n\tif((r = fmt.match(/^(0*)\\.(#*)$/))) {\n\t\treturn sign + rnd(aval, r[2].length).replace(/\\.(\\d*[1-9])0*$/,\".$1\").replace(/^(-?\\d*)$/,\"$1.\").replace(/^0\\./,r[1].length?\"0.\":\".\");\n\t}\n\tif((r = fmt.match(/^#{1,3},##0(\\.?)$/))) return sign + commaify(pad0r(aval,0));\n\tif((r = fmt.match(/^#,##0\\.([#0]*0)$/))) {\n\t\treturn val < 0 ? \"-\" + write_num_flt(type, fmt, -val) : commaify(\"\"+(Math.floor(val) + carry(val, r[1].length))) + \".\" + pad0(dec(val, r[1].length),r[1].length);\n\t}\n\tif((r = fmt.match(/^#,#*,#0/))) return write_num_flt(type,fmt.replace(/^#,#*,/,\"\"),val);\n\tif((r = fmt.match(/^([0#]+)(\\\\?-([0#]+))+$/))) {\n\t\to = _strrev(write_num_flt(type, fmt.replace(/[\\\\-]/g,\"\"), val));\n\t\tri = 0;\n\t\treturn _strrev(_strrev(fmt.replace(/\\\\/g,\"\")).replace(/[0#]/g,function(x){return ri<o.length?o.charAt(ri++):x==='0'?'0':\"\";}));\n\t}\n\tif(fmt.match(phone)) {\n\t\to = write_num_flt(type, \"##########\", val);\n\t\treturn \"(\" + o.substr(0,3) + \") \" + o.substr(3, 3) + \"-\" + o.substr(6);\n\t}\n\tvar oa = \"\";\n\tif((r = fmt.match(/^([#0?]+)( ?)\\/( ?)([#0?]+)/))) {\n\t\tri = Math.min(/*::String(*/r[4]/*::)*/.length,7);\n\t\tff = SSF_frac(aval, Math.pow(10,ri)-1, false);\n\t\to = \"\" + sign;\n\t\toa = write_num(\"n\", /*::String(*/r[1]/*::)*/, ff[1]);\n\t\tif(oa.charAt(oa.length-1) == \" \") oa = oa.substr(0,oa.length-1) + \"0\";\n\t\to += oa + /*::String(*/r[2]/*::)*/ + \"/\" + /*::String(*/r[3]/*::)*/;\n\t\toa = rpad_(ff[2],ri);\n\t\tif(oa.length < r[4].length) oa = hashq(r[4].substr(r[4].length-oa.length)) + oa;\n\t\to += oa;\n\t\treturn o;\n\t}\n\tif((r = fmt.match(/^# ([#0?]+)( ?)\\/( ?)([#0?]+)/))) {\n\t\tri = Math.min(Math.max(r[1].length, r[4].length),7);\n\t\tff = SSF_frac(aval, Math.pow(10,ri)-1, true);\n\t\treturn sign + (ff[0]||(ff[1] ? \"\" : \"0\")) + \" \" + (ff[1] ? pad_(ff[1],ri) + r[2] + \"/\" + r[3] + rpad_(ff[2],ri): fill(\" \", 2*ri+1 + r[2].length + r[3].length));\n\t}\n\tif((r = fmt.match(/^[#0?]+$/))) {\n\t\to = pad0r(val, 0);\n\t\tif(fmt.length <= o.length) return o;\n\t\treturn hashq(fmt.substr(0,fmt.length-o.length)) + o;\n\t}\n\tif((r = fmt.match(/^([#0?]+)\\.([#0]+)$/))) {\n\t\to = \"\" + val.toFixed(Math.min(r[2].length,10)).replace(/([^0])0+$/,\"$1\");\n\t\tri = o.indexOf(\".\");\n\t\tvar lres = fmt.indexOf(\".\") - ri, rres = fmt.length - o.length - lres;\n\t\treturn hashq(fmt.substr(0,lres) + o + fmt.substr(fmt.length-rres));\n\t}\n\tif((r = fmt.match(/^00,000\\.([#0]*0)$/))) {\n\t\tri = dec(val, r[1].length);\n\t\treturn val < 0 ? \"-\" + write_num_flt(type, fmt, -val) : commaify(flr(val)).replace(/^\\d,\\d{3}$/,\"0$&\").replace(/^\\d*$/,function($$) { return \"00,\" + ($$.length < 3 ? pad0(0,3-$$.length) : \"\") + $$; }) + \".\" + pad0(ri,r[1].length);\n\t}\n\tswitch(fmt) {\n\t\tcase \"###,##0.00\": return write_num_flt(type, \"#,##0.00\", val);\n\t\tcase \"###,###\":\n\t\tcase \"##,###\":\n\t\tcase \"#,###\": var x = commaify(pad0r(aval,0)); return x !== \"0\" ? sign + x : \"\";\n\t\tcase \"###,###.00\": return write_num_flt(type, \"###,##0.00\",val).replace(/^0\\./,\".\");\n\t\tcase \"#,###.00\": return write_num_flt(type, \"#,##0.00\",val).replace(/^0\\./,\".\");\n\t\tdefault:\n\t}\n\tthrow new Error(\"unsupported format |\" + fmt + \"|\");\n}\nfunction write_num_cm2(type/*:string*/, fmt/*:string*/, val/*:number*/)/*:string*/{\n\tvar idx = fmt.length - 1;\n\twhile(fmt.charCodeAt(idx-1) === 44) --idx;\n\treturn write_num(type, fmt.substr(0,idx), val / Math.pow(10,3*(fmt.length-idx)));\n}\nfunction write_num_pct2(type/*:string*/, fmt/*:string*/, val/*:number*/)/*:string*/{\n\tvar sfmt = fmt.replace(pct1,\"\"), mul = fmt.length - sfmt.length;\n\treturn write_num(type, sfmt, val * Math.pow(10,2*mul)) + fill(\"%\",mul);\n}\nfunction write_num_exp2(fmt/*:string*/, val/*:number*/)/*:string*/{\n\tvar o/*:string*/;\n\tvar idx = fmt.indexOf(\"E\") - fmt.indexOf(\".\") - 1;\n\tif(fmt.match(/^#+0.0E\\+0$/)) {\n\t\tif(val == 0) return \"0.0E+0\";\n\t\telse if(val < 0) return \"-\" + write_num_exp2(fmt, -val);\n\t\tvar period = fmt.indexOf(\".\"); if(period === -1) period=fmt.indexOf('E');\n\t\tvar ee = Math.floor(Math.log(val)*Math.LOG10E)%period;\n\t\tif(ee < 0) ee += period;\n\t\to = (val/Math.pow(10,ee)).toPrecision(idx+1+(period+ee)%period);\n\t\tif(!o.match(/[Ee]/)) {\n\t\t\tvar fakee = Math.floor(Math.log(val)*Math.LOG10E);\n\t\t\tif(o.indexOf(\".\") === -1) o = o.charAt(0) + \".\" + o.substr(1) + \"E+\" + (fakee - o.length+ee);\n\t\t\telse o += \"E+\" + (fakee - ee);\n\t\t\to = o.replace(/\\+-/,\"-\");\n\t\t}\n\t\to = o.replace(/^([+-]?)(\\d*)\\.(\\d*)[Ee]/,function($$,$1,$2,$3) { return $1 + $2 + $3.substr(0,(period+ee)%period) + \".\" + $3.substr(ee) + \"E\"; });\n\t} else o = val.toExponential(idx);\n\tif(fmt.match(/E\\+00$/) && o.match(/e[+-]\\d$/)) o = o.substr(0,o.length-1) + \"0\" + o.charAt(o.length-1);\n\tif(fmt.match(/E\\-/) && o.match(/e\\+/)) o = o.replace(/e\\+/,\"e\");\n\treturn o.replace(\"e\",\"E\");\n}\nfunction write_num_int(type/*:string*/, fmt/*:string*/, val/*:number*/)/*:string*/ {\n\tif(type.charCodeAt(0) === 40 && !fmt.match(closeparen)) {\n\t\tvar ffmt = fmt.replace(/\\( */,\"\").replace(/ \\)/,\"\").replace(/\\)/,\"\");\n\t\tif(val >= 0) return write_num_int('n', ffmt, val);\n\t\treturn '(' + write_num_int('n', ffmt, -val) + ')';\n\t}\n\tif(fmt.charCodeAt(fmt.length - 1) === 44) return write_num_cm2(type, fmt, val);\n\tif(fmt.indexOf('%') !== -1) return write_num_pct2(type, fmt, val);\n\tif(fmt.indexOf('E') !== -1) return write_num_exp2(fmt, val);\n\tif(fmt.charCodeAt(0) === 36) return \"$\"+write_num_int(type,fmt.substr(fmt.charAt(1)==' '?2:1),val);\n\tvar o;\n\tvar r/*:?Array<string>*/, ri, ff, aval = Math.abs(val), sign = val < 0 ? \"-\" : \"\";\n\tif(fmt.match(/^00+$/)) return sign + pad0(aval,fmt.length);\n\tif(fmt.match(/^[#?]+$/)) {\n\t\to = (\"\"+val); if(val === 0) o = \"\";\n\t\treturn o.length > fmt.length ? o : hashq(fmt.substr(0,fmt.length-o.length)) + o;\n\t}\n\tif((r = fmt.match(frac1))) return write_num_f2(r, aval, sign);\n\tif(fmt.match(/^#+0+$/)) return sign + pad0(aval,fmt.length - fmt.indexOf(\"0\"));\n\tif((r = fmt.match(dec1))) {\n\t\t/*:: if(!Array.isArray(r)) throw new Error(\"unreachable\"); */\n\t\to = (\"\"+val).replace(/^([^\\.]+)$/,\"$1.\"+hashq(r[1])).replace(/\\.$/,\".\"+hashq(r[1]));\n\t\to = o.replace(/\\.(\\d*)$/,function($$, $1) {\n\t\t/*:: if(!Array.isArray(r)) throw new Error(\"unreachable\"); */\n\t\t\treturn \".\" + $1 + fill(\"0\", hashq(r[1]).length-$1.length); });\n\t\treturn fmt.indexOf(\"0.\") !== -1 ? o : o.replace(/^0\\./,\".\");\n\t}\n\tfmt = fmt.replace(/^#+([0.])/, \"$1\");\n\tif((r = fmt.match(/^(0*)\\.(#*)$/))) {\n\t\treturn sign + (\"\"+aval).replace(/\\.(\\d*[1-9])0*$/,\".$1\").replace(/^(-?\\d*)$/,\"$1.\").replace(/^0\\./,r[1].length?\"0.\":\".\");\n\t}\n\tif((r = fmt.match(/^#{1,3},##0(\\.?)$/))) return sign + commaify((\"\"+aval));\n\tif((r = fmt.match(/^#,##0\\.([#0]*0)$/))) {\n\t\treturn val < 0 ? \"-\" + write_num_int(type, fmt, -val) : commaify((\"\"+val)) + \".\" + fill('0',r[1].length);\n\t}\n\tif((r = fmt.match(/^#,#*,#0/))) return write_num_int(type,fmt.replace(/^#,#*,/,\"\"),val);\n\tif((r = fmt.match(/^([0#]+)(\\\\?-([0#]+))+$/))) {\n\t\to = _strrev(write_num_int(type, fmt.replace(/[\\\\-]/g,\"\"), val));\n\t\tri = 0;\n\t\treturn _strrev(_strrev(fmt.replace(/\\\\/g,\"\")).replace(/[0#]/g,function(x){return ri<o.length?o.charAt(ri++):x==='0'?'0':\"\";}));\n\t}\n\tif(fmt.match(phone)) {\n\t\to = write_num_int(type, \"##########\", val);\n\t\treturn \"(\" + o.substr(0,3) + \") \" + o.substr(3, 3) + \"-\" + o.substr(6);\n\t}\n\tvar oa = \"\";\n\tif((r = fmt.match(/^([#0?]+)( ?)\\/( ?)([#0?]+)/))) {\n\t\tri = Math.min(/*::String(*/r[4]/*::)*/.length,7);\n\t\tff = SSF_frac(aval, Math.pow(10,ri)-1, false);\n\t\to = \"\" + sign;\n\t\toa = write_num(\"n\", /*::String(*/r[1]/*::)*/, ff[1]);\n\t\tif(oa.charAt(oa.length-1) == \" \") oa = oa.substr(0,oa.length-1) + \"0\";\n\t\to += oa + /*::String(*/r[2]/*::)*/ + \"/\" + /*::String(*/r[3]/*::)*/;\n\t\toa = rpad_(ff[2],ri);\n\t\tif(oa.length < r[4].length) oa = hashq(r[4].substr(r[4].length-oa.length)) + oa;\n\t\to += oa;\n\t\treturn o;\n\t}\n\tif((r = fmt.match(/^# ([#0?]+)( ?)\\/( ?)([#0?]+)/))) {\n\t\tri = Math.min(Math.max(r[1].length, r[4].length),7);\n\t\tff = SSF_frac(aval, Math.pow(10,ri)-1, true);\n\t\treturn sign + (ff[0]||(ff[1] ? \"\" : \"0\")) + \" \" + (ff[1] ? pad_(ff[1],ri) + r[2] + \"/\" + r[3] + rpad_(ff[2],ri): fill(\" \", 2*ri+1 + r[2].length + r[3].length));\n\t}\n\tif((r = fmt.match(/^[#0?]+$/))) {\n\t\to = \"\" + val;\n\t\tif(fmt.length <= o.length) return o;\n\t\treturn hashq(fmt.substr(0,fmt.length-o.length)) + o;\n\t}\n\tif((r = fmt.match(/^([#0]+)\\.([#0]+)$/))) {\n\t\to = \"\" + val.toFixed(Math.min(r[2].length,10)).replace(/([^0])0+$/,\"$1\");\n\t\tri = o.indexOf(\".\");\n\t\tvar lres = fmt.indexOf(\".\") - ri, rres = fmt.length - o.length - lres;\n\t\treturn hashq(fmt.substr(0,lres) + o + fmt.substr(fmt.length-rres));\n\t}\n\tif((r = fmt.match(/^00,000\\.([#0]*0)$/))) {\n\t\treturn val < 0 ? \"-\" + write_num_int(type, fmt, -val) : commaify(\"\"+val).replace(/^\\d,\\d{3}$/,\"0$&\").replace(/^\\d*$/,function($$) { return \"00,\" + ($$.length < 3 ? pad0(0,3-$$.length) : \"\") + $$; }) + \".\" + pad0(0,r[1].length);\n\t}\n\tswitch(fmt) {\n\t\tcase \"###,###\":\n\t\tcase \"##,###\":\n\t\tcase \"#,###\": var x = commaify(\"\"+aval); return x !== \"0\" ? sign + x : \"\";\n\t\tdefault:\n\t\t\tif(fmt.match(/\\.[0#?]*$/)) return write_num_int(type, fmt.slice(0,fmt.lastIndexOf(\".\")), val) + hashq(fmt.slice(fmt.lastIndexOf(\".\")));\n\t}\n\tthrow new Error(\"unsupported format |\" + fmt + \"|\");\n}\nfunction write_num(type/*:string*/, fmt/*:string*/, val/*:number*/)/*:string*/ {\n\treturn (val|0) === val ? write_num_int(type, fmt, val) : write_num_flt(type, fmt, val);\n}\nfunction SSF_split_fmt(fmt/*:string*/)/*:Array<string>*/ {\n\tvar out/*:Array<string>*/ = [];\n\tvar in_str = false/*, cc*/;\n\tfor(var i = 0, j = 0; i < fmt.length; ++i) switch((/*cc=*/fmt.charCodeAt(i))) {\n\t\tcase 34: /* '\"' */\n\t\t\tin_str = !in_str; break;\n\t\tcase 95: case 42: case 92: /* '_' '*' '\\\\' */\n\t\t\t++i; break;\n\t\tcase 59: /* ';' */\n\t\t\tout[out.length] = fmt.substr(j,i-j);\n\t\t\tj = i+1;\n\t}\n\tout[out.length] = fmt.substr(j);\n\tif(in_str === true) throw new Error(\"Format |\" + fmt + \"| unterminated string \");\n\treturn out;\n}\n\nvar SSF_abstime = /\\[[HhMmSs\\u0E0A\\u0E19\\u0E17]*\\]/;\nfunction fmt_is_date(fmt/*:string*/)/*:boolean*/ {\n\tvar i = 0, /*cc = 0,*/ c = \"\", o = \"\";\n\twhile(i < fmt.length) {\n\t\tswitch((c = fmt.charAt(i))) {\n\t\t\tcase 'G': if(SSF_isgeneral(fmt, i)) i+= 6; i++; break;\n\t\t\tcase '\"': for(;(/*cc=*/fmt.charCodeAt(++i)) !== 34 && i < fmt.length;){/*empty*/} ++i; break;\n\t\t\tcase '\\\\': i+=2; break;\n\t\t\tcase '_': i+=2; break;\n\t\t\tcase '@': ++i; break;\n\t\t\tcase 'B': case 'b':\n\t\t\t\tif(fmt.charAt(i+1) === \"1\" || fmt.charAt(i+1) === \"2\") return true;\n\t\t\t\t/* falls through */\n\t\t\tcase 'M': case 'D': case 'Y': case 'H': case 'S': case 'E':\n\t\t\t\t/* falls through */\n\t\t\tcase 'm': case 'd': case 'y': case 'h': case 's': case 'e': case 'g': return true;\n\t\t\tcase 'A': case 'a': case '上':\n\t\t\t\tif(fmt.substr(i, 3).toUpperCase() === \"A/P\") return true;\n\t\t\t\tif(fmt.substr(i, 5).toUpperCase() === \"AM/PM\") return true;\n\t\t\t\tif(fmt.substr(i, 5).toUpperCase() === \"上午/下午\") return true;\n\t\t\t\t++i; break;\n\t\t\tcase '[':\n\t\t\t\to = c;\n\t\t\t\twhile(fmt.charAt(i++) !== ']' && i < fmt.length) o += fmt.charAt(i);\n\t\t\t\tif(o.match(SSF_abstime)) return true;\n\t\t\t\tbreak;\n\t\t\tcase '.':\n\t\t\t\t/* falls through */\n\t\t\tcase '0': case '#':\n\t\t\t\twhile(i < fmt.length && (\"0#?.,E+-%\".indexOf(c=fmt.charAt(++i)) > -1 || (c=='\\\\' && fmt.charAt(i+1) == \"-\" && \"0#\".indexOf(fmt.charAt(i+2))>-1))){/* empty */}\n\t\t\t\tbreak;\n\t\t\tcase '?': while(fmt.charAt(++i) === c){/* empty */} break;\n\t\t\tcase '*': ++i; if(fmt.charAt(i) == ' ' || fmt.charAt(i) == '*') ++i; break;\n\t\t\tcase '(': case ')': ++i; break;\n\t\t\tcase '1': case '2': case '3': case '4': case '5': case '6': case '7': case '8': case '9':\n\t\t\t\twhile(i < fmt.length && \"0123456789\".indexOf(fmt.charAt(++i)) > -1){/* empty */} break;\n\t\t\tcase ' ': ++i; break;\n\t\t\tdefault: ++i; break;\n\t\t}\n\t}\n\treturn false;\n}\n\nfunction eval_fmt(fmt/*:string*/, v/*:any*/, opts/*:any*/, flen/*:number*/) {\n\tvar out = [], o = \"\", i = 0, c = \"\", lst='t', dt, j, cc;\n\tvar hr='H';\n\t/* Tokenize */\n\twhile(i < fmt.length) {\n\t\tswitch((c = fmt.charAt(i))) {\n\t\t\tcase 'G': /* General */\n\t\t\t\tif(!SSF_isgeneral(fmt, i)) throw new Error('unrecognized character ' + c + ' in ' +fmt);\n\t\t\t\tout[out.length] = {t:'G', v:'General'}; i+=7; break;\n\t\t\tcase '\"': /* Literal text */\n\t\t\t\tfor(o=\"\";(cc=fmt.charCodeAt(++i)) !== 34 && i < fmt.length;) o += String.fromCharCode(cc);\n\t\t\t\tout[out.length] = {t:'t', v:o}; ++i; break;\n\t\t\tcase '\\\\': var w = fmt.charAt(++i), t = (w === \"(\" || w === \")\") ? w : 't';\n\t\t\t\tout[out.length] = {t:t, v:w}; ++i; break;\n\t\t\tcase '_': out[out.length] = {t:'t', v:\" \"}; i+=2; break;\n\t\t\tcase '@': /* Text Placeholder */\n\t\t\t\tout[out.length] = {t:'T', v:v}; ++i; break;\n\t\t\tcase 'B': case 'b':\n\t\t\t\tif(fmt.charAt(i+1) === \"1\" || fmt.charAt(i+1) === \"2\") {\n\t\t\t\t\tif(dt==null) { dt=SSF_parse_date_code(v, opts, fmt.charAt(i+1) === \"2\"); if(dt==null) return \"\"; }\n\t\t\t\t\tout[out.length] = {t:'X', v:fmt.substr(i,2)}; lst = c; i+=2; break;\n\t\t\t\t}\n\t\t\t\t/* falls through */\n\t\t\tcase 'M': case 'D': case 'Y': case 'H': case 'S': case 'E':\n\t\t\t\tc = c.toLowerCase();\n\t\t\t\t/* falls through */\n\t\t\tcase 'm': case 'd': case 'y': case 'h': case 's': case 'e': case 'g':\n\t\t\t\tif(v < 0) return \"\";\n\t\t\t\tif(dt==null) { dt=SSF_parse_date_code(v, opts); if(dt==null) return \"\"; }\n\t\t\t\to = c; while(++i < fmt.length && fmt.charAt(i).toLowerCase() === c) o+=c;\n\t\t\t\tif(c === 'm' && lst.toLowerCase() === 'h') c = 'M';\n\t\t\t\tif(c === 'h') c = hr;\n\t\t\t\tout[out.length] = {t:c, v:o}; lst = c; break;\n\t\t\tcase 'A': case 'a': case '上':\n\t\t\t\tvar q={t:c, v:c};\n\t\t\t\tif(dt==null) dt=SSF_parse_date_code(v, opts);\n\t\t\t\tif(fmt.substr(i, 3).toUpperCase() === \"A/P\") { if(dt!=null) q.v = dt.H >= 12 ? fmt.charAt(i+2) : c; q.t = 'T'; hr='h';i+=3;}\n\t\t\t\telse if(fmt.substr(i,5).toUpperCase() === \"AM/PM\") { if(dt!=null) q.v = dt.H >= 12 ? \"PM\" : \"AM\"; q.t = 'T'; i+=5; hr='h'; }\n\t\t\t\telse if(fmt.substr(i,5).toUpperCase() === \"上午/下午\") { if(dt!=null) q.v = dt.H >= 12 ? \"下午\" : \"上午\"; q.t = 'T'; i+=5; hr='h'; }\n\t\t\t\telse { q.t = \"t\"; ++i; }\n\t\t\t\tif(dt==null && q.t === 'T') return \"\";\n\t\t\t\tout[out.length] = q; lst = c; break;\n\t\t\tcase '[':\n\t\t\t\to = c;\n\t\t\t\twhile(fmt.charAt(i++) !== ']' && i < fmt.length) o += fmt.charAt(i);\n\t\t\t\tif(o.slice(-1) !== ']') throw 'unterminated \"[\" block: |' + o + '|';\n\t\t\t\tif(o.match(SSF_abstime)) {\n\t\t\t\t\tif(dt==null) { dt=SSF_parse_date_code(v, opts); if(dt==null) return \"\"; }\n\t\t\t\t\tout[out.length] = {t:'Z', v:o.toLowerCase()};\n\t\t\t\t\tlst = o.charAt(1);\n\t\t\t\t} else if(o.indexOf(\"$\") > -1) {\n\t\t\t\t\to = (o.match(/\\$([^-\\[\\]]*)/)||[])[1]||\"$\";\n\t\t\t\t\tif(!fmt_is_date(fmt)) out[out.length] = {t:'t',v:o};\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t/* Numbers */\n\t\t\tcase '.':\n\t\t\t\tif(dt != null) {\n\t\t\t\t\to = c; while(++i < fmt.length && (c=fmt.charAt(i)) === \"0\") o += c;\n\t\t\t\t\tout[out.length] = {t:'s', v:o}; break;\n\t\t\t\t}\n\t\t\t\t/* falls through */\n\t\t\tcase '0': case '#':\n\t\t\t\to = c; while(++i < fmt.length && \"0#?.,E+-%\".indexOf(c=fmt.charAt(i)) > -1) o += c;\n\t\t\t\tout[out.length] = {t:'n', v:o}; break;\n\t\t\tcase '?':\n\t\t\t\to = c; while(fmt.charAt(++i) === c) o+=c;\n\t\t\t\tout[out.length] = {t:c, v:o}; lst = c; break;\n\t\t\tcase '*': ++i; if(fmt.charAt(i) == ' ' || fmt.charAt(i) == '*') ++i; break; // **\n\t\t\tcase '(': case ')': out[out.length] = {t:(flen===1?'t':c), v:c}; ++i; break;\n\t\t\tcase '1': case '2': case '3': case '4': case '5': case '6': case '7': case '8': case '9':\n\t\t\t\to = c; while(i < fmt.length && \"0123456789\".indexOf(fmt.charAt(++i)) > -1) o+=fmt.charAt(i);\n\t\t\t\tout[out.length] = {t:'D', v:o}; break;\n\t\t\tcase ' ': out[out.length] = {t:c, v:c}; ++i; break;\n\t\t\tcase '$': out[out.length] = {t:'t', v:'$'}; ++i; break;\n\t\t\tdefault:\n\t\t\t\tif(\",$-+/():!^&'~{}<>=€acfijklopqrtuvwxzP\".indexOf(c) === -1) throw new Error('unrecognized character ' + c + ' in ' + fmt);\n\t\t\t\tout[out.length] = {t:'t', v:c}; ++i; break;\n\t\t}\n\t}\n\n\t/* Scan for date/time parts */\n\tvar bt = 0, ss0 = 0, ssm;\n\tfor(i=out.length-1, lst='t'; i >= 0; --i) {\n\t\tswitch(out[i].t) {\n\t\t\tcase 'h': case 'H': out[i].t = hr; lst='h'; if(bt < 1) bt = 1; break;\n\t\t\tcase 's':\n\t\t\t\tif((ssm=out[i].v.match(/\\.0+$/))) ss0=Math.max(ss0,ssm[0].length-1);\n\t\t\t\tif(bt < 3) bt = 3;\n\t\t\t/* falls through */\n\t\t\tcase 'd': case 'y': case 'M': case 'e': lst=out[i].t; break;\n\t\t\tcase 'm': if(lst === 's') { out[i].t = 'M'; if(bt < 2) bt = 2; } break;\n\t\t\tcase 'X': /*if(out[i].v === \"B2\");*/\n\t\t\t\tbreak;\n\t\t\tcase 'Z':\n\t\t\t\tif(bt < 1 && out[i].v.match(/[Hh]/)) bt = 1;\n\t\t\t\tif(bt < 2 && out[i].v.match(/[Mm]/)) bt = 2;\n\t\t\t\tif(bt < 3 && out[i].v.match(/[Ss]/)) bt = 3;\n\t\t}\n\t}\n\t/* time rounding depends on presence of minute / second / usec fields */\n\tswitch(bt) {\n\t\tcase 0: break;\n\t\tcase 1:\n\t\t\t/*::if(!dt) break;*/\n\t\t\tif(dt.u >= 0.5) { dt.u = 0; ++dt.S; }\n\t\t\tif(dt.S >=  60) { dt.S = 0; ++dt.M; }\n\t\t\tif(dt.M >=  60) { dt.M = 0; ++dt.H; }\n\t\t\tbreak;\n\t\tcase 2:\n\t\t\t/*::if(!dt) break;*/\n\t\t\tif(dt.u >= 0.5) { dt.u = 0; ++dt.S; }\n\t\t\tif(dt.S >=  60) { dt.S = 0; ++dt.M; }\n\t\t\tbreak;\n\t}\n\n\t/* replace fields */\n\tvar nstr = \"\", jj;\n\tfor(i=0; i < out.length; ++i) {\n\t\tswitch(out[i].t) {\n\t\t\tcase 't': case 'T': case ' ': case 'D': break;\n\t\t\tcase 'X': out[i].v = \"\"; out[i].t = \";\"; break;\n\t\t\tcase 'd': case 'm': case 'y': case 'h': case 'H': case 'M': case 's': case 'e': case 'b': case 'Z':\n\t\t\t\t/*::if(!dt) throw \"unreachable\"; */\n\t\t\t\tout[i].v = SSF_write_date(out[i].t.charCodeAt(0), out[i].v, dt, ss0);\n\t\t\t\tout[i].t = 't'; break;\n\t\t\tcase 'n': case '?':\n\t\t\t\tjj = i+1;\n\t\t\t\twhile(out[jj] != null && (\n\t\t\t\t\t(c=out[jj].t) === \"?\" || c === \"D\" ||\n\t\t\t\t\t((c === \" \" || c === \"t\") && out[jj+1] != null && (out[jj+1].t === '?' || out[jj+1].t === \"t\" && out[jj+1].v === '/')) ||\n\t\t\t\t\t(out[i].t === '(' && (c === ' ' || c === 'n' || c === ')')) ||\n\t\t\t\t\t(c === 't' && (out[jj].v === '/' || out[jj].v === ' ' && out[jj+1] != null && out[jj+1].t == '?'))\n\t\t\t\t)) {\n\t\t\t\t\tout[i].v += out[jj].v;\n\t\t\t\t\tout[jj] = {v:\"\", t:\";\"}; ++jj;\n\t\t\t\t}\n\t\t\t\tnstr += out[i].v;\n\t\t\t\ti = jj-1; break;\n\t\t\tcase 'G': out[i].t = 't'; out[i].v = SSF_general(v,opts); break;\n\t\t}\n\t}\n\tvar vv = \"\", myv, ostr;\n\tif(nstr.length > 0) {\n\t\tif(nstr.charCodeAt(0) == 40) /* '(' */ {\n\t\t\tmyv = (v<0&&nstr.charCodeAt(0) === 45 ? -v : v);\n\t\t\tostr = write_num('n', nstr, myv);\n\t\t} else {\n\t\t\tmyv = (v<0 && flen > 1 ? -v : v);\n\t\t\tostr = write_num('n', nstr, myv);\n\t\t\tif(myv < 0 && out[0] && out[0].t == 't') {\n\t\t\t\tostr = ostr.substr(1);\n\t\t\t\tout[0].v = \"-\" + out[0].v;\n\t\t\t}\n\t\t}\n\t\tjj=ostr.length-1;\n\t\tvar decpt = out.length;\n\t\tfor(i=0; i < out.length; ++i) if(out[i] != null && out[i].t != 't' && out[i].v.indexOf(\".\") > -1) { decpt = i; break; }\n\t\tvar lasti=out.length;\n\t\tif(decpt === out.length && ostr.indexOf(\"E\") === -1) {\n\t\t\tfor(i=out.length-1; i>= 0;--i) {\n\t\t\t\tif(out[i] == null || 'n?'.indexOf(out[i].t) === -1) continue;\n\t\t\t\tif(jj>=out[i].v.length-1) { jj -= out[i].v.length; out[i].v = ostr.substr(jj+1, out[i].v.length); }\n\t\t\t\telse if(jj < 0) out[i].v = \"\";\n\t\t\t\telse { out[i].v = ostr.substr(0, jj+1); jj = -1; }\n\t\t\t\tout[i].t = 't';\n\t\t\t\tlasti = i;\n\t\t\t}\n\t\t\tif(jj>=0 && lasti<out.length) out[lasti].v = ostr.substr(0,jj+1) + out[lasti].v;\n\t\t}\n\t\telse if(decpt !== out.length && ostr.indexOf(\"E\") === -1) {\n\t\t\tjj = ostr.indexOf(\".\")-1;\n\t\t\tfor(i=decpt; i>= 0; --i) {\n\t\t\t\tif(out[i] == null || 'n?'.indexOf(out[i].t) === -1) continue;\n\t\t\t\tj=out[i].v.indexOf(\".\")>-1&&i===decpt?out[i].v.indexOf(\".\")-1:out[i].v.length-1;\n\t\t\t\tvv = out[i].v.substr(j+1);\n\t\t\t\tfor(; j>=0; --j) {\n\t\t\t\t\tif(jj>=0 && (out[i].v.charAt(j) === \"0\" || out[i].v.charAt(j) === \"#\")) vv = ostr.charAt(jj--) + vv;\n\t\t\t\t}\n\t\t\t\tout[i].v = vv;\n\t\t\t\tout[i].t = 't';\n\t\t\t\tlasti = i;\n\t\t\t}\n\t\t\tif(jj>=0 && lasti<out.length) out[lasti].v = ostr.substr(0,jj+1) + out[lasti].v;\n\t\t\tjj = ostr.indexOf(\".\")+1;\n\t\t\tfor(i=decpt; i<out.length; ++i) {\n\t\t\t\tif(out[i] == null || ('n?('.indexOf(out[i].t) === -1 && i !== decpt)) continue;\n\t\t\t\tj=out[i].v.indexOf(\".\")>-1&&i===decpt?out[i].v.indexOf(\".\")+1:0;\n\t\t\t\tvv = out[i].v.substr(0,j);\n\t\t\t\tfor(; j<out[i].v.length; ++j) {\n\t\t\t\t\tif(jj<ostr.length) vv += ostr.charAt(jj++);\n\t\t\t\t}\n\t\t\t\tout[i].v = vv;\n\t\t\t\tout[i].t = 't';\n\t\t\t\tlasti = i;\n\t\t\t}\n\t\t}\n\t}\n\tfor(i=0; i<out.length; ++i) if(out[i] != null && 'n?'.indexOf(out[i].t)>-1) {\n\t\tmyv = (flen >1 && v < 0 && i>0 && out[i-1].v === \"-\" ? -v:v);\n\t\tout[i].v = write_num(out[i].t, out[i].v, myv);\n\t\tout[i].t = 't';\n\t}\n\tvar retval = \"\";\n\tfor(i=0; i !== out.length; ++i) if(out[i] != null) retval += out[i].v;\n\treturn retval;\n}\n\nvar cfregex2 = /\\[(=|>[=]?|<[>=]?)(-?\\d+(?:\\.\\d*)?)\\]/;\nfunction chkcond(v, rr) {\n\tif(rr == null) return false;\n\tvar thresh = parseFloat(rr[2]);\n\tswitch(rr[1]) {\n\t\tcase \"=\":  if(v == thresh) return true; break;\n\t\tcase \">\":  if(v >  thresh) return true; break;\n\t\tcase \"<\":  if(v <  thresh) return true; break;\n\t\tcase \"<>\": if(v != thresh) return true; break;\n\t\tcase \">=\": if(v >= thresh) return true; break;\n\t\tcase \"<=\": if(v <= thresh) return true; break;\n\t}\n\treturn false;\n}\nfunction choose_fmt(f/*:string*/, v/*:any*/) {\n\tvar fmt = SSF_split_fmt(f);\n\tvar l = fmt.length, lat = fmt[l-1].indexOf(\"@\");\n\tif(l<4 && lat>-1) --l;\n\tif(fmt.length > 4) throw new Error(\"cannot find right format for |\" + fmt.join(\"|\") + \"|\");\n\tif(typeof v !== \"number\") return [4, fmt.length === 4 || lat>-1?fmt[fmt.length-1]:\"@\"];\n\tswitch(fmt.length) {\n\t\tcase 1: fmt = lat>-1 ? [\"General\", \"General\", \"General\", fmt[0]] : [fmt[0], fmt[0], fmt[0], \"@\"]; break;\n\t\tcase 2: fmt = lat>-1 ? [fmt[0], fmt[0], fmt[0], fmt[1]] : [fmt[0], fmt[1], fmt[0], \"@\"]; break;\n\t\tcase 3: fmt = lat>-1 ? [fmt[0], fmt[1], fmt[0], fmt[2]] : [fmt[0], fmt[1], fmt[2], \"@\"]; break;\n\t\tcase 4: break;\n\t}\n\tvar ff = v > 0 ? fmt[0] : v < 0 ? fmt[1] : fmt[2];\n\tif(fmt[0].indexOf(\"[\") === -1 && fmt[1].indexOf(\"[\") === -1) return [l, ff];\n\tif(fmt[0].match(/\\[[=<>]/) != null || fmt[1].match(/\\[[=<>]/) != null) {\n\t\tvar m1 = fmt[0].match(cfregex2);\n\t\tvar m2 = fmt[1].match(cfregex2);\n\t\treturn chkcond(v, m1) ? [l, fmt[0]] : chkcond(v, m2) ? [l, fmt[1]] : [l, fmt[m1 != null && m2 != null ? 2 : 1]];\n\t}\n\treturn [l, ff];\n}\nfunction SSF_format(fmt/*:string|number*/,v/*:any*/,o/*:?any*/) {\n\tif(o == null) o = {};\n\tvar sfmt = \"\";\n\tswitch(typeof fmt) {\n\t\tcase \"string\":\n\t\t\tif(fmt == \"m/d/yy\" && o.dateNF) sfmt = o.dateNF;\n\t\t\telse sfmt = fmt;\n\t\t\tbreak;\n\t\tcase \"number\":\n\t\t\tif(fmt == 14 && o.dateNF) sfmt = o.dateNF;\n\t\t\telse sfmt = (o.table != null ? (o.table/*:any*/) : table_fmt)[fmt];\n\t\t\tif(sfmt == null) sfmt = (o.table && o.table[SSF_default_map[fmt]]) || table_fmt[SSF_default_map[fmt]];\n\t\t\tif(sfmt == null) sfmt = SSF_default_str[fmt] || \"General\";\n\t\t\tbreak;\n\t}\n\tif(SSF_isgeneral(sfmt,0)) return SSF_general(v, o);\n\tif(v instanceof Date) v = datenum_local(v, o.date1904);\n\tvar f = choose_fmt(sfmt, v);\n\tif(SSF_isgeneral(f[1])) return SSF_general(v, o);\n\tif(v === true) v = \"TRUE\"; else if(v === false) v = \"FALSE\";\n\telse if(v === \"\" || v == null) return \"\";\n\treturn eval_fmt(f[1], v, o, f[0]);\n}\nfunction SSF_load(fmt/*:string*/, idx/*:?number*/)/*:number*/ {\n\tif(typeof idx != 'number') {\n\t\tidx = +idx || -1;\n/*::if(typeof idx != 'number') return 0x188; */\n\t\tfor(var i = 0; i < 0x0188; ++i) {\n/*::if(typeof idx != 'number') return 0x188; */\n\t\t\tif(table_fmt[i] == undefined) { if(idx < 0) idx = i; continue; }\n\t\t\tif(table_fmt[i] == fmt) { idx = i; break; }\n\t\t}\n/*::if(typeof idx != 'number') return 0x188; */\n\t\tif(idx < 0) idx = 0x187;\n\t}\n/*::if(typeof idx != 'number') return 0x188; */\n\ttable_fmt[idx] = fmt;\n\treturn idx;\n}\nfunction SSF_load_table(tbl/*:SSFTable*/)/*:void*/ {\n\tfor(var i=0; i!=0x0188; ++i)\n\t\tif(tbl[i] !== undefined) SSF_load(tbl[i], i);\n}\n\nfunction make_ssf() {\n\ttable_fmt = SSF_init_table();\n}\n\nvar SSF = {\n\tformat: SSF_format,\n\tload: SSF_load,\n\t_table: table_fmt,\n\tload_table: SSF_load_table,\n\tparse_date_code: SSF_parse_date_code,\n\tis_date: fmt_is_date,\n\tget_table: function get_table() { return SSF._table = table_fmt; }\n};\n\nvar SSFImplicit/*{[number]:string}*/ = ({\n\t\"5\": '\"$\"#,##0_);\\\\(\"$\"#,##0\\\\)',\n\t\"6\": '\"$\"#,##0_);[Red]\\\\(\"$\"#,##0\\\\)',\n\t\"7\": '\"$\"#,##0.00_);\\\\(\"$\"#,##0.00\\\\)',\n\t\"8\": '\"$\"#,##0.00_);[Red]\\\\(\"$\"#,##0.00\\\\)',\n\t\"23\": 'General', \"24\": 'General', \"25\": 'General', \"26\": 'General',\n\t\"27\": 'm/d/yy', \"28\": 'm/d/yy', \"29\": 'm/d/yy', \"30\": 'm/d/yy', \"31\": 'm/d/yy',\n\t\"32\": 'h:mm:ss', \"33\": 'h:mm:ss', \"34\": 'h:mm:ss', \"35\": 'h:mm:ss',\n\t\"36\": 'm/d/yy',\n\t\"41\": '_(* #,##0_);_(* \\(#,##0\\);_(* \"-\"_);_(@_)',\n\t\"42\": '_(\"$\"* #,##0_);_(\"$\"* \\(#,##0\\);_(\"$\"* \"-\"_);_(@_)',\n\t\"43\": '_(* #,##0.00_);_(* \\(#,##0.00\\);_(* \"-\"??_);_(@_)',\n\t\"44\": '_(\"$\"* #,##0.00_);_(\"$\"* \\(#,##0.00\\);_(\"$\"* \"-\"??_);_(@_)',\n\t\"50\": 'm/d/yy', \"51\": 'm/d/yy', \"52\": 'm/d/yy', \"53\": 'm/d/yy', \"54\": 'm/d/yy',\n\t\"55\": 'm/d/yy', \"56\": 'm/d/yy', \"57\": 'm/d/yy', \"58\": 'm/d/yy',\n\t\"59\": '0',\n\t\"60\": '0.00',\n\t\"61\": '#,##0',\n\t\"62\": '#,##0.00',\n\t\"63\": '\"$\"#,##0_);\\\\(\"$\"#,##0\\\\)',\n\t\"64\": '\"$\"#,##0_);[Red]\\\\(\"$\"#,##0\\\\)',\n\t\"65\": '\"$\"#,##0.00_);\\\\(\"$\"#,##0.00\\\\)',\n\t\"66\": '\"$\"#,##0.00_);[Red]\\\\(\"$\"#,##0.00\\\\)',\n\t\"67\": '0%',\n\t\"68\": '0.00%',\n\t\"69\": '# ?/?',\n\t\"70\": '# ??/??',\n\t\"71\": 'm/d/yy',\n\t\"72\": 'm/d/yy',\n\t\"73\": 'd-mmm-yy',\n\t\"74\": 'd-mmm',\n\t\"75\": 'mmm-yy',\n\t\"76\": 'h:mm',\n\t\"77\": 'h:mm:ss',\n\t\"78\": 'm/d/yy h:mm',\n\t\"79\": 'mm:ss',\n\t\"80\": '[h]:mm:ss',\n\t\"81\": 'mmss.0'\n}/*:any*/);\n\n/* dateNF parse TODO: move to SSF */\nvar dateNFregex = /[dD]+|[mM]+|[yYeE]+|[Hh]+|[Ss]+/g;\nfunction dateNF_regex(dateNF/*:string|number*/)/*:RegExp*/ {\n\tvar fmt = typeof dateNF == \"number\" ? table_fmt[dateNF] : dateNF;\n\tfmt = fmt.replace(dateNFregex, \"(\\\\d+)\");\n\treturn new RegExp(\"^\" + fmt + \"$\");\n}\nfunction dateNF_fix(str/*:string*/, dateNF/*:string*/, match/*:Array<string>*/)/*:string*/ {\n\tvar Y = -1, m = -1, d = -1, H = -1, M = -1, S = -1;\n\t(dateNF.match(dateNFregex)||[]).forEach(function(n, i) {\n\t\tvar v = parseInt(match[i+1], 10);\n\t\tswitch(n.toLowerCase().charAt(0)) {\n\t\t\tcase 'y': Y = v; break; case 'd': d = v; break;\n\t\t\tcase 'h': H = v; break; case 's': S = v; break;\n\t\t\tcase 'm': if(H >= 0) M = v; else m = v; break;\n\t\t}\n\t});\n\tif(S >= 0 && M == -1 && m >= 0) { M = m; m = -1; }\n\tvar datestr = ((\"\" + (Y>=0?Y: new Date().getFullYear())).slice(-4) + \"-\" + (\"00\" + (m>=1?m:1)).slice(-2) + \"-\" + (\"00\" + (d>=1?d:1)).slice(-2));\n\tif(datestr.length == 7) datestr = \"0\" + datestr;\n\tif(datestr.length == 8) datestr = \"20\" + datestr;\n\tvar timestr = ((\"00\" + (H>=0?H:0)).slice(-2) + \":\" + (\"00\" + (M>=0?M:0)).slice(-2) + \":\" + (\"00\" + (S>=0?S:0)).slice(-2));\n\tif(H == -1 && M == -1 && S == -1) return datestr;\n\tif(Y == -1 && m == -1 && d == -1) return timestr;\n\treturn datestr + \"T\" + timestr;\n}\n\n/* table of bad formats written by third-party tools */\nvar bad_formats = {\n\t\"d.m\": \"d\\\\.m\" // Issue #2571 Google Sheets writes invalid format 'd.m', correct format is 'd\".\"m' or 'd\\\\.m'\n};\n\nfunction SSF__load(fmt, idx) {\n\treturn SSF_load(bad_formats[fmt] || fmt, idx);\n}\n\n/*::\ndeclare var ReadShift:any;\ndeclare var CheckField:any;\ndeclare var prep_blob:any;\ndeclare var __readUInt32LE:any;\ndeclare var __readInt32LE:any;\ndeclare var __toBuffer:any;\ndeclare var __utf16le:any;\ndeclare var bconcat:any;\ndeclare var s2a:any;\ndeclare var chr0:any;\ndeclare var chr1:any;\ndeclare var has_buf:boolean;\ndeclare var new_buf:any;\ndeclare var new_raw_buf:any;\ndeclare var new_unsafe_buf:any;\ndeclare var Buffer_from:any;\n*/\n/* cfb.js (C) 2013-present SheetJS -- http://sheetjs.com */\n/* vim: set ts=2: */\n/*jshint eqnull:true */\n/*exported CFB */\n/*global Uint8Array:false, Uint16Array:false */\n\n/*::\ntype SectorEntry = {\n\tname?:string;\n\tnodes?:Array<number>;\n\tdata:RawBytes;\n};\ntype SectorList = {\n\t[k:string|number]:SectorEntry;\n\tname:?string;\n\tfat_addrs:Array<number>;\n\tssz:number;\n}\ntype CFBFiles = {[n:string]:CFBEntry};\n*/\n/* crc32.js (C) 2014-present SheetJS -- http://sheetjs.com */\n/* vim: set ts=2: */\n/*exported CRC32 */\nvar CRC32 = /*#__PURE__*/(function() {\nvar CRC32 = {};\nCRC32.version = '1.2.0';\n/* see perf/crc32table.js */\n/*global Int32Array */\nfunction signed_crc_table()/*:any*/ {\n\tvar c = 0, table/*:Array<number>*/ = new Array(256);\n\n\tfor(var n =0; n != 256; ++n){\n\t\tc = n;\n\t\tc = ((c&1) ? (-306674912 ^ (c >>> 1)) : (c >>> 1));\n\t\tc = ((c&1) ? (-306674912 ^ (c >>> 1)) : (c >>> 1));\n\t\tc = ((c&1) ? (-306674912 ^ (c >>> 1)) : (c >>> 1));\n\t\tc = ((c&1) ? (-306674912 ^ (c >>> 1)) : (c >>> 1));\n\t\tc = ((c&1) ? (-306674912 ^ (c >>> 1)) : (c >>> 1));\n\t\tc = ((c&1) ? (-306674912 ^ (c >>> 1)) : (c >>> 1));\n\t\tc = ((c&1) ? (-306674912 ^ (c >>> 1)) : (c >>> 1));\n\t\tc = ((c&1) ? (-306674912 ^ (c >>> 1)) : (c >>> 1));\n\t\ttable[n] = c;\n\t}\n\n\treturn typeof Int32Array !== 'undefined' ? new Int32Array(table) : table;\n}\n\nvar T0 = signed_crc_table();\nfunction slice_by_16_tables(T) {\n\tvar c = 0, v = 0, n = 0, table/*:Array<number>*/ = typeof Int32Array !== 'undefined' ? new Int32Array(4096) : new Array(4096) ;\n\n\tfor(n = 0; n != 256; ++n) table[n] = T[n];\n\tfor(n = 0; n != 256; ++n) {\n\t\tv = T[n];\n\t\tfor(c = 256 + n; c < 4096; c += 256) v = table[c] = (v >>> 8) ^ T[v & 0xFF];\n\t}\n\tvar out = [];\n\tfor(n = 1; n != 16; ++n) out[n - 1] = typeof Int32Array !== 'undefined' && typeof table.subarray == \"function\" ? table.subarray(n * 256, n * 256 + 256) : table.slice(n * 256, n * 256 + 256);\n\treturn out;\n}\nvar TT = slice_by_16_tables(T0);\nvar T1 = TT[0],  T2 = TT[1],  T3 = TT[2],  T4 = TT[3],  T5 = TT[4];\nvar T6 = TT[5],  T7 = TT[6],  T8 = TT[7],  T9 = TT[8],  Ta = TT[9];\nvar Tb = TT[10], Tc = TT[11], Td = TT[12], Te = TT[13], Tf = TT[14];\nfunction crc32_bstr(bstr/*:string*/, seed/*:number*/)/*:number*/ {\n\tvar C = seed/*:: ? 0 : 0 */ ^ -1;\n\tfor(var i = 0, L = bstr.length; i < L;) C = (C>>>8) ^ T0[(C^bstr.charCodeAt(i++))&0xFF];\n\treturn ~C;\n}\n\nfunction crc32_buf(B/*:Uint8Array|Array<number>*/, seed/*:number*/)/*:number*/ {\n\tvar C = seed/*:: ? 0 : 0 */ ^ -1, L = B.length - 15, i = 0;\n\tfor(; i < L;) C =\n\t\tTf[B[i++] ^ (C & 255)] ^\n\t\tTe[B[i++] ^ ((C >> 8) & 255)] ^\n\t\tTd[B[i++] ^ ((C >> 16) & 255)] ^\n\t\tTc[B[i++] ^ (C >>> 24)] ^\n\t\tTb[B[i++]] ^ Ta[B[i++]] ^ T9[B[i++]] ^ T8[B[i++]] ^\n\t\tT7[B[i++]] ^ T6[B[i++]] ^ T5[B[i++]] ^ T4[B[i++]] ^\n\t\tT3[B[i++]] ^ T2[B[i++]] ^ T1[B[i++]] ^ T0[B[i++]];\n\tL += 15;\n\twhile(i < L) C = (C>>>8) ^ T0[(C^B[i++])&0xFF];\n\treturn ~C;\n}\n\nfunction crc32_str(str/*:string*/, seed/*:number*/)/*:number*/ {\n\tvar C = seed ^ -1;\n\tfor(var i = 0, L = str.length, c = 0, d = 0; i < L;) {\n\t\tc = str.charCodeAt(i++);\n\t\tif(c < 0x80) {\n\t\t\tC = (C>>>8) ^ T0[(C^c)&0xFF];\n\t\t} else if(c < 0x800) {\n\t\t\tC = (C>>>8) ^ T0[(C ^ (192|((c>>6)&31)))&0xFF];\n\t\t\tC = (C>>>8) ^ T0[(C ^ (128|(c&63)))&0xFF];\n\t\t} else if(c >= 0xD800 && c < 0xE000) {\n\t\t\tc = (c&1023)+64; d = str.charCodeAt(i++)&1023;\n\t\t\tC = (C>>>8) ^ T0[(C ^ (240|((c>>8)&7)))&0xFF];\n\t\t\tC = (C>>>8) ^ T0[(C ^ (128|((c>>2)&63)))&0xFF];\n\t\t\tC = (C>>>8) ^ T0[(C ^ (128|((d>>6)&15)|((c&3)<<4)))&0xFF];\n\t\t\tC = (C>>>8) ^ T0[(C ^ (128|(d&63)))&0xFF];\n\t\t} else {\n\t\t\tC = (C>>>8) ^ T0[(C ^ (224|((c>>12)&15)))&0xFF];\n\t\t\tC = (C>>>8) ^ T0[(C ^ (128|((c>>6)&63)))&0xFF];\n\t\t\tC = (C>>>8) ^ T0[(C ^ (128|(c&63)))&0xFF];\n\t\t}\n\t}\n\treturn ~C;\n}\nCRC32.table = T0;\nCRC32.bstr = crc32_bstr;\nCRC32.buf = crc32_buf;\nCRC32.str = crc32_str;\nreturn CRC32;\n})();\n/* [MS-CFB] v20171201 */\nvar CFB = /*#__PURE__*/(function _CFB(){\nvar exports/*:CFBModule*/ = /*::(*/{}/*:: :any)*/;\nexports.version = '1.2.2';\n/* [MS-CFB] 2.6.4 */\nfunction namecmp(l/*:string*/, r/*:string*/)/*:number*/ {\n\tvar L = l.split(\"/\"), R = r.split(\"/\");\n\tfor(var i = 0, c = 0, Z = Math.min(L.length, R.length); i < Z; ++i) {\n\t\tif((c = L[i].length - R[i].length)) return c;\n\t\tif(L[i] != R[i]) return L[i] < R[i] ? -1 : 1;\n\t}\n\treturn L.length - R.length;\n}\nfunction dirname(p/*:string*/)/*:string*/ {\n\tif(p.charAt(p.length - 1) == \"/\") return (p.slice(0,-1).indexOf(\"/\") === -1) ? p : dirname(p.slice(0, -1));\n\tvar c = p.lastIndexOf(\"/\");\n\treturn (c === -1) ? p : p.slice(0, c+1);\n}\n\nfunction filename(p/*:string*/)/*:string*/ {\n\tif(p.charAt(p.length - 1) == \"/\") return filename(p.slice(0, -1));\n\tvar c = p.lastIndexOf(\"/\");\n\treturn (c === -1) ? p : p.slice(c+1);\n}\n/* -------------------------------------------------------------------------- */\n/* DOS Date format:\n   high|YYYYYYYm.mmmddddd.HHHHHMMM.MMMSSSSS|low\n   add 1980 to stored year\n   stored second should be doubled\n*/\n\n/* write JS date to buf as a DOS date */\nfunction write_dos_date(buf/*:CFBlob*/, date/*:Date|string*/) {\n\tif(typeof date === \"string\") date = new Date(date);\n\tvar hms/*:number*/ = date.getHours();\n\thms = hms << 6 | date.getMinutes();\n\thms = hms << 5 | (date.getSeconds()>>>1);\n\tbuf.write_shift(2, hms);\n\tvar ymd/*:number*/ = (date.getFullYear() - 1980);\n\tymd = ymd << 4 | (date.getMonth()+1);\n\tymd = ymd << 5 | date.getDate();\n\tbuf.write_shift(2, ymd);\n}\n\n/* read four bytes from buf and interpret as a DOS date */\nfunction parse_dos_date(buf/*:CFBlob*/)/*:Date*/ {\n\tvar hms = buf.read_shift(2) & 0xFFFF;\n\tvar ymd = buf.read_shift(2) & 0xFFFF;\n\tvar val = new Date();\n\tvar d = ymd & 0x1F; ymd >>>= 5;\n\tvar m = ymd & 0x0F; ymd >>>= 4;\n\tval.setMilliseconds(0);\n\tval.setFullYear(ymd + 1980);\n\tval.setMonth(m-1);\n\tval.setDate(d);\n\tvar S = hms & 0x1F; hms >>>= 5;\n\tvar M = hms & 0x3F; hms >>>= 6;\n\tval.setHours(hms);\n\tval.setMinutes(M);\n\tval.setSeconds(S<<1);\n\treturn val;\n}\nfunction parse_extra_field(blob/*:CFBlob*/)/*:any*/ {\n\tprep_blob(blob, 0);\n\tvar o = /*::(*/{}/*:: :any)*/;\n\tvar flags = 0;\n\twhile(blob.l <= blob.length - 4) {\n\t\tvar type = blob.read_shift(2);\n\t\tvar sz = blob.read_shift(2), tgt = blob.l + sz;\n\t\tvar p = {};\n\t\tswitch(type) {\n\t\t\t/* UNIX-style Timestamps */\n\t\t\tcase 0x5455: {\n\t\t\t\tflags = blob.read_shift(1);\n\t\t\t\tif(flags & 1) p.mtime = blob.read_shift(4);\n\t\t\t\t/* for some reason, CD flag corresponds to LFH */\n\t\t\t\tif(sz > 5) {\n\t\t\t\t\tif(flags & 2) p.atime = blob.read_shift(4);\n\t\t\t\t\tif(flags & 4) p.ctime = blob.read_shift(4);\n\t\t\t\t}\n\t\t\t\tif(p.mtime) p.mt = new Date(p.mtime*1000);\n\t\t\t} break;\n\t\t\t/* ZIP64 Extended Information Field */\n\t\t\tcase 0x0001: {\n\t\t\t\tvar sz1 = blob.read_shift(4), sz2 = blob.read_shift(4);\n\t\t\t\tp.usz = (sz2 * Math.pow(2,32) + sz1);\n\t\t\t\tsz1 = blob.read_shift(4); sz2 = blob.read_shift(4);\n\t\t\t\tp.csz = (sz2 * Math.pow(2,32) + sz1);\n\t\t\t\t// NOTE: volume fields are skipped\n\t\t\t} break;\n\t\t}\n\t\tblob.l = tgt;\n\t\to[type] = p;\n\t}\n\treturn o;\n}\nvar fs/*:: = require('fs'); */;\nfunction get_fs() { return fs || (fs = _fs); }\nfunction parse(file/*:RawBytes*/, options/*:CFBReadOpts*/)/*:CFBContainer*/ {\nif(file[0] == 0x50 && file[1] == 0x4b) return parse_zip(file, options);\nif((file[0] | 0x20) == 0x6d && (file[1]|0x20) == 0x69) return parse_mad(file, options);\nif(file.length < 512) throw new Error(\"CFB file size \" + file.length + \" < 512\");\nvar mver = 3;\nvar ssz = 512;\nvar nmfs = 0; // number of mini FAT sectors\nvar difat_sec_cnt = 0;\nvar dir_start = 0;\nvar minifat_start = 0;\nvar difat_start = 0;\n\nvar fat_addrs/*:Array<number>*/ = []; // locations of FAT sectors\n\n/* [MS-CFB] 2.2 Compound File Header */\nvar blob/*:CFBlob*/ = /*::(*/file.slice(0,512)/*:: :any)*/;\nprep_blob(blob, 0);\n\n/* major version */\nvar mv = check_get_mver(blob);\nmver = mv[0];\nswitch(mver) {\n\tcase 3: ssz = 512; break; case 4: ssz = 4096; break;\n\tcase 0: if(mv[1] == 0) return parse_zip(file, options);\n\t/* falls through */\n\tdefault: throw new Error(\"Major Version: Expected 3 or 4 saw \" + mver);\n}\n\n/* reprocess header */\nif(ssz !== 512) { blob = /*::(*/file.slice(0,ssz)/*:: :any)*/; prep_blob(blob, 28 /* blob.l */); }\n/* Save header for final object */\nvar header/*:RawBytes*/ = file.slice(0,ssz);\n\ncheck_shifts(blob, mver);\n\n// Number of Directory Sectors\nvar dir_cnt/*:number*/ = blob.read_shift(4, 'i');\nif(mver === 3 && dir_cnt !== 0) throw new Error('# Directory Sectors: Expected 0 saw ' + dir_cnt);\n\n// Number of FAT Sectors\nblob.l += 4;\n\n// First Directory Sector Location\ndir_start = blob.read_shift(4, 'i');\n\n// Transaction Signature\nblob.l += 4;\n\n// Mini Stream Cutoff Size\nblob.chk('00100000', 'Mini Stream Cutoff Size: ');\n\n// First Mini FAT Sector Location\nminifat_start = blob.read_shift(4, 'i');\n\n// Number of Mini FAT Sectors\nnmfs = blob.read_shift(4, 'i');\n\n// First DIFAT sector location\ndifat_start = blob.read_shift(4, 'i');\n\n// Number of DIFAT Sectors\ndifat_sec_cnt = blob.read_shift(4, 'i');\n\n// Grab FAT Sector Locations\nfor(var q = -1, j = 0; j < 109; ++j) { /* 109 = (512 - blob.l)>>>2; */\n\tq = blob.read_shift(4, 'i');\n\tif(q<0) break;\n\tfat_addrs[j] = q;\n}\n\n/** Break the file up into sectors */\nvar sectors/*:Array<RawBytes>*/ = sectorify(file, ssz);\n\nsleuth_fat(difat_start, difat_sec_cnt, sectors, ssz, fat_addrs);\n\n/** Chains */\nvar sector_list/*:SectorList*/ = make_sector_list(sectors, dir_start, fat_addrs, ssz);\n\nif(dir_start < sector_list.length) sector_list[dir_start].name = \"!Directory\";\nif(nmfs > 0 && minifat_start !== ENDOFCHAIN) sector_list[minifat_start].name = \"!MiniFAT\";\nsector_list[fat_addrs[0]].name = \"!FAT\";\nsector_list.fat_addrs = fat_addrs;\nsector_list.ssz = ssz;\n\n/* [MS-CFB] 2.6.1 Compound File Directory Entry */\nvar files/*:CFBFiles*/ = {}, Paths/*:Array<string>*/ = [], FileIndex/*:CFBFileIndex*/ = [], FullPaths/*:Array<string>*/ = [];\nread_directory(dir_start, sector_list, sectors, Paths, nmfs, files, FileIndex, minifat_start);\n\nbuild_full_paths(FileIndex, FullPaths, Paths);\nPaths.shift();\n\nvar o = {\n\tFileIndex: FileIndex,\n\tFullPaths: FullPaths\n};\n\n// $FlowIgnore\nif(options && options.raw) o.raw = {header: header, sectors: sectors};\nreturn o;\n} // parse\n\n/* [MS-CFB] 2.2 Compound File Header -- read up to major version */\nfunction check_get_mver(blob/*:CFBlob*/)/*:[number, number]*/ {\n\tif(blob[blob.l] == 0x50 && blob[blob.l + 1] == 0x4b) return [0, 0];\n\t// header signature 8\n\tblob.chk(HEADER_SIGNATURE, 'Header Signature: ');\n\n\t// clsid 16\n\t//blob.chk(HEADER_CLSID, 'CLSID: ');\n\tblob.l += 16;\n\n\t// minor version 2\n\tvar mver/*:number*/ = blob.read_shift(2, 'u');\n\n\treturn [blob.read_shift(2,'u'), mver];\n}\nfunction check_shifts(blob/*:CFBlob*/, mver/*:number*/)/*:void*/ {\n\tvar shift = 0x09;\n\n\t// Byte Order\n\t//blob.chk('feff', 'Byte Order: '); // note: some writers put 0xffff\n\tblob.l += 2;\n\n\t// Sector Shift\n\tswitch((shift = blob.read_shift(2))) {\n\t\tcase 0x09: if(mver != 3) throw new Error('Sector Shift: Expected 9 saw ' + shift); break;\n\t\tcase 0x0c: if(mver != 4) throw new Error('Sector Shift: Expected 12 saw ' + shift); break;\n\t\tdefault: throw new Error('Sector Shift: Expected 9 or 12 saw ' + shift);\n\t}\n\n\t// Mini Sector Shift\n\tblob.chk('0600', 'Mini Sector Shift: ');\n\n\t// Reserved\n\tblob.chk('000000000000', 'Reserved: ');\n}\n\n/** Break the file up into sectors */\nfunction sectorify(file/*:RawBytes*/, ssz/*:number*/)/*:Array<RawBytes>*/ {\n\tvar nsectors = Math.ceil(file.length/ssz)-1;\n\tvar sectors/*:Array<RawBytes>*/ = [];\n\tfor(var i=1; i < nsectors; ++i) sectors[i-1] = file.slice(i*ssz,(i+1)*ssz);\n\tsectors[nsectors-1] = file.slice(nsectors*ssz);\n\treturn sectors;\n}\n\n/* [MS-CFB] 2.6.4 Red-Black Tree */\nfunction build_full_paths(FI/*:CFBFileIndex*/, FP/*:Array<string>*/, Paths/*:Array<string>*/)/*:void*/ {\n\tvar i = 0, L = 0, R = 0, C = 0, j = 0, pl = Paths.length;\n\tvar dad/*:Array<number>*/ = [], q/*:Array<number>*/ = [];\n\n\tfor(; i < pl; ++i) { dad[i]=q[i]=i; FP[i]=Paths[i]; }\n\n\tfor(; j < q.length; ++j) {\n\t\ti = q[j];\n\t\tL = FI[i].L; R = FI[i].R; C = FI[i].C;\n\t\tif(dad[i] === i) {\n\t\t\tif(L !== -1 /*NOSTREAM*/ && dad[L] !== L) dad[i] = dad[L];\n\t\t\tif(R !== -1 && dad[R] !== R) dad[i] = dad[R];\n\t\t}\n\t\tif(C !== -1 /*NOSTREAM*/) dad[C] = i;\n\t\tif(L !== -1 && i != dad[i]) { dad[L] = dad[i]; if(q.lastIndexOf(L) < j) q.push(L); }\n\t\tif(R !== -1 && i != dad[i]) { dad[R] = dad[i]; if(q.lastIndexOf(R) < j) q.push(R); }\n\t}\n\tfor(i=1; i < pl; ++i) if(dad[i] === i) {\n\t\tif(R !== -1 /*NOSTREAM*/ && dad[R] !== R) dad[i] = dad[R];\n\t\telse if(L !== -1 && dad[L] !== L) dad[i] = dad[L];\n\t}\n\n\tfor(i=1; i < pl; ++i) {\n\t\tif(FI[i].type === 0 /* unknown */) continue;\n\t\tj = i;\n\t\tif(j != dad[j]) do {\n\t\t\tj = dad[j];\n\t\t\tFP[i] = FP[j] + \"/\" + FP[i];\n\t\t} while (j !== 0 && -1 !== dad[j] && j != dad[j]);\n\t\tdad[i] = -1;\n\t}\n\n\tFP[0] += \"/\";\n\tfor(i=1; i < pl; ++i) {\n\t\tif(FI[i].type !== 2 /* stream */) FP[i] += \"/\";\n\t}\n}\n\nfunction get_mfat_entry(entry/*:CFBEntry*/, payload/*:RawBytes*/, mini/*:?RawBytes*/)/*:CFBlob*/ {\n\tvar start = entry.start, size = entry.size;\n\t//return (payload.slice(start*MSSZ, start*MSSZ + size)/*:any*/);\n\tvar o = [];\n\tvar idx = start;\n\twhile(mini && size > 0 && idx >= 0) {\n\t\to.push(payload.slice(idx * MSSZ, idx * MSSZ + MSSZ));\n\t\tsize -= MSSZ;\n\t\tidx = __readInt32LE(mini, idx * 4);\n\t}\n\tif(o.length === 0) return (new_buf(0)/*:any*/);\n\treturn (bconcat(o).slice(0, entry.size)/*:any*/);\n}\n\n/** Chase down the rest of the DIFAT chain to build a comprehensive list\n    DIFAT chains by storing the next sector number as the last 32 bits */\nfunction sleuth_fat(idx/*:number*/, cnt/*:number*/, sectors/*:Array<RawBytes>*/, ssz/*:number*/, fat_addrs)/*:void*/ {\n\tvar q/*:number*/ = ENDOFCHAIN;\n\tif(idx === ENDOFCHAIN) {\n\t\tif(cnt !== 0) throw new Error(\"DIFAT chain shorter than expected\");\n\t} else if(idx !== -1 /*FREESECT*/) {\n\t\tvar sector = sectors[idx], m = (ssz>>>2)-1;\n\t\tif(!sector) return;\n\t\tfor(var i = 0; i < m; ++i) {\n\t\t\tif((q = __readInt32LE(sector,i*4)) === ENDOFCHAIN) break;\n\t\t\tfat_addrs.push(q);\n\t\t}\n\t\tif(cnt >= 1) sleuth_fat(__readInt32LE(sector,ssz-4),cnt - 1, sectors, ssz, fat_addrs);\n\t}\n}\n\n/** Follow the linked list of sectors for a given starting point */\nfunction get_sector_list(sectors/*:Array<RawBytes>*/, start/*:number*/, fat_addrs/*:Array<number>*/, ssz/*:number*/, chkd/*:?Array<boolean>*/)/*:SectorEntry*/ {\n\tvar buf/*:Array<number>*/ = [], buf_chain/*:Array<any>*/ = [];\n\tif(!chkd) chkd = [];\n\tvar modulus = ssz - 1, j = 0, jj = 0;\n\tfor(j=start; j>=0;) {\n\t\tchkd[j] = true;\n\t\tbuf[buf.length] = j;\n\t\tbuf_chain.push(sectors[j]);\n\t\tvar addr = fat_addrs[Math.floor(j*4/ssz)];\n\t\tjj = ((j*4) & modulus);\n\t\tif(ssz < 4 + jj) throw new Error(\"FAT boundary crossed: \" + j + \" 4 \"+ssz);\n\t\tif(!sectors[addr]) break;\n\t\tj = __readInt32LE(sectors[addr], jj);\n\t}\n\treturn {nodes: buf, data:__toBuffer([buf_chain])};\n}\n\n/** Chase down the sector linked lists */\nfunction make_sector_list(sectors/*:Array<RawBytes>*/, dir_start/*:number*/, fat_addrs/*:Array<number>*/, ssz/*:number*/)/*:SectorList*/ {\n\tvar sl = sectors.length, sector_list/*:SectorList*/ = ([]/*:any*/);\n\tvar chkd/*:Array<boolean>*/ = [], buf/*:Array<number>*/ = [], buf_chain/*:Array<RawBytes>*/ = [];\n\tvar modulus = ssz - 1, i=0, j=0, k=0, jj=0;\n\tfor(i=0; i < sl; ++i) {\n\t\tbuf = ([]/*:Array<number>*/);\n\t\tk = (i + dir_start); if(k >= sl) k-=sl;\n\t\tif(chkd[k]) continue;\n\t\tbuf_chain = [];\n\t\tvar seen = [];\n\t\tfor(j=k; j>=0;) {\n\t\t\tseen[j] = true;\n\t\t\tchkd[j] = true;\n\t\t\tbuf[buf.length] = j;\n\t\t\tbuf_chain.push(sectors[j]);\n\t\t\tvar addr/*:number*/ = fat_addrs[Math.floor(j*4/ssz)];\n\t\t\tjj = ((j*4) & modulus);\n\t\t\tif(ssz < 4 + jj) throw new Error(\"FAT boundary crossed: \" + j + \" 4 \"+ssz);\n\t\t\tif(!sectors[addr]) break;\n\t\t\tj = __readInt32LE(sectors[addr], jj);\n\t\t\tif(seen[j]) break;\n\t\t}\n\t\tsector_list[k] = ({nodes: buf, data:__toBuffer([buf_chain])}/*:SectorEntry*/);\n\t}\n\treturn sector_list;\n}\n\n/* [MS-CFB] 2.6.1 Compound File Directory Entry */\nfunction read_directory(dir_start/*:number*/, sector_list/*:SectorList*/, sectors/*:Array<RawBytes>*/, Paths/*:Array<string>*/, nmfs, files, FileIndex, mini) {\n\tvar minifat_store = 0, pl = (Paths.length?2:0);\n\tvar sector = sector_list[dir_start].data;\n\tvar i = 0, namelen = 0, name;\n\tfor(; i < sector.length; i+= 128) {\n\t\tvar blob/*:CFBlob*/ = /*::(*/sector.slice(i, i+128)/*:: :any)*/;\n\t\tprep_blob(blob, 64);\n\t\tnamelen = blob.read_shift(2);\n\t\tname = __utf16le(blob,0,namelen-pl);\n\t\tPaths.push(name);\n\t\tvar o/*:CFBEntry*/ = ({\n\t\t\tname:  name,\n\t\t\ttype:  blob.read_shift(1),\n\t\t\tcolor: blob.read_shift(1),\n\t\t\tL:     blob.read_shift(4, 'i'),\n\t\t\tR:     blob.read_shift(4, 'i'),\n\t\t\tC:     blob.read_shift(4, 'i'),\n\t\t\tclsid: blob.read_shift(16),\n\t\t\tstate: blob.read_shift(4, 'i'),\n\t\t\tstart: 0,\n\t\t\tsize: 0\n\t\t});\n\t\tvar ctime/*:number*/ = blob.read_shift(2) + blob.read_shift(2) + blob.read_shift(2) + blob.read_shift(2);\n\t\tif(ctime !== 0) o.ct = read_date(blob, blob.l-8);\n\t\tvar mtime/*:number*/ = blob.read_shift(2) + blob.read_shift(2) + blob.read_shift(2) + blob.read_shift(2);\n\t\tif(mtime !== 0) o.mt = read_date(blob, blob.l-8);\n\t\to.start = blob.read_shift(4, 'i');\n\t\to.size = blob.read_shift(4, 'i');\n\t\tif(o.size < 0 && o.start < 0) { o.size = o.type = 0; o.start = ENDOFCHAIN; o.name = \"\"; }\n\t\tif(o.type === 5) { /* root */\n\t\t\tminifat_store = o.start;\n\t\t\tif(nmfs > 0 && minifat_store !== ENDOFCHAIN) sector_list[minifat_store].name = \"!StreamData\";\n\t\t\t/*minifat_size = o.size;*/\n\t\t} else if(o.size >= 4096 /* MSCSZ */) {\n\t\t\to.storage = 'fat';\n\t\t\tif(sector_list[o.start] === undefined) sector_list[o.start] = get_sector_list(sectors, o.start, sector_list.fat_addrs, sector_list.ssz);\n\t\t\tsector_list[o.start].name = o.name;\n\t\t\to.content = (sector_list[o.start].data.slice(0,o.size)/*:any*/);\n\t\t} else {\n\t\t\to.storage = 'minifat';\n\t\t\tif(o.size < 0) o.size = 0;\n\t\t\telse if(minifat_store !== ENDOFCHAIN && o.start !== ENDOFCHAIN && sector_list[minifat_store]) {\n\t\t\t\to.content = get_mfat_entry(o, sector_list[minifat_store].data, (sector_list[mini]||{}).data);\n\t\t\t}\n\t\t}\n\t\tif(o.content) prep_blob(o.content, 0);\n\t\tfiles[name] = o;\n\t\tFileIndex.push(o);\n\t}\n}\n\nfunction read_date(blob/*:RawBytes|CFBlob*/, offset/*:number*/)/*:Date*/ {\n\treturn new Date(( ( (__readUInt32LE(blob,offset+4)/1e7)*Math.pow(2,32)+__readUInt32LE(blob,offset)/1e7 ) - 11644473600)*1000);\n}\n\nfunction read_file(filename/*:string*/, options/*:CFBReadOpts*/) {\n\tget_fs();\n\treturn parse(fs.readFileSync(filename), options);\n}\n\nfunction read(blob/*:RawBytes|string*/, options/*:CFBReadOpts*/) {\n\tvar type = options && options.type;\n\tif(!type) {\n\t\tif(has_buf && Buffer.isBuffer(blob)) type = \"buffer\";\n\t}\n\tswitch(type || \"base64\") {\n\t\tcase \"file\": /*:: if(typeof blob !== 'string') throw \"Must pass a filename when type='file'\"; */return read_file(blob, options);\n\t\tcase \"base64\": /*:: if(typeof blob !== 'string') throw \"Must pass a base64-encoded binary string when type='file'\"; */return parse(s2a(Base64_decode(blob)), options);\n\t\tcase \"binary\": /*:: if(typeof blob !== 'string') throw \"Must pass a binary string when type='file'\"; */return parse(s2a(blob), options);\n\t}\n\treturn parse(/*::typeof blob == 'string' ? new Buffer(blob, 'utf-8') : */blob, options);\n}\n\nfunction init_cfb(cfb/*:CFBContainer*/, opts/*:?any*/)/*:void*/ {\n\tvar o = opts || {}, root = o.root || \"Root Entry\";\n\tif(!cfb.FullPaths) cfb.FullPaths = [];\n\tif(!cfb.FileIndex) cfb.FileIndex = [];\n\tif(cfb.FullPaths.length !== cfb.FileIndex.length) throw new Error(\"inconsistent CFB structure\");\n\tif(cfb.FullPaths.length === 0) {\n\t\tcfb.FullPaths[0] = root + \"/\";\n\t\tcfb.FileIndex[0] = ({ name: root, type: 5 }/*:any*/);\n\t}\n\tif(o.CLSID) cfb.FileIndex[0].clsid = o.CLSID;\n\tseed_cfb(cfb);\n}\nfunction seed_cfb(cfb/*:CFBContainer*/)/*:void*/ {\n\tvar nm = \"\\u0001Sh33tJ5\";\n\tif(CFB.find(cfb, \"/\" + nm)) return;\n\tvar p = new_buf(4); p[0] = 55; p[1] = p[3] = 50; p[2] = 54;\n\tcfb.FileIndex.push(({ name: nm, type: 2, content:p, size:4, L:69, R:69, C:69 }/*:any*/));\n\tcfb.FullPaths.push(cfb.FullPaths[0] + nm);\n\trebuild_cfb(cfb);\n}\nfunction rebuild_cfb(cfb/*:CFBContainer*/, f/*:?boolean*/)/*:void*/ {\n\tinit_cfb(cfb);\n\tvar gc = false, s = false;\n\tfor(var i = cfb.FullPaths.length - 1; i >= 0; --i) {\n\t\tvar _file = cfb.FileIndex[i];\n\t\tswitch(_file.type) {\n\t\t\tcase 0:\n\t\t\t\tif(s) gc = true;\n\t\t\t\telse { cfb.FileIndex.pop(); cfb.FullPaths.pop(); }\n\t\t\t\tbreak;\n\t\t\tcase 1: case 2: case 5:\n\t\t\t\ts = true;\n\t\t\t\tif(isNaN(_file.R * _file.L * _file.C)) gc = true;\n\t\t\t\tif(_file.R > -1 && _file.L > -1 && _file.R == _file.L) gc = true;\n\t\t\t\tbreak;\n\t\t\tdefault: gc = true; break;\n\t\t}\n\t}\n\tif(!gc && !f) return;\n\n\tvar now = new Date(1987, 1, 19), j = 0;\n\t// Track which names exist\n\tvar fullPaths = Object.create ? Object.create(null) : {};\n\tvar data/*:Array<[string, CFBEntry]>*/ = [];\n\tfor(i = 0; i < cfb.FullPaths.length; ++i) {\n\t\tfullPaths[cfb.FullPaths[i]] = true;\n\t\tif(cfb.FileIndex[i].type === 0) continue;\n\t\tdata.push([cfb.FullPaths[i], cfb.FileIndex[i]]);\n\t}\n\tfor(i = 0; i < data.length; ++i) {\n\t\tvar dad = dirname(data[i][0]);\n\t\ts = fullPaths[dad];\n\t\twhile(!s) {\n\t\t\twhile(dirname(dad) && !fullPaths[dirname(dad)]) dad = dirname(dad);\n\n\t\t\tdata.push([dad, ({\n\t\t\t\tname: filename(dad).replace(\"/\",\"\"),\n\t\t\t\ttype: 1,\n\t\t\t\tclsid: HEADER_CLSID,\n\t\t\t\tct: now, mt: now,\n\t\t\t\tcontent: null\n\t\t\t}/*:any*/)]);\n\n\t\t\t// Add name to set\n\t\t\tfullPaths[dad] = true;\n\n\t\t\tdad = dirname(data[i][0]);\n\t\t\ts = fullPaths[dad];\n\t\t}\n\t}\n\n\tdata.sort(function(x,y) { return namecmp(x[0], y[0]); });\n\tcfb.FullPaths = []; cfb.FileIndex = [];\n\tfor(i = 0; i < data.length; ++i) { cfb.FullPaths[i] = data[i][0]; cfb.FileIndex[i] = data[i][1]; }\n\tfor(i = 0; i < data.length; ++i) {\n\t\tvar elt = cfb.FileIndex[i];\n\t\tvar nm = cfb.FullPaths[i];\n\n\t\telt.name =  filename(nm).replace(\"/\",\"\");\n\t\telt.L = elt.R = elt.C = -(elt.color = 1);\n\t\telt.size = elt.content ? elt.content.length : 0;\n\t\telt.start = 0;\n\t\telt.clsid = (elt.clsid || HEADER_CLSID);\n\t\tif(i === 0) {\n\t\t\telt.C = data.length > 1 ? 1 : -1;\n\t\t\telt.size = 0;\n\t\t\telt.type = 5;\n\t\t} else if(nm.slice(-1) == \"/\") {\n\t\t\tfor(j=i+1;j < data.length; ++j) if(dirname(cfb.FullPaths[j])==nm) break;\n\t\t\telt.C = j >= data.length ? -1 : j;\n\t\t\tfor(j=i+1;j < data.length; ++j) if(dirname(cfb.FullPaths[j])==dirname(nm)) break;\n\t\t\telt.R = j >= data.length ? -1 : j;\n\t\t\telt.type = 1;\n\t\t} else {\n\t\t\tif(dirname(cfb.FullPaths[i+1]||\"\") == dirname(nm)) elt.R = i + 1;\n\t\t\telt.type = 2;\n\t\t}\n\t}\n\n}\n\nfunction _write(cfb/*:CFBContainer*/, options/*:CFBWriteOpts*/)/*:RawBytes|string*/ {\n\tvar _opts = options || {};\n\t/* MAD is order-sensitive, skip rebuild and sort */\n\tif(_opts.fileType == 'mad') return write_mad(cfb, _opts);\n\trebuild_cfb(cfb);\n\tswitch(_opts.fileType) {\n\t\tcase 'zip': return write_zip(cfb, _opts);\n\t\t//case 'mad': return write_mad(cfb, _opts);\n\t}\n\tvar L = (function(cfb/*:CFBContainer*/)/*:Array<number>*/{\n\t\tvar mini_size = 0, fat_size = 0;\n\t\tfor(var i = 0; i < cfb.FileIndex.length; ++i) {\n\t\t\tvar file = cfb.FileIndex[i];\n\t\t\tif(!file.content) continue;\n\t\t\tvar flen = file.content.length;\n\t\t\tif(flen > 0){\n\t\t\t\tif(flen < 0x1000) mini_size += (flen + 0x3F) >> 6;\n\t\t\t\telse fat_size += (flen + 0x01FF) >> 9;\n\t\t\t}\n\t\t}\n\t\tvar dir_cnt = (cfb.FullPaths.length +3) >> 2;\n\t\tvar mini_cnt = (mini_size + 7) >> 3;\n\t\tvar mfat_cnt = (mini_size + 0x7F) >> 7;\n\t\tvar fat_base = mini_cnt + fat_size + dir_cnt + mfat_cnt;\n\t\tvar fat_cnt = (fat_base + 0x7F) >> 7;\n\t\tvar difat_cnt = fat_cnt <= 109 ? 0 : Math.ceil((fat_cnt-109)/0x7F);\n\t\twhile(((fat_base + fat_cnt + difat_cnt + 0x7F) >> 7) > fat_cnt) difat_cnt = ++fat_cnt <= 109 ? 0 : Math.ceil((fat_cnt-109)/0x7F);\n\t\tvar L =  [1, difat_cnt, fat_cnt, mfat_cnt, dir_cnt, fat_size, mini_size, 0];\n\t\tcfb.FileIndex[0].size = mini_size << 6;\n\t\tL[7] = (cfb.FileIndex[0].start=L[0]+L[1]+L[2]+L[3]+L[4]+L[5])+((L[6]+7) >> 3);\n\t\treturn L;\n\t})(cfb);\n\tvar o = new_buf(L[7] << 9);\n\tvar i = 0, T = 0;\n\t{\n\t\tfor(i = 0; i < 8; ++i) o.write_shift(1, HEADER_SIG[i]);\n\t\tfor(i = 0; i < 8; ++i) o.write_shift(2, 0);\n\t\to.write_shift(2, 0x003E);\n\t\to.write_shift(2, 0x0003);\n\t\to.write_shift(2, 0xFFFE);\n\t\to.write_shift(2, 0x0009);\n\t\to.write_shift(2, 0x0006);\n\t\tfor(i = 0; i < 3; ++i) o.write_shift(2, 0);\n\t\to.write_shift(4, 0);\n\t\to.write_shift(4, L[2]);\n\t\to.write_shift(4, L[0] + L[1] + L[2] + L[3] - 1);\n\t\to.write_shift(4, 0);\n\t\to.write_shift(4, 1<<12);\n\t\to.write_shift(4, L[3] ? L[0] + L[1] + L[2] - 1: ENDOFCHAIN);\n\t\to.write_shift(4, L[3]);\n\t\to.write_shift(-4, L[1] ? L[0] - 1: ENDOFCHAIN);\n\t\to.write_shift(4, L[1]);\n\t\tfor(i = 0; i < 109; ++i) o.write_shift(-4, i < L[2] ? L[1] + i : -1);\n\t}\n\tif(L[1]) {\n\t\tfor(T = 0; T < L[1]; ++T) {\n\t\t\tfor(; i < 236 + T * 127; ++i) o.write_shift(-4, i < L[2] ? L[1] + i : -1);\n\t\t\to.write_shift(-4, T === L[1] - 1 ? ENDOFCHAIN : T + 1);\n\t\t}\n\t}\n\tvar chainit = function(w/*:number*/)/*:void*/ {\n\t\tfor(T += w; i<T-1; ++i) o.write_shift(-4, i+1);\n\t\tif(w) { ++i; o.write_shift(-4, ENDOFCHAIN); }\n\t};\n\tT = i = 0;\n\tfor(T+=L[1]; i<T; ++i) o.write_shift(-4, consts.DIFSECT);\n\tfor(T+=L[2]; i<T; ++i) o.write_shift(-4, consts.FATSECT);\n\tchainit(L[3]);\n\tchainit(L[4]);\n\tvar j/*:number*/ = 0, flen/*:number*/ = 0;\n\tvar file/*:CFBEntry*/ = cfb.FileIndex[0];\n\tfor(; j < cfb.FileIndex.length; ++j) {\n\t\tfile = cfb.FileIndex[j];\n\t\tif(!file.content) continue;\n\t\t/*:: if(file.content == null) throw new Error(\"unreachable\"); */\n\t\tflen = file.content.length;\n\t\tif(flen < 0x1000) continue;\n\t\tfile.start = T;\n\t\tchainit((flen + 0x01FF) >> 9);\n\t}\n\tchainit((L[6] + 7) >> 3);\n\twhile(o.l & 0x1FF) o.write_shift(-4, consts.ENDOFCHAIN);\n\tT = i = 0;\n\tfor(j = 0; j < cfb.FileIndex.length; ++j) {\n\t\tfile = cfb.FileIndex[j];\n\t\tif(!file.content) continue;\n\t\t/*:: if(file.content == null) throw new Error(\"unreachable\"); */\n\t\tflen = file.content.length;\n\t\tif(!flen || flen >= 0x1000) continue;\n\t\tfile.start = T;\n\t\tchainit((flen + 0x3F) >> 6);\n\t}\n\twhile(o.l & 0x1FF) o.write_shift(-4, consts.ENDOFCHAIN);\n\tfor(i = 0; i < L[4]<<2; ++i) {\n\t\tvar nm = cfb.FullPaths[i];\n\t\tif(!nm || nm.length === 0) {\n\t\t\tfor(j = 0; j < 17; ++j) o.write_shift(4, 0);\n\t\t\tfor(j = 0; j < 3; ++j) o.write_shift(4, -1);\n\t\t\tfor(j = 0; j < 12; ++j) o.write_shift(4, 0);\n\t\t\tcontinue;\n\t\t}\n\t\tfile = cfb.FileIndex[i];\n\t\tif(i === 0) file.start = file.size ? file.start - 1 : ENDOFCHAIN;\n\t\tvar _nm/*:string*/ = (i === 0 && _opts.root) || file.name;\n\t\tif(_nm.length > 32) {\n\t\t\tconsole.error(\"Name \" + _nm + \" will be truncated to \" + _nm.slice(0,32));\n\t\t\t_nm = _nm.slice(0, 32);\n\t\t}\n\t\tflen = 2*(_nm.length+1);\n\t\to.write_shift(64, _nm, \"utf16le\");\n\t\to.write_shift(2, flen);\n\t\to.write_shift(1, file.type);\n\t\to.write_shift(1, file.color);\n\t\to.write_shift(-4, file.L);\n\t\to.write_shift(-4, file.R);\n\t\to.write_shift(-4, file.C);\n\t\tif(!file.clsid) for(j = 0; j < 4; ++j) o.write_shift(4, 0);\n\t\telse o.write_shift(16, file.clsid, \"hex\");\n\t\to.write_shift(4, file.state || 0);\n\t\to.write_shift(4, 0); o.write_shift(4, 0);\n\t\to.write_shift(4, 0); o.write_shift(4, 0);\n\t\to.write_shift(4, file.start);\n\t\to.write_shift(4, file.size); o.write_shift(4, 0);\n\t}\n\tfor(i = 1; i < cfb.FileIndex.length; ++i) {\n\t\tfile = cfb.FileIndex[i];\n\t\t/*:: if(!file.content) throw new Error(\"unreachable\"); */\n\t\tif(file.size >= 0x1000) {\n\t\t\to.l = (file.start+1) << 9;\n\t\t\tif (has_buf && Buffer.isBuffer(file.content)) {\n\t\t\t\tfile.content.copy(o, o.l, 0, file.size);\n\t\t\t\t// o is a 0-filled Buffer so just set next offset\n\t\t\t\to.l += (file.size + 511) & -512;\n\t\t\t} else {\n\t\t\t\tfor(j = 0; j < file.size; ++j) o.write_shift(1, file.content[j]);\n\t\t\t\tfor(; j & 0x1FF; ++j) o.write_shift(1, 0);\n\t\t\t}\n\t\t}\n\t}\n\tfor(i = 1; i < cfb.FileIndex.length; ++i) {\n\t\tfile = cfb.FileIndex[i];\n\t\t/*:: if(!file.content) throw new Error(\"unreachable\"); */\n\t\tif(file.size > 0 && file.size < 0x1000) {\n\t\t\tif (has_buf && Buffer.isBuffer(file.content)) {\n\t\t\t\tfile.content.copy(o, o.l, 0, file.size);\n\t\t\t\t// o is a 0-filled Buffer so just set next offset\n\t\t\t\to.l += (file.size + 63) & -64;\n\t\t\t} else {\n\t\t\t\tfor(j = 0; j < file.size; ++j) o.write_shift(1, file.content[j]);\n\t\t\t\tfor(; j & 0x3F; ++j) o.write_shift(1, 0);\n\t\t\t}\n\t\t}\n\t}\n\tif (has_buf) {\n\t\to.l = o.length;\n\t} else {\n\t\t// When using Buffer, already 0-filled\n\t\twhile(o.l < o.length) o.write_shift(1, 0);\n\t}\n\treturn o;\n}\n/* [MS-CFB] 2.6.4 (Unicode 3.0.1 case conversion) */\nfunction find(cfb/*:CFBContainer*/, path/*:string*/)/*:?CFBEntry*/ {\n\tvar UCFullPaths/*:Array<string>*/ = cfb.FullPaths.map(function(x) { return x.toUpperCase(); });\n\tvar UCPaths/*:Array<string>*/ = UCFullPaths.map(function(x) { var y = x.split(\"/\"); return y[y.length - (x.slice(-1) == \"/\" ? 2 : 1)]; });\n\tvar k/*:boolean*/ = false;\n\tif(path.charCodeAt(0) === 47 /* \"/\" */) { k = true; path = UCFullPaths[0].slice(0, -1) + path; }\n\telse k = path.indexOf(\"/\") !== -1;\n\tvar UCPath/*:string*/ = path.toUpperCase();\n\tvar w/*:number*/ = k === true ? UCFullPaths.indexOf(UCPath) : UCPaths.indexOf(UCPath);\n\tif(w !== -1) return cfb.FileIndex[w];\n\n\tvar m = !UCPath.match(chr1);\n\tUCPath = UCPath.replace(chr0,'');\n\tif(m) UCPath = UCPath.replace(chr1,'!');\n\tfor(w = 0; w < UCFullPaths.length; ++w) {\n\t\tif((m ? UCFullPaths[w].replace(chr1,'!') : UCFullPaths[w]).replace(chr0,'') == UCPath) return cfb.FileIndex[w];\n\t\tif((m ? UCPaths[w].replace(chr1,'!') : UCPaths[w]).replace(chr0,'') == UCPath) return cfb.FileIndex[w];\n\t}\n\treturn null;\n}\n/** CFB Constants */\nvar MSSZ = 64; /* Mini Sector Size = 1<<6 */\n//var MSCSZ = 4096; /* Mini Stream Cutoff Size */\n/* 2.1 Compound File Sector Numbers and Types */\nvar ENDOFCHAIN = -2;\n/* 2.2 Compound File Header */\nvar HEADER_SIGNATURE = 'd0cf11e0a1b11ae1';\nvar HEADER_SIG = [0xD0, 0xCF, 0x11, 0xE0, 0xA1, 0xB1, 0x1A, 0xE1];\nvar HEADER_CLSID = '00000000000000000000000000000000';\nvar consts = {\n\t/* 2.1 Compund File Sector Numbers and Types */\n\tMAXREGSECT: -6,\n\tDIFSECT: -4,\n\tFATSECT: -3,\n\tENDOFCHAIN: ENDOFCHAIN,\n\tFREESECT: -1,\n\t/* 2.2 Compound File Header */\n\tHEADER_SIGNATURE: HEADER_SIGNATURE,\n\tHEADER_MINOR_VERSION: '3e00',\n\tMAXREGSID: -6,\n\tNOSTREAM: -1,\n\tHEADER_CLSID: HEADER_CLSID,\n\t/* 2.6.1 Compound File Directory Entry */\n\tEntryTypes: ['unknown','storage','stream','lockbytes','property','root']\n};\n\nfunction write_file(cfb/*:CFBContainer*/, filename/*:string*/, options/*:CFBWriteOpts*/)/*:void*/ {\n\tget_fs();\n\tvar o = _write(cfb, options);\n\t/*:: if(typeof Buffer == 'undefined' || !Buffer.isBuffer(o) || !(o instanceof Buffer)) throw new Error(\"unreachable\"); */\n\tfs.writeFileSync(filename, o);\n}\n\nfunction a2s(o/*:RawBytes*/)/*:string*/ {\n\tvar out = new Array(o.length);\n\tfor(var i = 0; i < o.length; ++i) out[i] = String.fromCharCode(o[i]);\n\treturn out.join(\"\");\n}\n\nfunction write(cfb/*:CFBContainer*/, options/*:CFBWriteOpts*/)/*:RawBytes|string*/ {\n\tvar o = _write(cfb, options);\n\tswitch(options && options.type || \"buffer\") {\n\t\tcase \"file\": get_fs(); fs.writeFileSync(options.filename, (o/*:any*/)); return o;\n\t\tcase \"binary\": return typeof o == \"string\" ? o : a2s(o);\n\t\tcase \"base64\": return Base64_encode(typeof o == \"string\" ? o : a2s(o));\n\t\tcase \"buffer\": if(has_buf) return Buffer.isBuffer(o) ? o : Buffer_from(o);\n\t\t\t/* falls through */\n\t\tcase \"array\": return typeof o == \"string\" ? s2a(o) : o;\n\t}\n\treturn o;\n}\n/* node < 8.1 zlib does not expose bytesRead, so default to pure JS */\nvar _zlib;\nfunction use_zlib(zlib) { try {\n\tvar InflateRaw = zlib.InflateRaw;\n\tvar InflRaw = new InflateRaw();\n\tInflRaw._processChunk(new Uint8Array([3, 0]), InflRaw._finishFlushFlag);\n\tif(InflRaw.bytesRead) _zlib = zlib;\n\telse throw new Error(\"zlib does not expose bytesRead\");\n} catch(e) {console.error(\"cannot use native zlib: \" + (e.message || e)); } }\n\nfunction _inflateRawSync(payload, usz) {\n\tif(!_zlib) return _inflate(payload, usz);\n\tvar InflateRaw = _zlib.InflateRaw;\n\tvar InflRaw = new InflateRaw();\n\tvar out = InflRaw._processChunk(payload.slice(payload.l), InflRaw._finishFlushFlag);\n\tpayload.l += InflRaw.bytesRead;\n\treturn out;\n}\n\nfunction _deflateRawSync(payload) {\n\treturn _zlib ? _zlib.deflateRawSync(payload) : _deflate(payload);\n}\nvar CLEN_ORDER = [ 16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15 ];\n\n/*  LEN_ID = [ 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285 ]; */\nvar LEN_LN = [   3,   4,   5,   6,   7,   8,   9,  10,  11,  13 , 15,  17,  19,  23,  27,  31,  35,  43,  51,  59,  67,  83,  99, 115, 131, 163, 195, 227, 258 ];\n\n/*  DST_ID = [  0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13,  14,  15,  16,  17,  18,  19,   20,   21,   22,   23,   24,   25,   26,    27,    28,    29 ]; */\nvar DST_LN = [  1,  2,  3,  4,  5,  7,  9, 13, 17, 25, 33, 49, 65, 97, 129, 193, 257, 385, 513, 769, 1025, 1537, 2049, 3073, 4097, 6145, 8193, 12289, 16385, 24577 ];\n\nfunction bit_swap_8(n) { var t = (((((n<<1)|(n<<11)) & 0x22110) | (((n<<5)|(n<<15)) & 0x88440))); return ((t>>16) | (t>>8) |t)&0xFF; }\n\nvar use_typed_arrays = typeof Uint8Array !== 'undefined';\n\nvar bitswap8 = use_typed_arrays ? new Uint8Array(1<<8) : [];\nfor(var q = 0; q < (1<<8); ++q) bitswap8[q] = bit_swap_8(q);\n\nfunction bit_swap_n(n, b) {\n\tvar rev = bitswap8[n & 0xFF];\n\tif(b <= 8) return rev >>> (8-b);\n\trev = (rev << 8) | bitswap8[(n>>8)&0xFF];\n\tif(b <= 16) return rev >>> (16-b);\n\trev = (rev << 8) | bitswap8[(n>>16)&0xFF];\n\treturn rev >>> (24-b);\n}\n\n/* helpers for unaligned bit reads */\nfunction read_bits_2(buf, bl) { var w = (bl&7), h = (bl>>>3); return ((buf[h]|(w <= 6 ? 0 : buf[h+1]<<8))>>>w)& 0x03; }\nfunction read_bits_3(buf, bl) { var w = (bl&7), h = (bl>>>3); return ((buf[h]|(w <= 5 ? 0 : buf[h+1]<<8))>>>w)& 0x07; }\nfunction read_bits_4(buf, bl) { var w = (bl&7), h = (bl>>>3); return ((buf[h]|(w <= 4 ? 0 : buf[h+1]<<8))>>>w)& 0x0F; }\nfunction read_bits_5(buf, bl) { var w = (bl&7), h = (bl>>>3); return ((buf[h]|(w <= 3 ? 0 : buf[h+1]<<8))>>>w)& 0x1F; }\nfunction read_bits_7(buf, bl) { var w = (bl&7), h = (bl>>>3); return ((buf[h]|(w <= 1 ? 0 : buf[h+1]<<8))>>>w)& 0x7F; }\n\n/* works up to n = 3 * 8 + 1 = 25 */\nfunction read_bits_n(buf, bl, n) {\n\tvar w = (bl&7), h = (bl>>>3), f = ((1<<n)-1);\n\tvar v = buf[h] >>> w;\n\tif(n < 8 - w) return v & f;\n\tv |= buf[h+1]<<(8-w);\n\tif(n < 16 - w) return v & f;\n\tv |= buf[h+2]<<(16-w);\n\tif(n < 24 - w) return v & f;\n\tv |= buf[h+3]<<(24-w);\n\treturn v & f;\n}\n\n/* helpers for unaligned bit writes */\nfunction write_bits_3(buf, bl, v) { var w = bl & 7, h = bl >>> 3;\n\tif(w <= 5) buf[h] |= (v & 7) << w;\n\telse {\n\t\tbuf[h] |= (v << w) & 0xFF;\n\t\tbuf[h+1] = (v&7) >> (8-w);\n\t}\n\treturn bl + 3;\n}\n\nfunction write_bits_1(buf, bl, v) {\n\tvar w = bl & 7, h = bl >>> 3;\n\tv = (v&1) << w;\n\tbuf[h] |= v;\n\treturn bl + 1;\n}\nfunction write_bits_8(buf, bl, v) {\n\tvar w = bl & 7, h = bl >>> 3;\n\tv <<= w;\n\tbuf[h] |=  v & 0xFF; v >>>= 8;\n\tbuf[h+1] = v;\n\treturn bl + 8;\n}\nfunction write_bits_16(buf, bl, v) {\n\tvar w = bl & 7, h = bl >>> 3;\n\tv <<= w;\n\tbuf[h] |=  v & 0xFF; v >>>= 8;\n\tbuf[h+1] = v & 0xFF;\n\tbuf[h+2] = v >>> 8;\n\treturn bl + 16;\n}\n\n/* until ArrayBuffer#realloc is a thing, fake a realloc */\nfunction realloc(b, sz/*:number*/) {\n\tvar L = b.length, M = 2*L > sz ? 2*L : sz + 5, i = 0;\n\tif(L >= sz) return b;\n\tif(has_buf) {\n\t\tvar o = new_unsafe_buf(M);\n\t\t// $FlowIgnore\n\t\tif(b.copy) b.copy(o);\n\t\telse for(; i < b.length; ++i) o[i] = b[i];\n\t\treturn o;\n\t} else if(use_typed_arrays) {\n\t\tvar a = new Uint8Array(M);\n\t\tif(a.set) a.set(b);\n\t\telse for(; i < L; ++i) a[i] = b[i];\n\t\treturn a;\n\t}\n\tb.length = M;\n\treturn b;\n}\n\n/* zero-filled arrays for older browsers */\nfunction zero_fill_array(n) {\n\tvar o = new Array(n);\n\tfor(var i = 0; i < n; ++i) o[i] = 0;\n\treturn o;\n}\n\n/* build tree (used for literals and lengths) */\nfunction build_tree(clens, cmap, MAX/*:number*/)/*:number*/ {\n\tvar maxlen = 1, w = 0, i = 0, j = 0, ccode = 0, L = clens.length;\n\n\tvar bl_count  = use_typed_arrays ? new Uint16Array(32) : zero_fill_array(32);\n\tfor(i = 0; i < 32; ++i) bl_count[i] = 0;\n\n\tfor(i = L; i < MAX; ++i) clens[i] = 0;\n\tL = clens.length;\n\n\tvar ctree = use_typed_arrays ? new Uint16Array(L) : zero_fill_array(L); // []\n\n\t/* build code tree */\n\tfor(i = 0; i < L; ++i) {\n\t\tbl_count[(w = clens[i])]++;\n\t\tif(maxlen < w) maxlen = w;\n\t\tctree[i] = 0;\n\t}\n\tbl_count[0] = 0;\n\tfor(i = 1; i <= maxlen; ++i) bl_count[i+16] = (ccode = (ccode + bl_count[i-1])<<1);\n\tfor(i = 0; i < L; ++i) {\n\t\tccode = clens[i];\n\t\tif(ccode != 0) ctree[i] = bl_count[ccode+16]++;\n\t}\n\n\t/* cmap[maxlen + 4 bits] = (off&15) + (lit<<4) reverse mapping */\n\tvar cleni = 0;\n\tfor(i = 0; i < L; ++i) {\n\t\tcleni = clens[i];\n\t\tif(cleni != 0) {\n\t\t\tccode = bit_swap_n(ctree[i], maxlen)>>(maxlen-cleni);\n\t\t\tfor(j = (1<<(maxlen + 4 - cleni)) - 1; j>=0; --j)\n\t\t\t\tcmap[ccode|(j<<cleni)] = (cleni&15) | (i<<4);\n\t\t}\n\t}\n\treturn maxlen;\n}\n\n/* Fixed Huffman */\nvar fix_lmap = use_typed_arrays ? new Uint16Array(512) : zero_fill_array(512);\nvar fix_dmap = use_typed_arrays ? new Uint16Array(32)  : zero_fill_array(32);\nif(!use_typed_arrays) {\n\tfor(var i = 0; i < 512; ++i) fix_lmap[i] = 0;\n\tfor(i = 0; i < 32; ++i) fix_dmap[i] = 0;\n}\n(function() {\n\tvar dlens/*:Array<number>*/ = [];\n\tvar i = 0;\n\tfor(;i<32; i++) dlens.push(5);\n\tbuild_tree(dlens, fix_dmap, 32);\n\n\tvar clens/*:Array<number>*/ = [];\n\ti = 0;\n\tfor(; i<=143; i++) clens.push(8);\n\tfor(; i<=255; i++) clens.push(9);\n\tfor(; i<=279; i++) clens.push(7);\n\tfor(; i<=287; i++) clens.push(8);\n\tbuild_tree(clens, fix_lmap, 288);\n})();var _deflateRaw = /*#__PURE__*/(function _deflateRawIIFE() {\n\tvar DST_LN_RE = use_typed_arrays ? new Uint8Array(0x8000) : [];\n\tvar j = 0, k = 0;\n\tfor(; j < DST_LN.length - 1; ++j) {\n\t\tfor(; k < DST_LN[j+1]; ++k) DST_LN_RE[k] = j;\n\t}\n\tfor(;k < 32768; ++k) DST_LN_RE[k] = 29;\n\n\tvar LEN_LN_RE = use_typed_arrays ? new Uint8Array(0x103) : [];\n\tfor(j = 0, k = 0; j < LEN_LN.length - 1; ++j) {\n\t\tfor(; k < LEN_LN[j+1]; ++k) LEN_LN_RE[k] = j;\n\t}\n\n\tfunction write_stored(data, out) {\n\t\tvar boff = 0;\n\t\twhile(boff < data.length) {\n\t\t\tvar L = Math.min(0xFFFF, data.length - boff);\n\t\t\tvar h = boff + L == data.length;\n\t\t\tout.write_shift(1, +h);\n\t\t\tout.write_shift(2, L);\n\t\t\tout.write_shift(2, (~L) & 0xFFFF);\n\t\t\twhile(L-- > 0) out[out.l++] = data[boff++];\n\t\t}\n\t\treturn out.l;\n\t}\n\n\t/* Fixed Huffman */\n\tfunction write_huff_fixed(data, out) {\n\t\tvar bl = 0;\n\t\tvar boff = 0;\n\t\tvar addrs = use_typed_arrays ? new Uint16Array(0x8000) : [];\n\t\twhile(boff < data.length) {\n\t\t\tvar L = /* data.length - boff; */ Math.min(0xFFFF, data.length - boff);\n\n\t\t\t/* write a stored block for short data */\n\t\t\tif(L < 10) {\n\t\t\t\tbl = write_bits_3(out, bl, +!!(boff + L == data.length)); // jshint ignore:line\n\t\t\t\tif(bl & 7) bl += 8 - (bl & 7);\n\t\t\t\tout.l = (bl / 8) | 0;\n\t\t\t\tout.write_shift(2, L);\n\t\t\t\tout.write_shift(2, (~L) & 0xFFFF);\n\t\t\t\twhile(L-- > 0) out[out.l++] = data[boff++];\n\t\t\t\tbl = out.l * 8;\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tbl = write_bits_3(out, bl, +!!(boff + L == data.length) + 2); // jshint ignore:line\n\t\t\tvar hash = 0;\n\t\t\twhile(L-- > 0) {\n\t\t\t\tvar d = data[boff];\n\t\t\t\thash = ((hash << 5) ^ d) & 0x7FFF;\n\n\t\t\t\tvar match = -1, mlen = 0;\n\n\t\t\t\tif((match = addrs[hash])) {\n\t\t\t\t\tmatch |= boff & ~0x7FFF;\n\t\t\t\t\tif(match > boff) match -= 0x8000;\n\t\t\t\t\tif(match < boff) while(data[match + mlen] == data[boff + mlen] && mlen < 250) ++mlen;\n\t\t\t\t}\n\n\t\t\t\tif(mlen > 2) {\n\t\t\t\t\t/* Copy Token  */\n\t\t\t\t\td = LEN_LN_RE[mlen];\n\t\t\t\t\tif(d <= 22) bl = write_bits_8(out, bl, bitswap8[d+1]>>1) - 1;\n\t\t\t\t\telse {\n\t\t\t\t\t\twrite_bits_8(out, bl, 3);\n\t\t\t\t\t\tbl += 5;\n\t\t\t\t\t\twrite_bits_8(out, bl, bitswap8[d-23]>>5);\n\t\t\t\t\t\tbl += 3;\n\t\t\t\t\t}\n\t\t\t\t\tvar len_eb = (d < 8) ? 0 : ((d - 4)>>2);\n\t\t\t\t\tif(len_eb > 0) {\n\t\t\t\t\t\twrite_bits_16(out, bl, mlen - LEN_LN[d]);\n\t\t\t\t\t\tbl += len_eb;\n\t\t\t\t\t}\n\n\t\t\t\t\td = DST_LN_RE[boff - match];\n\t\t\t\t\tbl = write_bits_8(out, bl, bitswap8[d]>>3);\n\t\t\t\t\tbl -= 3;\n\n\t\t\t\t\tvar dst_eb = d < 4 ? 0 : (d-2)>>1;\n\t\t\t\t\tif(dst_eb > 0) {\n\t\t\t\t\t\twrite_bits_16(out, bl, boff - match - DST_LN[d]);\n\t\t\t\t\t\tbl += dst_eb;\n\t\t\t\t\t}\n\t\t\t\t\tfor(var q = 0; q < mlen; ++q) {\n\t\t\t\t\t\taddrs[hash] = boff & 0x7FFF;\n\t\t\t\t\t\thash = ((hash << 5) ^ data[boff]) & 0x7FFF;\n\t\t\t\t\t\t++boff;\n\t\t\t\t\t}\n\t\t\t\t\tL-= mlen - 1;\n\t\t\t\t} else {\n\t\t\t\t\t/* Literal Token */\n\t\t\t\t\tif(d <= 143) d = d + 48;\n\t\t\t\t\telse bl = write_bits_1(out, bl, 1);\n\t\t\t\t\tbl = write_bits_8(out, bl, bitswap8[d]);\n\t\t\t\t\taddrs[hash] = boff & 0x7FFF;\n\t\t\t\t\t++boff;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tbl = write_bits_8(out, bl, 0) - 1;\n\t\t}\n\t\tout.l = ((bl + 7)/8)|0;\n\t\treturn out.l;\n\t}\n\treturn function _deflateRaw(data, out) {\n\t\tif(data.length < 8) return write_stored(data, out);\n\t\treturn write_huff_fixed(data, out);\n\t};\n})();\n\nfunction _deflate(data) {\n\tvar buf = new_buf(50+Math.floor(data.length*1.1));\n\tvar off = _deflateRaw(data, buf);\n\treturn buf.slice(0, off);\n}\n/* modified inflate function also moves original read head */\n\nvar dyn_lmap = use_typed_arrays ? new Uint16Array(32768) : zero_fill_array(32768);\nvar dyn_dmap = use_typed_arrays ? new Uint16Array(32768) : zero_fill_array(32768);\nvar dyn_cmap = use_typed_arrays ? new Uint16Array(128)   : zero_fill_array(128);\nvar dyn_len_1 = 1, dyn_len_2 = 1;\n\n/* 5.5.3 Expanding Huffman Codes */\nfunction dyn(data, boff/*:number*/) {\n\t/* nomenclature from RFC1951 refers to bit values; these are offset by the implicit constant */\n\tvar _HLIT = read_bits_5(data, boff) + 257; boff += 5;\n\tvar _HDIST = read_bits_5(data, boff) + 1; boff += 5;\n\tvar _HCLEN = read_bits_4(data, boff) + 4; boff += 4;\n\tvar w = 0;\n\n\t/* grab and store code lengths */\n\tvar clens = use_typed_arrays ? new Uint8Array(19) : zero_fill_array(19);\n\tvar ctree = [ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 ];\n\tvar maxlen = 1;\n\tvar bl_count =  use_typed_arrays ? new Uint8Array(8) : zero_fill_array(8);\n\tvar next_code = use_typed_arrays ? new Uint8Array(8) : zero_fill_array(8);\n\tvar L = clens.length; /* 19 */\n\tfor(var i = 0; i < _HCLEN; ++i) {\n\t\tclens[CLEN_ORDER[i]] = w = read_bits_3(data, boff);\n\t\tif(maxlen < w) maxlen = w;\n\t\tbl_count[w]++;\n\t\tboff += 3;\n\t}\n\n\t/* build code tree */\n\tvar ccode = 0;\n\tbl_count[0] = 0;\n\tfor(i = 1; i <= maxlen; ++i) next_code[i] = ccode = (ccode + bl_count[i-1])<<1;\n\tfor(i = 0; i < L; ++i) if((ccode = clens[i]) != 0) ctree[i] = next_code[ccode]++;\n\t/* cmap[7 bits from stream] = (off&7) + (lit<<3) */\n\tvar cleni = 0;\n\tfor(i = 0; i < L; ++i) {\n\t\tcleni = clens[i];\n\t\tif(cleni != 0) {\n\t\t\tccode = bitswap8[ctree[i]]>>(8-cleni);\n\t\t\tfor(var j = (1<<(7-cleni))-1; j>=0; --j) dyn_cmap[ccode|(j<<cleni)] = (cleni&7) | (i<<3);\n\t\t}\n\t}\n\n\t/* read literal and dist codes at once */\n\tvar hcodes/*:Array<number>*/ = [];\n\tmaxlen = 1;\n\tfor(; hcodes.length < _HLIT + _HDIST;) {\n\t\tccode = dyn_cmap[read_bits_7(data, boff)];\n\t\tboff += ccode & 7;\n\t\tswitch((ccode >>>= 3)) {\n\t\t\tcase 16:\n\t\t\t\tw = 3 + read_bits_2(data, boff); boff += 2;\n\t\t\t\tccode = hcodes[hcodes.length - 1];\n\t\t\t\twhile(w-- > 0) hcodes.push(ccode);\n\t\t\t\tbreak;\n\t\t\tcase 17:\n\t\t\t\tw = 3 + read_bits_3(data, boff); boff += 3;\n\t\t\t\twhile(w-- > 0) hcodes.push(0);\n\t\t\t\tbreak;\n\t\t\tcase 18:\n\t\t\t\tw = 11 + read_bits_7(data, boff); boff += 7;\n\t\t\t\twhile(w -- > 0) hcodes.push(0);\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\thcodes.push(ccode);\n\t\t\t\tif(maxlen < ccode) maxlen = ccode;\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\t/* build literal / length trees */\n\tvar h1 = hcodes.slice(0, _HLIT), h2 = hcodes.slice(_HLIT);\n\tfor(i = _HLIT; i < 286; ++i) h1[i] = 0;\n\tfor(i = _HDIST; i < 30; ++i) h2[i] = 0;\n\tdyn_len_1 = build_tree(h1, dyn_lmap, 286);\n\tdyn_len_2 = build_tree(h2, dyn_dmap, 30);\n\treturn boff;\n}\n\n/* return [ data, bytesRead ] */\nfunction inflate(data, usz/*:number*/) {\n\t/* shortcircuit for empty buffer [0x03, 0x00] */\n\tif(data[0] == 3 && !(data[1] & 0x3)) { return [new_raw_buf(usz), 2]; }\n\n\t/* bit offset */\n\tvar boff = 0;\n\n\t/* header includes final bit and type bits */\n\tvar header = 0;\n\n\tvar outbuf = new_unsafe_buf(usz ? usz : (1<<18));\n\tvar woff = 0;\n\tvar OL = outbuf.length>>>0;\n\tvar max_len_1 = 0, max_len_2 = 0;\n\n\twhile((header&1) == 0) {\n\t\theader = read_bits_3(data, boff); boff += 3;\n\t\tif((header >>> 1) == 0) {\n\t\t\t/* Stored block */\n\t\t\tif(boff & 7) boff += 8 - (boff&7);\n\t\t\t/* 2 bytes sz, 2 bytes bit inverse */\n\t\t\tvar sz = data[boff>>>3] | data[(boff>>>3)+1]<<8;\n\t\t\tboff += 32;\n\t\t\t/* push sz bytes */\n\t\t\tif(sz > 0) {\n\t\t\t\tif(!usz && OL < woff + sz) { outbuf = realloc(outbuf, woff + sz); OL = outbuf.length; }\n\t\t\t\twhile(sz-- > 0) { outbuf[woff++] = data[boff>>>3]; boff += 8; }\n\t\t\t}\n\t\t\tcontinue;\n\t\t} else if((header >> 1) == 1) {\n\t\t\t/* Fixed Huffman */\n\t\t\tmax_len_1 = 9; max_len_2 = 5;\n\t\t} else {\n\t\t\t/* Dynamic Huffman */\n\t\t\tboff = dyn(data, boff);\n\t\t\tmax_len_1 = dyn_len_1; max_len_2 = dyn_len_2;\n\t\t}\n\t\tfor(;;) { // while(true) is apparently out of vogue in modern JS circles\n\t\t\tif(!usz && (OL < woff + 32767)) { outbuf = realloc(outbuf, woff + 32767); OL = outbuf.length; }\n\t\t\t/* ingest code and move read head */\n\t\t\tvar bits = read_bits_n(data, boff, max_len_1);\n\t\t\tvar code = (header>>>1) == 1 ? fix_lmap[bits] : dyn_lmap[bits];\n\t\t\tboff += code & 15; code >>>= 4;\n\t\t\t/* 0-255 are literals, 256 is end of block token, 257+ are copy tokens */\n\t\t\tif(((code>>>8)&0xFF) === 0) outbuf[woff++] = code;\n\t\t\telse if(code == 256) break;\n\t\t\telse {\n\t\t\t\tcode -= 257;\n\t\t\t\tvar len_eb = (code < 8) ? 0 : ((code-4)>>2); if(len_eb > 5) len_eb = 0;\n\t\t\t\tvar tgt = woff + LEN_LN[code];\n\t\t\t\t/* length extra bits */\n\t\t\t\tif(len_eb > 0) {\n\t\t\t\t\ttgt += read_bits_n(data, boff, len_eb);\n\t\t\t\t\tboff += len_eb;\n\t\t\t\t}\n\n\t\t\t\t/* dist code */\n\t\t\t\tbits = read_bits_n(data, boff, max_len_2);\n\t\t\t\tcode = (header>>>1) == 1 ? fix_dmap[bits] : dyn_dmap[bits];\n\t\t\t\tboff += code & 15; code >>>= 4;\n\t\t\t\tvar dst_eb = (code < 4 ? 0 : (code-2)>>1);\n\t\t\t\tvar dst = DST_LN[code];\n\t\t\t\t/* dist extra bits */\n\t\t\t\tif(dst_eb > 0) {\n\t\t\t\t\tdst += read_bits_n(data, boff, dst_eb);\n\t\t\t\t\tboff += dst_eb;\n\t\t\t\t}\n\n\t\t\t\t/* in the common case, manual byte copy is faster than TA set / Buffer copy */\n\t\t\t\tif(!usz && OL < tgt) { outbuf = realloc(outbuf, tgt + 100); OL = outbuf.length; }\n\t\t\t\twhile(woff < tgt) { outbuf[woff] = outbuf[woff - dst]; ++woff; }\n\t\t\t}\n\t\t}\n\t}\n\tif(usz) return [outbuf, (boff+7)>>>3];\n\treturn [outbuf.slice(0, woff), (boff+7)>>>3];\n}\n\nfunction _inflate(payload, usz) {\n\tvar data = payload.slice(payload.l||0);\n\tvar out = inflate(data, usz);\n\tpayload.l += out[1];\n\treturn out[0];\n}\n\nfunction warn_or_throw(wrn, msg) {\n\tif(wrn) { if(typeof console !== 'undefined') console.error(msg); }\n\telse throw new Error(msg);\n}\n\nfunction parse_zip(file/*:RawBytes*/, options/*:CFBReadOpts*/)/*:CFBContainer*/ {\n\tvar blob/*:CFBlob*/ = /*::(*/file/*:: :any)*/;\n\tprep_blob(blob, 0);\n\n\tvar FileIndex/*:CFBFileIndex*/ = [], FullPaths/*:Array<string>*/ = [];\n\tvar o = {\n\t\tFileIndex: FileIndex,\n\t\tFullPaths: FullPaths\n\t};\n\tinit_cfb(o, { root: options.root });\n\n\t/* find end of central directory, start just after signature */\n\tvar i = blob.length - 4;\n\twhile((blob[i] != 0x50 || blob[i+1] != 0x4b || blob[i+2] != 0x05 || blob[i+3] != 0x06) && i >= 0) --i;\n\tblob.l = i + 4;\n\n\t/* parse end of central directory */\n\tblob.l += 4;\n\tvar fcnt = blob.read_shift(2);\n\tblob.l += 6;\n\tvar start_cd = blob.read_shift(4);\n\n\t/* parse central directory */\n\tblob.l = start_cd;\n\n\tfor(i = 0; i < fcnt; ++i) {\n\t\t/* trust local file header instead of CD entry */\n\t\tblob.l += 20;\n\t\tvar csz = blob.read_shift(4);\n\t\tvar usz = blob.read_shift(4);\n\t\tvar namelen = blob.read_shift(2);\n\t\tvar efsz = blob.read_shift(2);\n\t\tvar fcsz = blob.read_shift(2);\n\t\tblob.l += 8;\n\t\tvar offset = blob.read_shift(4);\n\t\tvar EF = parse_extra_field(/*::(*/blob.slice(blob.l+namelen, blob.l+namelen+efsz)/*:: :any)*/);\n\t\tblob.l += namelen + efsz + fcsz;\n\n\t\tvar L = blob.l;\n\t\tblob.l = offset + 4;\n\t\t/* ZIP64 lengths */\n\t\tif(EF && EF[0x0001]) {\n\t\t\tif((EF[0x0001]||{}).usz) usz = EF[0x0001].usz;\n\t\t\tif((EF[0x0001]||{}).csz) csz = EF[0x0001].csz;\n\t\t}\n\t\tparse_local_file(blob, csz, usz, o, EF);\n\t\tblob.l = L;\n\t}\n\n\treturn o;\n}\n\n\n/* head starts just after local file header signature */\nfunction parse_local_file(blob/*:CFBlob*/, csz/*:number*/, usz/*:number*/, o/*:CFBContainer*/, EF) {\n\t/* [local file header] */\n\tblob.l += 2;\n\tvar flags = blob.read_shift(2);\n\tvar meth = blob.read_shift(2);\n\tvar date = parse_dos_date(blob);\n\n\tif(flags & 0x2041) throw new Error(\"Unsupported ZIP encryption\");\n\tvar crc32 = blob.read_shift(4);\n\tvar _csz = blob.read_shift(4);\n\tvar _usz = blob.read_shift(4);\n\n\tvar namelen = blob.read_shift(2);\n\tvar efsz = blob.read_shift(2);\n\n\t// TODO: flags & (1<<11) // UTF8\n\tvar name = \"\"; for(var i = 0; i < namelen; ++i) name += String.fromCharCode(blob[blob.l++]);\n\tif(efsz) {\n\t\tvar ef = parse_extra_field(/*::(*/blob.slice(blob.l, blob.l + efsz)/*:: :any)*/);\n\t\tif((ef[0x5455]||{}).mt) date = ef[0x5455].mt;\n\t\tif((ef[0x0001]||{}).usz) _usz = ef[0x0001].usz;\n\t\tif((ef[0x0001]||{}).csz) _csz = ef[0x0001].csz;\n\t\tif(EF) {\n\t\t\tif((EF[0x5455]||{}).mt) date = EF[0x5455].mt;\n\t\t\tif((EF[0x0001]||{}).usz) _usz = ef[0x0001].usz;\n\t\t\tif((EF[0x0001]||{}).csz) _csz = ef[0x0001].csz;\n\t\t}\n\t}\n\tblob.l += efsz;\n\n\t/* [encryption header] */\n\n\t/* [file data] */\n\tvar data = blob.slice(blob.l, blob.l + _csz);\n\tswitch(meth) {\n\t\tcase 8: data = _inflateRawSync(blob, _usz); break;\n\t\tcase 0: break; // TODO: scan for magic number\n\t\tdefault: throw new Error(\"Unsupported ZIP Compression method \" + meth);\n\t}\n\n\t/* [data descriptor] */\n\tvar wrn = false;\n\tif(flags & 8) {\n\t\tcrc32 = blob.read_shift(4);\n\t\tif(crc32 == 0x08074b50) { crc32 = blob.read_shift(4); wrn = true; }\n\t\t_csz = blob.read_shift(4);\n\t\t_usz = blob.read_shift(4);\n\t}\n\n\tif(_csz != csz) warn_or_throw(wrn, \"Bad compressed size: \" + csz + \" != \" + _csz);\n\tif(_usz != usz) warn_or_throw(wrn, \"Bad uncompressed size: \" + usz + \" != \" + _usz);\n\t//var _crc32 = CRC32.buf(data, 0);\n\t//if((crc32>>0) != (_crc32>>0)) warn_or_throw(wrn, \"Bad CRC32 checksum: \" + crc32 + \" != \" + _crc32);\n\tcfb_add(o, name, data, {unsafe: true, mt: date});\n}\nfunction write_zip(cfb/*:CFBContainer*/, options/*:CFBWriteOpts*/)/*:RawBytes*/ {\n\tvar _opts = options || {};\n\tvar out = [], cdirs = [];\n\tvar o/*:CFBlob*/ = new_buf(1);\n\tvar method = (_opts.compression ? 8 : 0), flags = 0;\n\tvar desc = false;\n\tif(desc) flags |= 8;\n\tvar i = 0, j = 0;\n\n\tvar start_cd = 0, fcnt = 0;\n\tvar root = cfb.FullPaths[0], fp = root, fi = cfb.FileIndex[0];\n\tvar crcs = [];\n\tvar sz_cd = 0;\n\n\tfor(i = 1; i < cfb.FullPaths.length; ++i) {\n\t\tfp = cfb.FullPaths[i].slice(root.length); fi = cfb.FileIndex[i];\n\t\tif(!fi.size || !fi.content || fp == \"\\u0001Sh33tJ5\") continue;\n\t\tvar start = start_cd;\n\n\t\t/* TODO: CP437 filename */\n\t\tvar namebuf = new_buf(fp.length);\n\t\tfor(j = 0; j < fp.length; ++j) namebuf.write_shift(1, fp.charCodeAt(j) & 0x7F);\n\t\tnamebuf = namebuf.slice(0, namebuf.l);\n\t\tcrcs[fcnt] = typeof fi.content == \"string\" ? CRC32.bstr(fi.content, 0) : CRC32.buf(/*::((*/fi.content/*::||[]):any)*/, 0);\n\n\t\tvar outbuf = typeof fi.content == \"string\" ? s2a(fi.content) : fi.content/*::||[]*/;\n\t\tif(method == 8) outbuf = _deflateRawSync(outbuf);\n\n\t\t/* local file header */\n\t\to = new_buf(30);\n\t\to.write_shift(4, 0x04034b50);\n\t\to.write_shift(2, 20);\n\t\to.write_shift(2, flags);\n\t\to.write_shift(2, method);\n\t\t/* TODO: last mod file time/date */\n\t\tif(fi.mt) write_dos_date(o, fi.mt);\n\t\telse o.write_shift(4, 0);\n\t\to.write_shift(-4, (flags & 8) ? 0 : crcs[fcnt]);\n\t\to.write_shift(4,  (flags & 8) ? 0 : outbuf.length);\n\t\to.write_shift(4,  (flags & 8) ? 0 : /*::(*/fi.content/*::||[])*/.length);\n\t\to.write_shift(2, namebuf.length);\n\t\to.write_shift(2, 0);\n\n\t\tstart_cd += o.length;\n\t\tout.push(o);\n\t\tstart_cd += namebuf.length;\n\t\tout.push(namebuf);\n\n\t\t/* TODO: extra fields? */\n\n\t\t/* TODO: encryption header ? */\n\n\t\tstart_cd += outbuf.length;\n\t\tout.push(outbuf);\n\n\t\t/* data descriptor */\n\t\tif(flags & 8) {\n\t\t\to = new_buf(12);\n\t\t\to.write_shift(-4, crcs[fcnt]);\n\t\t\to.write_shift(4, outbuf.length);\n\t\t\to.write_shift(4, /*::(*/fi.content/*::||[])*/.length);\n\t\t\tstart_cd += o.l;\n\t\t\tout.push(o);\n\t\t}\n\n\t\t/* central directory */\n\t\to = new_buf(46);\n\t\to.write_shift(4, 0x02014b50);\n\t\to.write_shift(2, 0);\n\t\to.write_shift(2, 20);\n\t\to.write_shift(2, flags);\n\t\to.write_shift(2, method);\n\t\to.write_shift(4, 0); /* TODO: last mod file time/date */\n\t\to.write_shift(-4, crcs[fcnt]);\n\n\t\to.write_shift(4, outbuf.length);\n\t\to.write_shift(4, /*::(*/fi.content/*::||[])*/.length);\n\t\to.write_shift(2, namebuf.length);\n\t\to.write_shift(2, 0);\n\t\to.write_shift(2, 0);\n\t\to.write_shift(2, 0);\n\t\to.write_shift(2, 0);\n\t\to.write_shift(4, 0);\n\t\to.write_shift(4, start);\n\n\t\tsz_cd += o.l;\n\t\tcdirs.push(o);\n\t\tsz_cd += namebuf.length;\n\t\tcdirs.push(namebuf);\n\t\t++fcnt;\n\t}\n\n\t/* end of central directory */\n\to = new_buf(22);\n\to.write_shift(4, 0x06054b50);\n\to.write_shift(2, 0);\n\to.write_shift(2, 0);\n\to.write_shift(2, fcnt);\n\to.write_shift(2, fcnt);\n\to.write_shift(4, sz_cd);\n\to.write_shift(4, start_cd);\n\to.write_shift(2, 0);\n\n\treturn bconcat(([bconcat((out/*:any*/)), bconcat(cdirs), o]/*:any*/));\n}\nvar ContentTypeMap = ({\n\t\"htm\": \"text/html\",\n\t\"xml\": \"text/xml\",\n\n\t\"gif\": \"image/gif\",\n\t\"jpg\": \"image/jpeg\",\n\t\"png\": \"image/png\",\n\n\t\"mso\": \"application/x-mso\",\n\t\"thmx\": \"application/vnd.ms-officetheme\",\n\t\"sh33tj5\": \"application/octet-stream\"\n}/*:any*/);\n\nfunction get_content_type(fi/*:CFBEntry*/, fp/*:string*/)/*:string*/ {\n\tif(fi.ctype) return fi.ctype;\n\n\tvar ext = fi.name || \"\", m = ext.match(/\\.([^\\.]+)$/);\n\tif(m && ContentTypeMap[m[1]]) return ContentTypeMap[m[1]];\n\n\tif(fp) {\n\t\tm = (ext = fp).match(/[\\.\\\\]([^\\.\\\\])+$/);\n\t\tif(m && ContentTypeMap[m[1]]) return ContentTypeMap[m[1]];\n\t}\n\n\treturn \"application/octet-stream\";\n}\n\n/* 76 character chunks TODO: intertwine encoding */\nfunction write_base64_76(bstr/*:string*/)/*:string*/ {\n\tvar data = Base64_encode(bstr);\n\tvar o = [];\n\tfor(var i = 0; i < data.length; i+= 76) o.push(data.slice(i, i+76));\n\treturn o.join(\"\\r\\n\") + \"\\r\\n\";\n}\n\n/*\nRules for QP:\n\t- escape =## applies for all non-display characters and literal \"=\"\n\t- space or tab at end of line must be encoded\n\t- \\r\\n newlines can be preserved, but bare \\r and \\n must be escaped\n\t- lines must not exceed 76 characters, use soft breaks =\\r\\n\n\nTODO: Some files from word appear to write line extensions with bare equals:\n\n```\n<table class=3DMsoTableGrid border=3D1 cellspacing=3D0 cellpadding=3D0 width=\n=\"70%\"\n```\n*/\nfunction write_quoted_printable(text/*:string*/)/*:string*/ {\n\tvar encoded = text.replace(/[\\x00-\\x08\\x0B\\x0C\\x0E-\\x1F\\x7E-\\xFF=]/g, function(c) {\n\t\tvar w = c.charCodeAt(0).toString(16).toUpperCase();\n\t\treturn \"=\" + (w.length == 1 ? \"0\" + w : w);\n\t});\n\n\tencoded = encoded.replace(/ $/mg, \"=20\").replace(/\\t$/mg, \"=09\");\n\n\tif(encoded.charAt(0) == \"\\n\") encoded = \"=0D\" + encoded.slice(1);\n\tencoded = encoded.replace(/\\r(?!\\n)/mg, \"=0D\").replace(/\\n\\n/mg, \"\\n=0A\").replace(/([^\\r\\n])\\n/mg, \"$1=0A\");\n\n\tvar o/*:Array<string>*/ = [], split = encoded.split(\"\\r\\n\");\n\tfor(var si = 0; si < split.length; ++si) {\n\t\tvar str = split[si];\n\t\tif(str.length == 0) { o.push(\"\"); continue; }\n\t\tfor(var i = 0; i < str.length;) {\n\t\t\tvar end = 76;\n\t\t\tvar tmp = str.slice(i, i + end);\n\t\t\tif(tmp.charAt(end - 1) == \"=\") end --;\n\t\t\telse if(tmp.charAt(end - 2) == \"=\") end -= 2;\n\t\t\telse if(tmp.charAt(end - 3) == \"=\") end -= 3;\n\t\t\ttmp = str.slice(i, i + end);\n\t\t\ti += end;\n\t\t\tif(i < str.length) tmp += \"=\";\n\t\t\to.push(tmp);\n\t\t}\n\t}\n\n\treturn o.join(\"\\r\\n\");\n}\nfunction parse_quoted_printable(data/*:Array<string>*/)/*:RawBytes*/ {\n\tvar o = [];\n\n\t/* unify long lines */\n\tfor(var di = 0; di < data.length; ++di) {\n\t\tvar line = data[di];\n\t\twhile(di <= data.length && line.charAt(line.length - 1) == \"=\") line = line.slice(0, line.length - 1) + data[++di];\n\t\to.push(line);\n\t}\n\n\t/* decode */\n\tfor(var oi = 0; oi < o.length; ++oi) o[oi] = o[oi].replace(/[=][0-9A-Fa-f]{2}/g, function($$) { return String.fromCharCode(parseInt($$.slice(1), 16)); });\n\treturn s2a(o.join(\"\\r\\n\"));\n}\n\n\nfunction parse_mime(cfb/*:CFBContainer*/, data/*:Array<string>*/, root/*:string*/)/*:void*/ {\n\tvar fname = \"\", cte = \"\", ctype = \"\", fdata;\n\tvar di = 0;\n\tfor(;di < 10; ++di) {\n\t\tvar line = data[di];\n\t\tif(!line || line.match(/^\\s*$/)) break;\n\t\tvar m = line.match(/^(.*?):\\s*([^\\s].*)$/);\n\t\tif(m) switch(m[1].toLowerCase()) {\n\t\t\tcase \"content-location\": fname = m[2].trim(); break;\n\t\t\tcase \"content-type\": ctype = m[2].trim(); break;\n\t\t\tcase \"content-transfer-encoding\": cte = m[2].trim(); break;\n\t\t}\n\t}\n\t++di;\n\tswitch(cte.toLowerCase()) {\n\t\tcase 'base64': fdata = s2a(Base64_decode(data.slice(di).join(\"\"))); break;\n\t\tcase 'quoted-printable': fdata = parse_quoted_printable(data.slice(di)); break;\n\t\tdefault: throw new Error(\"Unsupported Content-Transfer-Encoding \" + cte);\n\t}\n\tvar file = cfb_add(cfb, fname.slice(root.length), fdata, {unsafe: true});\n\tif(ctype) file.ctype = ctype;\n}\n\nfunction parse_mad(file/*:RawBytes*/, options/*:CFBReadOpts*/)/*:CFBContainer*/ {\n\tif(a2s(file.slice(0,13)).toLowerCase() != \"mime-version:\") throw new Error(\"Unsupported MAD header\");\n\tvar root = (options && options.root || \"\");\n\t// $FlowIgnore\n\tvar data = (has_buf && Buffer.isBuffer(file) ? file.toString(\"binary\") : a2s(file)).split(\"\\r\\n\");\n\tvar di = 0, row = \"\";\n\n\t/* if root is not specified, scan for the common prefix */\n\tfor(di = 0; di < data.length; ++di) {\n\t\trow = data[di];\n\t\tif(!/^Content-Location:/i.test(row)) continue;\n\t\trow = row.slice(row.indexOf(\"file\"));\n\t\tif(!root) root = row.slice(0, row.lastIndexOf(\"/\") + 1);\n\t\tif(row.slice(0, root.length) == root) continue;\n\t\twhile(root.length > 0) {\n\t\t\troot = root.slice(0, root.length - 1);\n\t\t\troot = root.slice(0, root.lastIndexOf(\"/\") + 1);\n\t\t\tif(row.slice(0,root.length) == root) break;\n\t\t}\n\t}\n\n\tvar mboundary = (data[1] || \"\").match(/boundary=\"(.*?)\"/);\n\tif(!mboundary) throw new Error(\"MAD cannot find boundary\");\n\tvar boundary = \"--\" + (mboundary[1] || \"\");\n\n\tvar FileIndex/*:CFBFileIndex*/ = [], FullPaths/*:Array<string>*/ = [];\n\tvar o = {\n\t\tFileIndex: FileIndex,\n\t\tFullPaths: FullPaths\n\t};\n\tinit_cfb(o);\n\tvar start_di, fcnt = 0;\n\tfor(di = 0; di < data.length; ++di) {\n\t\tvar line = data[di];\n\t\tif(line !== boundary && line !== boundary + \"--\") continue;\n\t\tif(fcnt++) parse_mime(o, data.slice(start_di, di), root);\n\t\tstart_di = di;\n\t}\n\treturn o;\n}\n\nfunction write_mad(cfb/*:CFBContainer*/, options/*:CFBWriteOpts*/)/*:string*/ {\n\tvar opts = options || {};\n\tvar boundary = opts.boundary || \"SheetJS\";\n\tboundary = '------=' + boundary;\n\n\tvar out = [\n\t\t'MIME-Version: 1.0',\n\t\t'Content-Type: multipart/related; boundary=\"' + boundary.slice(2) + '\"',\n\t\t'',\n\t\t'',\n\t\t''\n\t];\n\n\tvar root = cfb.FullPaths[0], fp = root, fi = cfb.FileIndex[0];\n\tfor(var i = 1; i < cfb.FullPaths.length; ++i) {\n\t\tfp = cfb.FullPaths[i].slice(root.length);\n\t\tfi = cfb.FileIndex[i];\n\t\tif(!fi.size || !fi.content || fp == \"\\u0001Sh33tJ5\") continue;\n\n\t\t/* Normalize filename */\n\t\tfp = fp.replace(/[\\x00-\\x08\\x0B\\x0C\\x0E-\\x1F\\x7E-\\xFF]/g, function(c) {\n\t\t\treturn \"_x\" + c.charCodeAt(0).toString(16) + \"_\";\n\t\t}).replace(/[\\u0080-\\uFFFF]/g, function(u) {\n\t\t\treturn \"_u\" + u.charCodeAt(0).toString(16) + \"_\";\n\t\t});\n\n\t\t/* Extract content as binary string */\n\t\tvar ca = fi.content;\n\t\t// $FlowIgnore\n\t\tvar cstr = has_buf && Buffer.isBuffer(ca) ? ca.toString(\"binary\") : a2s(ca);\n\n\t\t/* 4/5 of first 1024 chars ascii -> quoted printable, else base64 */\n\t\tvar dispcnt = 0, L = Math.min(1024, cstr.length), cc = 0;\n\t\tfor(var csl = 0; csl <= L; ++csl) if((cc=cstr.charCodeAt(csl)) >= 0x20 && cc < 0x80) ++dispcnt;\n\t\tvar qp = dispcnt >= L * 4 / 5;\n\n\t\tout.push(boundary);\n\t\tout.push('Content-Location: ' + (opts.root || 'file:///C:/SheetJS/') + fp);\n\t\tout.push('Content-Transfer-Encoding: ' + (qp ? 'quoted-printable' : 'base64'));\n\t\tout.push('Content-Type: ' + get_content_type(fi, fp));\n\t\tout.push('');\n\n\t\tout.push(qp ? write_quoted_printable(cstr) : write_base64_76(cstr));\n\t}\n\tout.push(boundary + '--\\r\\n');\n\treturn out.join(\"\\r\\n\");\n}\nfunction cfb_new(opts/*:?any*/)/*:CFBContainer*/ {\n\tvar o/*:CFBContainer*/ = ({}/*:any*/);\n\tinit_cfb(o, opts);\n\treturn o;\n}\n\nfunction cfb_add(cfb/*:CFBContainer*/, name/*:string*/, content/*:?RawBytes*/, opts/*:?any*/)/*:CFBEntry*/ {\n\tvar unsafe = opts && opts.unsafe;\n\tif(!unsafe) init_cfb(cfb);\n\tvar file = !unsafe && CFB.find(cfb, name);\n\tif(!file) {\n\t\tvar fpath/*:string*/ = cfb.FullPaths[0];\n\t\tif(name.slice(0, fpath.length) == fpath) fpath = name;\n\t\telse {\n\t\t\tif(fpath.slice(-1) != \"/\") fpath += \"/\";\n\t\t\tfpath = (fpath + name).replace(\"//\",\"/\");\n\t\t}\n\t\tfile = ({name: filename(name), type: 2}/*:any*/);\n\t\tcfb.FileIndex.push(file);\n\t\tcfb.FullPaths.push(fpath);\n\t\tif(!unsafe) CFB.utils.cfb_gc(cfb);\n\t}\n\t/*:: if(!file) throw new Error(\"unreachable\"); */\n\tfile.content = (content/*:any*/);\n\tfile.size = content ? content.length : 0;\n\tif(opts) {\n\t\tif(opts.CLSID) file.clsid = opts.CLSID;\n\t\tif(opts.mt) file.mt = opts.mt;\n\t\tif(opts.ct) file.ct = opts.ct;\n\t}\n\treturn file;\n}\n\nfunction cfb_del(cfb/*:CFBContainer*/, name/*:string*/)/*:boolean*/ {\n\tinit_cfb(cfb);\n\tvar file = CFB.find(cfb, name);\n\tif(file) for(var j = 0; j < cfb.FileIndex.length; ++j) if(cfb.FileIndex[j] == file) {\n\t\tcfb.FileIndex.splice(j, 1);\n\t\tcfb.FullPaths.splice(j, 1);\n\t\treturn true;\n\t}\n\treturn false;\n}\n\nfunction cfb_mov(cfb/*:CFBContainer*/, old_name/*:string*/, new_name/*:string*/)/*:boolean*/ {\n\tinit_cfb(cfb);\n\tvar file = CFB.find(cfb, old_name);\n\tif(file) for(var j = 0; j < cfb.FileIndex.length; ++j) if(cfb.FileIndex[j] == file) {\n\t\tcfb.FileIndex[j].name = filename(new_name);\n\t\tcfb.FullPaths[j] = new_name;\n\t\treturn true;\n\t}\n\treturn false;\n}\n\nfunction cfb_gc(cfb/*:CFBContainer*/)/*:void*/ { rebuild_cfb(cfb, true); }\n\nexports.find = find;\nexports.read = read;\nexports.parse = parse;\nexports.write = write;\nexports.writeFile = write_file;\nexports.utils = {\n\tcfb_new: cfb_new,\n\tcfb_add: cfb_add,\n\tcfb_del: cfb_del,\n\tcfb_mov: cfb_mov,\n\tcfb_gc: cfb_gc,\n\tReadShift: ReadShift,\n\tCheckField: CheckField,\n\tprep_blob: prep_blob,\n\tbconcat: bconcat,\n\tuse_zlib: use_zlib,\n\t_deflateRaw: _deflate,\n\t_inflateRaw: _inflate,\n\tconsts: consts\n};\n\nreturn exports;\n})();\n\nvar _fs;\nfunction set_fs(fs) { _fs = fs; }\n\n/* normalize data for blob ctor */\nfunction blobify(data) {\n\tif(typeof data === \"string\") return s2ab(data);\n\tif(Array.isArray(data)) return a2u(data);\n\treturn data;\n}\n/* write or download file */\nfunction write_dl(fname/*:string*/, payload/*:any*/, enc/*:?string*/) {\n\t/*global IE_SaveFile, Blob, navigator, saveAs, document, File, chrome */\n\tif(typeof _fs !== 'undefined' && _fs.writeFileSync) return enc ? _fs.writeFileSync(fname, payload, enc) : _fs.writeFileSync(fname, payload);\n\tif(typeof Deno !== 'undefined') {\n\t\t/* in this spot, it's safe to assume typed arrays and TextEncoder/TextDecoder exist */\n\t\tif(enc && typeof payload == \"string\") switch(enc) {\n\t\t\tcase \"utf8\": payload = new TextEncoder(enc).encode(payload); break;\n\t\t\tcase \"binary\": payload = s2ab(payload); break;\n\t\t\t/* TODO: binary equivalent */\n\t\t\tdefault: throw new Error(\"Unsupported encoding \" + enc);\n\t\t}\n\t\treturn Deno.writeFileSync(fname, payload);\n\t}\n\tvar data = (enc == \"utf8\") ? utf8write(payload) : payload;\n\t/*:: declare var IE_SaveFile: any; */\n\tif(typeof IE_SaveFile !== 'undefined') return IE_SaveFile(data, fname);\n\tif(typeof Blob !== 'undefined') {\n\t\tvar blob = new Blob([blobify(data)], {type:\"application/octet-stream\"});\n\t\t/*:: declare var navigator: any; */\n\t\tif(typeof navigator !== 'undefined' && navigator.msSaveBlob) return navigator.msSaveBlob(blob, fname);\n\t\t/*:: declare var saveAs: any; */\n\t\tif(typeof saveAs !== 'undefined') return saveAs(blob, fname);\n\t\tif(typeof URL !== 'undefined' && typeof document !== 'undefined' && document.createElement && URL.createObjectURL) {\n\t\t\tvar url = URL.createObjectURL(blob);\n\t\t\t/*:: declare var chrome: any; */\n\t\t\tif(typeof chrome === 'object' && typeof (chrome.downloads||{}).download == \"function\") {\n\t\t\t\tif(URL.revokeObjectURL && typeof setTimeout !== 'undefined') setTimeout(function() { URL.revokeObjectURL(url); }, 60000);\n\t\t\t\treturn chrome.downloads.download({ url: url, filename: fname, saveAs: true});\n\t\t\t}\n\t\t\tvar a = document.createElement(\"a\");\n\t\t\tif(a.download != null) {\n\t\t\t\t/*:: if(document.body == null) throw new Error(\"unreachable\"); */\n\t\t\t\ta.download = fname; a.href = url; document.body.appendChild(a); a.click();\n\t\t\t\t/*:: if(document.body == null) throw new Error(\"unreachable\"); */ document.body.removeChild(a);\n\t\t\t\tif(URL.revokeObjectURL && typeof setTimeout !== 'undefined') setTimeout(function() { URL.revokeObjectURL(url); }, 60000);\n\t\t\t\treturn url;\n\t\t\t}\n\t\t}\n\t}\n\t// $FlowIgnore\n\tif(typeof $ !== 'undefined' && typeof File !== 'undefined' && typeof Folder !== 'undefined') try { // extendscript\n\t\t// $FlowIgnore\n\t\tvar out = File(fname); out.open(\"w\"); out.encoding = \"binary\";\n\t\tif(Array.isArray(payload)) payload = a2s(payload);\n\t\tout.write(payload); out.close(); return payload;\n\t} catch(e) { if(!e.message || !e.message.match(/onstruct/)) throw e; }\n\tthrow new Error(\"cannot save file \" + fname);\n}\n\n/* read binary data from file */\nfunction read_binary(path/*:string*/) {\n\tif(typeof _fs !== 'undefined') return _fs.readFileSync(path);\n\tif(typeof Deno !== 'undefined') return Deno.readFileSync(path);\n\t// $FlowIgnore\n\tif(typeof $ !== 'undefined' && typeof File !== 'undefined' && typeof Folder !== 'undefined') try { // extendscript\n\t\t// $FlowIgnore\n\t\tvar infile = File(path); infile.open(\"r\"); infile.encoding = \"binary\";\n\t\tvar data = infile.read(); infile.close();\n\t\treturn data;\n\t} catch(e) { if(!e.message || !e.message.match(/onstruct/)) throw e; }\n\tthrow new Error(\"Cannot access file \" + path);\n}\nfunction keys(o/*:any*/)/*:Array<any>*/ {\n\tvar ks = Object.keys(o), o2 = [];\n\tfor(var i = 0; i < ks.length; ++i) if(Object.prototype.hasOwnProperty.call(o, ks[i])) o2.push(ks[i]);\n\treturn o2;\n}\n\nfunction evert_key(obj/*:any*/, key/*:string*/)/*:EvertType*/ {\n\tvar o = ([]/*:any*/), K = keys(obj);\n\tfor(var i = 0; i !== K.length; ++i) if(o[obj[K[i]][key]] == null) o[obj[K[i]][key]] = K[i];\n\treturn o;\n}\n\nfunction evert(obj/*:any*/)/*:EvertType*/ {\n\tvar o = ([]/*:any*/), K = keys(obj);\n\tfor(var i = 0; i !== K.length; ++i) o[obj[K[i]]] = K[i];\n\treturn o;\n}\n\nfunction evert_num(obj/*:any*/)/*:EvertNumType*/ {\n\tvar o = ([]/*:any*/), K = keys(obj);\n\tfor(var i = 0; i !== K.length; ++i) o[obj[K[i]]] = parseInt(K[i],10);\n\treturn o;\n}\n\nfunction evert_arr(obj/*:any*/)/*:EvertArrType*/ {\n\tvar o/*:EvertArrType*/ = ([]/*:any*/), K = keys(obj);\n\tfor(var i = 0; i !== K.length; ++i) {\n\t\tif(o[obj[K[i]]] == null) o[obj[K[i]]] = [];\n\t\to[obj[K[i]]].push(K[i]);\n\t}\n\treturn o;\n}\n\nvar basedate = /*#__PURE__*/new Date(1899, 11, 30, 0, 0, 0); // 2209161600000\nfunction datenum(v/*:Date*/, date1904/*:?boolean*/)/*:number*/ {\n\tvar epoch = /*#__PURE__*/v.getTime();\n\tif(date1904) epoch -= 1462*24*60*60*1000;\n\tvar dnthresh = /*#__PURE__*/basedate.getTime() + (/*#__PURE__*/v.getTimezoneOffset() - /*#__PURE__*/basedate.getTimezoneOffset()) * 60000;\n\treturn (epoch - dnthresh) / (24 * 60 * 60 * 1000);\n}\nvar refdate = /*#__PURE__*/new Date();\nvar dnthresh = /*#__PURE__*/basedate.getTime() + (/*#__PURE__*/refdate.getTimezoneOffset() - /*#__PURE__*/basedate.getTimezoneOffset()) * 60000;\nvar refoffset = /*#__PURE__*/refdate.getTimezoneOffset();\nfunction numdate(v/*:number*/)/*:Date*/ {\n\tvar out = new Date();\n\tout.setTime(v * 24 * 60 * 60 * 1000 + dnthresh);\n\tif (out.getTimezoneOffset() !== refoffset) {\n\t\tout.setTime(out.getTime() + (out.getTimezoneOffset() - refoffset) * 60000);\n\t}\n\treturn out;\n}\n\n/* ISO 8601 Duration */\nfunction parse_isodur(s) {\n\tvar sec = 0, mt = 0, time = false;\n\tvar m = s.match(/P([0-9\\.]+Y)?([0-9\\.]+M)?([0-9\\.]+D)?T([0-9\\.]+H)?([0-9\\.]+M)?([0-9\\.]+S)?/);\n\tif(!m) throw new Error(\"|\" + s + \"| is not an ISO8601 Duration\");\n\tfor(var i = 1; i != m.length; ++i) {\n\t\tif(!m[i]) continue;\n\t\tmt = 1;\n\t\tif(i > 3) time = true;\n\t\tswitch(m[i].slice(m[i].length-1)) {\n\t\t\tcase 'Y':\n\t\t\t\tthrow new Error(\"Unsupported ISO Duration Field: \" + m[i].slice(m[i].length-1));\n\t\t\tcase 'D': mt *= 24;\n\t\t\t\t/* falls through */\n\t\t\tcase 'H': mt *= 60;\n\t\t\t\t/* falls through */\n\t\t\tcase 'M':\n\t\t\t\tif(!time) throw new Error(\"Unsupported ISO Duration Field: M\");\n\t\t\t\telse mt *= 60;\n\t\t\t\t/* falls through */\n\t\t\tcase 'S': break;\n\t\t}\n\t\tsec += mt * parseInt(m[i], 10);\n\t}\n\treturn sec;\n}\n\nvar good_pd_date_1 = /*#__PURE__*/new Date('2017-02-19T19:06:09.000Z');\nvar good_pd_date = /*#__PURE__*/isNaN(/*#__PURE__*/good_pd_date_1.getFullYear()) ? /*#__PURE__*/new Date('2/19/17') : good_pd_date_1;\nvar good_pd = /*#__PURE__*/good_pd_date.getFullYear() == 2017;\n/* parses a date as a local date */\nfunction parseDate(str/*:string|Date*/, fixdate/*:?number*/)/*:Date*/ {\n\tvar d = new Date(str);\n\tif(good_pd) {\n\t\t/*:: if(fixdate == null) fixdate = 0; */\n\t\tif(fixdate > 0) d.setTime(d.getTime() + d.getTimezoneOffset() * 60 * 1000);\n\t\telse if(fixdate < 0) d.setTime(d.getTime() - d.getTimezoneOffset() * 60 * 1000);\n\t\treturn d;\n\t}\n\tif(str instanceof Date) return str;\n\tif(good_pd_date.getFullYear() == 1917 && !isNaN(d.getFullYear())) {\n\t\tvar s = d.getFullYear();\n\t\tif(str.indexOf(\"\" + s) > -1) return d;\n\t\td.setFullYear(d.getFullYear() + 100); return d;\n\t}\n\tvar n = str.match(/\\d+/g)||[\"2017\",\"2\",\"19\",\"0\",\"0\",\"0\"];\n\tvar out = new Date(+n[0], +n[1] - 1, +n[2], (+n[3]||0), (+n[4]||0), (+n[5]||0));\n\tif(str.indexOf(\"Z\") > -1) out = new Date(out.getTime() - out.getTimezoneOffset() * 60 * 1000);\n\treturn out;\n}\n\nfunction cc2str(arr/*:Array<number>*/, debomit)/*:string*/ {\n\tif(has_buf && Buffer.isBuffer(arr)) {\n\t\tif(debomit && buf_utf16le) {\n\t\t\t// TODO: temporary patch\n\t\t\tif(arr[0] == 0xFF && arr[1] == 0xFE) return utf8write(arr.slice(2).toString(\"utf16le\"));\n\t\t\tif(arr[1] == 0xFE && arr[2] == 0xFF) return utf8write(utf16beread(arr.slice(2).toString(\"binary\")));\n\t\t}\n\t\treturn arr.toString(\"binary\");\n\t}\n\n\tif(typeof TextDecoder !== \"undefined\") try {\n\t\tif(debomit) {\n\t\t\tif(arr[0] == 0xFF && arr[1] == 0xFE) return utf8write(new TextDecoder(\"utf-16le\").decode(arr.slice(2)));\n\t\t\tif(arr[0] == 0xFE && arr[1] == 0xFF) return utf8write(new TextDecoder(\"utf-16be\").decode(arr.slice(2)));\n\t\t}\n\t\tvar rev = {\n\t\t\t\"\\u20ac\": \"\\x80\", \"\\u201a\": \"\\x82\", \"\\u0192\": \"\\x83\", \"\\u201e\": \"\\x84\",\n\t\t\t\"\\u2026\": \"\\x85\", \"\\u2020\": \"\\x86\", \"\\u2021\": \"\\x87\", \"\\u02c6\": \"\\x88\",\n\t\t\t\"\\u2030\": \"\\x89\", \"\\u0160\": \"\\x8a\", \"\\u2039\": \"\\x8b\", \"\\u0152\": \"\\x8c\",\n\t\t\t\"\\u017d\": \"\\x8e\", \"\\u2018\": \"\\x91\", \"\\u2019\": \"\\x92\", \"\\u201c\": \"\\x93\",\n\t\t\t\"\\u201d\": \"\\x94\", \"\\u2022\": \"\\x95\", \"\\u2013\": \"\\x96\", \"\\u2014\": \"\\x97\",\n\t\t\t\"\\u02dc\": \"\\x98\", \"\\u2122\": \"\\x99\", \"\\u0161\": \"\\x9a\", \"\\u203a\": \"\\x9b\",\n\t\t\t\"\\u0153\": \"\\x9c\", \"\\u017e\": \"\\x9e\", \"\\u0178\": \"\\x9f\"\n\t\t};\n\t\tif(Array.isArray(arr)) arr = new Uint8Array(arr);\n\t\treturn new TextDecoder(\"latin1\").decode(arr).replace(/[€‚ƒ„…†‡ˆ‰Š‹ŒŽ‘’“”•–—˜™š›œžŸ]/g, function(c) { return rev[c] || c; });\n\t} catch(e) {}\n\n\tvar o = [];\n\tfor(var i = 0; i != arr.length; ++i) o.push(String.fromCharCode(arr[i]));\n\treturn o.join(\"\");\n}\n\nfunction dup(o/*:any*/)/*:any*/ {\n\tif(typeof JSON != 'undefined' && !Array.isArray(o)) return JSON.parse(JSON.stringify(o));\n\tif(typeof o != 'object' || o == null) return o;\n\tif(o instanceof Date) return new Date(o.getTime());\n\tvar out = {};\n\tfor(var k in o) if(Object.prototype.hasOwnProperty.call(o, k)) out[k] = dup(o[k]);\n\treturn out;\n}\n\nfunction fill(c/*:string*/,l/*:number*/)/*:string*/ { var o = \"\"; while(o.length < l) o+=c; return o; }\n\n/* TODO: stress test */\nfunction fuzzynum(s/*:string*/)/*:number*/ {\n\tvar v/*:number*/ = Number(s);\n\tif(!isNaN(v)) return isFinite(v) ? v : NaN;\n\tif(!/\\d/.test(s)) return v;\n\tvar wt = 1;\n\tvar ss = s.replace(/([\\d]),([\\d])/g,\"$1$2\").replace(/[$]/g,\"\").replace(/[%]/g, function() { wt *= 100; return \"\";});\n\tif(!isNaN(v = Number(ss))) return v / wt;\n\tss = ss.replace(/[(](.*)[)]/,function($$, $1) { wt = -wt; return $1;});\n\tif(!isNaN(v = Number(ss))) return v / wt;\n\treturn v;\n}\n\n/* NOTE: Chrome rejects bare times like 1:23 PM */\nvar FDRE1 = /^(0?\\d|1[0-2])(?:|:([0-5]?\\d)(?:|(\\.\\d+)(?:|:([0-5]?\\d))|:([0-5]?\\d)(|\\.\\d+)))\\s+([ap])m?$/;\n\nfunction fuzzytime1(M) /*:Date*/ {\n    /* TODO: 1904 adjustment, keep in sync with base date */\n    if(!M[2]) return new Date(1899,11,30,(+M[1]%12) + (M[7] == \"p\" ? 12 : 0), 0, 0, 0);\n    if(M[3]) {\n        if(M[4]) return new Date(1899,11,30,(+M[1]%12) + (M[7] == \"p\" ? 12 : 0), +M[2], +M[4], parseFloat(M[3])*1000);\n        else return new Date(1899,11,30,(M[7] == \"p\" ? 12 : 0), +M[1], +M[2], parseFloat(M[3])*1000);\n    }\n    else if(M[5]) return new Date(1899,11,30, (+M[1]%12) + (M[7] == \"p\" ? 12 : 0), +M[2], +M[5], M[6] ? parseFloat(M[6]) * 1000 : 0);\n    else return new Date(1899,11,30,(+M[1]%12) + (M[7] == \"p\" ? 12 : 0), +M[2], 0, 0);\n}\nvar lower_months = ['january', 'february', 'march', 'april', 'may', 'june', 'july', 'august', 'september', 'october', 'november', 'december'];\nfunction fuzzydate(s/*:string*/)/*:Date*/ {\n\tvar lower = s.toLowerCase();\n\tvar lnos = lower.replace(/\\s+/g, \" \").trim();\n\tvar M = lnos.match(FDRE1);\n\tif(M) return fuzzytime1(M);\n\n\tvar o = new Date(s), n = new Date(NaN);\n\tvar y = o.getYear(), m = o.getMonth(), d = o.getDate();\n\tif(isNaN(d)) return n;\n\tif(lower.match(/jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec/)) {\n\t\tlower = lower.replace(/[^a-z]/g,\"\").replace(/([^a-z]|^)[ap]m?([^a-z]|$)/,\"\");\n\t\tif(lower.length > 3 && lower_months.indexOf(lower) == -1) return n;\n\t} else if(lower.replace(/[ap]m?/, \"\").match(/[a-z]/)) return n;\n\tif(y < 0 || y > 8099 || s.match(/[^-0-9:,\\/\\\\]/)) return n;\n\treturn o;\n}\n\nvar split_regex = /*#__PURE__*/(function() {\n\tvar safe_split_regex = \"abacaba\".split(/(:?b)/i).length == 5;\n\treturn function split_regex(str/*:string*/, re, def/*:string*/)/*:Array<string>*/ {\n\t\tif(safe_split_regex || typeof re == \"string\") return str.split(re);\n\t\tvar p = str.split(re), o = [p[0]];\n\t\tfor(var i = 1; i < p.length; ++i) { o.push(def); o.push(p[i]); }\n\t\treturn o;\n\t};\n})();\nfunction getdatastr(data)/*:?string*/ {\n\tif(!data) return null;\n\tif(data.content && data.type) return cc2str(data.content, true);\n\tif(data.data) return debom(data.data);\n\tif(data.asNodeBuffer && has_buf) return debom(data.asNodeBuffer().toString('binary'));\n\tif(data.asBinary) return debom(data.asBinary());\n\tif(data._data && data._data.getContent) return debom(cc2str(Array.prototype.slice.call(data._data.getContent(),0)));\n\treturn null;\n}\n\nfunction getdatabin(data) {\n\tif(!data) return null;\n\tif(data.data) return char_codes(data.data);\n\tif(data.asNodeBuffer && has_buf) return data.asNodeBuffer();\n\tif(data._data && data._data.getContent) {\n\t\tvar o = data._data.getContent();\n\t\tif(typeof o == \"string\") return char_codes(o);\n\t\treturn Array.prototype.slice.call(o);\n\t}\n\tif(data.content && data.type) return data.content;\n\treturn null;\n}\n\nfunction getdata(data) { return (data && data.name.slice(-4) === \".bin\") ? getdatabin(data) : getdatastr(data); }\n\n/* Part 2 Section 10.1.2 \"Mapping Content Types\" Names are case-insensitive */\n/* OASIS does not comment on filename case sensitivity */\nfunction safegetzipfile(zip, file/*:string*/) {\n\tvar k = zip.FullPaths || keys(zip.files);\n\tvar f = file.toLowerCase().replace(/[\\/]/g, '\\\\'), g = f.replace(/\\\\/g,'\\/');\n\tfor(var i=0; i<k.length; ++i) {\n\t\tvar n = k[i].replace(/^Root Entry[\\/]/,\"\").toLowerCase();\n\t\tif(f == n || g == n) return zip.files ? zip.files[k[i]] : zip.FileIndex[i];\n\t}\n\treturn null;\n}\n\nfunction getzipfile(zip, file/*:string*/) {\n\tvar o = safegetzipfile(zip, file);\n\tif(o == null) throw new Error(\"Cannot find file \" + file + \" in zip\");\n\treturn o;\n}\n\nfunction getzipdata(zip, file/*:string*/, safe/*:?boolean*/)/*:any*/ {\n\tif(!safe) return getdata(getzipfile(zip, file));\n\tif(!file) return null;\n\ttry { return getzipdata(zip, file); } catch(e) { return null; }\n}\n\nfunction getzipstr(zip, file/*:string*/, safe/*:?boolean*/)/*:?string*/ {\n\tif(!safe) return getdatastr(getzipfile(zip, file));\n\tif(!file) return null;\n\ttry { return getzipstr(zip, file); } catch(e) { return null; }\n}\n\nfunction getzipbin(zip, file/*:string*/, safe/*:?boolean*/)/*:any*/ {\n\tif(!safe) return getdatabin(getzipfile(zip, file));\n\tif(!file) return null;\n\ttry { return getzipbin(zip, file); } catch(e) { return null; }\n}\n\nfunction zipentries(zip) {\n\tvar k = zip.FullPaths || keys(zip.files), o = [];\n\tfor(var i = 0; i < k.length; ++i) if(k[i].slice(-1) != '/') o.push(k[i].replace(/^Root Entry[\\/]/, \"\"));\n\treturn o.sort();\n}\n\nfunction zip_add_file(zip, path, content) {\n\tif(zip.FullPaths) {\n\t\tif(typeof content == \"string\") {\n\t\t\tvar res;\n\t\t\tif(has_buf) res = Buffer_from(content);\n\t\t\t/* TODO: investigate performance in Edge 13 */\n\t\t\t//else if(typeof TextEncoder !== \"undefined\") res = new TextEncoder().encode(content);\n\t\t\telse res = utf8decode(content);\n\t\t\treturn CFB.utils.cfb_add(zip, path, res);\n\t\t}\n\t\tCFB.utils.cfb_add(zip, path, content);\n\t}\n\telse zip.file(path, content);\n}\n\nfunction zip_new() { return CFB.utils.cfb_new(); }\n\nfunction zip_read(d, o) {\n\tswitch(o.type) {\n\t\tcase \"base64\": return CFB.read(d, { type: \"base64\" });\n\t\tcase \"binary\": return CFB.read(d, { type: \"binary\" });\n\t\tcase \"buffer\": case \"array\": return CFB.read(d, { type: \"buffer\" });\n\t}\n\tthrow new Error(\"Unrecognized type \" + o.type);\n}\n\nfunction resolve_path(path/*:string*/, base/*:string*/)/*:string*/ {\n\tif(path.charAt(0) == \"/\") return path.slice(1);\n\tvar result = base.split('/');\n\tif(base.slice(-1) != \"/\") result.pop(); // folder path\n\tvar target = path.split('/');\n\twhile (target.length !== 0) {\n\t\tvar step = target.shift();\n\t\tif (step === '..') result.pop();\n\t\telse if (step !== '.') result.push(step);\n\t}\n\treturn result.join('/');\n}\nvar XML_HEADER = '<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\\r\\n';\nvar attregexg=/([^\"\\s?>\\/]+)\\s*=\\s*((?:\")([^\"]*)(?:\")|(?:')([^']*)(?:')|([^'\">\\s]+))/g;\nvar tagregex1=/<[\\/\\?]?[a-zA-Z0-9:_-]+(?:\\s+[^\"\\s?>\\/]+\\s*=\\s*(?:\"[^\"]*\"|'[^']*'|[^'\">\\s=]+))*\\s*[\\/\\?]?>/mg, tagregex2 = /<[^>]*>/g;\nvar tagregex = /*#__PURE__*/XML_HEADER.match(tagregex1) ? tagregex1 : tagregex2;\nvar nsregex=/<\\w*:/, nsregex2 = /<(\\/?)\\w+:/;\nfunction parsexmltag(tag/*:string*/, skip_root/*:?boolean*/, skip_LC/*:?boolean*/)/*:any*/ {\n\tvar z = ({}/*:any*/);\n\tvar eq = 0, c = 0;\n\tfor(; eq !== tag.length; ++eq) if((c = tag.charCodeAt(eq)) === 32 || c === 10 || c === 13) break;\n\tif(!skip_root) z[0] = tag.slice(0, eq);\n\tif(eq === tag.length) return z;\n\tvar m = tag.match(attregexg), j=0, v=\"\", i=0, q=\"\", cc=\"\", quot = 1;\n\tif(m) for(i = 0; i != m.length; ++i) {\n\t\tcc = m[i];\n\t\tfor(c=0; c != cc.length; ++c) if(cc.charCodeAt(c) === 61) break;\n\t\tq = cc.slice(0,c).trim();\n\t\twhile(cc.charCodeAt(c+1) == 32) ++c;\n\t\tquot = ((eq=cc.charCodeAt(c+1)) == 34 || eq == 39) ? 1 : 0;\n\t\tv = cc.slice(c+1+quot, cc.length-quot);\n\t\tfor(j=0;j!=q.length;++j) if(q.charCodeAt(j) === 58) break;\n\t\tif(j===q.length) {\n\t\t\tif(q.indexOf(\"_\") > 0) q = q.slice(0, q.indexOf(\"_\")); // from ods\n\t\t\tz[q] = v;\n\t\t\tif(!skip_LC) z[q.toLowerCase()] = v;\n\t\t}\n\t\telse {\n\t\t\tvar k = (j===5 && q.slice(0,5)===\"xmlns\"?\"xmlns\":\"\")+q.slice(j+1);\n\t\t\tif(z[k] && q.slice(j-3,j) == \"ext\") continue; // from ods\n\t\t\tz[k] = v;\n\t\t\tif(!skip_LC) z[k.toLowerCase()] = v;\n\t\t}\n\t}\n\treturn z;\n}\nfunction strip_ns(x/*:string*/)/*:string*/ { return x.replace(nsregex2, \"<$1\"); }\n\nvar encodings = {\n\t'&quot;': '\"',\n\t'&apos;': \"'\",\n\t'&gt;': '>',\n\t'&lt;': '<',\n\t'&amp;': '&'\n};\nvar rencoding = /*#__PURE__*/evert(encodings);\n//var rencstr = \"&<>'\\\"\".split(\"\");\n\n// TODO: CP remap (need to read file version to determine OS)\nvar unescapexml/*:StringConv*/ = /*#__PURE__*/(function() {\n\t/* 22.4.2.4 bstr (Basic String) */\n\tvar encregex = /&(?:quot|apos|gt|lt|amp|#x?([\\da-fA-F]+));/ig, coderegex = /_x([\\da-fA-F]{4})_/ig;\n\tfunction raw_unescapexml(text/*:string*/)/*:string*/ {\n\t\tvar s = text + '', i = s.indexOf(\"<![CDATA[\");\n\t\tif(i == -1) return s.replace(encregex, function($$, $1) { return encodings[$$]||String.fromCharCode(parseInt($1,$$.indexOf(\"x\")>-1?16:10))||$$; }).replace(coderegex,function(m,c) {return String.fromCharCode(parseInt(c,16));});\n\t\tvar j = s.indexOf(\"]]>\");\n\t\treturn raw_unescapexml(s.slice(0, i)) + s.slice(i+9,j) + raw_unescapexml(s.slice(j+3));\n\t}\n\treturn function unescapexml(text/*:string*/, xlsx/*:boolean*/) {\n\t\tvar out = raw_unescapexml(text);\n\t\treturn xlsx ? out.replace(/\\r\\n/g, \"\\n\") : out;\n\t};\n})();\n\nvar decregex=/[&<>'\"]/g, charegex = /[\\u0000-\\u0008\\u000b-\\u001f\\uFFFE-\\uFFFF]/g;\nfunction escapexml(text/*:string*/)/*:string*/{\n\tvar s = text + '';\n\treturn s.replace(decregex, function(y) { return rencoding[y]; }).replace(charegex,function(s) { return \"_x\" + (\"000\"+s.charCodeAt(0).toString(16)).slice(-4) + \"_\";});\n}\nfunction escapexmltag(text/*:string*/)/*:string*/{ return escapexml(text).replace(/ /g,\"_x0020_\"); }\n\nvar htmlcharegex = /[\\u0000-\\u001f]/g;\nfunction escapehtml(text/*:string*/)/*:string*/{\n\tvar s = text + '';\n\treturn s.replace(decregex, function(y) { return rencoding[y]; }).replace(/\\n/g, \"<br/>\").replace(htmlcharegex,function(s) { return \"&#x\" + (\"000\"+s.charCodeAt(0).toString(16)).slice(-4) + \";\"; });\n}\n\nfunction escapexlml(text/*:string*/)/*:string*/{\n\tvar s = text + '';\n\treturn s.replace(decregex, function(y) { return rencoding[y]; }).replace(htmlcharegex,function(s) { return \"&#x\" + (s.charCodeAt(0).toString(16)).toUpperCase() + \";\"; });\n}\n\n/* TODO: handle codepages */\nvar xlml_fixstr/*:StringConv*/ = /*#__PURE__*/(function() {\n\tvar entregex = /&#(\\d+);/g;\n\tfunction entrepl($$/*:string*/,$1/*:string*/)/*:string*/ { return String.fromCharCode(parseInt($1,10)); }\n\treturn function xlml_fixstr(str/*:string*/)/*:string*/ { return str.replace(entregex,entrepl); };\n})();\nfunction xlml_unfixstr(str/*:string*/)/*:string*/ { return str.replace(/(\\r\\n|[\\r\\n])/g,\"\\&#10;\"); }\n\n/* note: xsd:boolean valid values: true / 1 / false / 0 */\nfunction parsexmlbool(value/*:any*/)/*:boolean*/ {\n\tswitch(value) {\n\t\tcase 1: case true:  case '1': case 'true':  return true;\n\t\tcase 0: case false: case '0': case 'false': return false;\n\t\t//default: throw new Error(\"Invalid xsd:boolean \" + value);\n\t}\n\treturn false;\n}\n\nfunction utf8reada(orig/*:string*/)/*:string*/ {\n\tvar out = \"\", i = 0, c = 0, d = 0, e = 0, f = 0, w = 0;\n\twhile (i < orig.length) {\n\t\tc = orig.charCodeAt(i++);\n\t\tif (c < 128) { out += String.fromCharCode(c); continue; }\n\t\td = orig.charCodeAt(i++);\n\t\tif (c>191 && c<224) { f = ((c & 31) << 6); f |= (d & 63); out += String.fromCharCode(f); continue; }\n\t\te = orig.charCodeAt(i++);\n\t\tif (c < 240) { out += String.fromCharCode(((c & 15) << 12) | ((d & 63) << 6) | (e & 63)); continue; }\n\t\tf = orig.charCodeAt(i++);\n\t\tw = (((c & 7) << 18) | ((d & 63) << 12) | ((e & 63) << 6) | (f & 63))-65536;\n\t\tout += String.fromCharCode(0xD800 + ((w>>>10)&1023));\n\t\tout += String.fromCharCode(0xDC00 + (w&1023));\n\t}\n\treturn out;\n}\n\nfunction utf8readb(data) {\n\tvar out = new_raw_buf(2*data.length), w, i, j = 1, k = 0, ww=0, c;\n\tfor(i = 0; i < data.length; i+=j) {\n\t\tj = 1;\n\t\tif((c=data.charCodeAt(i)) < 128) w = c;\n\t\telse if(c < 224) { w = (c&31)*64+(data.charCodeAt(i+1)&63); j=2; }\n\t\telse if(c < 240) { w=(c&15)*4096+(data.charCodeAt(i+1)&63)*64+(data.charCodeAt(i+2)&63); j=3; }\n\t\telse { j = 4;\n\t\t\tw = (c & 7)*262144+(data.charCodeAt(i+1)&63)*4096+(data.charCodeAt(i+2)&63)*64+(data.charCodeAt(i+3)&63);\n\t\t\tw -= 65536; ww = 0xD800 + ((w>>>10)&1023); w = 0xDC00 + (w&1023);\n\t\t}\n\t\tif(ww !== 0) { out[k++] = ww&255; out[k++] = ww>>>8; ww = 0; }\n\t\tout[k++] = w%256; out[k++] = w>>>8;\n\t}\n\treturn out.slice(0,k).toString('ucs2');\n}\n\nfunction utf8readc(data) { return Buffer_from(data, 'binary').toString('utf8'); }\n\nvar utf8corpus = \"foo bar baz\\u00e2\\u0098\\u0083\\u00f0\\u009f\\u008d\\u00a3\";\nvar utf8read = has_buf && (/*#__PURE__*/utf8readc(utf8corpus) == /*#__PURE__*/utf8reada(utf8corpus) && utf8readc || /*#__PURE__*/utf8readb(utf8corpus) == /*#__PURE__*/utf8reada(utf8corpus) && utf8readb) || utf8reada;\n\nvar utf8write/*:StringConv*/ = has_buf ? function(data) { return Buffer_from(data, 'utf8').toString(\"binary\"); } : function(orig/*:string*/)/*:string*/ {\n\tvar out/*:Array<string>*/ = [], i = 0, c = 0, d = 0;\n\twhile(i < orig.length) {\n\t\tc = orig.charCodeAt(i++);\n\t\tswitch(true) {\n\t\t\tcase c < 128: out.push(String.fromCharCode(c)); break;\n\t\t\tcase c < 2048:\n\t\t\t\tout.push(String.fromCharCode(192 + (c >> 6)));\n\t\t\t\tout.push(String.fromCharCode(128 + (c & 63)));\n\t\t\t\tbreak;\n\t\t\tcase c >= 55296 && c < 57344:\n\t\t\t\tc -= 55296; d = orig.charCodeAt(i++) - 56320 + (c<<10);\n\t\t\t\tout.push(String.fromCharCode(240 + ((d >>18) & 7)));\n\t\t\t\tout.push(String.fromCharCode(144 + ((d >>12) & 63)));\n\t\t\t\tout.push(String.fromCharCode(128 + ((d >> 6) & 63)));\n\t\t\t\tout.push(String.fromCharCode(128 + (d & 63)));\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tout.push(String.fromCharCode(224 + (c >> 12)));\n\t\t\t\tout.push(String.fromCharCode(128 + ((c >> 6) & 63)));\n\t\t\t\tout.push(String.fromCharCode(128 + (c & 63)));\n\t\t}\n\t}\n\treturn out.join(\"\");\n};\n\n// matches <foo>...</foo> extracts content\nvar matchtag = /*#__PURE__*/(function() {\n\tvar mtcache/*:{[k:string]:RegExp}*/ = ({}/*:any*/);\n\treturn function matchtag(f/*:string*/,g/*:?string*/)/*:RegExp*/ {\n\t\tvar t = f+\"|\"+(g||\"\");\n\t\tif(mtcache[t]) return mtcache[t];\n\t\treturn (mtcache[t] = new RegExp('<(?:\\\\w+:)?'+f+'(?: xml:space=\"preserve\")?(?:[^>]*)>([\\\\s\\\\S]*?)</(?:\\\\w+:)?'+f+'>',((g||\"\")/*:any*/)));\n\t};\n})();\n\nvar htmldecode/*:{(s:string):string}*/ = /*#__PURE__*/(function() {\n\tvar entities/*:Array<[RegExp, string]>*/ = [\n\t\t['nbsp', ' '], ['middot', '·'],\n\t\t['quot', '\"'], ['apos', \"'\"], ['gt',   '>'], ['lt',   '<'], ['amp',  '&']\n\t].map(function(x/*:[string, string]*/) { return [new RegExp('&' + x[0] + ';', \"ig\"), x[1]]; });\n\treturn function htmldecode(str/*:string*/)/*:string*/ {\n\t\tvar o = str\n\t\t\t\t// Remove new lines and spaces from start of content\n\t\t\t\t.replace(/^[\\t\\n\\r ]+/, \"\")\n\t\t\t\t// Remove new lines and spaces from end of content\n\t\t\t\t.replace(/[\\t\\n\\r ]+$/,\"\")\n\t\t\t\t// Added line which removes any white space characters after and before html tags\n\t\t\t\t.replace(/>\\s+/g,\">\").replace(/\\s+</g,\"<\")\n\t\t\t\t// Replace remaining new lines and spaces with space\n\t\t\t\t.replace(/[\\t\\n\\r ]+/g, \" \")\n\t\t\t\t// Replace <br> tags with new lines\n\t\t\t\t.replace(/<\\s*[bB][rR]\\s*\\/?>/g,\"\\n\")\n\t\t\t\t// Strip HTML elements\n\t\t\t\t.replace(/<[^>]*>/g,\"\");\n\t\tfor(var i = 0; i < entities.length; ++i) o = o.replace(entities[i][0], entities[i][1]);\n\t\treturn o;\n\t};\n})();\n\nvar vtregex = /*#__PURE__*/(function(){ var vt_cache = {};\n\treturn function vt_regex(bt) {\n\t\tif(vt_cache[bt] !== undefined) return vt_cache[bt];\n\t\treturn (vt_cache[bt] = new RegExp(\"<(?:vt:)?\" + bt + \">([\\\\s\\\\S]*?)</(?:vt:)?\" + bt + \">\", 'g') );\n};})();\nvar vtvregex = /<\\/?(?:vt:)?variant>/g, vtmregex = /<(?:vt:)([^>]*)>([\\s\\S]*)</;\nfunction parseVector(data/*:string*/, opts)/*:Array<{v:string,t:string}>*/ {\n\tvar h = parsexmltag(data);\n\n\tvar matches/*:Array<string>*/ = data.match(vtregex(h.baseType))||[];\n\tvar res/*:Array<any>*/ = [];\n\tif(matches.length != h.size) {\n\t\tif(opts.WTF) throw new Error(\"unexpected vector length \" + matches.length + \" != \" + h.size);\n\t\treturn res;\n\t}\n\tmatches.forEach(function(x/*:string*/) {\n\t\tvar v = x.replace(vtvregex,\"\").match(vtmregex);\n\t\tif(v) res.push({v:utf8read(v[2]), t:v[1]});\n\t});\n\treturn res;\n}\n\nvar wtregex = /(^\\s|\\s$|\\n)/;\nfunction writetag(f/*:string*/,g/*:string*/)/*:string*/ { return '<' + f + (g.match(wtregex)?' xml:space=\"preserve\"' : \"\") + '>' + g + '</' + f + '>'; }\n\nfunction wxt_helper(h)/*:string*/ { return keys(h).map(function(k) { return \" \" + k + '=\"' + h[k] + '\"';}).join(\"\"); }\nfunction writextag(f/*:string*/,g/*:?string*/,h) { return '<' + f + ((h != null) ? wxt_helper(h) : \"\") + ((g != null) ? (g.match(wtregex)?' xml:space=\"preserve\"' : \"\") + '>' + g + '</' + f : \"/\") + '>';}\n\nfunction write_w3cdtf(d/*:Date*/, t/*:?boolean*/)/*:string*/ { try { return d.toISOString().replace(/\\.\\d*/,\"\"); } catch(e) { if(t) throw e; } return \"\"; }\n\nfunction write_vt(s, xlsx/*:?boolean*/)/*:string*/ {\n\tswitch(typeof s) {\n\t\tcase 'string':\n\t\t\tvar o = writextag('vt:lpwstr', escapexml(s));\n\t\t\tif(xlsx) o = o.replace(/&quot;/g, \"_x0022_\");\n\t\t\treturn o;\n\t\tcase 'number': return writextag((s|0)==s?'vt:i4':'vt:r8', escapexml(String(s)));\n\t\tcase 'boolean': return writextag('vt:bool',s?'true':'false');\n\t}\n\tif(s instanceof Date) return writextag('vt:filetime', write_w3cdtf(s));\n\tthrow new Error(\"Unable to serialize \" + s);\n}\n\nfunction xlml_normalize(d)/*:string*/ {\n\tif(has_buf &&/*::typeof Buffer !== \"undefined\" && d != null && d instanceof Buffer &&*/ Buffer.isBuffer(d)) return d.toString('utf8');\n\tif(typeof d === 'string') return d;\n\t/* duktape */\n\tif(typeof Uint8Array !== 'undefined' && d instanceof Uint8Array) return utf8read(a2s(ab2a(d)));\n\tthrow new Error(\"Bad input format: expected Buffer or string\");\n}\n/* UOS uses CJK in tags */\nvar xlmlregex = /<(\\/?)([^\\s?><!\\/:]*:|)([^\\s?<>:\\/]+)(?:[\\s?:\\/](?:[^>=]|=\"[^\"]*?\")*)?>/mg;\n//var xlmlregex = /<(\\/?)([a-z0-9]*:|)(\\w+)[^>]*>/mg;\n\nvar XMLNS = ({\n\tCORE_PROPS: 'http://schemas.openxmlformats.org/package/2006/metadata/core-properties',\n\tCUST_PROPS: \"http://schemas.openxmlformats.org/officeDocument/2006/custom-properties\",\n\tEXT_PROPS: \"http://schemas.openxmlformats.org/officeDocument/2006/extended-properties\",\n\tCT: 'http://schemas.openxmlformats.org/package/2006/content-types',\n\tRELS: 'http://schemas.openxmlformats.org/package/2006/relationships',\n\tTCMNT: 'http://schemas.microsoft.com/office/spreadsheetml/2018/threadedcomments',\n\t'dc': 'http://purl.org/dc/elements/1.1/',\n\t'dcterms': 'http://purl.org/dc/terms/',\n\t'dcmitype': 'http://purl.org/dc/dcmitype/',\n\t'mx': 'http://schemas.microsoft.com/office/mac/excel/2008/main',\n\t'r': 'http://schemas.openxmlformats.org/officeDocument/2006/relationships',\n\t'sjs': 'http://schemas.openxmlformats.org/package/2006/sheetjs/core-properties',\n\t'vt': 'http://schemas.openxmlformats.org/officeDocument/2006/docPropsVTypes',\n\t'xsi': 'http://www.w3.org/2001/XMLSchema-instance',\n\t'xsd': 'http://www.w3.org/2001/XMLSchema'\n}/*:any*/);\n\nvar XMLNS_main = [\n\t'http://schemas.openxmlformats.org/spreadsheetml/2006/main',\n\t'http://purl.oclc.org/ooxml/spreadsheetml/main',\n\t'http://schemas.microsoft.com/office/excel/2006/main',\n\t'http://schemas.microsoft.com/office/excel/2006/2'\n];\n\nvar XLMLNS = ({\n\t'o':    'urn:schemas-microsoft-com:office:office',\n\t'x':    'urn:schemas-microsoft-com:office:excel',\n\t'ss':   'urn:schemas-microsoft-com:office:spreadsheet',\n\t'dt':   'uuid:C2F41010-65B3-11d1-A29F-00AA00C14882',\n\t'mv':   'http://macVmlSchemaUri',\n\t'v':    'urn:schemas-microsoft-com:vml',\n\t'html': 'http://www.w3.org/TR/REC-html40'\n}/*:any*/);\nfunction read_double_le(b/*:RawBytes|CFBlob*/, idx/*:number*/)/*:number*/ {\n\tvar s = 1 - 2 * (b[idx + 7] >>> 7);\n\tvar e = ((b[idx + 7] & 0x7f) << 4) + ((b[idx + 6] >>> 4) & 0x0f);\n\tvar m = (b[idx+6]&0x0f);\n\tfor(var i = 5; i >= 0; --i) m = m * 256 + b[idx + i];\n\tif(e == 0x7ff) return m == 0 ? (s * Infinity) : NaN;\n\tif(e == 0) e = -1022;\n\telse { e -= 1023; m += Math.pow(2,52); }\n\treturn s * Math.pow(2, e - 52) * m;\n}\n\nfunction write_double_le(b/*:RawBytes|CFBlob*/, v/*:number*/, idx/*:number*/) {\n\tvar bs = ((((v < 0) || (1/v == -Infinity)) ? 1 : 0) << 7), e = 0, m = 0;\n\tvar av = bs ? (-v) : v;\n\tif(!isFinite(av)) { e = 0x7ff; m = isNaN(v) ? 0x6969 : 0; }\n\telse if(av == 0) e = m = 0;\n\telse {\n\t\te = Math.floor(Math.log(av) / Math.LN2);\n\t\tm = av * Math.pow(2, 52 - e);\n\t\tif((e <= -1023) && (!isFinite(m) || (m < Math.pow(2,52)))) { e = -1022; }\n\t\telse { m -= Math.pow(2,52); e+=1023; }\n\t}\n\tfor(var i = 0; i <= 5; ++i, m/=256) b[idx + i] = m & 0xff;\n\tb[idx + 6] = ((e & 0x0f) << 4) | (m & 0xf);\n\tb[idx + 7] = (e >> 4) | bs;\n}\n\nvar ___toBuffer = function(bufs/*:Array<Array<RawBytes> >*/)/*:RawBytes*/ { var x=[],w=10240; for(var i=0;i<bufs[0].length;++i) if(bufs[0][i]) for(var j=0,L=bufs[0][i].length;j<L;j+=w) x.push.apply(x, bufs[0][i].slice(j,j+w)); return x; };\nvar __toBuffer = has_buf ? function(bufs) { return (bufs[0].length > 0 && Buffer.isBuffer(bufs[0][0])) ? Buffer.concat(bufs[0].map(function(x) { return Buffer.isBuffer(x) ? x : Buffer_from(x); })) : ___toBuffer(bufs);} : ___toBuffer;\n\nvar ___utf16le = function(b/*:RawBytes|CFBlob*/,s/*:number*/,e/*:number*/)/*:string*/ { var ss/*:Array<string>*/=[]; for(var i=s; i<e; i+=2) ss.push(String.fromCharCode(__readUInt16LE(b,i))); return ss.join(\"\").replace(chr0,''); };\nvar __utf16le = has_buf ? function(b/*:RawBytes|CFBlob*/,s/*:number*/,e/*:number*/)/*:string*/ { if(!Buffer.isBuffer(b)/*:: || !(b instanceof Buffer)*/ || !buf_utf16le) return ___utf16le(b,s,e); return b.toString('utf16le',s,e).replace(chr0,'')/*.replace(chr1,'!')*/; } : ___utf16le;\n\nvar ___hexlify = function(b/*:RawBytes|CFBlob*/,s/*:number*/,l/*:number*/)/*:string*/ { var ss/*:Array<string>*/=[]; for(var i=s; i<s+l; ++i) ss.push((\"0\" + b[i].toString(16)).slice(-2)); return ss.join(\"\"); };\nvar __hexlify = has_buf ? function(b/*:RawBytes|CFBlob*/,s/*:number*/,l/*:number*/)/*:string*/ { return Buffer.isBuffer(b)/*:: && b instanceof Buffer*/ ? b.toString('hex',s,s+l) : ___hexlify(b,s,l); } : ___hexlify;\n\nvar ___utf8 = function(b/*:RawBytes|CFBlob*/,s/*:number*/,e/*:number*/) { var ss=[]; for(var i=s; i<e; i++) ss.push(String.fromCharCode(__readUInt8(b,i))); return ss.join(\"\"); };\nvar __utf8 = has_buf ? function utf8_b(b/*:RawBytes|CFBlob*/, s/*:number*/, e/*:number*/) { return (Buffer.isBuffer(b)/*:: && (b instanceof Buffer)*/) ? b.toString('utf8',s,e) : ___utf8(b,s,e); } : ___utf8;\n\nvar ___lpstr = function(b/*:RawBytes|CFBlob*/,i/*:number*/) { var len = __readUInt32LE(b,i); return len > 0 ? __utf8(b, i+4,i+4+len-1) : \"\";};\nvar __lpstr = ___lpstr;\n\nvar ___cpstr = function(b/*:RawBytes|CFBlob*/,i/*:number*/) { var len = __readUInt32LE(b,i); return len > 0 ? __utf8(b, i+4,i+4+len-1) : \"\";};\nvar __cpstr = ___cpstr;\n\nvar ___lpwstr = function(b/*:RawBytes|CFBlob*/,i/*:number*/) { var len = 2*__readUInt32LE(b,i); return len > 0 ? __utf8(b, i+4,i+4+len-1) : \"\";};\nvar __lpwstr = ___lpwstr;\n\nvar ___lpp4 = function lpp4_(b/*:RawBytes|CFBlob*/,i/*:number*/) { var len = __readUInt32LE(b,i); return len > 0 ? __utf16le(b, i+4,i+4+len) : \"\";};\nvar __lpp4 = ___lpp4;\n\nvar ___8lpp4 = function(b/*:RawBytes|CFBlob*/,i/*:number*/) { var len = __readUInt32LE(b,i); return len > 0 ? __utf8(b, i+4,i+4+len) : \"\";};\nvar __8lpp4 = ___8lpp4;\n\nvar ___double = function(b/*:RawBytes|CFBlob*/, idx/*:number*/) { return read_double_le(b, idx);};\nvar __double = ___double;\n\nvar is_buf = function is_buf_a(a) { return Array.isArray(a) || (typeof Uint8Array !== \"undefined\" && a instanceof Uint8Array); };\n\nif(has_buf/*:: && typeof Buffer !== 'undefined'*/) {\n\t__lpstr = function lpstr_b(b/*:RawBytes|CFBlob*/, i/*:number*/) { if(!Buffer.isBuffer(b)/*:: || !(b instanceof Buffer)*/) return ___lpstr(b, i); var len = b.readUInt32LE(i); return len > 0 ? b.toString('utf8',i+4,i+4+len-1) : \"\";};\n\t__cpstr = function cpstr_b(b/*:RawBytes|CFBlob*/, i/*:number*/) { if(!Buffer.isBuffer(b)/*:: || !(b instanceof Buffer)*/) return ___cpstr(b, i); var len = b.readUInt32LE(i); return len > 0 ? b.toString('utf8',i+4,i+4+len-1) : \"\";};\n\t__lpwstr = function lpwstr_b(b/*:RawBytes|CFBlob*/, i/*:number*/) { if(!Buffer.isBuffer(b)/*:: || !(b instanceof Buffer)*/ || !buf_utf16le) return ___lpwstr(b, i); var len = 2*b.readUInt32LE(i); return b.toString('utf16le',i+4,i+4+len-1);};\n\t__lpp4 = function lpp4_b(b/*:RawBytes|CFBlob*/, i/*:number*/) { if(!Buffer.isBuffer(b)/*:: || !(b instanceof Buffer)*/ || !buf_utf16le) return ___lpp4(b, i); var len = b.readUInt32LE(i); return b.toString('utf16le',i+4,i+4+len);};\n\t__8lpp4 = function lpp4_8b(b/*:RawBytes|CFBlob*/, i/*:number*/) { if(!Buffer.isBuffer(b)/*:: || !(b instanceof Buffer)*/) return ___8lpp4(b, i); var len = b.readUInt32LE(i); return b.toString('utf8',i+4,i+4+len);};\n\t__double = function double_(b/*:RawBytes|CFBlob*/, i/*:number*/) { if(Buffer.isBuffer(b)/*::&& b instanceof Buffer*/) return b.readDoubleLE(i); return ___double(b,i); };\n\tis_buf = function is_buf_b(a) { return Buffer.isBuffer(a) || Array.isArray(a) || (typeof Uint8Array !== \"undefined\" && a instanceof Uint8Array); };\n}\n\n/* from js-xls */\nfunction cpdoit() {\n\t__utf16le = function(b/*:RawBytes|CFBlob*/,s/*:number*/,e/*:number*/) { return $cptable.utils.decode(1200, b.slice(s,e)).replace(chr0, ''); };\n\t__utf8 = function(b/*:RawBytes|CFBlob*/,s/*:number*/,e/*:number*/) { return $cptable.utils.decode(65001, b.slice(s,e)); };\n\t__lpstr = function(b/*:RawBytes|CFBlob*/,i/*:number*/) { var len = __readUInt32LE(b,i); return len > 0 ? $cptable.utils.decode(current_ansi, b.slice(i+4, i+4+len-1)) : \"\";};\n\t__cpstr = function(b/*:RawBytes|CFBlob*/,i/*:number*/) { var len = __readUInt32LE(b,i); return len > 0 ? $cptable.utils.decode(current_codepage, b.slice(i+4, i+4+len-1)) : \"\";};\n\t__lpwstr = function(b/*:RawBytes|CFBlob*/,i/*:number*/) { var len = 2*__readUInt32LE(b,i); return len > 0 ? $cptable.utils.decode(1200, b.slice(i+4,i+4+len-1)) : \"\";};\n\t__lpp4 = function(b/*:RawBytes|CFBlob*/,i/*:number*/) { var len = __readUInt32LE(b,i); return len > 0 ? $cptable.utils.decode(1200, b.slice(i+4,i+4+len)) : \"\";};\n\t__8lpp4 = function(b/*:RawBytes|CFBlob*/,i/*:number*/) { var len = __readUInt32LE(b,i); return len > 0 ? $cptable.utils.decode(65001, b.slice(i+4,i+4+len)) : \"\";};\n}\nif(typeof $cptable !== 'undefined') cpdoit();\n\nvar __readUInt8 = function(b/*:RawBytes|CFBlob*/, idx/*:number*/)/*:number*/ { return b[idx]; };\nvar __readUInt16LE = function(b/*:RawBytes|CFBlob*/, idx/*:number*/)/*:number*/ { return (b[idx+1]*(1<<8))+b[idx]; };\nvar __readInt16LE = function(b/*:RawBytes|CFBlob*/, idx/*:number*/)/*:number*/ { var u = (b[idx+1]*(1<<8))+b[idx]; return (u < 0x8000) ? u : ((0xffff - u + 1) * -1); };\nvar __readUInt32LE = function(b/*:RawBytes|CFBlob*/, idx/*:number*/)/*:number*/ { return b[idx+3]*(1<<24)+(b[idx+2]<<16)+(b[idx+1]<<8)+b[idx]; };\nvar __readInt32LE = function(b/*:RawBytes|CFBlob*/, idx/*:number*/)/*:number*/ { return (b[idx+3]<<24)|(b[idx+2]<<16)|(b[idx+1]<<8)|b[idx]; };\nvar __readInt32BE = function(b/*:RawBytes|CFBlob*/, idx/*:number*/)/*:number*/ { return (b[idx]<<24)|(b[idx+1]<<16)|(b[idx+2]<<8)|b[idx+3]; };\n\nfunction ReadShift(size/*:number*/, t/*:?string*/)/*:number|string*/ {\n\tvar o=\"\", oI/*:: :number = 0*/, oR, oo=[], w, vv, i, loc;\n\tswitch(t) {\n\t\tcase 'dbcs':\n\t\t\tloc = this.l;\n\t\t\tif(has_buf && Buffer.isBuffer(this)  && buf_utf16le) o = this.slice(this.l, this.l+2*size).toString(\"utf16le\");\n\t\t\telse for(i = 0; i < size; ++i) { o+=String.fromCharCode(__readUInt16LE(this, loc)); loc+=2; }\n\t\t\tsize *= 2;\n\t\t\tbreak;\n\n\t\tcase 'utf8': o = __utf8(this, this.l, this.l + size); break;\n\t\tcase 'utf16le': size *= 2; o = __utf16le(this, this.l, this.l + size); break;\n\n\t\tcase 'wstr':\n\t\t\tif(typeof $cptable !== 'undefined') o = $cptable.utils.decode(current_codepage, this.slice(this.l, this.l+2*size));\n\t\t\telse return ReadShift.call(this, size, 'dbcs');\n\t\t\tsize = 2 * size; break;\n\n\t\t/* [MS-OLEDS] 2.1.4 LengthPrefixedAnsiString */\n\t\tcase 'lpstr-ansi': o = __lpstr(this, this.l); size = 4 + __readUInt32LE(this, this.l); break;\n\t\tcase 'lpstr-cp': o = __cpstr(this, this.l); size = 4 + __readUInt32LE(this, this.l); break;\n\t\t/* [MS-OLEDS] 2.1.5 LengthPrefixedUnicodeString */\n\t\tcase 'lpwstr': o = __lpwstr(this, this.l); size = 4 + 2 * __readUInt32LE(this, this.l); break;\n\t\t/* [MS-OFFCRYPTO] 2.1.2 Length-Prefixed Padded Unicode String (UNICODE-LP-P4) */\n\t\tcase 'lpp4': size = 4 +  __readUInt32LE(this, this.l); o = __lpp4(this, this.l); if(size & 0x02) size += 2; break;\n\t\t/* [MS-OFFCRYPTO] 2.1.3 Length-Prefixed UTF-8 String (UTF-8-LP-P4) */\n\t\tcase '8lpp4': size = 4 +  __readUInt32LE(this, this.l); o = __8lpp4(this, this.l); if(size & 0x03) size += 4 - (size & 0x03); break;\n\n\t\tcase 'cstr': size = 0; o = \"\";\n\t\t\twhile((w=__readUInt8(this, this.l + size++))!==0) oo.push(_getchar(w));\n\t\t\to = oo.join(\"\"); break;\n\t\tcase '_wstr': size = 0; o = \"\";\n\t\t\twhile((w=__readUInt16LE(this,this.l +size))!==0){oo.push(_getchar(w));size+=2;}\n\t\t\tsize+=2; o = oo.join(\"\"); break;\n\n\t\t/* sbcs and dbcs support continue records in the SST way TODO codepages */\n\t\tcase 'dbcs-cont': o = \"\"; loc = this.l;\n\t\t\tfor(i = 0; i < size; ++i) {\n\t\t\t\tif(this.lens && this.lens.indexOf(loc) !== -1) {\n\t\t\t\t\tw = __readUInt8(this, loc);\n\t\t\t\t\tthis.l = loc + 1;\n\t\t\t\t\tvv = ReadShift.call(this, size-i, w ? 'dbcs-cont' : 'sbcs-cont');\n\t\t\t\t\treturn oo.join(\"\") + vv;\n\t\t\t\t}\n\t\t\t\too.push(_getchar(__readUInt16LE(this, loc)));\n\t\t\t\tloc+=2;\n\t\t\t} o = oo.join(\"\"); size *= 2; break;\n\n\t\tcase 'cpstr':\n\t\t\tif(typeof $cptable !== 'undefined') {\n\t\t\t\to = $cptable.utils.decode(current_codepage, this.slice(this.l, this.l + size));\n\t\t\t\tbreak;\n\t\t\t}\n\t\t/* falls through */\n\t\tcase 'sbcs-cont': o = \"\"; loc = this.l;\n\t\t\tfor(i = 0; i != size; ++i) {\n\t\t\t\tif(this.lens && this.lens.indexOf(loc) !== -1) {\n\t\t\t\t\tw = __readUInt8(this, loc);\n\t\t\t\t\tthis.l = loc + 1;\n\t\t\t\t\tvv = ReadShift.call(this, size-i, w ? 'dbcs-cont' : 'sbcs-cont');\n\t\t\t\t\treturn oo.join(\"\") + vv;\n\t\t\t\t}\n\t\t\t\too.push(_getchar(__readUInt8(this, loc)));\n\t\t\t\tloc+=1;\n\t\t\t} o = oo.join(\"\"); break;\n\n\t\tdefault:\n\tswitch(size) {\n\t\tcase 1: oI = __readUInt8(this, this.l); this.l++; return oI;\n\t\tcase 2: oI = (t === 'i' ? __readInt16LE : __readUInt16LE)(this, this.l); this.l += 2; return oI;\n\t\tcase 4: case -4:\n\t\t\tif(t === 'i' || ((this[this.l+3] & 0x80)===0)) { oI = ((size > 0) ? __readInt32LE : __readInt32BE)(this, this.l); this.l += 4; return oI; }\n\t\t\telse { oR = __readUInt32LE(this, this.l); this.l += 4; } return oR;\n\t\tcase 8: case -8:\n\t\t\tif(t === 'f') {\n\t\t\t\tif(size == 8) oR = __double(this, this.l);\n\t\t\t\telse oR = __double([this[this.l+7],this[this.l+6],this[this.l+5],this[this.l+4],this[this.l+3],this[this.l+2],this[this.l+1],this[this.l+0]], 0);\n\t\t\t\tthis.l += 8; return oR;\n\t\t\t} else size = 8;\n\t\t/* falls through */\n\t\tcase 16: o = __hexlify(this, this.l, size); break;\n\t}}\n\tthis.l+=size; return o;\n}\n\nvar __writeUInt32LE = function(b/*:RawBytes|CFBlob*/, val/*:number*/, idx/*:number*/)/*:void*/ { b[idx] = (val & 0xFF); b[idx+1] = ((val >>> 8) & 0xFF); b[idx+2] = ((val >>> 16) & 0xFF); b[idx+3] = ((val >>> 24) & 0xFF); };\nvar __writeInt32LE  = function(b/*:RawBytes|CFBlob*/, val/*:number*/, idx/*:number*/)/*:void*/ { b[idx] = (val & 0xFF); b[idx+1] = ((val >> 8) & 0xFF); b[idx+2] = ((val >> 16) & 0xFF); b[idx+3] = ((val >> 24) & 0xFF); };\nvar __writeUInt16LE = function(b/*:RawBytes|CFBlob*/, val/*:number*/, idx/*:number*/)/*:void*/ { b[idx] = (val & 0xFF); b[idx+1] = ((val >>> 8) & 0xFF); };\n\nfunction WriteShift(t/*:number*/, val/*:string|number*/, f/*:?string*/)/*:any*/ {\n\tvar size = 0, i = 0;\n\tif(f === 'dbcs') {\n\t\t/*:: if(typeof val !== 'string') throw new Error(\"unreachable\"); */\n\t\tfor(i = 0; i != val.length; ++i) __writeUInt16LE(this, val.charCodeAt(i), this.l + 2 * i);\n\t\tsize = 2 * val.length;\n\t} else if(f === 'sbcs' || f == 'cpstr') {\n\t\tif(typeof $cptable !== 'undefined' && current_ansi == 874) {\n\t\t\t/* TODO: use tables directly, don't encode */\n\t\t\t/*:: if(typeof val !== \"string\") throw new Error(\"unreachable\"); */\n\t\t\tfor(i = 0; i != val.length; ++i) {\n\t\t\t\tvar cpp = $cptable.utils.encode(current_ansi, val.charAt(i));\n\t\t\t\tthis[this.l + i] = cpp[0];\n\t\t\t}\n\t\t\tsize = val.length;\n\t\t} else if(typeof $cptable !== 'undefined' && f == 'cpstr') {\n\t\t\tcpp = $cptable.utils.encode(current_codepage, val);\n\t\t\t/* replace null bytes with _ when relevant */\n      if(cpp.length == val.length) for(i = 0; i < val.length; ++i) if(cpp[i] == 0 && val.charCodeAt(i) != 0) cpp[i] = 0x5F;\n      if(cpp.length == 2 * val.length) for(i = 0; i < val.length; ++i) if(cpp[2*i] == 0 && cpp[2*i+1] == 0 && val.charCodeAt(i) != 0) cpp[2*i] = 0x5F;\n\t\t\tfor(i = 0; i < cpp.length; ++i) this[this.l + i] = cpp[i];\n\t\t\tsize = cpp.length;\n\t\t} else {\n\t\t\t/*:: if(typeof val !== 'string') throw new Error(\"unreachable\"); */\n\t\t\tval = val.replace(/[^\\x00-\\x7F]/g, \"_\");\n\t\t\t/*:: if(typeof val !== 'string') throw new Error(\"unreachable\"); */\n\t\t\tfor(i = 0; i != val.length; ++i) this[this.l + i] = (val.charCodeAt(i) & 0xFF);\n\t\t\tsize = val.length;\n\t\t}\n\t} else if(f === 'hex') {\n\t\tfor(; i < t; ++i) {\n\t\t\t/*:: if(typeof val !== \"string\") throw new Error(\"unreachable\"); */\n\t\t\tthis[this.l++] = (parseInt(val.slice(2*i, 2*i+2), 16)||0);\n\t\t} return this;\n\t} else if(f === 'utf16le') {\n\t\t\t/*:: if(typeof val !== \"string\") throw new Error(\"unreachable\"); */\n\t\t\tvar end/*:number*/ = Math.min(this.l + t, this.length);\n\t\t\tfor(i = 0; i < Math.min(val.length, t); ++i) {\n\t\t\t\tvar cc = val.charCodeAt(i);\n\t\t\t\tthis[this.l++] = (cc & 0xff);\n\t\t\t\tthis[this.l++] = (cc >> 8);\n\t\t\t}\n\t\t\twhile(this.l < end) this[this.l++] = 0;\n\t\t\treturn this;\n\t} else /*:: if(typeof val === 'number') */ switch(t) {\n\t\tcase  1: size = 1; this[this.l] = val&0xFF; break;\n\t\tcase  2: size = 2; this[this.l] = val&0xFF; val >>>= 8; this[this.l+1] = val&0xFF; break;\n\t\tcase  3: size = 3; this[this.l] = val&0xFF; val >>>= 8; this[this.l+1] = val&0xFF; val >>>= 8; this[this.l+2] = val&0xFF; break;\n\t\tcase  4: size = 4; __writeUInt32LE(this, val, this.l); break;\n\t\tcase  8: size = 8; if(f === 'f') { write_double_le(this, val, this.l); break; }\n\t\t/* falls through */\n\t\tcase 16: break;\n\t\tcase -4: size = 4; __writeInt32LE(this, val, this.l); break;\n\t}\n\tthis.l += size; return this;\n}\n\nfunction CheckField(hexstr/*:string*/, fld/*:string*/)/*:void*/ {\n\tvar m = __hexlify(this,this.l,hexstr.length>>1);\n\tif(m !== hexstr) throw new Error(fld + 'Expected ' + hexstr + ' saw ' + m);\n\tthis.l += hexstr.length>>1;\n}\n\nfunction prep_blob(blob, pos/*:number*/)/*:void*/ {\n\tblob.l = pos;\n\tblob.read_shift = /*::(*/ReadShift/*:: :any)*/;\n\tblob.chk = CheckField;\n\tblob.write_shift = WriteShift;\n}\n\nfunction parsenoop(blob, length/*:: :number, opts?:any */) { blob.l += length; }\n\nfunction new_buf(sz/*:number*/)/*:Block*/ {\n\tvar o = new_raw_buf(sz);\n\tprep_blob(o, 0);\n\treturn o;\n}\n\n/* [MS-XLSB] 2.1.4 Record */\nfunction recordhopper(data, cb/*:RecordHopperCB*/, opts/*:?any*/) {\n\tif(!data) return;\n\tvar tmpbyte, cntbyte, length;\n\tprep_blob(data, data.l || 0);\n\tvar L = data.length, RT = 0, tgt = 0;\n\twhile(data.l < L) {\n\t\tRT = data.read_shift(1);\n\t\tif(RT & 0x80) RT = (RT & 0x7F) + ((data.read_shift(1) & 0x7F)<<7);\n\t\tvar R = XLSBRecordEnum[RT] || XLSBRecordEnum[0xFFFF];\n\t\ttmpbyte = data.read_shift(1);\n\t\tlength = tmpbyte & 0x7F;\n\t\tfor(cntbyte = 1; cntbyte <4 && (tmpbyte & 0x80); ++cntbyte) length += ((tmpbyte = data.read_shift(1)) & 0x7F)<<(7*cntbyte);\n\t\ttgt = data.l + length;\n\t\tvar d = R.f && R.f(data, length, opts);\n\t\tdata.l = tgt;\n\t\tif(cb(d, R, RT)) return;\n\t}\n}\n\n/* control buffer usage for fixed-length buffers */\nfunction buf_array()/*:BufArray*/ {\n\tvar bufs/*:Array<Block>*/ = [], blksz = has_buf ? 256 : 2048;\n\tvar newblk = function ba_newblk(sz/*:number*/)/*:Block*/ {\n\t\tvar o/*:Block*/ = (new_buf(sz)/*:any*/);\n\t\tprep_blob(o, 0);\n\t\treturn o;\n\t};\n\n\tvar curbuf/*:Block*/ = newblk(blksz);\n\n\tvar endbuf = function ba_endbuf() {\n\t\tif(!curbuf) return;\n\t\t// workaround for new Buffer(3).slice(0,0) bug in bun 0.1.3\n\t\tif(curbuf.l) {\n\t\t\tif(curbuf.length > curbuf.l) { curbuf = curbuf.slice(0, curbuf.l); curbuf.l = curbuf.length; }\n\t\t\tif(curbuf.length > 0) bufs.push(curbuf);\n\t\t}\n\t\tcurbuf = null;\n\t};\n\n\tvar next = function ba_next(sz/*:number*/)/*:Block*/ {\n\t\tif(curbuf && (sz < (curbuf.length - curbuf.l))) return curbuf;\n\t\tendbuf();\n\t\treturn (curbuf = newblk(Math.max(sz+1, blksz)));\n\t};\n\n\tvar end = function ba_end() {\n\t\tendbuf();\n\t\treturn bconcat(bufs);\n\t};\n\n\tvar push = function ba_push(buf) { endbuf(); curbuf = buf; if(curbuf.l == null) curbuf.l = curbuf.length; next(blksz); };\n\n\treturn ({ next:next, push:push, end:end, _bufs:bufs }/*:any*/);\n}\n\nfunction write_record(ba/*:BufArray*/, type/*:number*/, payload, length/*:?number*/) {\n\tvar t/*:number*/ = +type, l;\n\tif(isNaN(t)) return; // TODO: throw something here?\n\tif(!length) length = XLSBRecordEnum[t].p || (payload||[]).length || 0;\n\tl = 1 + (t >= 0x80 ? 1 : 0) + 1/* + length*/;\n\tif(length >= 0x80) ++l; if(length >= 0x4000) ++l; if(length >= 0x200000) ++l;\n\tvar o = ba.next(l);\n\tif(t <= 0x7F) o.write_shift(1, t);\n\telse {\n\t\to.write_shift(1, (t & 0x7F) + 0x80);\n\t\to.write_shift(1, (t >> 7));\n\t}\n\tfor(var i = 0; i != 4; ++i) {\n\t\tif(length >= 0x80) { o.write_shift(1, (length & 0x7F)+0x80); length >>= 7; }\n\t\telse { o.write_shift(1, length); break; }\n\t}\n\tif(/*:: length != null &&*/length > 0 && is_buf(payload)) ba.push(payload);\n}\n/* XLS ranges enforced */\nfunction shift_cell_xls(cell/*:CellAddress*/, tgt/*:any*/, opts/*:?any*/)/*:CellAddress*/ {\n\tvar out = dup(cell);\n\tif(tgt.s) {\n\t\tif(out.cRel) out.c += tgt.s.c;\n\t\tif(out.rRel) out.r += tgt.s.r;\n\t} else {\n\t\tif(out.cRel) out.c += tgt.c;\n\t\tif(out.rRel) out.r += tgt.r;\n\t}\n\tif(!opts || opts.biff < 12) {\n\t\twhile(out.c >= 0x100) out.c -= 0x100;\n\t\twhile(out.r >= 0x10000) out.r -= 0x10000;\n\t}\n\treturn out;\n}\n\nfunction shift_range_xls(cell, range, opts) {\n\tvar out = dup(cell);\n\tout.s = shift_cell_xls(out.s, range.s, opts);\n\tout.e = shift_cell_xls(out.e, range.s, opts);\n\treturn out;\n}\n\nfunction encode_cell_xls(c/*:CellAddress*/, biff/*:number*/)/*:string*/ {\n\tif(c.cRel && c.c < 0) { c = dup(c); while(c.c < 0) c.c += (biff > 8) ? 0x4000 : 0x100; }\n\tif(c.rRel && c.r < 0) { c = dup(c); while(c.r < 0) c.r += (biff > 8) ? 0x100000 : ((biff > 5) ? 0x10000 : 0x4000); }\n\tvar s = encode_cell(c);\n\tif(!c.cRel && c.cRel != null) s = fix_col(s);\n\tif(!c.rRel && c.rRel != null) s = fix_row(s);\n\treturn s;\n}\n\nfunction encode_range_xls(r, opts)/*:string*/ {\n\tif(r.s.r == 0 && !r.s.rRel) {\n\t\tif(r.e.r == (opts.biff >= 12 ? 0xFFFFF : (opts.biff >= 8 ? 0x10000 : 0x4000)) && !r.e.rRel) {\n\t\t\treturn (r.s.cRel ? \"\" : \"$\") + encode_col(r.s.c) + \":\" + (r.e.cRel ? \"\" : \"$\") + encode_col(r.e.c);\n\t\t}\n\t}\n\tif(r.s.c == 0 && !r.s.cRel) {\n\t\tif(r.e.c == (opts.biff >= 12 ? 0x3FFF : 0xFF) && !r.e.cRel) {\n\t\t\treturn (r.s.rRel ? \"\" : \"$\") + encode_row(r.s.r) + \":\" + (r.e.rRel ? \"\" : \"$\") + encode_row(r.e.r);\n\t\t}\n\t}\n\treturn encode_cell_xls(r.s, opts.biff) + \":\" + encode_cell_xls(r.e, opts.biff);\n}\nfunction decode_row(rowstr/*:string*/)/*:number*/ { return parseInt(unfix_row(rowstr),10) - 1; }\nfunction encode_row(row/*:number*/)/*:string*/ { return \"\" + (row + 1); }\nfunction fix_row(cstr/*:string*/)/*:string*/ { return cstr.replace(/([A-Z]|^)(\\d+)$/,\"$1$$$2\"); }\nfunction unfix_row(cstr/*:string*/)/*:string*/ { return cstr.replace(/\\$(\\d+)$/,\"$1\"); }\n\nfunction decode_col(colstr/*:string*/)/*:number*/ { var c = unfix_col(colstr), d = 0, i = 0; for(; i !== c.length; ++i) d = 26*d + c.charCodeAt(i) - 64; return d - 1; }\nfunction encode_col(col/*:number*/)/*:string*/ { if(col < 0) throw new Error(\"invalid column \" + col); var s=\"\"; for(++col; col; col=Math.floor((col-1)/26)) s = String.fromCharCode(((col-1)%26) + 65) + s; return s; }\nfunction fix_col(cstr/*:string*/)/*:string*/ { return cstr.replace(/^([A-Z])/,\"$$$1\"); }\nfunction unfix_col(cstr/*:string*/)/*:string*/ { return cstr.replace(/^\\$([A-Z])/,\"$1\"); }\n\nfunction split_cell(cstr/*:string*/)/*:Array<string>*/ { return cstr.replace(/(\\$?[A-Z]*)(\\$?\\d*)/,\"$1,$2\").split(\",\"); }\nfunction decode_cell(cstr/*:string*/)/*:CellAddress*/ {\n\tvar R = 0, C = 0;\n\tfor(var i = 0; i < cstr.length; ++i) {\n\t\tvar cc = cstr.charCodeAt(i);\n\t\tif(cc >= 48 && cc <= 57) R = 10 * R + (cc - 48);\n\t\telse if(cc >= 65 && cc <= 90) C = 26 * C + (cc - 64);\n\t}\n\treturn { c: C - 1, r:R - 1 };\n}\nfunction encode_cell(cell/*:CellAddress*/)/*:string*/ {\n\tvar col = cell.c + 1;\n\tvar s=\"\";\n\tfor(; col; col=((col-1)/26)|0) s = String.fromCharCode(((col-1)%26) + 65) + s;\n\treturn s + (cell.r + 1);\n}\nfunction decode_range(range/*:string*/)/*:Range*/ {\n\tvar idx = range.indexOf(\":\");\n\tif(idx == -1) return { s: decode_cell(range), e: decode_cell(range) };\n\treturn { s: decode_cell(range.slice(0, idx)), e: decode_cell(range.slice(idx + 1)) };\n}\n/*# if only one arg, it is assumed to be a Range.  If 2 args, both are cell addresses */\nfunction encode_range(cs/*:CellAddrSpec|Range*/,ce/*:?CellAddrSpec*/)/*:string*/ {\n\tif(typeof ce === 'undefined' || typeof ce === 'number') {\n/*:: if(!(cs instanceof Range)) throw \"unreachable\"; */\n\t\treturn encode_range(cs.s, cs.e);\n\t}\n/*:: if((cs instanceof Range)) throw \"unreachable\"; */\n\tif(typeof cs !== 'string') cs = encode_cell((cs/*:any*/));\n\tif(typeof ce !== 'string') ce = encode_cell((ce/*:any*/));\n/*:: if(typeof cs !== 'string') throw \"unreachable\"; */\n/*:: if(typeof ce !== 'string') throw \"unreachable\"; */\n\treturn cs == ce ? cs : cs + \":\" + ce;\n}\nfunction fix_range(a1/*:string*/)/*:string*/ {\n\tvar s = decode_range(a1);\n\treturn \"$\" + encode_col(s.s.c) + \"$\" + encode_row(s.s.r) + \":$\" + encode_col(s.e.c) + \"$\" + encode_row(s.e.r);\n}\n\n// List of invalid characters needs to be tested further\nfunction formula_quote_sheet_name(sname/*:string*/, opts)/*:string*/ {\n\tif(!sname && !(opts && opts.biff <= 5 && opts.biff >= 2)) throw new Error(\"empty sheet name\");\n\tif (/[^\\w\\u4E00-\\u9FFF\\u3040-\\u30FF]/.test(sname)) return \"'\" + sname.replace(/'/g, \"''\") + \"'\";\n\treturn sname;\n}\n\nfunction safe_decode_range(range/*:string*/)/*:Range*/ {\n\tvar o = {s:{c:0,r:0},e:{c:0,r:0}};\n\tvar idx = 0, i = 0, cc = 0;\n\tvar len = range.length;\n\tfor(idx = 0; i < len; ++i) {\n\t\tif((cc=range.charCodeAt(i)-64) < 1 || cc > 26) break;\n\t\tidx = 26*idx + cc;\n\t}\n\to.s.c = --idx;\n\n\tfor(idx = 0; i < len; ++i) {\n\t\tif((cc=range.charCodeAt(i)-48) < 0 || cc > 9) break;\n\t\tidx = 10*idx + cc;\n\t}\n\to.s.r = --idx;\n\n\tif(i === len || cc != 10) { o.e.c=o.s.c; o.e.r=o.s.r; return o; }\n\t++i;\n\n\tfor(idx = 0; i != len; ++i) {\n\t\tif((cc=range.charCodeAt(i)-64) < 1 || cc > 26) break;\n\t\tidx = 26*idx + cc;\n\t}\n\to.e.c = --idx;\n\n\tfor(idx = 0; i != len; ++i) {\n\t\tif((cc=range.charCodeAt(i)-48) < 0 || cc > 9) break;\n\t\tidx = 10*idx + cc;\n\t}\n\to.e.r = --idx;\n\treturn o;\n}\n\nfunction safe_format_cell(cell/*:Cell*/, v/*:any*/) {\n\tvar q = (cell.t == 'd' && v instanceof Date);\n\tif(cell.z != null) try { return (cell.w = SSF_format(cell.z, q ? datenum(v) : v)); } catch(e) { }\n\ttry { return (cell.w = SSF_format((cell.XF||{}).numFmtId||(q ? 14 : 0),  q ? datenum(v) : v)); } catch(e) { return ''+v; }\n}\n\nfunction format_cell(cell/*:Cell*/, v/*:any*/, o/*:any*/) {\n\tif(cell == null || cell.t == null || cell.t == 'z') return \"\";\n\tif(cell.w !== undefined) return cell.w;\n\tif(cell.t == 'd' && !cell.z && o && o.dateNF) cell.z = o.dateNF;\n\tif(cell.t == \"e\") return BErr[cell.v] || cell.v;\n\tif(v == undefined) return safe_format_cell(cell, cell.v);\n\treturn safe_format_cell(cell, v);\n}\n\nfunction sheet_to_workbook(sheet/*:Worksheet*/, opts)/*:Workbook*/ {\n\tvar n = opts && opts.sheet ? opts.sheet : \"Sheet1\";\n\tvar sheets = {}; sheets[n] = sheet;\n\treturn { SheetNames: [n], Sheets: sheets };\n}\n\nfunction sheet_add_aoa(_ws/*:?Worksheet*/, data/*:AOA*/, opts/*:?any*/)/*:Worksheet*/ {\n\tvar o = opts || {};\n\tvar dense = _ws ? (_ws[\"!data\"] != null) : o.dense;\n\tif(DENSE != null && dense == null) dense = DENSE;\n\tvar ws/*:Worksheet*/ = _ws || ({}/*:any*/);\n\tif(dense && !ws[\"!data\"]) ws[\"!data\"] = [];\n\tvar _R = 0, _C = 0;\n\tif(ws && o.origin != null) {\n\t\tif(typeof o.origin == 'number') _R = o.origin;\n\t\telse {\n\t\t\tvar _origin/*:CellAddress*/ = typeof o.origin == \"string\" ? decode_cell(o.origin) : o.origin;\n\t\t\t_R = _origin.r; _C = _origin.c;\n\t\t}\n\t\tif(!ws[\"!ref\"]) ws[\"!ref\"] = \"A1:A1\";\n\t}\n\tvar range/*:Range*/ = ({s: {c:10000000, r:10000000}, e: {c:0, r:0}}/*:any*/);\n\tif(ws['!ref']) {\n\t\tvar _range = safe_decode_range(ws['!ref']);\n\t\trange.s.c = _range.s.c;\n\t\trange.s.r = _range.s.r;\n\t\trange.e.c = Math.max(range.e.c, _range.e.c);\n\t\trange.e.r = Math.max(range.e.r, _range.e.r);\n\t\tif(_R == -1) range.e.r = _R = _range.e.r + 1;\n\t}\n\tvar row = [];\n\tfor(var R = 0; R != data.length; ++R) {\n\t\tif(!data[R]) continue;\n\t\tif(!Array.isArray(data[R])) throw new Error(\"aoa_to_sheet expects an array of arrays\");\n\t\tvar __R = _R + R, __Rstr = \"\" + (__R + 1);\n\t\tif(dense) {\n\t\t\tif(!ws[\"!data\"][__R]) ws[\"!data\"][__R] = [];\n\t\t\trow = ws[\"!data\"][__R];\n\t\t}\n\t\tfor(var C = 0; C != data[R].length; ++C) {\n\t\t\tif(typeof data[R][C] === 'undefined') continue;\n\t\t\tvar cell/*:Cell*/ = ({v: data[R][C] }/*:any*/);\n\t\t\tvar __C = _C + C;\n\t\t\tif(range.s.r > __R) range.s.r = __R;\n\t\t\tif(range.s.c > __C) range.s.c = __C;\n\t\t\tif(range.e.r < __R) range.e.r = __R;\n\t\t\tif(range.e.c < __C) range.e.c = __C;\n\t\t\tif(data[R][C] && typeof data[R][C] === 'object' && !Array.isArray(data[R][C]) && !(data[R][C] instanceof Date)) cell = data[R][C];\n\t\t\telse {\n\t\t\t\tif(Array.isArray(cell.v)) { cell.f = data[R][C][1]; cell.v = cell.v[0]; }\n\t\t\t\tif(cell.v === null) {\n\t\t\t\t\tif(cell.f) cell.t = 'n';\n\t\t\t\t\telse if(o.nullError) { cell.t = 'e'; cell.v = 0; }\n\t\t\t\t\telse if(!o.sheetStubs) continue;\n\t\t\t\t\telse cell.t = 'z';\n\t\t\t\t}\n\t\t\t\telse if(typeof cell.v === 'number') cell.t = 'n';\n\t\t\t\telse if(typeof cell.v === 'boolean') cell.t = 'b';\n\t\t\t\telse if(cell.v instanceof Date) {\n\t\t\t\t\tcell.z = o.dateNF || table_fmt[14];\n\t\t\t\t\tif(o.cellDates) { cell.t = 'd'; cell.w = SSF_format(cell.z, datenum(cell.v, o.date1904)); }\n\t\t\t\t\telse { cell.t = 'n'; cell.v = datenum(cell.v, o.date1904); cell.w = SSF_format(cell.z, cell.v); }\n\t\t\t\t}\n\t\t\t\telse cell.t = 's';\n\t\t\t}\n\t\t\tif(dense) {\n\t\t\t\tif(row[__C] && row[__C].z) cell.z = row[__C].z;\n\t\t\t\trow[__C] = cell;\n\t\t\t} else {\n\t\t\t\tvar cell_ref = encode_col(__C) + __Rstr/*:any*/;\n\t\t\t\tif(ws[cell_ref] && ws[cell_ref].z) cell.z = ws[cell_ref].z;\n\t\t\t\tws[cell_ref] = cell;\n\t\t\t}\n\t\t}\n\t}\n\tif(range.s.c < 10000000) ws['!ref'] = encode_range(range);\n\treturn ws;\n}\nfunction aoa_to_sheet(data/*:AOA*/, opts/*:?any*/)/*:Worksheet*/ { return sheet_add_aoa(null, data, opts); }\n\nfunction parse_Int32LE(data) {\n\treturn data.read_shift(4, 'i');\n}\nfunction write_UInt32LE(x/*:number*/, o) {\n\tif (!o) o = new_buf(4);\n\to.write_shift(4, x);\n\treturn o;\n}\n\n/* [MS-XLSB] 2.5.168 */\nfunction parse_XLWideString(data/*::, length*/)/*:string*/ {\n\tvar cchCharacters = data.read_shift(4);\n\treturn cchCharacters === 0 ? \"\" : data.read_shift(cchCharacters, 'dbcs');\n}\nfunction write_XLWideString(data/*:string*/, o) {\n\tvar _null = false; if (o == null) { _null = true; o = new_buf(4 + 2 * data.length); }\n\to.write_shift(4, data.length);\n\tif (data.length > 0) o.write_shift(0, data, 'dbcs');\n\treturn _null ? o.slice(0, o.l) : o;\n}\n\n/* [MS-XLSB] 2.5.91 */\n//function parse_LPWideString(data/*::, length*/)/*:string*/ {\n//\tvar cchCharacters = data.read_shift(2);\n//\treturn cchCharacters === 0 ? \"\" : data.read_shift(cchCharacters, \"utf16le\");\n//}\n\n/* [MS-XLSB] 2.5.143 */\nfunction parse_StrRun(data) {\n\treturn { ich: data.read_shift(2), ifnt: data.read_shift(2) };\n}\nfunction write_StrRun(run, o) {\n\tif (!o) o = new_buf(4);\n\to.write_shift(2, run.ich || 0);\n\to.write_shift(2, run.ifnt || 0);\n\treturn o;\n}\n\n/* [MS-XLSB] 2.5.121 */\nfunction parse_RichStr(data, length/*:number*/)/*:XLString*/ {\n\tvar start = data.l;\n\tvar flags = data.read_shift(1);\n\tvar str = parse_XLWideString(data);\n\tvar rgsStrRun = [];\n\tvar z = ({ t: str, h: str }/*:any*/);\n\tif ((flags & 1) !== 0) { /* fRichStr */\n\t\t/* TODO: formatted string */\n\t\tvar dwSizeStrRun = data.read_shift(4);\n\t\tfor (var i = 0; i != dwSizeStrRun; ++i) rgsStrRun.push(parse_StrRun(data));\n\t\tz.r = rgsStrRun;\n\t}\n\telse z.r = [{ ich: 0, ifnt: 0 }];\n\t//if((flags & 2) !== 0) { /* fExtStr */\n\t//\t/* TODO: phonetic string */\n\t//}\n\tdata.l = start + length;\n\treturn z;\n}\nfunction write_RichStr(str/*:XLString*/, o/*:?Block*/)/*:Block*/ {\n\t/* TODO: formatted string */\n\tvar _null = false; if (o == null) { _null = true; o = new_buf(15 + 4 * str.t.length); }\n\to.write_shift(1, 0);\n\twrite_XLWideString(str.t, o);\n\treturn _null ? o.slice(0, o.l) : o;\n}\n/* [MS-XLSB] 2.4.328 BrtCommentText (RichStr w/1 run) */\nvar parse_BrtCommentText = parse_RichStr;\nfunction write_BrtCommentText(str/*:XLString*/, o/*:?Block*/)/*:Block*/ {\n\t/* TODO: formatted string */\n\tvar _null = false; if (o == null) { _null = true; o = new_buf(23 + 4 * str.t.length); }\n\to.write_shift(1, 1);\n\twrite_XLWideString(str.t, o);\n\to.write_shift(4, 1);\n\twrite_StrRun({ ich: 0, ifnt: 0 }, o);\n\treturn _null ? o.slice(0, o.l) : o;\n}\n\n/* [MS-XLSB] 2.5.9 */\nfunction parse_XLSBCell(data)/*:any*/ {\n\tvar col = data.read_shift(4);\n\tvar iStyleRef = data.read_shift(2);\n\tiStyleRef += data.read_shift(1) << 16;\n\tdata.l++; //var fPhShow = data.read_shift(1);\n\treturn { c: col, iStyleRef: iStyleRef };\n}\nfunction write_XLSBCell(cell/*:any*/, o/*:?Block*/) {\n\tif (o == null) o = new_buf(8);\n\to.write_shift(-4, cell.c);\n\to.write_shift(3, cell.iStyleRef || cell.s);\n\to.write_shift(1, 0); /* fPhShow */\n\treturn o;\n}\n\n/* Short XLSB Cell does not include column */\nfunction parse_XLSBShortCell(data)/*:any*/ {\n\tvar iStyleRef = data.read_shift(2);\n\tiStyleRef += data.read_shift(1) <<16;\n\tdata.l++; //var fPhShow = data.read_shift(1);\n\treturn { c:-1, iStyleRef: iStyleRef };\n}\nfunction write_XLSBShortCell(cell/*:any*/, o/*:?Block*/) {\n\tif(o == null) o = new_buf(4);\n\to.write_shift(3, cell.iStyleRef || cell.s);\n\to.write_shift(1, 0); /* fPhShow */\n\treturn o;\n}\n\n/* [MS-XLSB] 2.5.21 */\nvar parse_XLSBCodeName = parse_XLWideString;\nvar write_XLSBCodeName = write_XLWideString;\n\n/* [MS-XLSB] 2.5.166 */\nfunction parse_XLNullableWideString(data/*::, length*/)/*:string*/ {\n\tvar cchCharacters = data.read_shift(4);\n\treturn cchCharacters === 0 || cchCharacters === 0xFFFFFFFF ? \"\" : data.read_shift(cchCharacters, 'dbcs');\n}\nfunction write_XLNullableWideString(data/*:string*/, o) {\n\tvar _null = false; if (o == null) { _null = true; o = new_buf(127); }\n\to.write_shift(4, data.length > 0 ? data.length : 0xFFFFFFFF);\n\tif (data.length > 0) o.write_shift(0, data, 'dbcs');\n\treturn _null ? o.slice(0, o.l) : o;\n}\n\n/* [MS-XLSB] 2.5.165 */\nvar parse_XLNameWideString = parse_XLWideString;\n//var write_XLNameWideString = write_XLWideString;\n\n/* [MS-XLSB] 2.5.114 */\nvar parse_RelID = parse_XLNullableWideString;\nvar write_RelID = write_XLNullableWideString;\n\n\n/* [MS-XLS] 2.5.217 ; [MS-XLSB] 2.5.122 */\nfunction parse_RkNumber(data)/*:number*/ {\n\tvar b = data.slice(data.l, data.l + 4);\n\tvar fX100 = (b[0] & 1), fInt = (b[0] & 2);\n\tdata.l += 4;\n\tvar RK = fInt === 0 ? __double([0, 0, 0, 0, (b[0] & 0xFC), b[1], b[2], b[3]], 0) : __readInt32LE(b, 0) >> 2;\n\treturn fX100 ? (RK / 100) : RK;\n}\nfunction write_RkNumber(data/*:number*/, o) {\n\tif (o == null) o = new_buf(4);\n\tvar fX100 = 0, fInt = 0, d100 = data * 100;\n\tif ((data == (data | 0)) && (data >= -(1 << 29)) && (data < (1 << 29))) { fInt = 1; }\n\telse if ((d100 == (d100 | 0)) && (d100 >= -(1 << 29)) && (d100 < (1 << 29))) { fInt = 1; fX100 = 1; }\n\tif (fInt) o.write_shift(-4, ((fX100 ? d100 : data) << 2) + (fX100 + 2));\n\telse throw new Error(\"unsupported RkNumber \" + data); // TODO\n}\n\n\n/* [MS-XLSB] 2.5.117 RfX */\nfunction parse_RfX(data /*::, length*/)/*:Range*/ {\n\tvar cell/*:Range*/ = ({ s: {}, e: {} }/*:any*/);\n\tcell.s.r = data.read_shift(4);\n\tcell.e.r = data.read_shift(4);\n\tcell.s.c = data.read_shift(4);\n\tcell.e.c = data.read_shift(4);\n\treturn cell;\n}\nfunction write_RfX(r/*:Range*/, o) {\n\tif (!o) o = new_buf(16);\n\to.write_shift(4, r.s.r);\n\to.write_shift(4, r.e.r);\n\to.write_shift(4, r.s.c);\n\to.write_shift(4, r.e.c);\n\treturn o;\n}\n\n/* [MS-XLSB] 2.5.153 UncheckedRfX */\nvar parse_UncheckedRfX = parse_RfX;\nvar write_UncheckedRfX = write_RfX;\n\n/* [MS-XLSB] 2.5.155 UncheckedSqRfX */\n//function parse_UncheckedSqRfX(data) {\n//\tvar cnt = data.read_shift(4);\n//\tvar out = [];\n//\tfor(var i = 0; i < cnt; ++i) {\n//\t\tvar rng = parse_UncheckedRfX(data);\n//\t\tout.push(encode_range(rng));\n//\t}\n//\treturn out.join(\",\");\n//}\n//function write_UncheckedSqRfX(sqrfx/*:string*/) {\n//\tvar parts = sqrfx.split(/\\s*,\\s*/);\n//\tvar o = new_buf(4); o.write_shift(4, parts.length);\n//\tvar out = [o];\n//\tparts.forEach(function(rng) {\n//\t\tout.push(write_UncheckedRfX(safe_decode_range(rng)));\n//\t});\n//\treturn bconcat(out);\n//}\n\n/* [MS-XLS] 2.5.342 ; [MS-XLSB] 2.5.171 */\n/* TODO: error checking, NaN and Infinity values are not valid Xnum */\nfunction parse_Xnum(data/*::, length*/) {\n\tif(data.length - data.l < 8) throw \"XLS Xnum Buffer underflow\";\n\treturn data.read_shift(8, 'f');\n}\nfunction write_Xnum(data, o) { return (o || new_buf(8)).write_shift(8, data, 'f'); }\n\n/* [MS-XLSB] 2.4.324 BrtColor */\nfunction parse_BrtColor(data/*::, length*/) {\n\tvar out = {};\n\tvar d = data.read_shift(1);\n\n\t//var fValidRGB = d & 1;\n\tvar xColorType = d >>> 1;\n\n\tvar index = data.read_shift(1);\n\tvar nTS = data.read_shift(2, 'i');\n\tvar bR = data.read_shift(1);\n\tvar bG = data.read_shift(1);\n\tvar bB = data.read_shift(1);\n\tdata.l++; //var bAlpha = data.read_shift(1);\n\n\tswitch (xColorType) {\n\t\tcase 0: out.auto = 1; break;\n\t\tcase 1:\n\t\t\tout.index = index;\n\t\t\tvar icv = XLSIcv[index];\n\t\t\t/* automatic pseudo index 81 */\n\t\t\tif (icv) out.rgb = rgb2Hex(icv);\n\t\t\tbreak;\n\t\tcase 2:\n\t\t\t/* if(!fValidRGB) throw new Error(\"invalid\"); */\n\t\t\tout.rgb = rgb2Hex([bR, bG, bB]);\n\t\t\tbreak;\n\t\tcase 3: out.theme = index; break;\n\t}\n\tif (nTS != 0) out.tint = nTS > 0 ? nTS / 32767 : nTS / 32768;\n\n\treturn out;\n}\nfunction write_BrtColor(color, o) {\n\tif (!o) o = new_buf(8);\n\tif (!color || color.auto) { o.write_shift(4, 0); o.write_shift(4, 0); return o; }\n\tif (color.index != null) {\n\t\to.write_shift(1, 0x02);\n\t\to.write_shift(1, color.index);\n\t} else if (color.theme != null) {\n\t\to.write_shift(1, 0x06);\n\t\to.write_shift(1, color.theme);\n\t} else {\n\t\to.write_shift(1, 0x05);\n\t\to.write_shift(1, 0);\n\t}\n\tvar nTS = color.tint || 0;\n\tif (nTS > 0) nTS *= 32767;\n\telse if (nTS < 0) nTS *= 32768;\n\to.write_shift(2, nTS);\n\tif (!color.rgb || color.theme != null) {\n\t\to.write_shift(2, 0);\n\t\to.write_shift(1, 0);\n\t\to.write_shift(1, 0);\n\t} else {\n\t\tvar rgb = (color.rgb || 'FFFFFF');\n\t\tif (typeof rgb == 'number') rgb = (\"000000\" + rgb.toString(16)).slice(-6);\n\t\to.write_shift(1, parseInt(rgb.slice(0, 2), 16));\n\t\to.write_shift(1, parseInt(rgb.slice(2, 4), 16));\n\t\to.write_shift(1, parseInt(rgb.slice(4, 6), 16));\n\t\to.write_shift(1, 0xFF);\n\t}\n\treturn o;\n}\n\n/* [MS-XLSB] 2.5.52 */\nfunction parse_FontFlags(data/*::, length, opts*/) {\n\tvar d = data.read_shift(1);\n\tdata.l++;\n\tvar out = {\n\t\tfBold: d & 0x01,\n\t\tfItalic: d & 0x02,\n\t\tfUnderline: d & 0x04,\n\t\tfStrikeout: d & 0x08,\n\t\tfOutline: d & 0x10,\n\t\tfShadow: d & 0x20,\n\t\tfCondense: d & 0x40,\n\t\tfExtend: d & 0x80\n\t};\n\treturn out;\n}\nfunction write_FontFlags(font, o) {\n\tif (!o) o = new_buf(2);\n\tvar grbit =\n\t\t(font.italic ? 0x02 : 0) |\n\t\t(font.strike ? 0x08 : 0) |\n\t\t(font.outline ? 0x10 : 0) |\n\t\t(font.shadow ? 0x20 : 0) |\n\t\t(font.condense ? 0x40 : 0) |\n\t\t(font.extend ? 0x80 : 0);\n\to.write_shift(1, grbit);\n\to.write_shift(1, 0);\n\treturn o;\n}\n\n/* [MS-OLEDS] 2.3.1 and 2.3.2 */\nfunction parse_ClipboardFormatOrString(o, w/*:number*/)/*:string*/ {\n\t// $FlowIgnore\n\tvar ClipFmt = { 2: \"BITMAP\", 3: \"METAFILEPICT\", 8: \"DIB\", 14: \"ENHMETAFILE\" };\n\tvar m/*:number*/ = o.read_shift(4);\n\tswitch (m) {\n\t\tcase 0x00000000: return \"\";\n\t\tcase 0xffffffff: case 0xfffffffe: return ClipFmt[o.read_shift(4)] || \"\";\n\t}\n\tif (m > 0x190) throw new Error(\"Unsupported Clipboard: \" + m.toString(16));\n\to.l -= 4;\n\treturn o.read_shift(0, w == 1 ? \"lpstr\" : \"lpwstr\");\n}\nfunction parse_ClipboardFormatOrAnsiString(o) { return parse_ClipboardFormatOrString(o, 1); }\nfunction parse_ClipboardFormatOrUnicodeString(o) { return parse_ClipboardFormatOrString(o, 2); }\n\n/* [MS-OLEPS] 2.2 PropertyType */\n// Note: some tree shakers cannot handle VT_VECTOR | $CONST, hence extra vars\n//var VT_EMPTY    = 0x0000;\n//var VT_NULL     = 0x0001;\nvar VT_I2       = 0x0002;\nvar VT_I4       = 0x0003;\n//var VT_R4       = 0x0004;\n//var VT_R8       = 0x0005;\n//var VT_CY       = 0x0006;\n//var VT_DATE     = 0x0007;\n//var VT_BSTR     = 0x0008;\n//var VT_ERROR    = 0x000A;\nvar VT_BOOL     = 0x000B;\nvar VT_VARIANT  = 0x000C;\n//var VT_DECIMAL  = 0x000E;\n//var VT_I1       = 0x0010;\n//var VT_UI1      = 0x0011;\n//var VT_UI2      = 0x0012;\nvar VT_UI4      = 0x0013;\n//var VT_I8       = 0x0014;\n//var VT_UI8      = 0x0015;\n//var VT_INT      = 0x0016;\n//var VT_UINT     = 0x0017;\n//var VT_LPSTR    = 0x001E;\n//var VT_LPWSTR   = 0x001F;\nvar VT_FILETIME = 0x0040;\nvar VT_BLOB     = 0x0041;\n//var VT_STREAM   = 0x0042;\n//var VT_STORAGE  = 0x0043;\n//var VT_STREAMED_Object  = 0x0044;\n//var VT_STORED_Object    = 0x0045;\n//var VT_BLOB_Object      = 0x0046;\nvar VT_CF       = 0x0047;\n//var VT_CLSID    = 0x0048;\n//var VT_VERSIONED_STREAM = 0x0049;\n//var VT_VECTOR   = 0x1000;\nvar VT_VECTOR_VARIANT = 0x100C;\nvar VT_VECTOR_LPSTR   = 0x101E;\n//var VT_ARRAY    = 0x2000;\n\nvar VT_STRING   = 0x0050; // 2.3.3.1.11 VtString\nvar VT_USTR     = 0x0051; // 2.3.3.1.12 VtUnalignedString\nvar VT_CUSTOM   = [VT_STRING, VT_USTR];\n\n/* [MS-OSHARED] 2.3.3.2.2.1 Document Summary Information PIDDSI */\nvar DocSummaryPIDDSI = {\n\t/*::[*/0x01/*::]*/: { n: 'CodePage', t: VT_I2 },\n\t/*::[*/0x02/*::]*/: { n: 'Category', t: VT_STRING },\n\t/*::[*/0x03/*::]*/: { n: 'PresentationFormat', t: VT_STRING },\n\t/*::[*/0x04/*::]*/: { n: 'ByteCount', t: VT_I4 },\n\t/*::[*/0x05/*::]*/: { n: 'LineCount', t: VT_I4 },\n\t/*::[*/0x06/*::]*/: { n: 'ParagraphCount', t: VT_I4 },\n\t/*::[*/0x07/*::]*/: { n: 'SlideCount', t: VT_I4 },\n\t/*::[*/0x08/*::]*/: { n: 'NoteCount', t: VT_I4 },\n\t/*::[*/0x09/*::]*/: { n: 'HiddenCount', t: VT_I4 },\n\t/*::[*/0x0a/*::]*/: { n: 'MultimediaClipCount', t: VT_I4 },\n\t/*::[*/0x0b/*::]*/: { n: 'ScaleCrop', t: VT_BOOL },\n\t/*::[*/0x0c/*::]*/: { n: 'HeadingPairs', t: VT_VECTOR_VARIANT /* VT_VECTOR | VT_VARIANT */ },\n\t/*::[*/0x0d/*::]*/: { n: 'TitlesOfParts', t: VT_VECTOR_LPSTR /* VT_VECTOR | VT_LPSTR */ },\n\t/*::[*/0x0e/*::]*/: { n: 'Manager', t: VT_STRING },\n\t/*::[*/0x0f/*::]*/: { n: 'Company', t: VT_STRING },\n\t/*::[*/0x10/*::]*/: { n: 'LinksUpToDate', t: VT_BOOL },\n\t/*::[*/0x11/*::]*/: { n: 'CharacterCount', t: VT_I4 },\n\t/*::[*/0x13/*::]*/: { n: 'SharedDoc', t: VT_BOOL },\n\t/*::[*/0x16/*::]*/: { n: 'HyperlinksChanged', t: VT_BOOL },\n\t/*::[*/0x17/*::]*/: { n: 'AppVersion', t: VT_I4, p: 'version' },\n\t/*::[*/0x18/*::]*/: { n: 'DigSig', t: VT_BLOB },\n\t/*::[*/0x1A/*::]*/: { n: 'ContentType', t: VT_STRING },\n\t/*::[*/0x1B/*::]*/: { n: 'ContentStatus', t: VT_STRING },\n\t/*::[*/0x1C/*::]*/: { n: 'Language', t: VT_STRING },\n\t/*::[*/0x1D/*::]*/: { n: 'Version', t: VT_STRING },\n\t/*::[*/0xFF/*::]*/: {},\n\t/* [MS-OLEPS] 2.18 */\n\t/*::[*/0x80000000/*::]*/: { n: 'Locale', t: VT_UI4 },\n\t/*::[*/0x80000003/*::]*/: { n: 'Behavior', t: VT_UI4 },\n\t/*::[*/0x72627262/*::]*/: {}\n};\n\n/* [MS-OSHARED] 2.3.3.2.1.1 Summary Information Property Set PIDSI */\nvar SummaryPIDSI = {\n\t/*::[*/0x01/*::]*/: { n: 'CodePage', t: VT_I2 },\n\t/*::[*/0x02/*::]*/: { n: 'Title', t: VT_STRING },\n\t/*::[*/0x03/*::]*/: { n: 'Subject', t: VT_STRING },\n\t/*::[*/0x04/*::]*/: { n: 'Author', t: VT_STRING },\n\t/*::[*/0x05/*::]*/: { n: 'Keywords', t: VT_STRING },\n\t/*::[*/0x06/*::]*/: { n: 'Comments', t: VT_STRING },\n\t/*::[*/0x07/*::]*/: { n: 'Template', t: VT_STRING },\n\t/*::[*/0x08/*::]*/: { n: 'LastAuthor', t: VT_STRING },\n\t/*::[*/0x09/*::]*/: { n: 'RevNumber', t: VT_STRING },\n\t/*::[*/0x0A/*::]*/: { n: 'EditTime', t: VT_FILETIME },\n\t/*::[*/0x0B/*::]*/: { n: 'LastPrinted', t: VT_FILETIME },\n\t/*::[*/0x0C/*::]*/: { n: 'CreatedDate', t: VT_FILETIME },\n\t/*::[*/0x0D/*::]*/: { n: 'ModifiedDate', t: VT_FILETIME },\n\t/*::[*/0x0E/*::]*/: { n: 'PageCount', t: VT_I4 },\n\t/*::[*/0x0F/*::]*/: { n: 'WordCount', t: VT_I4 },\n\t/*::[*/0x10/*::]*/: { n: 'CharCount', t: VT_I4 },\n\t/*::[*/0x11/*::]*/: { n: 'Thumbnail', t: VT_CF },\n\t/*::[*/0x12/*::]*/: { n: 'Application', t: VT_STRING },\n\t/*::[*/0x13/*::]*/: { n: 'DocSecurity', t: VT_I4 },\n\t/*::[*/0xFF/*::]*/: {},\n\t/* [MS-OLEPS] 2.18 */\n\t/*::[*/0x80000000/*::]*/: { n: 'Locale', t: VT_UI4 },\n\t/*::[*/0x80000003/*::]*/: { n: 'Behavior', t: VT_UI4 },\n\t/*::[*/0x72627262/*::]*/: {}\n};\n\n/* [MS-XLS] 2.4.63 Country/Region codes */\nvar CountryEnum = {\n\t/*::[*/0x0001/*::]*/: \"US\", // United States\n\t/*::[*/0x0002/*::]*/: \"CA\", // Canada\n\t/*::[*/0x0003/*::]*/: \"\", // Latin America (except Brazil)\n\t/*::[*/0x0007/*::]*/: \"RU\", // Russia\n\t/*::[*/0x0014/*::]*/: \"EG\", // Egypt\n\t/*::[*/0x001E/*::]*/: \"GR\", // Greece\n\t/*::[*/0x001F/*::]*/: \"NL\", // Netherlands\n\t/*::[*/0x0020/*::]*/: \"BE\", // Belgium\n\t/*::[*/0x0021/*::]*/: \"FR\", // France\n\t/*::[*/0x0022/*::]*/: \"ES\", // Spain\n\t/*::[*/0x0024/*::]*/: \"HU\", // Hungary\n\t/*::[*/0x0027/*::]*/: \"IT\", // Italy\n\t/*::[*/0x0029/*::]*/: \"CH\", // Switzerland\n\t/*::[*/0x002B/*::]*/: \"AT\", // Austria\n\t/*::[*/0x002C/*::]*/: \"GB\", // United Kingdom\n\t/*::[*/0x002D/*::]*/: \"DK\", // Denmark\n\t/*::[*/0x002E/*::]*/: \"SE\", // Sweden\n\t/*::[*/0x002F/*::]*/: \"NO\", // Norway\n\t/*::[*/0x0030/*::]*/: \"PL\", // Poland\n\t/*::[*/0x0031/*::]*/: \"DE\", // Germany\n\t/*::[*/0x0034/*::]*/: \"MX\", // Mexico\n\t/*::[*/0x0037/*::]*/: \"BR\", // Brazil\n\t/*::[*/0x003d/*::]*/: \"AU\", // Australia\n\t/*::[*/0x0040/*::]*/: \"NZ\", // New Zealand\n\t/*::[*/0x0042/*::]*/: \"TH\", // Thailand\n\t/*::[*/0x0051/*::]*/: \"JP\", // Japan\n\t/*::[*/0x0052/*::]*/: \"KR\", // Korea\n\t/*::[*/0x0054/*::]*/: \"VN\", // Viet Nam\n\t/*::[*/0x0056/*::]*/: \"CN\", // China\n\t/*::[*/0x005A/*::]*/: \"TR\", // Turkey\n\t/*::[*/0x0069/*::]*/: \"JS\", // Ramastan\n\t/*::[*/0x00D5/*::]*/: \"DZ\", // Algeria\n\t/*::[*/0x00D8/*::]*/: \"MA\", // Morocco\n\t/*::[*/0x00DA/*::]*/: \"LY\", // Libya\n\t/*::[*/0x015F/*::]*/: \"PT\", // Portugal\n\t/*::[*/0x0162/*::]*/: \"IS\", // Iceland\n\t/*::[*/0x0166/*::]*/: \"FI\", // Finland\n\t/*::[*/0x01A4/*::]*/: \"CZ\", // Czech Republic\n\t/*::[*/0x0376/*::]*/: \"TW\", // Taiwan\n\t/*::[*/0x03C1/*::]*/: \"LB\", // Lebanon\n\t/*::[*/0x03C2/*::]*/: \"JO\", // Jordan\n\t/*::[*/0x03C3/*::]*/: \"SY\", // Syria\n\t/*::[*/0x03C4/*::]*/: \"IQ\", // Iraq\n\t/*::[*/0x03C5/*::]*/: \"KW\", // Kuwait\n\t/*::[*/0x03C6/*::]*/: \"SA\", // Saudi Arabia\n\t/*::[*/0x03CB/*::]*/: \"AE\", // United Arab Emirates\n\t/*::[*/0x03CC/*::]*/: \"IL\", // Israel\n\t/*::[*/0x03CE/*::]*/: \"QA\", // Qatar\n\t/*::[*/0x03D5/*::]*/: \"IR\", // Iran\n\t/*::[*/0xFFFF/*::]*/: \"US\"  // United States\n};\n\n/* [MS-XLS] 2.5.127 */\nvar XLSFillPattern = [\n\tnull,\n\t'solid',\n\t'mediumGray',\n\t'darkGray',\n\t'lightGray',\n\t'darkHorizontal',\n\t'darkVertical',\n\t'darkDown',\n\t'darkUp',\n\t'darkGrid',\n\t'darkTrellis',\n\t'lightHorizontal',\n\t'lightVertical',\n\t'lightDown',\n\t'lightUp',\n\t'lightGrid',\n\t'lightTrellis',\n\t'gray125',\n\t'gray0625'\n];\n\nfunction rgbify(arr/*:Array<number>*/)/*:Array<[number, number, number]>*/ { return arr.map(function(x) { return [(x>>16)&255,(x>>8)&255,x&255]; }); }\n\n/* [MS-XLS] 2.5.161 */\n/* [MS-XLSB] 2.5.75 Icv */\nvar _XLSIcv = /*#__PURE__*/ rgbify([\n\t/* Color Constants */\n\t0x000000,\n\t0xFFFFFF,\n\t0xFF0000,\n\t0x00FF00,\n\t0x0000FF,\n\t0xFFFF00,\n\t0xFF00FF,\n\t0x00FFFF,\n\n\t/* Overridable Defaults */\n\t0x000000,\n\t0xFFFFFF,\n\t0xFF0000,\n\t0x00FF00,\n\t0x0000FF,\n\t0xFFFF00,\n\t0xFF00FF,\n\t0x00FFFF,\n\n\t0x800000,\n\t0x008000,\n\t0x000080,\n\t0x808000,\n\t0x800080,\n\t0x008080,\n\t0xC0C0C0,\n\t0x808080,\n\t0x9999FF,\n\t0x993366,\n\t0xFFFFCC,\n\t0xCCFFFF,\n\t0x660066,\n\t0xFF8080,\n\t0x0066CC,\n\t0xCCCCFF,\n\n\t0x000080,\n\t0xFF00FF,\n\t0xFFFF00,\n\t0x00FFFF,\n\t0x800080,\n\t0x800000,\n\t0x008080,\n\t0x0000FF,\n\t0x00CCFF,\n\t0xCCFFFF,\n\t0xCCFFCC,\n\t0xFFFF99,\n\t0x99CCFF,\n\t0xFF99CC,\n\t0xCC99FF,\n\t0xFFCC99,\n\n\t0x3366FF,\n\t0x33CCCC,\n\t0x99CC00,\n\t0xFFCC00,\n\t0xFF9900,\n\t0xFF6600,\n\t0x666699,\n\t0x969696,\n\t0x003366,\n\t0x339966,\n\t0x003300,\n\t0x333300,\n\t0x993300,\n\t0x993366,\n\t0x333399,\n\t0x333333,\n\n\t/* Other entries to appease BIFF8/12 */\n\t0x000000, /* 0x40 icvForeground ?? */\n\t0xFFFFFF, /* 0x41 icvBackground ?? */\n\t0x000000, /* 0x42 icvFrame ?? */\n\t0x000000, /* 0x43 icv3D ?? */\n\t0x000000, /* 0x44 icv3DText ?? */\n\t0x000000, /* 0x45 icv3DHilite ?? */\n\t0x000000, /* 0x46 icv3DShadow ?? */\n\t0x000000, /* 0x47 icvHilite ?? */\n\t0x000000, /* 0x48 icvCtlText ?? */\n\t0x000000, /* 0x49 icvCtlScrl ?? */\n\t0x000000, /* 0x4A icvCtlInv ?? */\n\t0x000000, /* 0x4B icvCtlBody ?? */\n\t0x000000, /* 0x4C icvCtlFrame ?? */\n\t0x000000, /* 0x4D icvCtlFore ?? */\n\t0x000000, /* 0x4E icvCtlBack ?? */\n\t0x000000, /* 0x4F icvCtlNeutral */\n\t0x000000, /* 0x50 icvInfoBk ?? */\n\t0x000000 /* 0x51 icvInfoText ?? */\n]);\nvar XLSIcv = /*#__PURE__*/dup(_XLSIcv);\n\n/* [MS-XLSB] 2.5.97.2 */\nvar BErr = {\n\t/*::[*/0x00/*::]*/: \"#NULL!\",\n\t/*::[*/0x07/*::]*/: \"#DIV/0!\",\n\t/*::[*/0x0F/*::]*/: \"#VALUE!\",\n\t/*::[*/0x17/*::]*/: \"#REF!\",\n\t/*::[*/0x1D/*::]*/: \"#NAME?\",\n\t/*::[*/0x24/*::]*/: \"#NUM!\",\n\t/*::[*/0x2A/*::]*/: \"#N/A\",\n\t/*::[*/0x2B/*::]*/: \"#GETTING_DATA\",\n\t/*::[*/0xFF/*::]*/: \"#WTF?\"\n};\n//var RBErr = evert_num(BErr);\nvar RBErr = {\n\t\"#NULL!\":        0x00,\n\t\"#DIV/0!\":       0x07,\n\t\"#VALUE!\":       0x0F,\n\t\"#REF!\":         0x17,\n\t\"#NAME?\":        0x1D,\n\t\"#NUM!\":         0x24,\n\t\"#N/A\":          0x2A,\n\t\"#GETTING_DATA\": 0x2B,\n\t\"#WTF?\":         0xFF\n};\n\nvar XLSLblBuiltIn = [\n\t\"_xlnm.Consolidate_Area\",\n\t\"_xlnm.Auto_Open\",\n\t\"_xlnm.Auto_Close\",\n\t\"_xlnm.Extract\",\n\t\"_xlnm.Database\",\n\t\"_xlnm.Criteria\",\n\t\"_xlnm.Print_Area\",\n\t\"_xlnm.Print_Titles\",\n\t\"_xlnm.Recorder\",\n\t\"_xlnm.Data_Form\",\n\t\"_xlnm.Auto_Activate\",\n\t\"_xlnm.Auto_Deactivate\",\n\t\"_xlnm.Sheet_Title\",\n\t\"_xlnm._FilterDatabase\"\n];\n\n/* Parts enumerated in OPC spec, MS-XLSB and MS-XLSX */\n/* 12.3 Part Summary <SpreadsheetML> */\n/* 14.2 Part Summary <DrawingML> */\n/* [MS-XLSX] 2.1 Part Enumerations ; [MS-XLSB] 2.1.7 Part Enumeration */\nvar ct2type/*{[string]:string}*/ = ({\n\t/* Workbook */\n\t\"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet.main+xml\": \"workbooks\",\n\t\"application/vnd.ms-excel.sheet.macroEnabled.main+xml\": \"workbooks\",\n\t\"application/vnd.ms-excel.sheet.binary.macroEnabled.main\": \"workbooks\",\n\t\"application/vnd.ms-excel.addin.macroEnabled.main+xml\": \"workbooks\",\n\t\"application/vnd.openxmlformats-officedocument.spreadsheetml.template.main+xml\": \"workbooks\",\n\n\t/* Worksheet */\n\t\"application/vnd.openxmlformats-officedocument.spreadsheetml.worksheet+xml\": \"sheets\",\n\t\"application/vnd.ms-excel.worksheet\": \"sheets\",\n\t\"application/vnd.ms-excel.binIndexWs\": \"TODO\", /* Binary Index */\n\n\t/* Chartsheet */\n\t\"application/vnd.openxmlformats-officedocument.spreadsheetml.chartsheet+xml\": \"charts\",\n\t\"application/vnd.ms-excel.chartsheet\": \"charts\",\n\n\t/* Macrosheet */\n\t\"application/vnd.ms-excel.macrosheet+xml\": \"macros\",\n\t\"application/vnd.ms-excel.macrosheet\": \"macros\",\n\t\"application/vnd.ms-excel.intlmacrosheet\": \"TODO\",\n\t\"application/vnd.ms-excel.binIndexMs\": \"TODO\", /* Binary Index */\n\n\t/* Dialogsheet */\n\t\"application/vnd.openxmlformats-officedocument.spreadsheetml.dialogsheet+xml\": \"dialogs\",\n\t\"application/vnd.ms-excel.dialogsheet\": \"dialogs\",\n\n\t/* Shared Strings */\n\t\"application/vnd.openxmlformats-officedocument.spreadsheetml.sharedStrings+xml\": \"strs\",\n\t\"application/vnd.ms-excel.sharedStrings\": \"strs\",\n\n\t/* Styles */\n\t\"application/vnd.openxmlformats-officedocument.spreadsheetml.styles+xml\": \"styles\",\n\t\"application/vnd.ms-excel.styles\": \"styles\",\n\n\t/* File Properties */\n\t\"application/vnd.openxmlformats-package.core-properties+xml\": \"coreprops\",\n\t\"application/vnd.openxmlformats-officedocument.custom-properties+xml\": \"custprops\",\n\t\"application/vnd.openxmlformats-officedocument.extended-properties+xml\": \"extprops\",\n\n\t/* Custom Data Properties */\n\t\"application/vnd.openxmlformats-officedocument.customXmlProperties+xml\": \"TODO\",\n\t\"application/vnd.openxmlformats-officedocument.spreadsheetml.customProperty\": \"TODO\",\n\n\t/* Comments */\n\t\"application/vnd.openxmlformats-officedocument.spreadsheetml.comments+xml\": \"comments\",\n\t\"application/vnd.ms-excel.comments\": \"comments\",\n\t\"application/vnd.ms-excel.threadedcomments+xml\": \"threadedcomments\",\n\t\"application/vnd.ms-excel.person+xml\": \"people\",\n\n\t/* Metadata (Stock/Geography and Dynamic Array) */\n\t\"application/vnd.openxmlformats-officedocument.spreadsheetml.sheetMetadata+xml\": \"metadata\",\n\t\"application/vnd.ms-excel.sheetMetadata\": \"metadata\",\n\n\t/* PivotTable */\n\t\"application/vnd.ms-excel.pivotTable\": \"TODO\",\n\t\"application/vnd.openxmlformats-officedocument.spreadsheetml.pivotTable+xml\": \"TODO\",\n\n\t/* Chart Objects */\n\t\"application/vnd.openxmlformats-officedocument.drawingml.chart+xml\": \"TODO\",\n\n\t/* Chart Colors */\n\t\"application/vnd.ms-office.chartcolorstyle+xml\": \"TODO\",\n\n\t/* Chart Style */\n\t\"application/vnd.ms-office.chartstyle+xml\": \"TODO\",\n\n\t/* Chart Advanced */\n\t\"application/vnd.ms-office.chartex+xml\": \"TODO\",\n\n\t/* Calculation Chain */\n\t\"application/vnd.ms-excel.calcChain\": \"calcchains\",\n\t\"application/vnd.openxmlformats-officedocument.spreadsheetml.calcChain+xml\": \"calcchains\",\n\n\t/* Printer Settings */\n\t\"application/vnd.openxmlformats-officedocument.spreadsheetml.printerSettings\": \"TODO\",\n\n\t/* ActiveX */\n\t\"application/vnd.ms-office.activeX\": \"TODO\",\n\t\"application/vnd.ms-office.activeX+xml\": \"TODO\",\n\n\t/* Custom Toolbars */\n\t\"application/vnd.ms-excel.attachedToolbars\": \"TODO\",\n\n\t/* External Data Connections */\n\t\"application/vnd.ms-excel.connections\": \"TODO\",\n\t\"application/vnd.openxmlformats-officedocument.spreadsheetml.connections+xml\": \"TODO\",\n\n\t/* External Links */\n\t\"application/vnd.ms-excel.externalLink\": \"links\",\n\t\"application/vnd.openxmlformats-officedocument.spreadsheetml.externalLink+xml\": \"links\",\n\n\t/* PivotCache */\n\t\"application/vnd.ms-excel.pivotCacheDefinition\": \"TODO\",\n\t\"application/vnd.ms-excel.pivotCacheRecords\": \"TODO\",\n\t\"application/vnd.openxmlformats-officedocument.spreadsheetml.pivotCacheDefinition+xml\": \"TODO\",\n\t\"application/vnd.openxmlformats-officedocument.spreadsheetml.pivotCacheRecords+xml\": \"TODO\",\n\n\t/* Query Table */\n\t\"application/vnd.ms-excel.queryTable\": \"TODO\",\n\t\"application/vnd.openxmlformats-officedocument.spreadsheetml.queryTable+xml\": \"TODO\",\n\n\t/* Shared Workbook */\n\t\"application/vnd.ms-excel.userNames\": \"TODO\",\n\t\"application/vnd.ms-excel.revisionHeaders\": \"TODO\",\n\t\"application/vnd.ms-excel.revisionLog\": \"TODO\",\n\t\"application/vnd.openxmlformats-officedocument.spreadsheetml.revisionHeaders+xml\": \"TODO\",\n\t\"application/vnd.openxmlformats-officedocument.spreadsheetml.revisionLog+xml\": \"TODO\",\n\t\"application/vnd.openxmlformats-officedocument.spreadsheetml.userNames+xml\": \"TODO\",\n\n\t/* Single Cell Table */\n\t\"application/vnd.ms-excel.tableSingleCells\": \"TODO\",\n\t\"application/vnd.openxmlformats-officedocument.spreadsheetml.tableSingleCells+xml\": \"TODO\",\n\n\t/* Slicer */\n\t\"application/vnd.ms-excel.slicer\": \"TODO\",\n\t\"application/vnd.ms-excel.slicerCache\": \"TODO\",\n\t\"application/vnd.ms-excel.slicer+xml\": \"TODO\",\n\t\"application/vnd.ms-excel.slicerCache+xml\": \"TODO\",\n\n\t/* Sort Map */\n\t\"application/vnd.ms-excel.wsSortMap\": \"TODO\",\n\n\t/* Table */\n\t\"application/vnd.ms-excel.table\": \"TODO\",\n\t\"application/vnd.openxmlformats-officedocument.spreadsheetml.table+xml\": \"TODO\",\n\n\t/* Themes */\n\t\"application/vnd.openxmlformats-officedocument.theme+xml\": \"themes\",\n\n\t/* Theme Override */\n\t\"application/vnd.openxmlformats-officedocument.themeOverride+xml\": \"TODO\",\n\n\t/* Timeline */\n\t\"application/vnd.ms-excel.Timeline+xml\": \"TODO\", /* verify */\n\t\"application/vnd.ms-excel.TimelineCache+xml\": \"TODO\", /* verify */\n\n\t/* VBA */\n\t\"application/vnd.ms-office.vbaProject\": \"vba\",\n\t\"application/vnd.ms-office.vbaProjectSignature\": \"TODO\",\n\n\t/* Volatile Dependencies */\n\t\"application/vnd.ms-office.volatileDependencies\": \"TODO\",\n\t\"application/vnd.openxmlformats-officedocument.spreadsheetml.volatileDependencies+xml\": \"TODO\",\n\n\t/* Control Properties */\n\t\"application/vnd.ms-excel.controlproperties+xml\": \"TODO\",\n\n\t/* Data Model */\n\t\"application/vnd.openxmlformats-officedocument.model+data\": \"TODO\",\n\n\t/* Survey */\n\t\"application/vnd.ms-excel.Survey+xml\": \"TODO\",\n\n\t/* Drawing */\n\t\"application/vnd.openxmlformats-officedocument.drawing+xml\": \"drawings\",\n\t\"application/vnd.openxmlformats-officedocument.drawingml.chartshapes+xml\": \"TODO\",\n\t\"application/vnd.openxmlformats-officedocument.drawingml.diagramColors+xml\": \"TODO\",\n\t\"application/vnd.openxmlformats-officedocument.drawingml.diagramData+xml\": \"TODO\",\n\t\"application/vnd.openxmlformats-officedocument.drawingml.diagramLayout+xml\": \"TODO\",\n\t\"application/vnd.openxmlformats-officedocument.drawingml.diagramStyle+xml\": \"TODO\",\n\n\t/* VML */\n\t\"application/vnd.openxmlformats-officedocument.vmlDrawing\": \"TODO\",\n\n\t\"application/vnd.openxmlformats-package.relationships+xml\": \"rels\",\n\t\"application/vnd.openxmlformats-officedocument.oleObject\": \"TODO\",\n\n\t/* Image */\n\t\"image/png\": \"TODO\",\n\n\t\"sheet\": \"js\"\n}/*:any*/);\n\nvar CT_LIST = {\n\tworkbooks: {\n\t\txlsx: \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet.main+xml\",\n\t\txlsm: \"application/vnd.ms-excel.sheet.macroEnabled.main+xml\",\n\t\txlsb: \"application/vnd.ms-excel.sheet.binary.macroEnabled.main\",\n\t\txlam: \"application/vnd.ms-excel.addin.macroEnabled.main+xml\",\n\t\txltx: \"application/vnd.openxmlformats-officedocument.spreadsheetml.template.main+xml\"\n\t},\n\tstrs: { /* Shared Strings */\n\t\txlsx: \"application/vnd.openxmlformats-officedocument.spreadsheetml.sharedStrings+xml\",\n\t\txlsb: \"application/vnd.ms-excel.sharedStrings\"\n\t},\n\tcomments: { /* Comments */\n\t\txlsx: \"application/vnd.openxmlformats-officedocument.spreadsheetml.comments+xml\",\n\t\txlsb: \"application/vnd.ms-excel.comments\"\n\t},\n\tsheets: { /* Worksheet */\n\t\txlsx: \"application/vnd.openxmlformats-officedocument.spreadsheetml.worksheet+xml\",\n\t\txlsb: \"application/vnd.ms-excel.worksheet\"\n\t},\n\tcharts: { /* Chartsheet */\n\t\txlsx: \"application/vnd.openxmlformats-officedocument.spreadsheetml.chartsheet+xml\",\n\t\txlsb: \"application/vnd.ms-excel.chartsheet\"\n\t},\n\tdialogs: { /* Dialogsheet */\n\t\txlsx: \"application/vnd.openxmlformats-officedocument.spreadsheetml.dialogsheet+xml\",\n\t\txlsb: \"application/vnd.ms-excel.dialogsheet\"\n\t},\n\tmacros: { /* Macrosheet (Excel 4.0 Macros) */\n\t\txlsx: \"application/vnd.ms-excel.macrosheet+xml\",\n\t\txlsb: \"application/vnd.ms-excel.macrosheet\"\n\t},\n\tmetadata: { /* Metadata (Stock/Geography and Dynamic Array) */\n\t\txlsx: \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheetMetadata+xml\",\n\t\txlsb: \"application/vnd.ms-excel.sheetMetadata\"\n\t},\n\tstyles: { /* Styles */\n\t\txlsx: \"application/vnd.openxmlformats-officedocument.spreadsheetml.styles+xml\",\n\t\txlsb: \"application/vnd.ms-excel.styles\"\n\t}\n};\n\nfunction new_ct()/*:any*/ {\n\treturn ({\n\t\tworkbooks:[], sheets:[], charts:[], dialogs:[], macros:[],\n\t\trels:[], strs:[], comments:[], threadedcomments:[], links:[],\n\t\tcoreprops:[], extprops:[], custprops:[], themes:[], styles:[],\n\t\tcalcchains:[], vba: [], drawings: [], metadata: [], people:[],\n\t\tTODO:[], xmlns: \"\" }/*:any*/);\n}\n\nfunction parse_ct(data/*:?string*/) {\n\tvar ct = new_ct();\n\tif(!data || !data.match) return ct;\n\tvar ctext = {};\n\t(data.match(tagregex)||[]).forEach(function(x) {\n\t\tvar y = parsexmltag(x);\n\t\tswitch(y[0].replace(nsregex,\"<\")) {\n\t\t\tcase '<?xml': break;\n\t\t\tcase '<Types': ct.xmlns = y['xmlns' + (y[0].match(/<(\\w+):/)||[\"\",\"\"])[1] ]; break;\n\t\t\tcase '<Default': ctext[y.Extension.toLowerCase()] = y.ContentType; break;\n\t\t\tcase '<Override':\n\t\t\t\tif(ct[ct2type[y.ContentType]] !== undefined) ct[ct2type[y.ContentType]].push(y.PartName);\n\t\t\t\tbreak;\n\t\t}\n\t});\n\tif(ct.xmlns !== XMLNS.CT) throw new Error(\"Unknown Namespace: \" + ct.xmlns);\n\tct.calcchain = ct.calcchains.length > 0 ? ct.calcchains[0] : \"\";\n\tct.sst = ct.strs.length > 0 ? ct.strs[0] : \"\";\n\tct.style = ct.styles.length > 0 ? ct.styles[0] : \"\";\n\tct.defaults = ctext;\n\tdelete ct.calcchains;\n\treturn ct;\n}\n\nfunction write_ct(ct, opts, raw)/*:string*/ {\n\tvar type2ct/*{[string]:Array<string>}*/ = evert_arr(ct2type);\n\n\tvar o/*:Array<string>*/ = [], v;\n\n\tif(!raw) {\n\t\to[o.length] = (XML_HEADER);\n\t\to[o.length] = writextag('Types', null, {\n\t\t\t'xmlns': XMLNS.CT,\n\t\t\t'xmlns:xsd': XMLNS.xsd,\n\t\t\t'xmlns:xsi': XMLNS.xsi\n\t\t});\n\t\to = o.concat([\n\t\t\t['xml', 'application/xml'],\n\t\t\t['bin', 'application/vnd.ms-excel.sheet.binary.macroEnabled.main'],\n\t\t\t['vml', 'application/vnd.openxmlformats-officedocument.vmlDrawing'],\n\t\t\t['data', 'application/vnd.openxmlformats-officedocument.model+data'],\n\t\t\t/* from test files */\n\t\t\t['bmp', 'image/bmp'],\n\t\t\t['png', 'image/png'],\n\t\t\t['gif', 'image/gif'],\n\t\t\t['emf', 'image/x-emf'],\n\t\t\t['wmf', 'image/x-wmf'],\n\t\t\t['jpg', 'image/jpeg'], ['jpeg', 'image/jpeg'],\n\t\t\t['tif', 'image/tiff'], ['tiff', 'image/tiff'],\n\t\t\t['pdf', 'application/pdf'],\n\t\t\t['rels', 'application/vnd.openxmlformats-package.relationships+xml']\n\t\t].map(function(x) {\n\t\t\treturn writextag('Default', null, {'Extension':x[0], 'ContentType': x[1]});\n\t\t}));\n\t}\n\n\t/* only write first instance */\n\tvar f1 = function(w) {\n\t\tif(ct[w] && ct[w].length > 0) {\n\t\t\tv = ct[w][0];\n\t\t\to[o.length] = (writextag('Override', null, {\n\t\t\t\t'PartName': (v[0] == '/' ? \"\":\"/\") + v,\n\t\t\t\t'ContentType': CT_LIST[w][opts.bookType] || CT_LIST[w]['xlsx']\n\t\t\t}));\n\t\t}\n\t};\n\n\t/* book type-specific */\n\tvar f2 = function(w) {\n\t\t(ct[w]||[]).forEach(function(v) {\n\t\t\to[o.length] = (writextag('Override', null, {\n\t\t\t\t'PartName': (v[0] == '/' ? \"\":\"/\") + v,\n\t\t\t\t'ContentType': CT_LIST[w][opts.bookType] || CT_LIST[w]['xlsx']\n\t\t\t}));\n\t\t});\n\t};\n\n\t/* standard type */\n\tvar f3 = function(t) {\n\t\t(ct[t]||[]).forEach(function(v) {\n\t\t\to[o.length] = (writextag('Override', null, {\n\t\t\t\t'PartName': (v[0] == '/' ? \"\":\"/\") + v,\n\t\t\t\t'ContentType': type2ct[t][0]\n\t\t\t}));\n\t\t});\n\t};\n\n\tf1('workbooks');\n\tf2('sheets');\n\tf2('charts');\n\tf3('themes');\n\t['strs', 'styles'].forEach(f1);\n\t['coreprops', 'extprops', 'custprops'].forEach(f3);\n\tf3('vba');\n\tf3('comments');\n\tf3('threadedcomments');\n\tf3('drawings');\n\tf2('metadata');\n\tf3('people');\n\tif(!raw && o.length>2){ o[o.length] = ('</Types>'); o[1]=o[1].replace(\"/>\",\">\"); }\n\treturn o.join(\"\");\n}\n/* 9.3 Relationships */\nvar RELS = ({\n\tWB: \"http://schemas.openxmlformats.org/officeDocument/2006/relationships/officeDocument\",\n\tSHEET: \"http://sheetjs.openxmlformats.org/officeDocument/2006/relationships/officeDocument\",\n\tHLINK: \"http://schemas.openxmlformats.org/officeDocument/2006/relationships/hyperlink\",\n\tVML: \"http://schemas.openxmlformats.org/officeDocument/2006/relationships/vmlDrawing\",\n\tXPATH: \"http://schemas.openxmlformats.org/officeDocument/2006/relationships/externalLinkPath\",\n\tXMISS: \"http://schemas.microsoft.com/office/2006/relationships/xlExternalLinkPath/xlPathMissing\",\n\tXLINK: \"http://schemas.openxmlformats.org/officeDocument/2006/relationships/externalLink\",\n\tCXML: \"http://schemas.openxmlformats.org/officeDocument/2006/relationships/customXml\",\n\tCXMLP: \"http://schemas.openxmlformats.org/officeDocument/2006/relationships/customXmlProps\",\n\tCMNT: \"http://schemas.openxmlformats.org/officeDocument/2006/relationships/comments\",\n\tCORE_PROPS: \"http://schemas.openxmlformats.org/package/2006/relationships/metadata/core-properties\",\n\tEXT_PROPS: 'http://schemas.openxmlformats.org/officeDocument/2006/relationships/extended-properties',\n\tCUST_PROPS: 'http://schemas.openxmlformats.org/officeDocument/2006/relationships/custom-properties',\n\tSST: \"http://schemas.openxmlformats.org/officeDocument/2006/relationships/sharedStrings\",\n\tSTY: \"http://schemas.openxmlformats.org/officeDocument/2006/relationships/styles\",\n\tTHEME: \"http://schemas.openxmlformats.org/officeDocument/2006/relationships/theme\",\n\tCHART: \"http://schemas.openxmlformats.org/officeDocument/2006/relationships/chart\",\n\tCHARTEX: \"http://schemas.microsoft.com/office/2014/relationships/chartEx\",\n\tCS: \"http://schemas.openxmlformats.org/officeDocument/2006/relationships/chartsheet\",\n\tWS: [\n\t\t\"http://schemas.openxmlformats.org/officeDocument/2006/relationships/worksheet\",\n\t\t\"http://purl.oclc.org/ooxml/officeDocument/relationships/worksheet\"\n\t],\n\tDS: \"http://schemas.openxmlformats.org/officeDocument/2006/relationships/dialogsheet\",\n\tMS: \"http://schemas.microsoft.com/office/2006/relationships/xlMacrosheet\",\n\tIMG: \"http://schemas.openxmlformats.org/officeDocument/2006/relationships/image\",\n\tDRAW: \"http://schemas.openxmlformats.org/officeDocument/2006/relationships/drawing\",\n\tXLMETA: \"http://schemas.openxmlformats.org/officeDocument/2006/relationships/sheetMetadata\",\n\tTCMNT: \"http://schemas.microsoft.com/office/2017/10/relationships/threadedComment\",\n\tPEOPLE: \"http://schemas.microsoft.com/office/2017/10/relationships/person\",\n\tCONN: \"http://schemas.openxmlformats.org/officeDocument/2006/relationships/connections\",\n\tVBA: \"http://schemas.microsoft.com/office/2006/relationships/vbaProject\"\n}/*:any*/);\n\n/* 9.3.3 Representing Relationships */\nfunction get_rels_path(file/*:string*/)/*:string*/ {\n\tvar n = file.lastIndexOf(\"/\");\n\treturn file.slice(0,n+1) + '_rels/' + file.slice(n+1) + \".rels\";\n}\n\nfunction parse_rels(data/*:?string*/, currentFilePath/*:string*/) {\n\tvar rels = {\"!id\":{}};\n\tif (!data) return rels;\n\tif (currentFilePath.charAt(0) !== '/') {\n\t\tcurrentFilePath = '/'+currentFilePath;\n\t}\n\tvar hash = {};\n\n\t(data.match(tagregex)||[]).forEach(function(x) {\n\t\tvar y = parsexmltag(x);\n\t\t/* 9.3.2.2 OPC_Relationships */\n\t\tif (y[0] === '<Relationship') {\n\t\t\tvar rel = {}; rel.Type = y.Type; rel.Target = unescapexml(y.Target); rel.Id = y.Id; if(y.TargetMode) rel.TargetMode = y.TargetMode;\n\t\t\tvar canonictarget = y.TargetMode === 'External' ? y.Target : resolve_path(y.Target, currentFilePath);\n\t\t\trels[canonictarget] = rel;\n\t\t\thash[y.Id] = rel;\n\t\t}\n\t});\n\trels[\"!id\"] = hash;\n\treturn rels;\n}\n\n\n/* TODO */\nfunction write_rels(rels)/*:string*/ {\n\tvar o = [XML_HEADER, writextag('Relationships', null, {\n\t\t//'xmlns:ns0': XMLNS.RELS,\n\t\t'xmlns': XMLNS.RELS\n\t})];\n\tkeys(rels['!id']).forEach(function(rid) {\n\t\to[o.length] = (writextag('Relationship', null, rels['!id'][rid]));\n\t});\n\tif(o.length>2){ o[o.length] = ('</Relationships>'); o[1]=o[1].replace(\"/>\",\">\"); }\n\treturn o.join(\"\");\n}\n\nfunction add_rels(rels, rId/*:number*/, f, type, relobj, targetmode/*:?string*/)/*:number*/ {\n\tif(!relobj) relobj = {};\n\tif(!rels['!id']) rels['!id'] = {};\n\tif(!rels['!idx']) rels['!idx'] = 1;\n\tif(rId < 0) for(rId = rels['!idx']; rels['!id']['rId' + rId]; ++rId){/* empty */}\n\trels['!idx'] = rId + 1;\n\trelobj.Id = 'rId' + rId;\n\trelobj.Type = type;\n\trelobj.Target = f;\n\tif(targetmode) relobj.TargetMode = targetmode;\n\telse if([RELS.HLINK, RELS.XPATH, RELS.XMISS].indexOf(relobj.Type) > -1) relobj.TargetMode = \"External\";\n\tif(rels['!id'][relobj.Id]) throw new Error(\"Cannot rewrite rId \" + rId);\n\trels['!id'][relobj.Id] = relobj;\n\trels[('/' + relobj.Target).replace(\"//\",\"/\")] = relobj;\n\treturn rId;\n}\nvar CT_ODS = \"application/vnd.oasis.opendocument.spreadsheet\";\nfunction parse_manifest(d, opts) {\n  var str = xlml_normalize(d);\n  var Rn;\n  var FEtag;\n  while (Rn = xlmlregex.exec(str))\n    switch (Rn[3]) {\n      case \"manifest\":\n        break;\n      case \"file-entry\":\n        FEtag = parsexmltag(Rn[0], false);\n        if (FEtag.path == \"/\" && FEtag.type !== CT_ODS)\n          throw new Error(\"This OpenDocument is not a spreadsheet\");\n        break;\n      case \"encryption-data\":\n      case \"algorithm\":\n      case \"start-key-generation\":\n      case \"key-derivation\":\n        throw new Error(\"Unsupported ODS Encryption\");\n      default:\n        if (opts && opts.WTF)\n          throw Rn;\n    }\n}\nfunction write_manifest(manifest) {\n  var o = [XML_HEADER];\n  o.push('<manifest:manifest xmlns:manifest=\"urn:oasis:names:tc:opendocument:xmlns:manifest:1.0\" manifest:version=\"1.2\">\\n');\n  o.push('  <manifest:file-entry manifest:full-path=\"/\" manifest:version=\"1.2\" manifest:media-type=\"application/vnd.oasis.opendocument.spreadsheet\"/>\\n');\n  for (var i = 0; i < manifest.length; ++i)\n    o.push('  <manifest:file-entry manifest:full-path=\"' + manifest[i][0] + '\" manifest:media-type=\"' + manifest[i][1] + '\"/>\\n');\n  o.push(\"</manifest:manifest>\");\n  return o.join(\"\");\n}\nfunction write_rdf_type(file, res, tag) {\n  return [\n    '  <rdf:Description rdf:about=\"' + file + '\">\\n',\n    '    <rdf:type rdf:resource=\"http://docs.oasis-open.org/ns/office/1.2/meta/' + (tag || \"odf\") + \"#\" + res + '\"/>\\n',\n    \"  </rdf:Description>\\n\"\n  ].join(\"\");\n}\nfunction write_rdf_has(base, file) {\n  return [\n    '  <rdf:Description rdf:about=\"' + base + '\">\\n',\n    '    <ns0:hasPart xmlns:ns0=\"http://docs.oasis-open.org/ns/office/1.2/meta/pkg#\" rdf:resource=\"' + file + '\"/>\\n',\n    \"  </rdf:Description>\\n\"\n  ].join(\"\");\n}\nfunction write_rdf(rdf) {\n  var o = [XML_HEADER];\n  o.push('<rdf:RDF xmlns:rdf=\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\">\\n');\n  for (var i = 0; i != rdf.length; ++i) {\n    o.push(write_rdf_type(rdf[i][0], rdf[i][1]));\n    o.push(write_rdf_has(\"\", rdf[i][0]));\n  }\n  o.push(write_rdf_type(\"\", \"Document\", \"pkg\"));\n  o.push(\"</rdf:RDF>\");\n  return o.join(\"\");\n}\nfunction write_meta_ods(wb, opts) {\n  return '<office:document-meta xmlns:office=\"urn:oasis:names:tc:opendocument:xmlns:office:1.0\" xmlns:meta=\"urn:oasis:names:tc:opendocument:xmlns:meta:1.0\" xmlns:dc=\"http://purl.org/dc/elements/1.1/\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" office:version=\"1.2\"><office:meta><meta:generator>SheetJS ' + XLSX.version + \"</meta:generator></office:meta></office:document-meta>\";\n}\n/* ECMA-376 Part II 11.1 Core Properties Part */\n/* [MS-OSHARED] 2.3.3.2.[1-2].1 (PIDSI/PIDDSI) */\nvar CORE_PROPS/*:Array<Array<string> >*/ = [\n\t[\"cp:category\", \"Category\"],\n\t[\"cp:contentStatus\", \"ContentStatus\"],\n\t[\"cp:keywords\", \"Keywords\"],\n\t[\"cp:lastModifiedBy\", \"LastAuthor\"],\n\t[\"cp:lastPrinted\", \"LastPrinted\"],\n\t[\"cp:revision\", \"RevNumber\"],\n\t[\"cp:version\", \"Version\"],\n\t[\"dc:creator\", \"Author\"],\n\t[\"dc:description\", \"Comments\"],\n\t[\"dc:identifier\", \"Identifier\"],\n\t[\"dc:language\", \"Language\"],\n\t[\"dc:subject\", \"Subject\"],\n\t[\"dc:title\", \"Title\"],\n\t[\"dcterms:created\", \"CreatedDate\", 'date'],\n\t[\"dcterms:modified\", \"ModifiedDate\", 'date']\n];\n\nvar CORE_PROPS_REGEX/*:Array<RegExp>*/ = /*#__PURE__*/(function() {\n\tvar r = new Array(CORE_PROPS.length);\n\tfor(var i = 0; i < CORE_PROPS.length; ++i) {\n\t\tvar f = CORE_PROPS[i];\n\t\tvar g = \"(?:\"+ f[0].slice(0,f[0].indexOf(\":\")) +\":)\"+ f[0].slice(f[0].indexOf(\":\")+1);\n\t\tr[i] = new RegExp(\"<\" + g + \"[^>]*>([\\\\s\\\\S]*?)<\\/\" + g + \">\");\n\t}\n\treturn r;\n})();\n\nfunction parse_core_props(data) {\n\tvar p = {};\n\tdata = utf8read(data);\n\n\tfor(var i = 0; i < CORE_PROPS.length; ++i) {\n\t\tvar f = CORE_PROPS[i], cur = data.match(CORE_PROPS_REGEX[i]);\n\t\tif(cur != null && cur.length > 0) p[f[1]] = unescapexml(cur[1]);\n\t\tif(f[2] === 'date' && p[f[1]]) p[f[1]] = parseDate(p[f[1]]);\n\t}\n\n\treturn p;\n}\n\nfunction cp_doit(f, g, h, o, p) {\n\tif(p[f] != null || g == null || g === \"\") return;\n\tp[f] = g;\n\tg = escapexml(g);\n\to[o.length] = (h ? writextag(f,g,h) : writetag(f,g));\n}\n\nfunction write_core_props(cp, _opts) {\n\tvar opts = _opts || {};\n\tvar o = [XML_HEADER, writextag('cp:coreProperties', null, {\n\t\t//'xmlns': XMLNS.CORE_PROPS,\n\t\t'xmlns:cp': XMLNS.CORE_PROPS,\n\t\t'xmlns:dc': XMLNS.dc,\n\t\t'xmlns:dcterms': XMLNS.dcterms,\n\t\t'xmlns:dcmitype': XMLNS.dcmitype,\n\t\t'xmlns:xsi': XMLNS.xsi\n\t})], p = {};\n\tif(!cp && !opts.Props) return o.join(\"\");\n\n\tif(cp) {\n\t\tif(cp.CreatedDate != null) cp_doit(\"dcterms:created\", typeof cp.CreatedDate === \"string\" ? cp.CreatedDate : write_w3cdtf(cp.CreatedDate, opts.WTF), {\"xsi:type\":\"dcterms:W3CDTF\"}, o, p);\n\t\tif(cp.ModifiedDate != null) cp_doit(\"dcterms:modified\", typeof cp.ModifiedDate === \"string\" ? cp.ModifiedDate : write_w3cdtf(cp.ModifiedDate, opts.WTF), {\"xsi:type\":\"dcterms:W3CDTF\"}, o, p);\n\t}\n\n\tfor(var i = 0; i != CORE_PROPS.length; ++i) {\n\t\tvar f = CORE_PROPS[i];\n\t\tvar v = opts.Props && opts.Props[f[1]] != null ? opts.Props[f[1]] : cp ? cp[f[1]] : null;\n\t\tif(v === true) v = \"1\";\n\t\telse if(v === false) v = \"0\";\n\t\telse if(typeof v == \"number\") v = String(v);\n\t\tif(v != null) cp_doit(f[0], v, null, o, p);\n\t}\n\tif(o.length>2){ o[o.length] = ('</cp:coreProperties>'); o[1]=o[1].replace(\"/>\",\">\"); }\n\treturn o.join(\"\");\n}\n/* 15.2.12.3 Extended File Properties Part */\n/* [MS-OSHARED] 2.3.3.2.[1-2].1 (PIDSI/PIDDSI) */\nvar EXT_PROPS/*:Array<Array<string> >*/ = [\n\t[\"Application\", \"Application\", \"string\"],\n\t[\"AppVersion\", \"AppVersion\", \"string\"],\n\t[\"Company\", \"Company\", \"string\"],\n\t[\"DocSecurity\", \"DocSecurity\", \"string\"],\n\t[\"Manager\", \"Manager\", \"string\"],\n\t[\"HyperlinksChanged\", \"HyperlinksChanged\", \"bool\"],\n\t[\"SharedDoc\", \"SharedDoc\", \"bool\"],\n\t[\"LinksUpToDate\", \"LinksUpToDate\", \"bool\"],\n\t[\"ScaleCrop\", \"ScaleCrop\", \"bool\"],\n\t[\"HeadingPairs\", \"HeadingPairs\", \"raw\"],\n\t[\"TitlesOfParts\", \"TitlesOfParts\", \"raw\"]\n];\n\nvar PseudoPropsPairs = [\n\t\"Worksheets\",  \"SheetNames\",\n\t\"NamedRanges\", \"DefinedNames\",\n\t\"Chartsheets\", \"ChartNames\"\n];\nfunction load_props_pairs(HP/*:string|Array<Array<any>>*/, TOP, props, opts) {\n\tvar v = [];\n\tif(typeof HP == \"string\") v = parseVector(HP, opts);\n\telse for(var j = 0; j < HP.length; ++j) v = v.concat(HP[j].map(function(hp) { return {v:hp}; }));\n\tvar parts = (typeof TOP == \"string\") ? parseVector(TOP, opts).map(function (x) { return x.v; }) : TOP;\n\tvar idx = 0, len = 0;\n\tif(parts.length > 0) for(var i = 0; i !== v.length; i += 2) {\n\t\tlen = +(v[i+1].v);\n\t\tswitch(v[i].v) {\n\t\t\tcase \"Worksheets\":\n\t\t\tcase \"工作表\":\n\t\t\tcase \"Листы\":\n\t\t\tcase \"أوراق العمل\":\n\t\t\tcase \"ワークシート\":\n\t\t\tcase \"גליונות עבודה\":\n\t\t\tcase \"Arbeitsblätter\":\n\t\t\tcase \"Çalışma Sayfaları\":\n\t\t\tcase \"Feuilles de calcul\":\n\t\t\tcase \"Fogli di lavoro\":\n\t\t\tcase \"Folhas de cálculo\":\n\t\t\tcase \"Planilhas\":\n\t\t\tcase \"Regneark\":\n\t\t\tcase \"Hojas de cálculo\":\n\t\t\tcase \"Werkbladen\":\n\t\t\t\tprops.Worksheets = len;\n\t\t\t\tprops.SheetNames = parts.slice(idx, idx + len);\n\t\t\t\tbreak;\n\n\t\t\tcase \"Named Ranges\":\n\t\t\tcase \"Rangos con nombre\":\n\t\t\tcase \"名前付き一覧\":\n\t\t\tcase \"Benannte Bereiche\":\n\t\t\tcase \"Navngivne områder\":\n\t\t\t\tprops.NamedRanges = len;\n\t\t\t\tprops.DefinedNames = parts.slice(idx, idx + len);\n\t\t\t\tbreak;\n\n\t\t\tcase \"Charts\":\n\t\t\tcase \"Diagramme\":\n\t\t\t\tprops.Chartsheets = len;\n\t\t\t\tprops.ChartNames = parts.slice(idx, idx + len);\n\t\t\t\tbreak;\n\t\t}\n\t\tidx += len;\n\t}\n}\n\nfunction parse_ext_props(data, p, opts) {\n\tvar q = {}; if(!p) p = {};\n\tdata = utf8read(data);\n\n\tEXT_PROPS.forEach(function(f) {\n\t\tvar xml = (data.match(matchtag(f[0]))||[])[1];\n\t\tswitch(f[2]) {\n\t\t\tcase \"string\": if(xml) p[f[1]] = unescapexml(xml); break;\n\t\t\tcase \"bool\": p[f[1]] = xml === \"true\"; break;\n\t\t\tcase \"raw\":\n\t\t\t\tvar cur = data.match(new RegExp(\"<\" + f[0] + \"[^>]*>([\\\\s\\\\S]*?)<\\/\" + f[0] + \">\"));\n\t\t\t\tif(cur && cur.length > 0) q[f[1]] = cur[1];\n\t\t\t\tbreak;\n\t\t}\n\t});\n\n\tif(q.HeadingPairs && q.TitlesOfParts) load_props_pairs(q.HeadingPairs, q.TitlesOfParts, p, opts);\n\n\treturn p;\n}\n\nfunction write_ext_props(cp/*::, opts*/)/*:string*/ {\n\tvar o/*:Array<string>*/ = [], W = writextag;\n\tif(!cp) cp = {};\n\tcp.Application = \"SheetJS\";\n\to[o.length] = (XML_HEADER);\n\to[o.length] = (writextag('Properties', null, {\n\t\t'xmlns': XMLNS.EXT_PROPS,\n\t\t'xmlns:vt': XMLNS.vt\n\t}));\n\n\tEXT_PROPS.forEach(function(f) {\n\t\tif(cp[f[1]] === undefined) return;\n\t\tvar v;\n\t\tswitch(f[2]) {\n\t\t\tcase 'string': v = escapexml(String(cp[f[1]])); break;\n\t\t\tcase 'bool': v = cp[f[1]] ? 'true' : 'false'; break;\n\t\t}\n\t\tif(v !== undefined) o[o.length] = (W(f[0], v));\n\t});\n\n\t/* TODO: HeadingPairs, TitlesOfParts */\n\to[o.length] = (W('HeadingPairs', W('vt:vector', W('vt:variant', '<vt:lpstr>Worksheets</vt:lpstr>')+W('vt:variant', W('vt:i4', String(cp.Worksheets))), {size:2, baseType:\"variant\"})));\n\to[o.length] = (W('TitlesOfParts', W('vt:vector', cp.SheetNames.map(function(s) { return \"<vt:lpstr>\" + escapexml(s) + \"</vt:lpstr>\"; }).join(\"\"), {size: cp.Worksheets, baseType:\"lpstr\"})));\n\tif(o.length>2){ o[o.length] = ('</Properties>'); o[1]=o[1].replace(\"/>\",\">\"); }\n\treturn o.join(\"\");\n}\n/* 15.2.12.2 Custom File Properties Part */\nvar custregex = /<[^>]+>[^<]*/g;\nfunction parse_cust_props(data/*:string*/, opts) {\n\tvar p = {}, name = \"\";\n\tvar m = data.match(custregex);\n\tif(m) for(var i = 0; i != m.length; ++i) {\n\t\tvar x = m[i], y = parsexmltag(x);\n\t\tswitch(strip_ns(y[0])) {\n\t\t\tcase '<?xml': break;\n\t\t\tcase '<Properties': break;\n\t\t\tcase '<property': name = unescapexml(y.name); break;\n\t\t\tcase '</property>': name = null; break;\n\t\t\tdefault: if (x.indexOf('<vt:') === 0) {\n\t\t\t\tvar toks = x.split('>');\n\t\t\t\tvar type = toks[0].slice(4), text = toks[1];\n\t\t\t\t/* 22.4.2.32 (CT_Variant). Omit the binary types from 22.4 (Variant Types) */\n\t\t\t\tswitch(type) {\n\t\t\t\t\tcase 'lpstr': case 'bstr': case 'lpwstr':\n\t\t\t\t\t\tp[name] = unescapexml(text);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'bool':\n\t\t\t\t\t\tp[name] = parsexmlbool(text);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'i1': case 'i2': case 'i4': case 'i8': case 'int': case 'uint':\n\t\t\t\t\t\tp[name] = parseInt(text, 10);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'r4': case 'r8': case 'decimal':\n\t\t\t\t\t\tp[name] = parseFloat(text);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'filetime': case 'date':\n\t\t\t\t\t\tp[name] = parseDate(text);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'cy': case 'error':\n\t\t\t\t\t\tp[name] = unescapexml(text);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tif(type.slice(-1) == '/') break;\n\t\t\t\t\t\tif(opts.WTF && typeof console !== 'undefined') console.warn('Unexpected', x, type, toks);\n\t\t\t\t}\n\t\t\t} else if(x.slice(0,2) === \"</\") {/* empty */\n\t\t\t} else if(opts.WTF) throw new Error(x);\n\t\t}\n\t}\n\treturn p;\n}\n\nfunction write_cust_props(cp/*::, opts*/)/*:string*/ {\n\tvar o = [XML_HEADER, writextag('Properties', null, {\n\t\t'xmlns': XMLNS.CUST_PROPS,\n\t\t'xmlns:vt': XMLNS.vt\n\t})];\n\tif(!cp) return o.join(\"\");\n\tvar pid = 1;\n\tkeys(cp).forEach(function custprop(k) { ++pid;\n\t\to[o.length] = (writextag('property', write_vt(cp[k], true), {\n\t\t\t'fmtid': '{D5CDD505-2E9C-101B-9397-08002B2CF9AE}',\n\t\t\t'pid': pid,\n\t\t\t'name': escapexml(k)\n\t\t}));\n\t});\n\tif(o.length>2){ o[o.length] = '</Properties>'; o[1]=o[1].replace(\"/>\",\">\"); }\n\treturn o.join(\"\");\n}\n/* Common Name -> XLML Name */\nvar XLMLDocPropsMap = {\n\tTitle: 'Title',\n\tSubject: 'Subject',\n\tAuthor: 'Author',\n\tKeywords: 'Keywords',\n\tComments: 'Description',\n\tLastAuthor: 'LastAuthor',\n\tRevNumber: 'Revision',\n\tApplication: 'AppName',\n\t/* TotalTime: 'TotalTime', */\n\tLastPrinted: 'LastPrinted',\n\tCreatedDate: 'Created',\n\tModifiedDate: 'LastSaved',\n\t/* Pages */\n\t/* Words */\n\t/* Characters */\n\tCategory: 'Category',\n\t/* PresentationFormat */\n\tManager: 'Manager',\n\tCompany: 'Company',\n\t/* Guid */\n\t/* HyperlinkBase */\n\t/* Bytes */\n\t/* Lines */\n\t/* Paragraphs */\n\t/* CharactersWithSpaces */\n\tAppVersion: 'Version',\n\n\tContentStatus: 'ContentStatus', /* NOTE: missing from schema */\n\tIdentifier: 'Identifier', /* NOTE: missing from schema */\n\tLanguage: 'Language' /* NOTE: missing from schema */\n};\nvar evert_XLMLDPM;\n\nfunction xlml_set_prop(Props, tag/*:string*/, val) {\n\tif(!evert_XLMLDPM) evert_XLMLDPM = evert(XLMLDocPropsMap);\n\ttag = evert_XLMLDPM[tag] || tag;\n\tProps[tag] = val;\n}\n\nfunction xlml_write_docprops(Props, opts) {\n\tvar o/*:Array<string>*/ = [];\n\tkeys(XLMLDocPropsMap).map(function(m) {\n\t\tfor(var i = 0; i < CORE_PROPS.length; ++i) if(CORE_PROPS[i][1] == m) return CORE_PROPS[i];\n\t\tfor(i = 0; i < EXT_PROPS.length; ++i) if(EXT_PROPS[i][1] == m) return EXT_PROPS[i];\n\t\tthrow m;\n\t}).forEach(function(p) {\n\t\tif(Props[p[1]] == null) return;\n\t\tvar m = opts && opts.Props && opts.Props[p[1]] != null ? opts.Props[p[1]] : Props[p[1]];\n\t\tswitch(p[2]) {\n\t\t\tcase 'date': m = new Date(m).toISOString().replace(/\\.\\d*Z/,\"Z\"); break;\n\t\t}\n\t\tif(typeof m == 'number') m = String(m);\n\t\telse if(m === true || m === false) { m = m ? \"1\" : \"0\"; }\n\t\telse if(m instanceof Date) m = new Date(m).toISOString().replace(/\\.\\d*Z/,\"\");\n\t\to.push(writetag(XLMLDocPropsMap[p[1]] || p[1], m));\n\t});\n\treturn writextag('DocumentProperties', o.join(\"\"), {xmlns:XLMLNS.o });\n}\nfunction xlml_write_custprops(Props, Custprops/*::, opts*/) {\n\tvar BLACKLIST = [\"Worksheets\",\"SheetNames\"];\n\tvar T = 'CustomDocumentProperties';\n\tvar o/*:Array<string>*/ = [];\n\tif(Props) keys(Props).forEach(function(k) {\n\t\t/*:: if(!Props) return; */\n\t\tif(!Object.prototype.hasOwnProperty.call(Props, k)) return;\n\t\tfor(var i = 0; i < CORE_PROPS.length; ++i) if(k == CORE_PROPS[i][1]) return;\n\t\tfor(i = 0; i < EXT_PROPS.length; ++i) if(k == EXT_PROPS[i][1]) return;\n\t\tfor(i = 0; i < BLACKLIST.length; ++i) if(k == BLACKLIST[i]) return;\n\n\t\tvar m = Props[k];\n\t\tvar t = \"string\";\n\t\tif(typeof m == 'number') { t = \"float\"; m = String(m); }\n\t\telse if(m === true || m === false) { t = \"boolean\"; m = m ? \"1\" : \"0\"; }\n\t\telse m = String(m);\n\t\to.push(writextag(escapexmltag(k), m, {\"dt:dt\":t}));\n\t});\n\tif(Custprops) keys(Custprops).forEach(function(k) {\n\t\t/*:: if(!Custprops) return; */\n\t\tif(!Object.prototype.hasOwnProperty.call(Custprops, k)) return;\n\t\tif(Props && Object.prototype.hasOwnProperty.call(Props, k)) return;\n\t\tvar m = Custprops[k];\n\t\tvar t = \"string\";\n\t\tif(typeof m == 'number') { t = \"float\"; m = String(m); }\n\t\telse if(m === true || m === false) { t = \"boolean\"; m = m ? \"1\" : \"0\"; }\n\t\telse if(m instanceof Date) { t = \"dateTime.tz\"; m = m.toISOString(); }\n\t\telse m = String(m);\n\t\to.push(writextag(escapexmltag(k), m, {\"dt:dt\":t}));\n\t});\n\treturn '<' + T + ' xmlns=\"' + XLMLNS.o + '\">' + o.join(\"\") + '</' + T + '>';\n}\n/* [MS-DTYP] 2.3.3 FILETIME */\n/* [MS-OLEDS] 2.1.3 FILETIME (Packet Version) */\n/* [MS-OLEPS] 2.8 FILETIME (Packet Version) */\nfunction parse_FILETIME(blob) {\n\tvar dwLowDateTime = blob.read_shift(4), dwHighDateTime = blob.read_shift(4);\n\treturn new Date(((dwHighDateTime/1e7*Math.pow(2,32) + dwLowDateTime/1e7) - 11644473600)*1000).toISOString().replace(/\\.000/,\"\");\n}\nfunction write_FILETIME(time/*:string|Date*/) {\n\tvar date = (typeof time == \"string\") ? new Date(Date.parse(time)) : time;\n\tvar t = date.getTime() / 1000 + 11644473600;\n\tvar l = t % Math.pow(2,32), h = (t - l) / Math.pow(2,32);\n\tl *= 1e7; h *= 1e7;\n\tvar w = (l / Math.pow(2,32)) | 0;\n\tif(w > 0) { l = l % Math.pow(2,32); h += w; }\n\tvar o = new_buf(8); o.write_shift(4, l); o.write_shift(4, h); return o;\n}\n\n/* [MS-OSHARED] 2.3.3.1.4 Lpstr */\nfunction parse_lpstr(blob, type, pad/*:?number*/) {\n\tvar start = blob.l;\n\tvar str = blob.read_shift(0, 'lpstr-cp');\n\tif(pad) while((blob.l - start) & 3) ++blob.l;\n\treturn str;\n}\n\n/* [MS-OSHARED] 2.3.3.1.6 Lpwstr */\nfunction parse_lpwstr(blob, type, pad) {\n\tvar str = blob.read_shift(0, 'lpwstr');\n\tif(pad) blob.l += (4 - ((str.length+1) & 3)) & 3;\n\treturn str;\n}\n\n\n/* [MS-OSHARED] 2.3.3.1.11 VtString */\n/* [MS-OSHARED] 2.3.3.1.12 VtUnalignedString */\nfunction parse_VtStringBase(blob, stringType, pad) {\n\tif(stringType === 0x1F /*VT_LPWSTR*/) return parse_lpwstr(blob);\n\treturn parse_lpstr(blob, stringType, pad);\n}\n\nfunction parse_VtString(blob, t/*:number*/, pad/*:?boolean*/) { return parse_VtStringBase(blob, t, pad === false ? 0: 4); }\nfunction parse_VtUnalignedString(blob, t/*:number*/) { if(!t) throw new Error(\"VtUnalignedString must have positive length\"); return parse_VtStringBase(blob, t, 0); }\n\n/* [MS-OSHARED] 2.3.3.1.7 VtVecLpwstrValue */\nfunction parse_VtVecLpwstrValue(blob)/*:Array<string>*/ {\n\tvar length = blob.read_shift(4);\n\tvar ret/*:Array<string>*/ = [];\n\tfor(var i = 0; i != length; ++i) {\n\t\tvar start = blob.l;\n\t\tret[i] = blob.read_shift(0, 'lpwstr').replace(chr0,'');\n\t\tif((blob.l - start) & 0x02) blob.l += 2;\n\t}\n\treturn ret;\n}\n\n/* [MS-OSHARED] 2.3.3.1.9 VtVecUnalignedLpstrValue */\nfunction parse_VtVecUnalignedLpstrValue(blob)/*:Array<string>*/ {\n\tvar length = blob.read_shift(4);\n\tvar ret/*:Array<string>*/ = [];\n\tfor(var i = 0; i != length; ++i) ret[i] = blob.read_shift(0, 'lpstr-cp').replace(chr0,'');\n\treturn ret;\n}\n\n\n/* [MS-OSHARED] 2.3.3.1.13 VtHeadingPair */\nfunction parse_VtHeadingPair(blob) {\n\tvar start = blob.l;\n\tvar headingString = parse_TypedPropertyValue(blob, VT_USTR);\n\tif(blob[blob.l] == 0x00 && blob[blob.l+1] == 0x00 && ((blob.l - start) & 0x02)) blob.l += 2;\n\tvar headerParts = parse_TypedPropertyValue(blob, VT_I4);\n\treturn [headingString, headerParts];\n}\n\n/* [MS-OSHARED] 2.3.3.1.14 VtVecHeadingPairValue */\nfunction parse_VtVecHeadingPairValue(blob) {\n\tvar cElements = blob.read_shift(4);\n\tvar out = [];\n\tfor(var i = 0; i < cElements / 2; ++i) out.push(parse_VtHeadingPair(blob));\n\treturn out;\n}\n\n/* [MS-OLEPS] 2.18.1 Dictionary (uses 2.17, 2.16) */\nfunction parse_dictionary(blob,CodePage) {\n\tvar cnt = blob.read_shift(4);\n\tvar dict/*:{[number]:string}*/ = ({}/*:any*/);\n\tfor(var j = 0; j != cnt; ++j) {\n\t\tvar pid = blob.read_shift(4);\n\t\tvar len = blob.read_shift(4);\n\t\tdict[pid] = blob.read_shift(len, (CodePage === 0x4B0 ?'utf16le':'utf8')).replace(chr0,'').replace(chr1,'!');\n\t\tif(CodePage === 0x4B0 && (len % 2)) blob.l += 2;\n\t}\n\tif(blob.l & 3) blob.l = (blob.l>>2+1)<<2;\n\treturn dict;\n}\n\n/* [MS-OLEPS] 2.9 BLOB */\nfunction parse_BLOB(blob) {\n\tvar size = blob.read_shift(4);\n\tvar bytes = blob.slice(blob.l,blob.l+size);\n\tblob.l += size;\n\tif((size & 3) > 0) blob.l += (4 - (size & 3)) & 3;\n\treturn bytes;\n}\n\n/* [MS-OLEPS] 2.11 ClipboardData */\nfunction parse_ClipboardData(blob) {\n\t// TODO\n\tvar o = {};\n\to.Size = blob.read_shift(4);\n\t//o.Format = blob.read_shift(4);\n\tblob.l += o.Size + 3 - (o.Size - 1) % 4;\n\treturn o;\n}\n\n/* [MS-OLEPS] 2.15 TypedPropertyValue */\nfunction parse_TypedPropertyValue(blob, type/*:number*/, _opts)/*:any*/ {\n\tvar t = blob.read_shift(2), ret, opts = _opts||{};\n\tblob.l += 2;\n\tif(type !== VT_VARIANT)\n\tif(t !== type && VT_CUSTOM.indexOf(type)===-1 && !((type & 0xFFFE) == 0x101E && (t & 0xFFFE) == 0x101E)) throw new Error('Expected type ' + type + ' saw ' + t);\n\tswitch(type === VT_VARIANT ? t : type) {\n\t\tcase 0x02 /*VT_I2*/: ret = blob.read_shift(2, 'i'); if(!opts.raw) blob.l += 2; return ret;\n\t\tcase 0x03 /*VT_I4*/: ret = blob.read_shift(4, 'i'); return ret;\n\t\tcase 0x0B /*VT_BOOL*/: return blob.read_shift(4) !== 0x0;\n\t\tcase 0x13 /*VT_UI4*/: ret = blob.read_shift(4); return ret;\n\t\tcase 0x1E /*VT_LPSTR*/: return parse_lpstr(blob, t, 4).replace(chr0,'');\n\t\tcase 0x1F /*VT_LPWSTR*/: return parse_lpwstr(blob);\n\t\tcase 0x40 /*VT_FILETIME*/: return parse_FILETIME(blob);\n\t\tcase 0x41 /*VT_BLOB*/: return parse_BLOB(blob);\n\t\tcase 0x47 /*VT_CF*/: return parse_ClipboardData(blob);\n\t\tcase 0x50 /*VT_STRING*/: return parse_VtString(blob, t, !opts.raw).replace(chr0,'');\n\t\tcase 0x51 /*VT_USTR*/: return parse_VtUnalignedString(blob, t/*, 4*/).replace(chr0,'');\n\t\tcase 0x100C /*VT_VECTOR|VT_VARIANT*/: return parse_VtVecHeadingPairValue(blob);\n\t\tcase 0x101E /*VT_VECTOR|VT_LPSTR*/:\n\t\tcase 0x101F /*VT_VECTOR|VT_LPWSTR*/:\n\t\t\treturn t == 0x101F ? parse_VtVecLpwstrValue(blob) : parse_VtVecUnalignedLpstrValue(blob);\n\t\tdefault: throw new Error(\"TypedPropertyValue unrecognized type \" + type + \" \" + t);\n\t}\n}\nfunction write_TypedPropertyValue(type/*:number*/, value) {\n\tvar o = new_buf(4), p = new_buf(4);\n\to.write_shift(4, type == 0x50 ? 0x1F : type);\n\tswitch(type) {\n\t\tcase 0x03 /*VT_I4*/: p.write_shift(-4, value); break;\n\t\tcase 0x05 /*VT_I4*/: p = new_buf(8); p.write_shift(8, value, 'f'); break;\n\t\tcase 0x0B /*VT_BOOL*/: p.write_shift(4, value ? 0x01 : 0x00); break;\n\t\tcase 0x40 /*VT_FILETIME*/: /*:: if(typeof value !== \"string\" && !(value instanceof Date)) throw \"unreachable\"; */ p = write_FILETIME(value); break;\n\t\tcase 0x1F /*VT_LPWSTR*/:\n\t\tcase 0x50 /*VT_STRING*/:\n\t\t\t/*:: if(typeof value !== \"string\") throw \"unreachable\"; */\n\t\t\tp = new_buf(4 + 2 * (value.length + 1) + (value.length % 2 ? 0 : 2));\n\t\t\tp.write_shift(4, value.length + 1);\n\t\t\tp.write_shift(0, value, \"dbcs\");\n\t\t\twhile(p.l != p.length) p.write_shift(1, 0);\n\t\t\tbreak;\n\t\tdefault: throw new Error(\"TypedPropertyValue unrecognized type \" + type + \" \" + value);\n\t}\n\treturn bconcat([o, p]);\n}\n\n/* [MS-OLEPS] 2.20 PropertySet */\nfunction parse_PropertySet(blob, PIDSI) {\n\tvar start_addr = blob.l;\n\tvar size = blob.read_shift(4);\n\tvar NumProps = blob.read_shift(4);\n\tvar Props = [], i = 0;\n\tvar CodePage = 0;\n\tvar Dictionary = -1, DictObj/*:{[number]:string}*/ = ({}/*:any*/);\n\tfor(i = 0; i != NumProps; ++i) {\n\t\tvar PropID = blob.read_shift(4);\n\t\tvar Offset = blob.read_shift(4);\n\t\tProps[i] = [PropID, Offset + start_addr];\n\t}\n\tProps.sort(function(x,y) { return x[1] - y[1]; });\n\tvar PropH = {};\n\tfor(i = 0; i != NumProps; ++i) {\n\t\tif(blob.l !== Props[i][1]) {\n\t\t\tvar fail = true;\n\t\t\tif(i>0 && PIDSI) switch(PIDSI[Props[i-1][0]].t) {\n\t\t\t\tcase 0x02 /*VT_I2*/: if(blob.l+2 === Props[i][1]) { blob.l+=2; fail = false; } break;\n\t\t\t\tcase 0x50 /*VT_STRING*/: if(blob.l <= Props[i][1]) { blob.l=Props[i][1]; fail = false; } break;\n\t\t\t\tcase 0x100C /*VT_VECTOR|VT_VARIANT*/: if(blob.l <= Props[i][1]) { blob.l=Props[i][1]; fail = false; } break;\n\t\t\t}\n\t\t\tif((!PIDSI||i==0) && blob.l <= Props[i][1]) { fail=false; blob.l = Props[i][1]; }\n\t\t\tif(fail) throw new Error(\"Read Error: Expected address \" + Props[i][1] + ' at ' + blob.l + ' :' + i);\n\t\t}\n\t\tif(PIDSI) {\n\t\t\tif(Props[i][0] == 0 && Props.length > i+1 && Props[i][1] == Props[i+1][1]) continue; // R9\n\t\t\tvar piddsi = PIDSI[Props[i][0]];\n\t\t\tPropH[piddsi.n] = parse_TypedPropertyValue(blob, piddsi.t, {raw:true});\n\t\t\tif(piddsi.p === 'version') PropH[piddsi.n] = String(PropH[piddsi.n] >> 16) + \".\" + (\"0000\" + String(PropH[piddsi.n] & 0xFFFF)).slice(-4);\n\t\t\tif(piddsi.n == \"CodePage\") switch(PropH[piddsi.n]) {\n\t\t\t\tcase 0: PropH[piddsi.n] = 1252;\n\t\t\t\t\t/* falls through */\n\t\t\t\tcase 874:\n\t\t\t\tcase 932:\n\t\t\t\tcase 936:\n\t\t\t\tcase 949:\n\t\t\t\tcase 950:\n\t\t\t\tcase 1250:\n\t\t\t\tcase 1251:\n\t\t\t\tcase 1253:\n\t\t\t\tcase 1254:\n\t\t\t\tcase 1255:\n\t\t\t\tcase 1256:\n\t\t\t\tcase 1257:\n\t\t\t\tcase 1258:\n\t\t\t\tcase 10000:\n\t\t\t\tcase 1200:\n\t\t\t\tcase 1201:\n\t\t\t\tcase 1252:\n\t\t\t\tcase 65000: case -536:\n\t\t\t\tcase 65001: case -535:\n\t\t\t\t\tset_cp(CodePage = (PropH[piddsi.n]>>>0) & 0xFFFF); break;\n\t\t\t\tdefault: throw new Error(\"Unsupported CodePage: \" + PropH[piddsi.n]);\n\t\t\t}\n\t\t} else {\n\t\t\tif(Props[i][0] === 0x1) {\n\t\t\t\tCodePage = PropH.CodePage = (parse_TypedPropertyValue(blob, VT_I2)/*:number*/);\n\t\t\t\tset_cp(CodePage);\n\t\t\t\tif(Dictionary !== -1) {\n\t\t\t\t\tvar oldpos = blob.l;\n\t\t\t\t\tblob.l = Props[Dictionary][1];\n\t\t\t\t\tDictObj = parse_dictionary(blob,CodePage);\n\t\t\t\t\tblob.l = oldpos;\n\t\t\t\t}\n\t\t\t} else if(Props[i][0] === 0) {\n\t\t\t\tif(CodePage === 0) { Dictionary = i; blob.l = Props[i+1][1]; continue; }\n\t\t\t\tDictObj = parse_dictionary(blob,CodePage);\n\t\t\t} else {\n\t\t\t\tvar name = DictObj[Props[i][0]];\n\t\t\t\tvar val;\n\t\t\t\t/* [MS-OSHARED] 2.3.3.2.3.1.2 + PROPVARIANT */\n\t\t\t\tswitch(blob[blob.l]) {\n\t\t\t\t\tcase 0x41 /*VT_BLOB*/: blob.l += 4; val = parse_BLOB(blob); break;\n\t\t\t\t\tcase 0x1E /*VT_LPSTR*/: blob.l += 4; val = parse_VtString(blob, blob[blob.l-4]).replace(/\\u0000+$/,\"\"); break;\n\t\t\t\t\tcase 0x1F /*VT_LPWSTR*/: blob.l += 4; val = parse_VtString(blob, blob[blob.l-4]).replace(/\\u0000+$/,\"\"); break;\n\t\t\t\t\tcase 0x03 /*VT_I4*/: blob.l += 4; val = blob.read_shift(4, 'i'); break;\n\t\t\t\t\tcase 0x13 /*VT_UI4*/: blob.l += 4; val = blob.read_shift(4); break;\n\t\t\t\t\tcase 0x05 /*VT_R8*/: blob.l += 4; val = blob.read_shift(8, 'f'); break;\n\t\t\t\t\tcase 0x0B /*VT_BOOL*/: blob.l += 4; val = parsebool(blob, 4); break;\n\t\t\t\t\tcase 0x40 /*VT_FILETIME*/: blob.l += 4; val = parseDate(parse_FILETIME(blob)); break;\n\t\t\t\t\tdefault: throw new Error(\"unparsed value: \" + blob[blob.l]);\n\t\t\t\t}\n\t\t\t\tPropH[name] = val;\n\t\t\t}\n\t\t}\n\t}\n\tblob.l = start_addr + size; /* step ahead to skip padding */\n\treturn PropH;\n}\nvar XLSPSSkip = [ \"CodePage\", \"Thumbnail\", \"_PID_LINKBASE\", \"_PID_HLINKS\", \"SystemIdentifier\", \"FMTID\" ];\nfunction guess_property_type(val/*:any*/)/*:number*/ {\n\tswitch(typeof val) {\n\t\tcase \"boolean\": return 0x0B;\n\t\tcase \"number\": return ((val|0)==val) ? 0x03 : 0x05;\n\t\tcase \"string\": return 0x1F;\n\t\tcase \"object\": if(val instanceof Date) return 0x40; break;\n\t}\n\treturn -1;\n}\nfunction write_PropertySet(entries, RE, PIDSI) {\n\tvar hdr = new_buf(8), piao = [], prop = [];\n\tvar sz = 8, i = 0;\n\n\tvar pr = new_buf(8), pio = new_buf(8);\n\tpr.write_shift(4, 0x0002);\n\tpr.write_shift(4, 0x04B0);\n\tpio.write_shift(4, 0x0001);\n\tprop.push(pr); piao.push(pio);\n\tsz += 8 + pr.length;\n\n\tif(!RE) {\n\t\tpio = new_buf(8);\n\t\tpio.write_shift(4, 0);\n\t\tpiao.unshift(pio);\n\n\t\tvar bufs = [new_buf(4)];\n\t\tbufs[0].write_shift(4, entries.length);\n\t\tfor(i = 0; i < entries.length; ++i) {\n\t\t\tvar value = entries[i][0];\n\t\t\tpr = new_buf(4 + 4 + 2 * (value.length + 1) + (value.length % 2 ? 0 : 2));\n\t\t\tpr.write_shift(4, i+2);\n\t\t\tpr.write_shift(4, value.length + 1);\n\t\t\tpr.write_shift(0, value, \"dbcs\");\n\t\t\twhile(pr.l != pr.length) pr.write_shift(1, 0);\n\t\t\tbufs.push(pr);\n\t\t}\n\t\tpr = bconcat(bufs);\n\t\tprop.unshift(pr);\n\t\tsz += 8 + pr.length;\n\t}\n\n\tfor(i = 0; i < entries.length; ++i) {\n\t\tif(RE && !RE[entries[i][0]]) continue;\n\t\tif(XLSPSSkip.indexOf(entries[i][0]) > -1 || PseudoPropsPairs.indexOf(entries[i][0]) > -1) continue;\n\t\tif(entries[i][1] == null) continue;\n\n\t\tvar val = entries[i][1], idx = 0;\n\t\tif(RE) {\n\t\t\tidx = +RE[entries[i][0]];\n\t\t\tvar pinfo = (PIDSI/*:: || {}*/)[idx]/*:: || {} */;\n\t\t\tif(pinfo.p == \"version\" && typeof val == \"string\") {\n\t\t\t\t/*:: if(typeof val !== \"string\") throw \"unreachable\"; */\n\t\t\t\tvar arr = val.split(\".\");\n\t\t\t\tval = ((+arr[0])<<16) + ((+arr[1])||0);\n\t\t\t}\n\t\t\tpr = write_TypedPropertyValue(pinfo.t, val);\n\t\t} else {\n\t\t\tvar T = guess_property_type(val);\n\t\t\tif(T == -1) { T = 0x1F; val = String(val); }\n\t\t\tpr = write_TypedPropertyValue(T, val);\n\t\t}\n\t\tprop.push(pr);\n\n\t\tpio = new_buf(8);\n\t\tpio.write_shift(4, !RE ? 2+i : idx);\n\t\tpiao.push(pio);\n\n\t\tsz += 8 + pr.length;\n\t}\n\n\tvar w = 8 * (prop.length + 1);\n\tfor(i = 0; i < prop.length; ++i) { piao[i].write_shift(4, w); w += prop[i].length; }\n\thdr.write_shift(4, sz);\n\thdr.write_shift(4, prop.length);\n\treturn bconcat([hdr].concat(piao).concat(prop));\n}\n\n/* [MS-OLEPS] 2.21 PropertySetStream */\nfunction parse_PropertySetStream(file, PIDSI, clsid) {\n\tvar blob = file.content;\n\tif(!blob) return ({}/*:any*/);\n\tprep_blob(blob, 0);\n\n\tvar NumSets, FMTID0, FMTID1, Offset0, Offset1 = 0;\n\tblob.chk('feff', 'Byte Order: ');\n\n\t/*var vers = */blob.read_shift(2); // TODO: check version\n\tvar SystemIdentifier = blob.read_shift(4);\n\tvar CLSID = blob.read_shift(16);\n\tif(CLSID !== CFB.utils.consts.HEADER_CLSID && CLSID !== clsid) throw new Error(\"Bad PropertySet CLSID \" + CLSID);\n\tNumSets = blob.read_shift(4);\n\tif(NumSets !== 1 && NumSets !== 2) throw new Error(\"Unrecognized #Sets: \" + NumSets);\n\tFMTID0 = blob.read_shift(16); Offset0 = blob.read_shift(4);\n\n\tif(NumSets === 1 && Offset0 !== blob.l) throw new Error(\"Length mismatch: \" + Offset0 + \" !== \" + blob.l);\n\telse if(NumSets === 2) { FMTID1 = blob.read_shift(16); Offset1 = blob.read_shift(4); }\n\tvar PSet0 = parse_PropertySet(blob, PIDSI);\n\n\tvar rval = ({ SystemIdentifier: SystemIdentifier }/*:any*/);\n\tfor(var y in PSet0) rval[y] = PSet0[y];\n\t//rval.blob = blob;\n\trval.FMTID = FMTID0;\n\t//rval.PSet0 = PSet0;\n\tif(NumSets === 1) return rval;\n\tif(Offset1 - blob.l == 2) blob.l += 2;\n\tif(blob.l !== Offset1) throw new Error(\"Length mismatch 2: \" + blob.l + \" !== \" + Offset1);\n\tvar PSet1;\n\ttry { PSet1 = parse_PropertySet(blob, null); } catch(e) {/* empty */}\n\tfor(y in PSet1) rval[y] = PSet1[y];\n\trval.FMTID = [FMTID0, FMTID1]; // TODO: verify FMTID0/1\n\treturn rval;\n}\nfunction write_PropertySetStream(entries, clsid, RE, PIDSI/*:{[key:string|number]:any}*/, entries2/*:?any*/, clsid2/*:?any*/) {\n\tvar hdr = new_buf(entries2 ? 68 : 48);\n\tvar bufs = [hdr];\n\thdr.write_shift(2, 0xFFFE);\n\thdr.write_shift(2, 0x0000); /* TODO: type 1 props */\n\thdr.write_shift(4, 0x32363237);\n\thdr.write_shift(16, CFB.utils.consts.HEADER_CLSID, \"hex\");\n\thdr.write_shift(4, (entries2 ? 2 : 1));\n\thdr.write_shift(16, clsid, \"hex\");\n\thdr.write_shift(4, (entries2 ? 68 : 48));\n\tvar ps0 = write_PropertySet(entries, RE, PIDSI);\n\tbufs.push(ps0);\n\n\tif(entries2) {\n\t\tvar ps1 = write_PropertySet(entries2, null, null);\n\t\thdr.write_shift(16, clsid2, \"hex\");\n\t\thdr.write_shift(4, 68 + ps0.length);\n\t\tbufs.push(ps1);\n\t}\n\treturn bconcat(bufs);\n}\n\nfunction parsenoop2(blob, length) { blob.read_shift(length); return null; }\nfunction writezeroes(n, o) { if(!o) o=new_buf(n); for(var j=0; j<n; ++j) o.write_shift(1, 0); return o; }\n\nfunction parslurp(blob, length, cb) {\n\tvar arr = [], target = blob.l + length;\n\twhile(blob.l < target) arr.push(cb(blob, target - blob.l));\n\tif(target !== blob.l) throw new Error(\"Slurp error\");\n\treturn arr;\n}\n\nfunction parsebool(blob, length/*:number*/) { return blob.read_shift(length) === 0x1; }\nfunction writebool(v/*:any*/, o) { if(!o) o=new_buf(2); o.write_shift(2, +!!v); return o; }\n\nfunction parseuint16(blob/*::, length:?number, opts:?any*/) { return blob.read_shift(2, 'u'); }\nfunction writeuint16(v/*:number*/, o) { if(!o) o=new_buf(2); o.write_shift(2, v); return o; }\nfunction parseuint16a(blob, length/*:: :?number, opts:?any*/) { return parslurp(blob,length,parseuint16);}\n\n/* --- 2.5 Structures --- */\n\n/* [MS-XLS] 2.5.10 Bes (boolean or error) */\nfunction parse_Bes(blob/*::, length*/) {\n\tvar v = blob.read_shift(1), t = blob.read_shift(1);\n\treturn t === 0x01 ? v : v === 0x01;\n}\nfunction write_Bes(v, t/*:string*/, o) {\n\tif(!o) o = new_buf(2);\n\to.write_shift(1, ((t == 'e') ? +v : +!!v));\n\to.write_shift(1, ((t == 'e') ? 1 : 0));\n\treturn o;\n}\n\n/* [MS-XLS] 2.5.240 ShortXLUnicodeString */\nfunction parse_ShortXLUnicodeString(blob, length, opts) {\n\tvar cch = blob.read_shift(opts && opts.biff >= 12 ? 2 : 1);\n\tvar encoding = 'sbcs-cont';\n\tvar cp = current_codepage;\n\tif(opts && opts.biff >= 8) current_codepage = 1200;\n\tif(!opts || opts.biff == 8 ) {\n\t\tvar fHighByte = blob.read_shift(1);\n\t\tif(fHighByte) { encoding = 'dbcs-cont'; }\n\t} else if(opts.biff == 12) {\n\t\tencoding = 'wstr';\n\t}\n\tif(opts.biff >= 2 && opts.biff <= 5) encoding = 'cpstr';\n\tvar o = cch ? blob.read_shift(cch, encoding) : \"\";\n\tcurrent_codepage = cp;\n\treturn o;\n}\n\n/* 2.5.293 XLUnicodeRichExtendedString */\nfunction parse_XLUnicodeRichExtendedString(blob) {\n\tvar cp = current_codepage;\n\tcurrent_codepage = 1200;\n\tvar cch = blob.read_shift(2), flags = blob.read_shift(1);\n\tvar /*fHighByte = flags & 0x1,*/ fExtSt = flags & 0x4, fRichSt = flags & 0x8;\n\tvar width = 1 + (flags & 0x1); // 0x0 -> utf8, 0x1 -> dbcs\n\tvar cRun = 0, cbExtRst;\n\tvar z = {};\n\tif(fRichSt) cRun = blob.read_shift(2);\n\tif(fExtSt) cbExtRst = blob.read_shift(4);\n\tvar encoding = width == 2 ? 'dbcs-cont' : 'sbcs-cont';\n\tvar msg = cch === 0 ? \"\" : blob.read_shift(cch, encoding);\n\tif(fRichSt) blob.l += 4 * cRun; //TODO: parse this\n\tif(fExtSt) blob.l += cbExtRst; //TODO: parse this\n\tz.t = msg;\n\tif(!fRichSt) { z.raw = \"<t>\" + z.t + \"</t>\"; z.r = z.t; }\n\tcurrent_codepage = cp;\n\treturn z;\n}\nfunction write_XLUnicodeRichExtendedString(xlstr/*:: :XLString, opts*/) {\n\tvar str = (xlstr.t||\"\"), nfmts = 1;\n\n\tvar hdr = new_buf(3 + (nfmts > 1 ? 2 : 0));\n\thdr.write_shift(2, str.length);\n\thdr.write_shift(1, (nfmts > 1 ? 0x08 : 0x00) | 0x01);\n\tif(nfmts > 1) hdr.write_shift(2, nfmts);\n\n\tvar otext = new_buf(2 * str.length);\n\totext.write_shift(2 * str.length, str, 'utf16le');\n\n\tvar out = [hdr, otext];\n\n\treturn bconcat(out);\n}\n\n/* 2.5.296 XLUnicodeStringNoCch */\nfunction parse_XLUnicodeStringNoCch(blob, cch, opts) {\n\tvar retval;\n\tif(opts) {\n\t\tif(opts.biff >= 2 && opts.biff <= 5) return blob.read_shift(cch, 'cpstr');\n\t\tif(opts.biff >= 12) return blob.read_shift(cch, 'dbcs-cont');\n\t}\n\tvar fHighByte = blob.read_shift(1);\n\tif(fHighByte===0) { retval = blob.read_shift(cch, 'sbcs-cont'); }\n\telse { retval = blob.read_shift(cch, 'dbcs-cont'); }\n\treturn retval;\n}\n\n/* 2.5.294 XLUnicodeString */\nfunction parse_XLUnicodeString(blob, length, opts) {\n\tvar cch = blob.read_shift(opts && opts.biff == 2 ? 1 : 2);\n\tif(cch === 0) { blob.l++; return \"\"; }\n\treturn parse_XLUnicodeStringNoCch(blob, cch, opts);\n}\n/* BIFF5 override */\nfunction parse_XLUnicodeString2(blob, length, opts) {\n\tif(opts.biff > 5) return parse_XLUnicodeString(blob, length, opts);\n\tvar cch = blob.read_shift(1);\n\tif(cch === 0) { blob.l++; return \"\"; }\n\treturn blob.read_shift(cch, (opts.biff <= 4 || !blob.lens ) ? 'cpstr' : 'sbcs-cont');\n}\n/* TODO: BIFF5 and lower, codepage awareness */\nfunction write_XLUnicodeString(str, opts, o) {\n\tif(!o) o = new_buf(3 + 2 * str.length);\n\to.write_shift(2, str.length);\n\to.write_shift(1, 1);\n\to.write_shift(31, str, 'utf16le');\n\treturn o;\n}\n\n/* [MS-XLS] 2.5.61 ControlInfo */\nfunction parse_ControlInfo(blob/*::, length, opts*/) {\n\tvar flags = blob.read_shift(1);\n\tblob.l++;\n\tvar accel = blob.read_shift(2);\n\tblob.l += 2;\n\treturn [flags, accel];\n}\n\n/* [MS-OSHARED] 2.3.7.6 URLMoniker TODO: flags */\nfunction parse_URLMoniker(blob/*::, length, opts*/) {\n\tvar len = blob.read_shift(4), start = blob.l;\n\tvar extra = false;\n\tif(len > 24) {\n\t\t/* look ahead */\n\t\tblob.l += len - 24;\n\t\tif(blob.read_shift(16) === \"795881f43b1d7f48af2c825dc4852763\") extra = true;\n\t\tblob.l = start;\n\t}\n\tvar url = blob.read_shift((extra?len-24:len)>>1, 'utf16le').replace(chr0,\"\");\n\tif(extra) blob.l += 24;\n\treturn url;\n}\n\n/* [MS-OSHARED] 2.3.7.8 FileMoniker TODO: all fields */\nfunction parse_FileMoniker(blob/*::, length*/) {\n\tvar cAnti = blob.read_shift(2);\n\tvar preamble = \"\"; while(cAnti-- > 0) preamble += \"../\";\n\tvar ansiPath = blob.read_shift(0, 'lpstr-ansi');\n\tblob.l += 2; //var endServer = blob.read_shift(2);\n\tif(blob.read_shift(2) != 0xDEAD) throw new Error(\"Bad FileMoniker\");\n\tvar sz = blob.read_shift(4);\n\tif(sz === 0) return preamble + ansiPath.replace(/\\\\/g,\"/\");\n\tvar bytes = blob.read_shift(4);\n\tif(blob.read_shift(2) != 3) throw new Error(\"Bad FileMoniker\");\n\tvar unicodePath = blob.read_shift(bytes>>1, 'utf16le').replace(chr0,\"\");\n\treturn preamble + unicodePath;\n}\n\n/* [MS-OSHARED] 2.3.7.2 HyperlinkMoniker TODO: all the monikers */\nfunction parse_HyperlinkMoniker(blob, length) {\n\tvar clsid = blob.read_shift(16); length -= 16;\n\tswitch(clsid) {\n\t\tcase \"e0c9ea79f9bace118c8200aa004ba90b\": return parse_URLMoniker(blob, length);\n\t\tcase \"0303000000000000c000000000000046\": return parse_FileMoniker(blob, length);\n\t\tdefault: throw new Error(\"Unsupported Moniker \" + clsid);\n\t}\n}\n\n/* [MS-OSHARED] 2.3.7.9 HyperlinkString */\nfunction parse_HyperlinkString(blob/*::, length*/) {\n\tvar len = blob.read_shift(4);\n\tvar o = len > 0 ? blob.read_shift(len, 'utf16le').replace(chr0, \"\") : \"\";\n\treturn o;\n}\nfunction write_HyperlinkString(str/*:string*/, o) {\n\tif(!o) o = new_buf(6 + str.length * 2);\n\to.write_shift(4, 1 + str.length);\n\tfor(var i = 0; i < str.length; ++i) o.write_shift(2, str.charCodeAt(i));\n\to.write_shift(2, 0);\n\treturn o;\n}\n\n/* [MS-OSHARED] 2.3.7.1 Hyperlink Object */\nfunction parse_Hyperlink(blob, length)/*:Hyperlink*/ {\n\tvar end = blob.l + length;\n\tvar sVer = blob.read_shift(4);\n\tif(sVer !== 2) throw new Error(\"Unrecognized streamVersion: \" + sVer);\n\tvar flags = blob.read_shift(2);\n\tblob.l += 2;\n\tvar displayName, targetFrameName, moniker, oleMoniker, Loc=\"\", guid, fileTime;\n\tif(flags & 0x0010) displayName = parse_HyperlinkString(blob, end - blob.l);\n\tif(flags & 0x0080) targetFrameName = parse_HyperlinkString(blob, end - blob.l);\n\tif((flags & 0x0101) === 0x0101) moniker = parse_HyperlinkString(blob, end - blob.l);\n\tif((flags & 0x0101) === 0x0001) oleMoniker = parse_HyperlinkMoniker(blob, end - blob.l);\n\tif(flags & 0x0008) Loc = parse_HyperlinkString(blob, end - blob.l);\n\tif(flags & 0x0020) guid = blob.read_shift(16);\n\tif(flags & 0x0040) fileTime = parse_FILETIME(blob/*, 8*/);\n\tblob.l = end;\n\tvar target = targetFrameName||moniker||oleMoniker||\"\";\n\tif(target && Loc) target+=\"#\"+Loc;\n\tif(!target) target = \"#\" + Loc;\n\tif((flags & 0x0002) && target.charAt(0) == \"/\" && target.charAt(1) != \"/\") target = \"file://\" + target;\n\tvar out = ({Target:target}/*:any*/);\n\tif(guid) out.guid = guid;\n\tif(fileTime) out.time = fileTime;\n\tif(displayName) out.Tooltip = displayName;\n\treturn out;\n}\nfunction write_Hyperlink(hl) {\n\tvar out = new_buf(512), i = 0;\n\tvar Target = hl.Target;\n\tif(Target.slice(0,7) == \"file://\") Target = Target.slice(7);\n\tvar hashidx = Target.indexOf(\"#\");\n\tvar F = hashidx > -1 ? 0x1f : 0x17;\n\tswitch(Target.charAt(0)) { case \"#\": F=0x1c; break; case \".\": F&=~2; break; }\n\tout.write_shift(4,2); out.write_shift(4, F);\n\tvar data = [8,6815827,6619237,4849780,83]; for(i = 0; i < data.length; ++i) out.write_shift(4, data[i]);\n\tif(F == 0x1C) {\n\t\tTarget = Target.slice(1);\n\t\twrite_HyperlinkString(Target, out);\n\t} else if(F & 0x02) {\n\t\tdata = \"e0 c9 ea 79 f9 ba ce 11 8c 82 00 aa 00 4b a9 0b\".split(\" \");\n\t\tfor(i = 0; i < data.length; ++i) out.write_shift(1, parseInt(data[i], 16));\n\t\tvar Pretarget = hashidx > -1 ? Target.slice(0, hashidx) : Target;\n\t\tout.write_shift(4, 2*(Pretarget.length + 1));\n\t\tfor(i = 0; i < Pretarget.length; ++i) out.write_shift(2, Pretarget.charCodeAt(i));\n\t\tout.write_shift(2, 0);\n\t\tif(F & 0x08) write_HyperlinkString(hashidx > -1 ? Target.slice(hashidx+1): \"\", out);\n\t} else {\n\t\tdata = \"03 03 00 00 00 00 00 00 c0 00 00 00 00 00 00 46\".split(\" \");\n\t\tfor(i = 0; i < data.length; ++i) out.write_shift(1, parseInt(data[i], 16));\n\t\tvar P = 0;\n\t\twhile(Target.slice(P*3,P*3+3)==\"../\"||Target.slice(P*3,P*3+3)==\"..\\\\\") ++P;\n\t\tout.write_shift(2, P);\n\t\tout.write_shift(4, Target.length - 3 * P + 1);\n\t\tfor(i = 0; i < Target.length - 3 * P; ++i) out.write_shift(1, Target.charCodeAt(i + 3 * P) & 0xFF);\n\t\tout.write_shift(1, 0);\n\t\tout.write_shift(2, 0xFFFF);\n\t\tout.write_shift(2, 0xDEAD);\n\t\tfor(i = 0; i < 6; ++i) out.write_shift(4, 0);\n\t}\n\treturn out.slice(0, out.l);\n}\n\n/* 2.5.178 LongRGBA */\nfunction parse_LongRGBA(blob/*::, length*/) { var r = blob.read_shift(1), g = blob.read_shift(1), b = blob.read_shift(1), a = blob.read_shift(1); return [r,g,b,a]; }\n\n/* 2.5.177 LongRGB */\nfunction parse_LongRGB(blob, length) { var x = parse_LongRGBA(blob, length); x[3] = 0; return x; }\n\n\n/* [MS-XLS] 2.5.19 */\nfunction parse_XLSCell(blob/*::, length*/)/*:Cell*/ {\n\tvar rw = blob.read_shift(2); // 0-indexed\n\tvar col = blob.read_shift(2);\n\tvar ixfe = blob.read_shift(2);\n\treturn ({r:rw, c:col, ixfe:ixfe}/*:any*/);\n}\nfunction write_XLSCell(R/*:number*/, C/*:number*/, ixfe/*:?number*/, o) {\n\tif(!o) o = new_buf(6);\n\to.write_shift(2, R);\n\to.write_shift(2, C);\n\to.write_shift(2, ixfe||0);\n\treturn o;\n}\n\n/* [MS-XLS] 2.5.134 */\nfunction parse_frtHeader(blob) {\n\tvar rt = blob.read_shift(2);\n\tvar flags = blob.read_shift(2); // TODO: parse these flags\n\tblob.l += 8;\n\treturn {type: rt, flags: flags};\n}\n\n\n\nfunction parse_OptXLUnicodeString(blob, length, opts) { return length === 0 ? \"\" : parse_XLUnicodeString2(blob, length, opts); }\n\n/* [MS-XLS] 2.5.344 */\nfunction parse_XTI(blob, length, opts) {\n\tvar w = opts.biff > 8 ? 4 : 2;\n\tvar iSupBook = blob.read_shift(w), itabFirst = blob.read_shift(w,'i'), itabLast = blob.read_shift(w,'i');\n\treturn [iSupBook, itabFirst, itabLast];\n}\n\n/* [MS-XLS] 2.5.218 */\nfunction parse_RkRec(blob) {\n\tvar ixfe = blob.read_shift(2);\n\tvar RK = parse_RkNumber(blob);\n\treturn [ixfe, RK];\n}\n\n/* [MS-XLS] 2.5.1 */\nfunction parse_AddinUdf(blob, length, opts) {\n\tblob.l += 4; length -= 4;\n\tvar l = blob.l + length;\n\tvar udfName = parse_ShortXLUnicodeString(blob, length, opts);\n\tvar cb = blob.read_shift(2);\n\tl -= blob.l;\n\tif(cb !== l) throw new Error(\"Malformed AddinUdf: padding = \" + l + \" != \" + cb);\n\tblob.l += cb;\n\treturn udfName;\n}\n\n/* [MS-XLS] 2.5.209 TODO: Check sizes */\nfunction parse_Ref8U(blob/*::, length*/) {\n\tvar rwFirst = blob.read_shift(2);\n\tvar rwLast = blob.read_shift(2);\n\tvar colFirst = blob.read_shift(2);\n\tvar colLast = blob.read_shift(2);\n\treturn {s:{c:colFirst, r:rwFirst}, e:{c:colLast,r:rwLast}};\n}\nfunction write_Ref8U(r/*:Range*/, o) {\n\tif(!o) o = new_buf(8);\n\to.write_shift(2, r.s.r);\n\to.write_shift(2, r.e.r);\n\to.write_shift(2, r.s.c);\n\to.write_shift(2, r.e.c);\n\treturn o;\n}\n\n/* [MS-XLS] 2.5.211 */\nfunction parse_RefU(blob/*::, length*/) {\n\tvar rwFirst = blob.read_shift(2);\n\tvar rwLast = blob.read_shift(2);\n\tvar colFirst = blob.read_shift(1);\n\tvar colLast = blob.read_shift(1);\n\treturn {s:{c:colFirst, r:rwFirst}, e:{c:colLast,r:rwLast}};\n}\n\n/* [MS-XLS] 2.5.207 */\nvar parse_Ref = parse_RefU;\n\n/* [MS-XLS] 2.5.143 */\nfunction parse_FtCmo(blob/*::, length*/) {\n\tblob.l += 4;\n\tvar ot = blob.read_shift(2);\n\tvar id = blob.read_shift(2);\n\tvar flags = blob.read_shift(2);\n\tblob.l+=12;\n\treturn [id, ot, flags];\n}\n\n/* [MS-XLS] 2.5.149 */\nfunction parse_FtNts(blob) {\n\tvar out = {};\n\tblob.l += 4;\n\tblob.l += 16; // GUID TODO\n\tout.fSharedNote = blob.read_shift(2);\n\tblob.l += 4;\n\treturn out;\n}\n\n/* [MS-XLS] 2.5.142 */\nfunction parse_FtCf(blob) {\n\tvar out = {};\n\tblob.l += 4;\n\tblob.cf = blob.read_shift(2);\n\treturn out;\n}\n\n/* [MS-XLS] 2.5.140 - 2.5.154 and friends */\nfunction parse_FtSkip(blob) { blob.l += 2; blob.l += blob.read_shift(2); }\nvar FtTab = {\n\t/*::[*/0x00/*::]*/: parse_FtSkip,      /* FtEnd */\n\t/*::[*/0x04/*::]*/: parse_FtSkip,      /* FtMacro */\n\t/*::[*/0x05/*::]*/: parse_FtSkip,      /* FtButton */\n\t/*::[*/0x06/*::]*/: parse_FtSkip,      /* FtGmo */\n\t/*::[*/0x07/*::]*/: parse_FtCf,        /* FtCf */\n\t/*::[*/0x08/*::]*/: parse_FtSkip,      /* FtPioGrbit */\n\t/*::[*/0x09/*::]*/: parse_FtSkip,      /* FtPictFmla */\n\t/*::[*/0x0A/*::]*/: parse_FtSkip,      /* FtCbls */\n\t/*::[*/0x0B/*::]*/: parse_FtSkip,      /* FtRbo */\n\t/*::[*/0x0C/*::]*/: parse_FtSkip,      /* FtSbs */\n\t/*::[*/0x0D/*::]*/: parse_FtNts,       /* FtNts */\n\t/*::[*/0x0E/*::]*/: parse_FtSkip,      /* FtSbsFmla */\n\t/*::[*/0x0F/*::]*/: parse_FtSkip,      /* FtGboData */\n\t/*::[*/0x10/*::]*/: parse_FtSkip,      /* FtEdoData */\n\t/*::[*/0x11/*::]*/: parse_FtSkip,      /* FtRboData */\n\t/*::[*/0x12/*::]*/: parse_FtSkip,      /* FtCblsData */\n\t/*::[*/0x13/*::]*/: parse_FtSkip,      /* FtLbsData */\n\t/*::[*/0x14/*::]*/: parse_FtSkip,      /* FtCblsFmla */\n\t/*::[*/0x15/*::]*/: parse_FtCmo\n};\nfunction parse_FtArray(blob, length/*::, ot*/) {\n\tvar tgt = blob.l + length;\n\tvar fts = [];\n\twhile(blob.l < tgt) {\n\t\tvar ft = blob.read_shift(2);\n\t\tblob.l-=2;\n\t\ttry {\n\t\t\tfts[ft] = FtTab[ft](blob, tgt - blob.l);\n\t\t} catch(e) { blob.l = tgt; return fts; }\n\t}\n\tif(blob.l != tgt) blob.l = tgt; //throw new Error(\"bad Object Ft-sequence\");\n\treturn fts;\n}\n\n/* --- 2.4 Records --- */\n\n/* [MS-XLS] 2.4.21 */\nfunction parse_BOF(blob, length) {\n\tvar o = {BIFFVer:0, dt:0};\n\to.BIFFVer = blob.read_shift(2); length -= 2;\n\tif(length >= 2) { o.dt = blob.read_shift(2); blob.l -= 2; }\n\tswitch(o.BIFFVer) {\n\t\tcase 0x0600: /* BIFF8 */\n\t\tcase 0x0500: /* BIFF5 */\n\t\tcase 0x0400: /* BIFF4 */\n\t\tcase 0x0300: /* BIFF3 */\n\t\tcase 0x0200: /* BIFF2 */\n\t\tcase 0x0002: case 0x0007: /* BIFF2 */\n\t\t\tbreak;\n\t\tdefault: if(length > 6) throw new Error(\"Unexpected BIFF Ver \" + o.BIFFVer);\n\t}\n\n\tblob.read_shift(length);\n\treturn o;\n}\nfunction write_BOF(wb/*:Workbook*/, t/*:number*/, o) {\n\tvar h = 0x0600, w = 16;\n\tswitch(o.bookType) {\n\t\tcase 'biff8': break;\n\t\tcase 'biff5': h = 0x0500; w = 8; break;\n\t\tcase 'biff4': h = 0x0004; w = 6; break;\n\t\tcase 'biff3': h = 0x0003; w = 6; break;\n\t\tcase 'biff2': h = 0x0002; w = 4; break;\n\t\tcase 'xla': break;\n\t\tdefault: throw new Error(\"unsupported BIFF version\");\n\t}\n\tvar out = new_buf(w);\n\tout.write_shift(2, h);\n\tout.write_shift(2, t);\n\tif(w > 4) out.write_shift(2, 0x7262);\n\tif(w > 6) out.write_shift(2, 0x07CD);\n\tif(w > 8) {\n\t\tout.write_shift(2, 0xC009);\n\t\tout.write_shift(2, 0x0001);\n\t\tout.write_shift(2, 0x0706);\n\t\tout.write_shift(2, 0x0000);\n\t}\n\treturn out;\n}\n\n\n/* [MS-XLS] 2.4.146 */\nfunction parse_InterfaceHdr(blob, length) {\n\tif(length === 0) return 0x04b0;\n\tif((blob.read_shift(2))!==0x04b0){/* empty */}\n\treturn 0x04b0;\n}\n\n\n/* [MS-XLS] 2.4.349 */\nfunction parse_WriteAccess(blob, length, opts) {\n\tif(opts.enc) { blob.l += length; return \"\"; }\n\tvar l = blob.l;\n\t// TODO: make sure XLUnicodeString doesnt overrun\n\tvar UserName = parse_XLUnicodeString2(blob, 0, opts);\n\tblob.read_shift(length + l - blob.l);\n\treturn UserName;\n}\nfunction write_WriteAccess(s/*:string*/, opts) {\n\tvar b8 = !opts || opts.biff == 8;\n\tvar o = new_buf(b8 ? 112 : 54);\n\to.write_shift(opts.biff == 8 ? 2 : 1, 7);\n\tif(b8) o.write_shift(1, 0);\n\to.write_shift(4, 0x33336853);\n\to.write_shift(4, (0x00534A74 | (b8 ? 0 : 0x20000000)));\n\twhile(o.l < o.length) o.write_shift(1, (b8 ? 0 : 32));\n\treturn o;\n}\n\n/* [MS-XLS] 2.4.351 */\nfunction parse_WsBool(blob, length, opts) {\n\tvar flags = opts && opts.biff == 8 || length == 2 ? blob.read_shift(2) : (blob.l += length, 0);\n\treturn { fDialog: flags & 0x10, fBelow: flags & 0x40, fRight: flags & 0x80 };\n}\n\n/* [MS-XLS] 2.4.28 */\nfunction parse_BoundSheet8(blob, length, opts) {\n\tvar pos = blob.read_shift(4);\n\tvar hidden = blob.read_shift(1) & 0x03;\n\tvar dt = blob.read_shift(1);\n\tswitch(dt) {\n\t\tcase 0: dt = 'Worksheet'; break;\n\t\tcase 1: dt = 'Macrosheet'; break;\n\t\tcase 2: dt = 'Chartsheet'; break;\n\t\tcase 6: dt = 'VBAModule'; break;\n\t}\n\tvar name = parse_ShortXLUnicodeString(blob, 0, opts);\n\tif(name.length === 0) name = \"Sheet1\";\n\treturn { pos:pos, hs:hidden, dt:dt, name:name };\n}\nfunction write_BoundSheet8(data, opts) {\n\tvar w = (!opts || opts.biff >= 8 ? 2 : 1);\n\tvar o = new_buf(8 + w * data.name.length);\n\to.write_shift(4, data.pos);\n\to.write_shift(1, data.hs || 0);\n\to.write_shift(1, data.dt);\n\to.write_shift(1, data.name.length);\n\tif(opts.biff >= 8) o.write_shift(1, 1);\n\to.write_shift(w * data.name.length, data.name, opts.biff < 8 ? 'sbcs' : 'utf16le');\n\tvar out = o.slice(0, o.l);\n\tout.l = o.l; return out;\n}\n\n/* [MS-XLS] 2.4.265 TODO */\nfunction parse_SST(blob, length)/*:SST*/ {\n\tvar end = blob.l + length;\n\tvar cnt = blob.read_shift(4);\n\tvar ucnt = blob.read_shift(4);\n\tvar strs/*:SST*/ = ([]/*:any*/);\n\tfor(var i = 0; i != ucnt && blob.l < end; ++i) {\n\t\tstrs.push(parse_XLUnicodeRichExtendedString(blob));\n\t}\n\tstrs.Count = cnt; strs.Unique = ucnt;\n\treturn strs;\n}\nfunction write_SST(sst, opts) {\n\tvar header = new_buf(8);\n\theader.write_shift(4, sst.Count);\n\theader.write_shift(4, sst.Unique);\n\tvar strs = [];\n\tfor(var j = 0; j < sst.length; ++j) strs[j] = write_XLUnicodeRichExtendedString(sst[j], opts);\n\tvar o = bconcat([header].concat(strs));\n\t/*::(*/o/*:: :any)*/.parts = [header.length].concat(strs.map(function(str) { return str.length; }));\n\treturn o;\n}\n\n/* [MS-XLS] 2.4.107 */\nfunction parse_ExtSST(blob, length) {\n\tvar extsst = {};\n\textsst.dsst = blob.read_shift(2);\n\tblob.l += length-2;\n\treturn extsst;\n}\n\n\n/* [MS-XLS] 2.4.221 TODO: check BIFF2-4 */\nfunction parse_Row(blob) {\n\tvar z = ({}/*:any*/);\n\tz.r = blob.read_shift(2);\n\tz.c = blob.read_shift(2);\n\tz.cnt = blob.read_shift(2) - z.c;\n\tvar miyRw = blob.read_shift(2);\n\tblob.l += 4; // reserved(2), unused(2)\n\tvar flags = blob.read_shift(1); // various flags\n\tblob.l += 3; // reserved(8), ixfe(12), flags(4)\n\tif(flags & 0x07) z.level = flags & 0x07;\n\t// collapsed: flags & 0x10\n\tif(flags & 0x20) z.hidden = true;\n\tif(flags & 0x40) z.hpt = miyRw / 20;\n\treturn z;\n}\n\n\n/* [MS-XLS] 2.4.125 */\nfunction parse_ForceFullCalculation(blob) {\n\tvar header = parse_frtHeader(blob);\n\tif(header.type != 0x08A3) throw new Error(\"Invalid Future Record \" + header.type);\n\tvar fullcalc = blob.read_shift(4);\n\treturn fullcalc !== 0x0;\n}\n\n\n\n\n\n/* [MS-XLS] 2.4.215 rt */\nfunction parse_RecalcId(blob) {\n\tblob.read_shift(2);\n\treturn blob.read_shift(4);\n}\n\n/* [MS-XLS] 2.4.87 */\nfunction parse_DefaultRowHeight(blob, length, opts) {\n\tvar f = 0;\n\tif(!(opts && opts.biff == 2)) {\n\t\tf = blob.read_shift(2);\n\t}\n\tvar miyRw = blob.read_shift(2);\n\tif((opts && opts.biff == 2)) {\n\t\tf = 1 - (miyRw >> 15); miyRw &= 0x7fff;\n\t}\n\tvar fl = {Unsynced:f&1,DyZero:(f&2)>>1,ExAsc:(f&4)>>2,ExDsc:(f&8)>>3};\n\treturn [fl, miyRw];\n}\n\n/* [MS-XLS] 2.4.345 TODO */\nfunction parse_Window1(blob) {\n\tvar xWn = blob.read_shift(2), yWn = blob.read_shift(2), dxWn = blob.read_shift(2), dyWn = blob.read_shift(2);\n\tvar flags = blob.read_shift(2), iTabCur = blob.read_shift(2), iTabFirst = blob.read_shift(2);\n\tvar ctabSel = blob.read_shift(2), wTabRatio = blob.read_shift(2);\n\treturn { Pos: [xWn, yWn], Dim: [dxWn, dyWn], Flags: flags, CurTab: iTabCur,\n\t\tFirstTab: iTabFirst, Selected: ctabSel, TabRatio: wTabRatio };\n}\nfunction write_Window1(/*::opts*/) {\n\tvar o = new_buf(18);\n\to.write_shift(2, 0);\n\to.write_shift(2, 0);\n\to.write_shift(2, 0x7260);\n\to.write_shift(2, 0x44c0);\n\to.write_shift(2, 0x38);\n\to.write_shift(2, 0);\n\to.write_shift(2, 0);\n\to.write_shift(2, 1);\n\to.write_shift(2, 0x01f4);\n\treturn o;\n}\n/* [MS-XLS] 2.4.346 TODO */\nfunction parse_Window2(blob, length, opts) {\n\tif(opts && opts.biff >= 2 && opts.biff < 5) return {};\n\tvar f = blob.read_shift(2);\n\treturn { RTL: f & 0x40 };\n}\nfunction write_Window2(view) {\n\tvar o = new_buf(18), f = 0x6b6;\n\tif(view && view.RTL) f |= 0x40;\n\to.write_shift(2, f);\n\to.write_shift(4, 0);\n\to.write_shift(4, 64);\n\to.write_shift(4, 0);\n\to.write_shift(4, 0);\n\treturn o;\n}\n\n/* [MS-XLS] 2.4.189 TODO */\nfunction parse_Pane(/*blob, length, opts*/) {\n}\n\n/* [MS-XLS] 2.4.122 TODO */\nfunction parse_Font(blob, length, opts) {\n\tvar o/*:any*/ = {\n\t\tdyHeight: blob.read_shift(2),\n\t\tfl: blob.read_shift(2)\n\t};\n\tswitch((opts && opts.biff) || 8) {\n\t\tcase 2: break;\n\t\tcase 3: case 4: blob.l += 2; break;\n\t\tdefault: blob.l += 10; break;\n\t}\n\to.name = parse_ShortXLUnicodeString(blob, 0, opts);\n\treturn o;\n}\nfunction write_Font(data, opts) {\n\tvar name = data.name || \"Arial\";\n\tvar b5 = (opts && (opts.biff == 5)), w = (b5 ? (15 + name.length) : (16 + 2 * name.length));\n\tvar o = new_buf(w);\n\to.write_shift(2, (data.sz || 12) * 20);\n\to.write_shift(4, 0);\n\to.write_shift(2, 400);\n\to.write_shift(4, 0);\n\to.write_shift(2, 0);\n\to.write_shift(1, name.length);\n\tif(!b5) o.write_shift(1, 1);\n\to.write_shift((b5 ? 1 : 2) * name.length, name, (b5 ? \"sbcs\" : \"utf16le\"));\n\treturn o;\n}\n\n/* [MS-XLS] 2.4.149 */\nfunction parse_LabelSst(blob) {\n\tvar cell = parse_XLSCell(blob);\n\tcell.isst = blob.read_shift(4);\n\treturn cell;\n}\nfunction write_LabelSst(R/*:number*/, C/*:number*/, v/*:number*/, os/*:number*/ /*::, opts*/) {\n\tvar o = new_buf(10);\n\twrite_XLSCell(R, C, os, o);\n\to.write_shift(4, v);\n\treturn o;\n}\n\n/* [MS-XLS] 2.4.148 */\nfunction parse_Label(blob, length, opts) {\n\tif(opts.biffguess && opts.biff == 2) opts.biff = 5;\n\tvar target = blob.l + length;\n\tvar cell = parse_XLSCell(blob, 6);\n\tif(opts.biff == 2) blob.l++;\n\tvar str = parse_XLUnicodeString(blob, target - blob.l, opts);\n\tcell.val = str;\n\treturn cell;\n}\nfunction write_Label(R/*:number*/, C/*:number*/, v/*:string*/, os/*:number*/, opts) {\n\tvar b8 = !opts || opts.biff == 8;\n\tvar o = new_buf(6 + 2 + (+b8) + (1 + b8) * v.length);\n\twrite_XLSCell(R, C, os, o);\n\to.write_shift(2, v.length);\n\tif(b8) o.write_shift(1, 1);\n\to.write_shift((1 + b8) * v.length, v, b8 ? 'utf16le' : 'sbcs');\n\treturn o;\n}\n\n\n/* [MS-XLS] 2.4.126 Number Formats */\nfunction parse_Format(blob, length, opts) {\n\tvar numFmtId = blob.read_shift(2);\n\tvar fmtstr = parse_XLUnicodeString2(blob, 0, opts);\n\treturn [numFmtId, fmtstr];\n}\nfunction write_Format(i/*:number*/, f/*:string*/, opts, o) {\n\tvar b5 = (opts && (opts.biff == 5));\n\tif(!o) o = new_buf(b5 ? (3 + f.length) : (5 + 2 * f.length));\n\to.write_shift(2, i);\n\to.write_shift((b5 ? 1 : 2), f.length);\n\tif(!b5) o.write_shift(1, 1);\n\to.write_shift((b5 ? 1 : 2) * f.length, f, (b5 ? 'sbcs' : 'utf16le'));\n\tvar out = (o.length > o.l) ? o.slice(0, o.l) : o;\n\tif(out.l == null) out.l = out.length;\n\treturn out;\n}\nvar parse_BIFF2Format = parse_XLUnicodeString2;\n\n/* [MS-XLS] 2.4.90 */\nfunction parse_Dimensions(blob, length, opts) {\n\tvar end = blob.l + length;\n\tvar w = opts.biff == 8 || !opts.biff ? 4 : 2;\n\tvar r = blob.read_shift(w), R = blob.read_shift(w);\n\tvar c = blob.read_shift(2), C = blob.read_shift(2);\n\tblob.l = end;\n\treturn {s: {r:r, c:c}, e: {r:R, c:C}};\n}\nfunction write_Dimensions(range, opts) {\n\tvar w = opts.biff == 8 || !opts.biff ? 4 : 2;\n\tvar o = new_buf(2*w + 6);\n\to.write_shift(w, range.s.r);\n\to.write_shift(w, range.e.r + 1);\n\to.write_shift(2, range.s.c);\n\to.write_shift(2, range.e.c + 1);\n\to.write_shift(2, 0);\n\treturn o;\n}\n\n/* [MS-XLS] 2.4.220 */\nfunction parse_RK(blob) {\n\tvar rw = blob.read_shift(2), col = blob.read_shift(2);\n\tvar rkrec = parse_RkRec(blob);\n\treturn {r:rw, c:col, ixfe:rkrec[0], rknum:rkrec[1]};\n}\n\n/* [MS-XLS] 2.4.175 */\nfunction parse_MulRk(blob, length) {\n\tvar target = blob.l + length - 2;\n\tvar rw = blob.read_shift(2), col = blob.read_shift(2);\n\tvar rkrecs = [];\n\twhile(blob.l < target) rkrecs.push(parse_RkRec(blob));\n\tif(blob.l !== target) throw new Error(\"MulRK read error\");\n\tvar lastcol = blob.read_shift(2);\n\tif(rkrecs.length != lastcol - col + 1) throw new Error(\"MulRK length mismatch\");\n\treturn {r:rw, c:col, C:lastcol, rkrec:rkrecs};\n}\n/* [MS-XLS] 2.4.174 */\nfunction parse_MulBlank(blob, length) {\n\tvar target = blob.l + length - 2;\n\tvar rw = blob.read_shift(2), col = blob.read_shift(2);\n\tvar ixfes = [];\n\twhile(blob.l < target) ixfes.push(blob.read_shift(2));\n\tif(blob.l !== target) throw new Error(\"MulBlank read error\");\n\tvar lastcol = blob.read_shift(2);\n\tif(ixfes.length != lastcol - col + 1) throw new Error(\"MulBlank length mismatch\");\n\treturn {r:rw, c:col, C:lastcol, ixfe:ixfes};\n}\n\n/* [MS-XLS] 2.5.20 2.5.249 TODO: interpret values here */\nfunction parse_CellStyleXF(blob, length, style, opts) {\n\tvar o = {};\n\tvar a = blob.read_shift(4), b = blob.read_shift(4);\n\tvar c = blob.read_shift(4), d = blob.read_shift(2);\n\to.patternType = XLSFillPattern[c >> 26];\n\n\tif(!opts.cellStyles) return o;\n\to.alc = a & 0x07;\n\to.fWrap = (a >> 3) & 0x01;\n\to.alcV = (a >> 4) & 0x07;\n\to.fJustLast = (a >> 7) & 0x01;\n\to.trot = (a >> 8) & 0xFF;\n\to.cIndent = (a >> 16) & 0x0F;\n\to.fShrinkToFit = (a >> 20) & 0x01;\n\to.iReadOrder = (a >> 22) & 0x02;\n\to.fAtrNum = (a >> 26) & 0x01;\n\to.fAtrFnt = (a >> 27) & 0x01;\n\to.fAtrAlc = (a >> 28) & 0x01;\n\to.fAtrBdr = (a >> 29) & 0x01;\n\to.fAtrPat = (a >> 30) & 0x01;\n\to.fAtrProt = (a >> 31) & 0x01;\n\n\to.dgLeft = b & 0x0F;\n\to.dgRight = (b >> 4) & 0x0F;\n\to.dgTop = (b >> 8) & 0x0F;\n\to.dgBottom = (b >> 12) & 0x0F;\n\to.icvLeft = (b >> 16) & 0x7F;\n\to.icvRight = (b >> 23) & 0x7F;\n\to.grbitDiag = (b >> 30) & 0x03;\n\n\to.icvTop = c & 0x7F;\n\to.icvBottom = (c >> 7) & 0x7F;\n\to.icvDiag = (c >> 14) & 0x7F;\n\to.dgDiag = (c >> 21) & 0x0F;\n\n\to.icvFore = d & 0x7F;\n\to.icvBack = (d >> 7) & 0x7F;\n\to.fsxButton = (d >> 14) & 0x01;\n\treturn o;\n}\n//function parse_CellXF(blob, length, opts) {return parse_CellStyleXF(blob,length,0, opts);}\n//function parse_StyleXF(blob, length, opts) {return parse_CellStyleXF(blob,length,1, opts);}\n\n/* [MS-XLS] 2.4.353 TODO: actually do this right */\nfunction parse_XF(blob, length, opts) {\n\tvar o = {};\n\to.ifnt = blob.read_shift(2); o.numFmtId = blob.read_shift(2); o.flags = blob.read_shift(2);\n\to.fStyle = (o.flags >> 2) & 0x01;\n\tlength -= 6;\n\to.data = parse_CellStyleXF(blob, length, o.fStyle, opts);\n\treturn o;\n}\nfunction write_XF(data, ixfeP, opts, o) {\n\tvar b5 = (opts && (opts.biff == 5));\n\tif(!o) o = new_buf(b5 ? 16 : 20);\n\to.write_shift(2, 0);\n\tif(data.style) {\n\t\to.write_shift(2, (data.numFmtId||0));\n\t\to.write_shift(2, 0xFFF4);\n\t} else {\n\t\to.write_shift(2, (data.numFmtId||0));\n\t\to.write_shift(2, (ixfeP<<4));\n\t}\n\tvar f = 0;\n\tif(data.numFmtId > 0 && b5) f |= 0x0400;\n\to.write_shift(4, f);\n\to.write_shift(4, 0);\n\tif(!b5) o.write_shift(4, 0);\n\to.write_shift(2, 0);\n\treturn o;\n}\n\n/* [MS-XLS] 2.4.134 */\nfunction parse_Guts(blob) {\n\tblob.l += 4;\n\tvar out = [blob.read_shift(2), blob.read_shift(2)];\n\tif(out[0] !== 0) out[0]--;\n\tif(out[1] !== 0) out[1]--;\n\tif(out[0] > 7 || out[1] > 7) throw new Error(\"Bad Gutters: \" + out.join(\"|\"));\n\treturn out;\n}\nfunction write_Guts(guts/*:Array<number>*/) {\n\tvar o = new_buf(8);\n\to.write_shift(4, 0);\n\to.write_shift(2, guts[0] ? guts[0] + 1 : 0);\n\to.write_shift(2, guts[1] ? guts[1] + 1 : 0);\n\treturn o;\n}\n\n/* [MS-XLS] 2.4.24 */\nfunction parse_BoolErr(blob, length, opts) {\n\tvar cell = parse_XLSCell(blob, 6);\n\tif(opts.biff == 2 || length == 9) ++blob.l;\n\tvar val = parse_Bes(blob, 2);\n\tcell.val = val;\n\tcell.t = (val === true || val === false) ? 'b' : 'e';\n\treturn cell;\n}\nfunction write_BoolErr(R/*:number*/, C/*:number*/, v, os/*:number*/, opts, t/*:string*/) {\n\tvar o = new_buf(8);\n\twrite_XLSCell(R, C, os, o);\n\twrite_Bes(v, t, o);\n\treturn o;\n}\n\n/* [MS-XLS] 2.4.180 Number */\nfunction parse_Number(blob, length, opts) {\n\tif(opts.biffguess && opts.biff == 2) opts.biff = 5;\n\tvar cell = parse_XLSCell(blob, 6);\n\tvar xnum = parse_Xnum(blob, 8);\n\tcell.val = xnum;\n\treturn cell;\n}\nfunction write_Number(R/*:number*/, C/*:number*/, v, os/*:: :number, opts*/) {\n\tvar o = new_buf(14);\n\twrite_XLSCell(R, C, os, o);\n\twrite_Xnum(v, o);\n\treturn o;\n}\n\nvar parse_XLHeaderFooter = parse_OptXLUnicodeString; // TODO: parse 2.4.136\n\n/* [MS-XLS] 2.4.271 */\nfunction parse_SupBook(blob, length, opts) {\n\tvar end = blob.l + length;\n\tvar ctab = blob.read_shift(2);\n\tvar cch = blob.read_shift(2);\n\topts.sbcch = cch;\n\tif(cch == 0x0401 || cch == 0x3A01) return [cch, ctab];\n\tif(cch < 0x01 || cch >0xff) throw new Error(\"Unexpected SupBook type: \"+cch);\n\tvar virtPath = parse_XLUnicodeStringNoCch(blob, cch);\n\t/* TODO: 2.5.277 Virtual Path */\n\tvar rgst = [];\n\twhile(end > blob.l) rgst.push(parse_XLUnicodeString(blob));\n\treturn [cch, ctab, virtPath, rgst];\n}\n\n/* [MS-XLS] 2.4.105 TODO */\nfunction parse_ExternName(blob, length, opts) {\n\tvar flags = blob.read_shift(2);\n\tvar body;\n\tvar o = ({\n\t\tfBuiltIn: flags & 0x01,\n\t\tfWantAdvise: (flags >>> 1) & 0x01,\n\t\tfWantPict: (flags >>> 2) & 0x01,\n\t\tfOle: (flags >>> 3) & 0x01,\n\t\tfOleLink: (flags >>> 4) & 0x01,\n\t\tcf: (flags >>> 5) & 0x3FF,\n\t\tfIcon: flags >>> 15 & 0x01\n\t}/*:any*/);\n\tif(opts.sbcch === 0x3A01) body = parse_AddinUdf(blob, length-2, opts);\n\t//else throw new Error(\"unsupported SupBook cch: \" + opts.sbcch);\n\to.body = body || blob.read_shift(length-2);\n\tif(typeof body === \"string\") o.Name = body;\n\treturn o;\n}\n\n/* [MS-XLS] 2.4.150 TODO */\nfunction parse_Lbl(blob, length, opts) {\n\tvar target = blob.l + length;\n\tvar flags = blob.read_shift(2);\n\tvar chKey = blob.read_shift(1);\n\tvar cch = blob.read_shift(1);\n\tvar cce = blob.read_shift(opts && opts.biff == 2 ? 1 : 2);\n\tvar itab = 0;\n\tif(!opts || opts.biff >= 5) {\n\t\tif(opts.biff != 5) blob.l += 2;\n\t\titab = blob.read_shift(2);\n\t\tif(opts.biff == 5) blob.l += 2;\n\t\tblob.l += 4;\n\t}\n\tvar name = parse_XLUnicodeStringNoCch(blob, cch, opts);\n\tif(flags & 0x20) name = XLSLblBuiltIn[name.charCodeAt(0)];\n\tvar npflen = target - blob.l; if(opts && opts.biff == 2) --npflen;\n\t/*jshint -W018 */\n\tvar rgce = (target == blob.l || cce === 0 || !(npflen > 0)) ? [] : parse_NameParsedFormula(blob, npflen, opts, cce);\n\t/*jshint +W018 */\n\treturn {\n\t\tchKey: chKey,\n\t\tName: name,\n\t\titab: itab,\n\t\trgce: rgce\n\t};\n}\n\n/* [MS-XLS] 2.4.106 TODO: legacy record filename encoding */\nfunction parse_ExternSheet(blob, length, opts) {\n\tif(opts.biff < 8) return parse_BIFF5ExternSheet(blob, length, opts);\n\t/* see issue 2907 */\n\tif(!(opts.biff > 8) && (length == blob[blob.l] + (blob[blob.l+1] == 0x03 ? 1 : 0) + 1)) return parse_BIFF5ExternSheet(blob, length, opts);\n\tvar o = [], target = blob.l + length, len = blob.read_shift(opts.biff > 8 ? 4 : 2);\n\twhile(len-- !== 0) o.push(parse_XTI(blob, opts.biff > 8 ? 12 : 6, opts));\n\t\t// [iSupBook, itabFirst, itabLast];\n\tif(blob.l != target) throw new Error(\"Bad ExternSheet: \" + blob.l + \" != \" + target);\n\treturn o;\n}\nfunction parse_BIFF5ExternSheet(blob, length, opts) {\n\tif(blob[blob.l + 1] == 0x03) blob[blob.l]++;\n\tvar o = parse_ShortXLUnicodeString(blob, length, opts);\n\treturn o.charCodeAt(0) == 0x03 ? o.slice(1) : o;\n}\n\n/* [MS-XLS] 2.4.176 TODO: check older biff */\nfunction parse_NameCmt(blob, length, opts) {\n\tif(opts.biff < 8) { blob.l += length; return; }\n\tvar cchName = blob.read_shift(2);\n\tvar cchComment = blob.read_shift(2);\n\tvar name = parse_XLUnicodeStringNoCch(blob, cchName, opts);\n\tvar comment = parse_XLUnicodeStringNoCch(blob, cchComment, opts);\n\treturn [name, comment];\n}\n\n/* [MS-XLS] 2.4.260 */\nfunction parse_ShrFmla(blob, length, opts) {\n\tvar ref = parse_RefU(blob, 6);\n\tblob.l++;\n\tvar cUse = blob.read_shift(1);\n\tlength -= 8;\n\treturn [parse_SharedParsedFormula(blob, length, opts), cUse, ref];\n}\n\n/* [MS-XLS] 2.4.4 TODO */\nfunction parse_Array(blob, length, opts) {\n\tvar ref = parse_Ref(blob, 6);\n\t/* TODO: fAlwaysCalc */\n\tswitch(opts.biff) {\n\t\tcase 2: blob.l ++; length -= 7; break;\n\t\tcase 3: case 4: blob.l += 2; length -= 8; break;\n\t\tdefault: blob.l += 6; length -= 12;\n\t}\n\treturn [ref, parse_ArrayParsedFormula(blob, length, opts, ref)];\n}\n\n/* [MS-XLS] 2.4.173 */\nfunction parse_MTRSettings(blob) {\n\tvar fMTREnabled = blob.read_shift(4) !== 0x00;\n\tvar fUserSetThreadCount = blob.read_shift(4) !== 0x00;\n\tvar cUserThreadCount = blob.read_shift(4);\n\treturn [fMTREnabled, fUserSetThreadCount, cUserThreadCount];\n}\n\n/* [MS-XLS] 2.5.186 TODO: BIFF5 */\nfunction parse_NoteSh(blob, length, opts) {\n\tif(opts.biff < 8) return;\n\tvar row = blob.read_shift(2), col = blob.read_shift(2);\n\tvar flags = blob.read_shift(2), idObj = blob.read_shift(2);\n\tvar stAuthor = parse_XLUnicodeString2(blob, 0, opts);\n\tif(opts.biff < 8) blob.read_shift(1);\n\treturn [{r:row,c:col}, stAuthor, idObj, flags];\n}\n\n/* [MS-XLS] 2.4.179 */\nfunction parse_Note(blob, length, opts) {\n\t/* TODO: Support revisions */\n\treturn parse_NoteSh(blob, length, opts);\n}\n\n/* [MS-XLS] 2.4.168 */\nfunction parse_MergeCells(blob, length)/*:Array<Range>*/ {\n\tvar merges/*:Array<Range>*/ = [];\n\tvar cmcs = blob.read_shift(2);\n\twhile (cmcs--) merges.push(parse_Ref8U(blob,length));\n\treturn merges;\n}\nfunction write_MergeCells(merges/*:Array<Range>*/) {\n\tvar o = new_buf(2 + merges.length * 8);\n\to.write_shift(2, merges.length);\n\tfor(var i = 0; i < merges.length; ++i) write_Ref8U(merges[i], o);\n\treturn o;\n}\n\n/* [MS-XLS] 2.4.181 TODO: parse all the things! */\nfunction parse_Obj(blob, length, opts) {\n\tif(opts && opts.biff < 8) return parse_BIFF5Obj(blob, length, opts);\n\tvar cmo = parse_FtCmo(blob, 22); // id, ot, flags\n\tvar fts = parse_FtArray(blob, length-22, cmo[1]);\n\treturn { cmo: cmo, ft:fts };\n}\n/* from older spec */\nvar parse_BIFF5OT = {\n0x08: function(blob, length) {\n\tvar tgt = blob.l + length;\n\tblob.l += 10; // todo\n\tvar cf = blob.read_shift(2);\n\tblob.l += 4;\n\tblob.l += 2; //var cbPictFmla = blob.read_shift(2);\n\tblob.l += 2;\n\tblob.l += 2; //var grbit = blob.read_shift(2);\n\tblob.l += 4;\n\tvar cchName = blob.read_shift(1);\n\tblob.l += cchName; // TODO: stName\n\tblob.l = tgt; // TODO: fmla\n\treturn { fmt:cf };\n}\n};\n\nfunction parse_BIFF5Obj(blob, length, opts) {\n\tblob.l += 4; //var cnt = blob.read_shift(4);\n\tvar ot = blob.read_shift(2);\n\tvar id = blob.read_shift(2);\n\tvar grbit = blob.read_shift(2);\n\tblob.l += 2; //var colL = blob.read_shift(2);\n\tblob.l += 2; //var dxL = blob.read_shift(2);\n\tblob.l += 2; //var rwT = blob.read_shift(2);\n\tblob.l += 2; //var dyT = blob.read_shift(2);\n\tblob.l += 2; //var colR = blob.read_shift(2);\n\tblob.l += 2; //var dxR = blob.read_shift(2);\n\tblob.l += 2; //var rwB = blob.read_shift(2);\n\tblob.l += 2; //var dyB = blob.read_shift(2);\n\tblob.l += 2; //var cbMacro = blob.read_shift(2);\n\tblob.l += 6;\n\tlength -= 36;\n\tvar fts = [];\n\tfts.push((parse_BIFF5OT[ot]||parsenoop)(blob, length, opts));\n\treturn { cmo: [id, ot, grbit], ft:fts };\n}\n\n/* [MS-XLS] 2.4.329 TODO: parse properly */\nfunction parse_TxO(blob, length, opts) {\n\tvar s = blob.l;\n\tvar texts = \"\";\ntry {\n\tblob.l += 4;\n\tvar ot = (opts.lastobj||{cmo:[0,0]}).cmo[1];\n\tvar controlInfo; // eslint-disable-line no-unused-vars\n\tif([0,5,7,11,12,14].indexOf(ot) == -1) blob.l += 6;\n\telse controlInfo = parse_ControlInfo(blob, 6, opts); // eslint-disable-line no-unused-vars\n\tvar cchText = blob.read_shift(2);\n\t/*var cbRuns = */blob.read_shift(2);\n\t/*var ifntEmpty = */parseuint16(blob, 2);\n\tvar len = blob.read_shift(2);\n\tblob.l += len;\n\t//var fmla = parse_ObjFmla(blob, s + length - blob.l);\n\n\tfor(var i = 1; i < blob.lens.length-1; ++i) {\n\t\tif(blob.l-s != blob.lens[i]) throw new Error(\"TxO: bad continue record\");\n\t\tvar hdr = blob[blob.l];\n\t\tvar t = parse_XLUnicodeStringNoCch(blob, blob.lens[i+1]-blob.lens[i]-1);\n\t\ttexts += t;\n\t\tif(texts.length >= (hdr ? cchText : 2*cchText)) break;\n\t}\n\tif(texts.length !== cchText && texts.length !== cchText*2) {\n\t\tthrow new Error(\"cchText: \" + cchText + \" != \" + texts.length);\n\t}\n\n\tblob.l = s + length;\n\t/* [MS-XLS] 2.5.272 TxORuns */\n//\tvar rgTxoRuns = [];\n//\tfor(var j = 0; j != cbRuns/8-1; ++j) blob.l += 8;\n//\tvar cchText2 = blob.read_shift(2);\n//\tif(cchText2 !== cchText) throw new Error(\"TxOLastRun mismatch: \" + cchText2 + \" \" + cchText);\n//\tblob.l += 6;\n//\tif(s + length != blob.l) throw new Error(\"TxO \" + (s + length) + \", at \" + blob.l);\n\treturn { t: texts };\n} catch(e) { blob.l = s + length; return { t: texts }; }\n}\n\n/* [MS-XLS] 2.4.140 */\nfunction parse_HLink(blob, length) {\n\tvar ref = parse_Ref8U(blob, 8);\n\tblob.l += 16; /* CLSID */\n\tvar hlink = parse_Hyperlink(blob, length-24);\n\treturn [ref, hlink];\n}\nfunction write_HLink(hl) {\n\tvar O = new_buf(24);\n\tvar ref = decode_cell(hl[0]);\n\tO.write_shift(2, ref.r); O.write_shift(2, ref.r);\n\tO.write_shift(2, ref.c); O.write_shift(2, ref.c);\n\tvar clsid = \"d0 c9 ea 79 f9 ba ce 11 8c 82 00 aa 00 4b a9 0b\".split(\" \");\n\tfor(var i = 0; i < 16; ++i) O.write_shift(1, parseInt(clsid[i], 16));\n\treturn bconcat([O, write_Hyperlink(hl[1])]);\n}\n\n\n/* [MS-XLS] 2.4.141 */\nfunction parse_HLinkTooltip(blob, length) {\n\tblob.read_shift(2);\n\tvar ref = parse_Ref8U(blob, 8);\n\tvar wzTooltip = blob.read_shift((length-10)/2, 'dbcs-cont');\n\twzTooltip = wzTooltip.replace(chr0,\"\");\n\treturn [ref, wzTooltip];\n}\nfunction write_HLinkTooltip(hl) {\n\tvar TT = hl[1].Tooltip;\n\tvar O = new_buf(10 + 2 * (TT.length + 1));\n\tO.write_shift(2, 0x0800);\n\tvar ref = decode_cell(hl[0]);\n\tO.write_shift(2, ref.r); O.write_shift(2, ref.r);\n\tO.write_shift(2, ref.c); O.write_shift(2, ref.c);\n\tfor(var i = 0; i < TT.length; ++i) O.write_shift(2, TT.charCodeAt(i));\n\tO.write_shift(2, 0);\n\treturn O;\n}\n\n/* [MS-XLS] 2.4.63 */\nfunction parse_Country(blob)/*:[string|number, string|number]*/ {\n\tvar o = [0,0], d;\n\td = blob.read_shift(2); o[0] = CountryEnum[d] || d;\n\td = blob.read_shift(2); o[1] = CountryEnum[d] || d;\n\treturn o;\n}\nfunction write_Country(o) {\n\tif(!o) o = new_buf(4);\n\to.write_shift(2, 0x01);\n\to.write_shift(2, 0x01);\n\treturn o;\n}\n\n/* [MS-XLS] 2.4.50 ClrtClient */\nfunction parse_ClrtClient(blob) {\n\tvar ccv = blob.read_shift(2);\n\tvar o = [];\n\twhile(ccv-->0) o.push(parse_LongRGB(blob, 8));\n\treturn o;\n}\n\n/* [MS-XLS] 2.4.188 */\nfunction parse_Palette(blob) {\n\tvar ccv = blob.read_shift(2);\n\tvar o = [];\n\twhile(ccv-->0) o.push(parse_LongRGB(blob, 8));\n\treturn o;\n}\n\n/* [MS-XLS] 2.4.354 */\nfunction parse_XFCRC(blob) {\n\tblob.l += 2;\n\tvar o = {cxfs:0, crc:0};\n\to.cxfs = blob.read_shift(2);\n\to.crc = blob.read_shift(4);\n\treturn o;\n}\n\n/* [MS-XLS] 2.4.53 TODO: parse flags */\n/* [MS-XLSB] 2.4.323 TODO: parse flags */\nfunction parse_ColInfo(blob, length, opts) {\n\tif(!opts.cellStyles) return parsenoop(blob, length);\n\tvar w = opts && opts.biff >= 12 ? 4 : 2;\n\tvar colFirst = blob.read_shift(w);\n\tvar colLast = blob.read_shift(w);\n\tvar coldx = blob.read_shift(w);\n\tvar ixfe = blob.read_shift(w);\n\tvar flags = blob.read_shift(2);\n\tif(w == 2) blob.l += 2;\n\tvar o = ({s:colFirst, e:colLast, w:coldx, ixfe:ixfe, flags:flags}/*:any*/);\n\tif(opts.biff >= 5 || !opts.biff) o.level = (flags >> 8) & 0x7;\n\treturn o;\n}\nfunction write_ColInfo(col, idx) {\n\tvar o = new_buf(12);\n\to.write_shift(2, idx);\n\to.write_shift(2, idx);\n\to.write_shift(2, col.width * 256);\n\to.write_shift(2, 0);\n\tvar f = 0;\n\tif(col.hidden) f |= 1;\n\to.write_shift(1, f);\n\tf = col.level || 0;\n\to.write_shift(1, f);\n\to.write_shift(2, 0);\n\treturn o;\n}\n\n/* [MS-XLS] 2.4.257 */\nfunction parse_Setup(blob, length) {\n\tvar o = {};\n\tif(length < 32) return o;\n\tblob.l += 16;\n\to.header = parse_Xnum(blob, 8);\n\to.footer = parse_Xnum(blob, 8);\n\tblob.l += 2;\n\treturn o;\n}\n\n/* [MS-XLS] 2.4.261 */\nfunction parse_ShtProps(blob, length, opts) {\n\tvar def = {area:false};\n\tif(opts.biff != 5) { blob.l += length; return def; }\n\tvar d = blob.read_shift(1); blob.l += 3;\n\tif((d & 0x10)) def.area = true;\n\treturn def;\n}\n\n/* [MS-XLS] 2.4.241 */\nfunction write_RRTabId(n/*:number*/) {\n\tvar out = new_buf(2 * n);\n\tfor(var i = 0; i < n; ++i) out.write_shift(2, i+1);\n\treturn out;\n}\n\nvar parse_Blank = parse_XLSCell; /* [MS-XLS] 2.4.20 Just the cell */\nvar parse_Scl = parseuint16a; /* [MS-XLS] 2.4.247 num, den */\nvar parse_String = parse_XLUnicodeString; /* [MS-XLS] 2.4.268 */\n\n/* --- Specific to versions before BIFF8 --- */\nfunction parse_ImData(blob) {\n\tvar cf = blob.read_shift(2);\n\tvar env = blob.read_shift(2);\n\tvar lcb = blob.read_shift(4);\n\tvar o = {fmt:cf, env:env, len:lcb, data:blob.slice(blob.l,blob.l+lcb)};\n\tblob.l += lcb;\n\treturn o;\n}\n\n/* BIFF2_??? where ??? is the name from [XLS] */\nfunction parse_BIFF2STR(blob, length, opts) {\n\tif(opts.biffguess && opts.biff == 5) opts.biff = 2;\n\tvar cell = parse_XLSCell(blob, 6);\n\t++blob.l;\n\tvar str = parse_XLUnicodeString2(blob, length-7, opts);\n\tcell.t = 'str';\n\tcell.val = str;\n\treturn cell;\n}\n\nfunction parse_BIFF2NUM(blob/*::, length*/) {\n\tvar cell = parse_XLSCell(blob, 6);\n\t++blob.l;\n\tvar num = parse_Xnum(blob, 8);\n\tcell.t = 'n';\n\tcell.val = num;\n\treturn cell;\n}\nfunction write_BIFF2NUM(r/*:number*/, c/*:number*/, val/*:number*/) {\n\tvar out = new_buf(15);\n\twrite_BIFF2Cell(out, r, c);\n\tout.write_shift(8, val, 'f');\n\treturn out;\n}\n\nfunction parse_BIFF2INT(blob) {\n\tvar cell = parse_XLSCell(blob, 6);\n\t++blob.l;\n\tvar num = blob.read_shift(2);\n\tcell.t = 'n';\n\tcell.val = num;\n\treturn cell;\n}\nfunction write_BIFF2INT(r/*:number*/, c/*:number*/, val/*:number*/) {\n\tvar out = new_buf(9);\n\twrite_BIFF2Cell(out, r, c);\n\tout.write_shift(2, val);\n\treturn out;\n}\n\nfunction parse_BIFF2STRING(blob) {\n\tvar cch = blob.read_shift(1);\n\tif(cch === 0) { blob.l++; return \"\"; }\n\treturn blob.read_shift(cch, 'sbcs-cont');\n}\n\n/* TODO: convert to BIFF8 font struct */\nfunction parse_BIFF2FONTXTRA(blob, length) {\n\tblob.l += 6; // unknown\n\tblob.l += 2; // font weight \"bls\"\n\tblob.l += 1; // charset\n\tblob.l += 3; // unknown\n\tblob.l += 1; // font family\n\tblob.l += length - 13;\n}\n\n/* TODO: parse rich text runs */\nfunction parse_RString(blob, length, opts) {\n\tvar end = blob.l + length;\n\tvar cell = parse_XLSCell(blob, 6);\n\tvar cch = blob.read_shift(2);\n\tvar str = parse_XLUnicodeStringNoCch(blob, cch, opts);\n\tblob.l = end;\n\tcell.t = 'str';\n\tcell.val = str;\n\treturn cell;\n}\nvar DBF_SUPPORTED_VERSIONS = [0x02, 0x03, 0x30, 0x31, 0x83, 0x8B, 0x8C, 0xF5];\nvar DBF = /*#__PURE__*/(function() {\nvar dbf_codepage_map = {\n\t/* Code Pages Supported by Visual FoxPro */\n\t/*::[*/0x01/*::]*/:   437,           /*::[*/0x02/*::]*/:   850,\n\t/*::[*/0x03/*::]*/:  1252,           /*::[*/0x04/*::]*/: 10000,\n\t/*::[*/0x64/*::]*/:   852,           /*::[*/0x65/*::]*/:   866,\n\t/*::[*/0x66/*::]*/:   865,           /*::[*/0x67/*::]*/:   861,\n\t/*::[*/0x68/*::]*/:   895,           /*::[*/0x69/*::]*/:   620,\n\t/*::[*/0x6A/*::]*/:   737,           /*::[*/0x6B/*::]*/:   857,\n\t/*::[*/0x78/*::]*/:   950,           /*::[*/0x79/*::]*/:   949,\n\t/*::[*/0x7A/*::]*/:   936,           /*::[*/0x7B/*::]*/:   932,\n\t/*::[*/0x7C/*::]*/:   874,           /*::[*/0x7D/*::]*/:  1255,\n\t/*::[*/0x7E/*::]*/:  1256,           /*::[*/0x96/*::]*/: 10007,\n\t/*::[*/0x97/*::]*/: 10029,           /*::[*/0x98/*::]*/: 10006,\n\t/*::[*/0xC8/*::]*/:  1250,           /*::[*/0xC9/*::]*/:  1251,\n\t/*::[*/0xCA/*::]*/:  1254,           /*::[*/0xCB/*::]*/:  1253,\n\n\t/* shapefile DBF extension */\n\t/*::[*/0x00/*::]*/: 20127,           /*::[*/0x08/*::]*/:   865,\n\t/*::[*/0x09/*::]*/:   437,           /*::[*/0x0A/*::]*/:   850,\n\t/*::[*/0x0B/*::]*/:   437,           /*::[*/0x0D/*::]*/:   437,\n\t/*::[*/0x0E/*::]*/:   850,           /*::[*/0x0F/*::]*/:   437,\n\t/*::[*/0x10/*::]*/:   850,           /*::[*/0x11/*::]*/:   437,\n\t/*::[*/0x12/*::]*/:   850,           /*::[*/0x13/*::]*/:   932,\n\t/*::[*/0x14/*::]*/:   850,           /*::[*/0x15/*::]*/:   437,\n\t/*::[*/0x16/*::]*/:   850,           /*::[*/0x17/*::]*/:   865,\n\t/*::[*/0x18/*::]*/:   437,           /*::[*/0x19/*::]*/:   437,\n\t/*::[*/0x1A/*::]*/:   850,           /*::[*/0x1B/*::]*/:   437,\n\t/*::[*/0x1C/*::]*/:   863,           /*::[*/0x1D/*::]*/:   850,\n\t/*::[*/0x1F/*::]*/:   852,           /*::[*/0x22/*::]*/:   852,\n\t/*::[*/0x23/*::]*/:   852,           /*::[*/0x24/*::]*/:   860,\n\t/*::[*/0x25/*::]*/:   850,           /*::[*/0x26/*::]*/:   866,\n\t/*::[*/0x37/*::]*/:   850,           /*::[*/0x40/*::]*/:   852,\n\t/*::[*/0x4D/*::]*/:   936,           /*::[*/0x4E/*::]*/:   949,\n\t/*::[*/0x4F/*::]*/:   950,           /*::[*/0x50/*::]*/:   874,\n\t/*::[*/0x57/*::]*/:  1252,           /*::[*/0x58/*::]*/:  1252,\n\t/*::[*/0x59/*::]*/:  1252,           /*::[*/0x6C/*::]*/:   863,\n\t/*::[*/0x86/*::]*/:   737,           /*::[*/0x87/*::]*/:   852,\n\t/*::[*/0x88/*::]*/:   857,           /*::[*/0xCC/*::]*/:  1257,\n\n\t/*::[*/0xFF/*::]*/: 16969\n};\nvar dbf_reverse_map = evert({\n\t/*::[*/0x01/*::]*/:   437,           /*::[*/0x02/*::]*/:   850,\n\t/*::[*/0x03/*::]*/:  1252,           /*::[*/0x04/*::]*/: 10000,\n\t/*::[*/0x64/*::]*/:   852,           /*::[*/0x65/*::]*/:   866,\n\t/*::[*/0x66/*::]*/:   865,           /*::[*/0x67/*::]*/:   861,\n\t/*::[*/0x68/*::]*/:   895,           /*::[*/0x69/*::]*/:   620,\n\t/*::[*/0x6A/*::]*/:   737,           /*::[*/0x6B/*::]*/:   857,\n\t/*::[*/0x78/*::]*/:   950,           /*::[*/0x79/*::]*/:   949,\n\t/*::[*/0x7A/*::]*/:   936,           /*::[*/0x7B/*::]*/:   932,\n\t/*::[*/0x7C/*::]*/:   874,           /*::[*/0x7D/*::]*/:  1255,\n\t/*::[*/0x7E/*::]*/:  1256,           /*::[*/0x96/*::]*/: 10007,\n\t/*::[*/0x97/*::]*/: 10029,           /*::[*/0x98/*::]*/: 10006,\n\t/*::[*/0xC8/*::]*/:  1250,           /*::[*/0xC9/*::]*/:  1251,\n\t/*::[*/0xCA/*::]*/:  1254,           /*::[*/0xCB/*::]*/:  1253,\n\t/*::[*/0x00/*::]*/: 20127\n});\n/* TODO: find an actual specification */\nfunction dbf_to_aoa(buf, opts)/*:AOA*/ {\n\tvar out/*:AOA*/ = [];\n\tvar d/*:Block*/ = (new_raw_buf(1)/*:any*/);\n\tswitch(opts.type) {\n\t\tcase 'base64': d = s2a(Base64_decode(buf)); break;\n\t\tcase 'binary': d = s2a(buf); break;\n\t\tcase 'buffer':\n\t\tcase 'array': d = buf; break;\n\t}\n\tprep_blob(d, 0);\n\n\t/* header */\n\tvar ft = d.read_shift(1);\n\tvar memo = !!(ft & 0x88);\n\tvar vfp = false, l7 = false;\n\tswitch(ft) {\n\t\tcase 0x02: break; // dBASE II\n\t\tcase 0x03: break; // dBASE III\n\t\tcase 0x30: vfp = true; memo = true; break; // VFP\n\t\tcase 0x31: vfp = true; memo = true; break; // VFP with autoincrement\n\t\t// 0x43 dBASE IV SQL table files\n\t\t// 0x63 dBASE IV SQL system files\n\t\tcase 0x83: break; // dBASE III with memo\n\t\tcase 0x8B: break; // dBASE IV with memo\n\t\tcase 0x8C: l7 = true; break; // dBASE Level 7 with memo\n\t\t// case 0xCB dBASE IV SQL table files with memo\n\t\tcase 0xF5: break; // FoxPro 2.x with memo\n\t\t// case 0xFB FoxBASE\n\t\tdefault: throw new Error(\"DBF Unsupported Version: \" + ft.toString(16));\n\t}\n\n\tvar nrow = 0, fpos = 0x0209;\n\tif(ft == 0x02) nrow = d.read_shift(2);\n\td.l += 3; // dBASE II stores DDMMYY date, others use YYMMDD\n\tif(ft != 0x02) nrow = d.read_shift(4);\n\tif(nrow > 1048576) nrow = 1e6;\n\n\tif(ft != 0x02) fpos = d.read_shift(2); // header length\n\tvar rlen = d.read_shift(2); // record length\n\n\tvar /*flags = 0,*/ current_cp = opts.codepage || 1252;\n\tif(ft != 0x02) { // 20 reserved bytes\n\t\td.l+=16;\n\t\t/*flags = */d.read_shift(1);\n\t\t//if(memo && ((flags & 0x02) === 0)) throw new Error(\"DBF Flags \" + flags.toString(16) + \" ft \" + ft.toString(16));\n\n\t\t/* codepage present in FoxPro and dBASE Level 7 */\n\t\tif(d[d.l] !== 0) current_cp = dbf_codepage_map[d[d.l]];\n\t\td.l+=1;\n\n\t\td.l+=2;\n\t}\n\tif(l7) d.l += 36; // Level 7: 32 byte \"Language driver name\", 4 byte reserved\n\n/*:: type DBFField = { name:string; len:number; type:string; } */\n\tvar fields/*:Array<DBFField>*/ = [], field/*:DBFField*/ = ({}/*:any*/);\n\tvar hend = Math.min(d.length, (ft == 0x02 ? 0x209 : (fpos - 10 - (vfp ? 264 : 0))));\n\tvar ww = l7 ? 32 : 11;\n\twhile(d.l < hend && d[d.l] != 0x0d) {\n\t\tfield = ({}/*:any*/);\n\t\tfield.name = (typeof $cptable !== \"undefined\" ? $cptable.utils.decode(current_cp, d.slice(d.l, d.l+ww)) : a2s(d.slice(d.l, d.l + ww))).replace(/[\\u0000\\r\\n].*$/g,\"\");\n\t\td.l += ww;\n\t\tfield.type = String.fromCharCode(d.read_shift(1));\n\t\tif(ft != 0x02 && !l7) field.offset = d.read_shift(4);\n\t\tfield.len = d.read_shift(1);\n\t\tif(ft == 0x02) field.offset = d.read_shift(2);\n\t\tfield.dec = d.read_shift(1);\n\t\tif(field.name.length) fields.push(field);\n\t\tif(ft != 0x02) d.l += l7 ? 13 : 14;\n\t\tswitch(field.type) {\n\t\t\tcase 'B': // Double (VFP) / Binary (dBASE L7)\n\t\t\t\tif((!vfp || field.len != 8) && opts.WTF) console.log('Skipping ' + field.name + ':' + field.type);\n\t\t\t\tbreak;\n\t\t\tcase 'G': // General (FoxPro and dBASE L7)\n\t\t\tcase 'P': // Picture (FoxPro and dBASE L7)\n\t\t\t\tif(opts.WTF) console.log('Skipping ' + field.name + ':' + field.type);\n\t\t\t\tbreak;\n\t\t\tcase '+': // Autoincrement (dBASE L7 only)\n\t\t\tcase '0': // _NullFlags (VFP only)\n\t\t\tcase '@': // Timestamp (dBASE L7 only)\n\t\t\tcase 'C': // Character (dBASE II)\n\t\t\tcase 'D': // Date (dBASE III)\n\t\t\tcase 'F': // Float (dBASE IV)\n\t\t\tcase 'I': // Long (VFP and dBASE L7)\n\t\t\tcase 'L': // Logical (dBASE II)\n\t\t\tcase 'M': // Memo (dBASE III)\n\t\t\tcase 'N': // Number (dBASE II)\n\t\t\tcase 'O': // Double (dBASE L7 only)\n\t\t\tcase 'T': // Datetime (VFP only)\n\t\t\tcase 'Y': // Currency (VFP only)\n\t\t\t\tbreak;\n\t\t\tdefault: throw new Error('Unknown Field Type: ' + field.type);\n\t\t}\n\t}\n\n\tif(d[d.l] !== 0x0D) d.l = fpos-1;\n\tif(d.read_shift(1) !== 0x0D) throw new Error(\"DBF Terminator not found \" + d.l + \" \" + d[d.l]);\n\td.l = fpos;\n\n\t/* data */\n\tvar R = 0, C = 0;\n\tout[0] = [];\n\tfor(C = 0; C != fields.length; ++C) out[0][C] = fields[C].name;\n\twhile(nrow-- > 0) {\n\t\tif(d[d.l] === 0x2A) {\n\t\t\t// TODO: record marked as deleted -- create a hidden row?\n\t\t\td.l+=rlen;\n\t\t\tcontinue;\n\t\t}\n\t\t++d.l;\n\t\tout[++R] = []; C = 0;\n\t\tfor(C = 0; C != fields.length; ++C) {\n\t\t\tvar dd = d.slice(d.l, d.l+fields[C].len); d.l+=fields[C].len;\n\t\t\tprep_blob(dd, 0);\n\t\t\tvar s = typeof $cptable !== \"undefined\" ? $cptable.utils.decode(current_cp, dd) : a2s(dd);\n\t\t\tswitch(fields[C].type) {\n\t\t\t\tcase 'C':\n\t\t\t\t\t// NOTE: it is conventional to write '  /  /  ' for empty dates\n\t\t\t\t\tif(s.trim().length) out[R][C] = s.replace(/\\s+$/,\"\");\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'D':\n\t\t\t\t\tif(s.length === 8) out[R][C] = new Date(+s.slice(0,4), +s.slice(4,6)-1, +s.slice(6,8));\n\t\t\t\t\telse out[R][C] = s;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'F': out[R][C] = parseFloat(s.trim()); break;\n\t\t\t\tcase '+': case 'I': out[R][C] = l7 ? dd.read_shift(-4, 'i') ^ 0x80000000 : dd.read_shift(4, 'i'); break;\n\t\t\t\tcase 'L': switch(s.trim().toUpperCase()) {\n\t\t\t\t\tcase 'Y': case 'T': out[R][C] = true; break;\n\t\t\t\t\tcase 'N': case 'F': out[R][C] = false; break;\n\t\t\t\t\tcase '': case '?': break;\n\t\t\t\t\tdefault: throw new Error(\"DBF Unrecognized L:|\" + s + \"|\");\n\t\t\t\t\t} break;\n\t\t\t\tcase 'M': /* TODO: handle memo files */\n\t\t\t\t\tif(!memo) throw new Error(\"DBF Unexpected MEMO for type \" + ft.toString(16));\n\t\t\t\t\tout[R][C] = \"##MEMO##\" + (l7 ? parseInt(s.trim(), 10): dd.read_shift(4));\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'N':\n\t\t\t\t\ts = s.replace(/\\u0000/g,\"\").trim();\n\t\t\t\t\t// NOTE: dBASE II interprets \"  .  \" as 0\n\t\t\t\t\tif(s && s != \".\") out[R][C] = +s || 0; break;\n\t\t\t\tcase '@':\n\t\t\t\t\t// NOTE: dBASE specs appear to be incorrect\n\t\t\t\t\tout[R][C] = new Date(dd.read_shift(-8, 'f') - 0x388317533400);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'T': out[R][C] = new Date((dd.read_shift(4) - 0x253D8C) * 0x5265C00 + dd.read_shift(4)); break;\n\t\t\t\tcase 'Y': out[R][C] = dd.read_shift(4,'i')/1e4 + (dd.read_shift(4, 'i')/1e4)*Math.pow(2,32); break;\n\t\t\t\tcase 'O': out[R][C] = -dd.read_shift(-8, 'f'); break;\n\t\t\t\tcase 'B': if(vfp && fields[C].len == 8) { out[R][C] = dd.read_shift(8,'f'); break; }\n\t\t\t\t\t/* falls through */\n\t\t\t\tcase 'G': case 'P': dd.l += fields[C].len; break;\n\t\t\t\tcase '0':\n\t\t\t\t\tif(fields[C].name === '_NullFlags') break;\n\t\t\t\t\t/* falls through */\n\t\t\t\tdefault: throw new Error(\"DBF Unsupported data type \" + fields[C].type);\n\t\t\t}\n\t\t}\n\t}\n\tif(ft != 0x02) if(d.l < d.length && d[d.l++] != 0x1A) throw new Error(\"DBF EOF Marker missing \" + (d.l-1) + \" of \" + d.length + \" \" + d[d.l-1].toString(16));\n\tif(opts && opts.sheetRows) out = out.slice(0, opts.sheetRows);\n\topts.DBF = fields;\n\treturn out;\n}\n\nfunction dbf_to_sheet(buf, opts)/*:Worksheet*/ {\n\tvar o = opts || {};\n\tif(!o.dateNF) o.dateNF = \"yyyymmdd\";\n\tvar ws = aoa_to_sheet(dbf_to_aoa(buf, o), o);\n\tws[\"!cols\"] = o.DBF.map(function(field) { return {\n\t\twch: field.len,\n\t\tDBF: field\n\t};});\n\tdelete o.DBF;\n\treturn ws;\n}\n\nfunction dbf_to_workbook(buf, opts)/*:Workbook*/ {\n\ttry {\n\t\tvar o = sheet_to_workbook(dbf_to_sheet(buf, opts), opts);\n\t\to.bookType = \"dbf\";\n\t\treturn o;\n\t} catch(e) { if(opts && opts.WTF) throw e; }\n\treturn ({SheetNames:[],Sheets:{}});\n}\n\nvar _RLEN = { 'B': 8, 'C': 250, 'L': 1, 'D': 8, '?': 0, '': 0 };\nfunction sheet_to_dbf(ws/*:Worksheet*/, opts/*:WriteOpts*/) {\n\tvar o = opts || {};\n\tvar old_cp = current_codepage;\n\tif(+o.codepage >= 0) set_cp(+o.codepage);\n\tif(o.type == \"string\") throw new Error(\"Cannot write DBF to JS string\");\n\tvar ba = buf_array();\n\tvar aoa/*:AOA*/ = sheet_to_json(ws, {header:1, raw:true, cellDates:true});\n\tvar headers = aoa[0], data = aoa.slice(1), cols = ws[\"!cols\"] || [];\n\tvar i = 0, j = 0, hcnt = 0, rlen = 1;\n\tfor(i = 0; i < headers.length; ++i) {\n\t\tif(((cols[i]||{}).DBF||{}).name) { headers[i] = cols[i].DBF.name; ++hcnt; continue; }\n\t\tif(headers[i] == null) continue;\n\t\t++hcnt;\n\t\tif(typeof headers[i] === 'number') headers[i] = headers[i].toString(10);\n\t\tif(typeof headers[i] !== 'string') throw new Error(\"DBF Invalid column name \" + headers[i] + \" |\" + (typeof headers[i]) + \"|\");\n\t\tif(headers.indexOf(headers[i]) !== i) for(j=0; j<1024;++j)\n\t\t\tif(headers.indexOf(headers[i] + \"_\" + j) == -1) { headers[i] += \"_\" + j; break; }\n\t}\n\tvar range = safe_decode_range(ws['!ref']);\n\tvar coltypes/*:Array<string>*/ = [];\n\tvar colwidths/*:Array<number>*/ = [];\n\tvar coldecimals/*:Array<number>*/ = [];\n\tfor(i = 0; i <= range.e.c - range.s.c; ++i) {\n\t\tvar guess = '', _guess = '', maxlen = 0;\n\t\tvar col/*:Array<any>*/ = [];\n\t\tfor(j=0; j < data.length; ++j) {\n\t\t\tif(data[j][i] != null) col.push(data[j][i]);\n\t\t}\n\t\tif(col.length == 0 || headers[i] == null) { coltypes[i] = '?'; continue; }\n\t\tfor(j = 0; j < col.length; ++j) {\n\t\t\tswitch(typeof col[j]) {\n\t\t\t\t/* TODO: check if L2 compat is desired */\n\t\t\t\tcase 'number': _guess = 'B'; break;\n\t\t\t\tcase 'string': _guess = 'C'; break;\n\t\t\t\tcase 'boolean': _guess = 'L'; break;\n\t\t\t\tcase 'object': _guess = col[j] instanceof Date ? 'D' : 'C'; break;\n\t\t\t\tdefault: _guess = 'C';\n\t\t\t}\n\t\t\t/* TODO: cache the values instead of encoding twice */\n\t\t\tmaxlen = Math.max(maxlen, (typeof $cptable !== \"undefined\" && typeof col[j] == \"string\" ? $cptable.utils.encode(current_ansi, col[j]): String(col[j])).length);\n\t\t\tguess = guess && guess != _guess ? 'C' : _guess;\n\t\t\t//if(guess == 'C') break;\n\t\t}\n\t\tif(maxlen > 250) maxlen = 250;\n\t\t_guess = ((cols[i]||{}).DBF||{}).type;\n\t\t/* TODO: more fine grained control over DBF type resolution */\n\t\tif(_guess == 'C') {\n\t\t\tif(cols[i].DBF.len > maxlen) maxlen = cols[i].DBF.len;\n\t\t}\n\t\tif(guess == 'B' && _guess == 'N') {\n\t\t\tguess = 'N';\n\t\t\tcoldecimals[i] = cols[i].DBF.dec;\n\t\t\tmaxlen = cols[i].DBF.len;\n\t\t}\n\t\tcolwidths[i] = guess == 'C' || _guess == 'N' ? maxlen : (_RLEN[guess] || 0);\n\t\trlen += colwidths[i];\n\t\tcoltypes[i] = guess;\n\t}\n\n\tvar h = ba.next(32);\n\th.write_shift(4, 0x13021130);\n\th.write_shift(4, data.length);\n\th.write_shift(2, 296 + 32 * hcnt);\n\th.write_shift(2, rlen);\n\tfor(i=0; i < 4; ++i) h.write_shift(4, 0);\n\tvar cp = +dbf_reverse_map[/*::String(*/current_codepage/*::)*/] || 0x03;\n\th.write_shift(4, 0x00000000 | (cp<<8));\n\tif(dbf_codepage_map[cp] != +o.codepage) {\n\t\tif(o.codepage) console.error(\"DBF Unsupported codepage \" + current_codepage + \", using 1252\");\n\t\tcurrent_codepage = 1252;\n\t}\n\n\tfor(i = 0, j = 0; i < headers.length; ++i) {\n\t\tif(headers[i] == null) continue;\n\t\tvar hf = ba.next(32);\n\t\t/* TODO: test how applications handle non-ASCII field names */\n\t\tvar _f = (headers[i].slice(-10) + \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\").slice(0, 11);\n\t\thf.write_shift(1, _f, \"sbcs\");\n\t\thf.write_shift(1, coltypes[i] == '?' ? 'C' : coltypes[i], \"sbcs\");\n\t\thf.write_shift(4, j);\n\t\thf.write_shift(1, colwidths[i] || _RLEN[coltypes[i]] || 0);\n\t\thf.write_shift(1, coldecimals[i] || 0);\n\t\thf.write_shift(1, 0x02);\n\t\thf.write_shift(4, 0);\n\t\thf.write_shift(1, 0);\n\t\thf.write_shift(4, 0);\n\t\thf.write_shift(4, 0);\n\t\tj += (colwidths[i] || _RLEN[coltypes[i]] || 0);\n\t}\n\n\tvar hb = ba.next(264);\n\thb.write_shift(4, 0x0000000D);\n\tfor(i=0; i < 65;++i) hb.write_shift(4, 0x00000000);\n\tfor(i=0; i < data.length; ++i) {\n\t\tvar rout = ba.next(rlen);\n\t\trout.write_shift(1, 0);\n\t\tfor(j=0; j<headers.length; ++j) {\n\t\t\tif(headers[j] == null) continue;\n\t\t\tswitch(coltypes[j]) {\n\t\t\t\tcase 'L': rout.write_shift(1, data[i][j] == null ? 0x3F : data[i][j] ? 0x54 : 0x46); break;\n\t\t\t\tcase 'B': rout.write_shift(8, data[i][j]||0, 'f'); break;\n\t\t\t\tcase 'N':\n\t\t\t\t\tvar _n = \"0\";\n\t\t\t\t\tif(typeof data[i][j] == \"number\") _n = data[i][j].toFixed(coldecimals[j]||0);\n\t\t\t\t\tif(_n.length > colwidths[j]) _n = _n.slice(0, colwidths[j]); // addresses decimal > width\n\t\t\t\t\tfor(hcnt=0; hcnt < colwidths[j]-_n.length; ++hcnt) rout.write_shift(1, 0x20);\n\t\t\t\t\trout.write_shift(1, _n, \"sbcs\");\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'D':\n\t\t\t\t\tif(!data[i][j]) rout.write_shift(8, \"00000000\", \"sbcs\");\n\t\t\t\t\telse {\n\t\t\t\t\t\trout.write_shift(4, (\"0000\"+data[i][j].getFullYear()).slice(-4), \"sbcs\");\n\t\t\t\t\t\trout.write_shift(2, (\"00\"+(data[i][j].getMonth()+1)).slice(-2), \"sbcs\");\n\t\t\t\t\t\trout.write_shift(2, (\"00\"+data[i][j].getDate()).slice(-2), \"sbcs\");\n\t\t\t\t\t} break;\n\t\t\t\tcase 'C':\n\t\t\t\t\tvar _l = rout.l;\n\t\t\t\t\tvar _s = String(data[i][j] != null ? data[i][j] : \"\").slice(0, colwidths[j]);\n\t\t\t\t\trout.write_shift(1, _s, \"cpstr\");\n\t\t\t\t\t_l += colwidths[j] - rout.l;\n\t\t\t\t\tfor(hcnt=0; hcnt < _l; ++hcnt) rout.write_shift(1, 0x20); break;\n\t\t\t}\n\t\t}\n\t\t// data\n\t}\n\tcurrent_codepage = old_cp;\n\tba.next(1).write_shift(1, 0x1A);\n\treturn ba.end();\n}\n\treturn {\n\t\tto_workbook: dbf_to_workbook,\n\t\tto_sheet: dbf_to_sheet,\n\t\tfrom_sheet: sheet_to_dbf\n\t};\n})();\n\nvar SYLK = /*#__PURE__*/(function() {\n\t/* TODO: stress test sequences */\n\tvar sylk_escapes = ({\n\t\tAA:'À', BA:'Á', CA:'Â', DA:195, HA:'Ä', JA:197,\n\t\tAE:'È', BE:'É', CE:'Ê',         HE:'Ë',\n\t\tAI:'Ì', BI:'Í', CI:'Î',         HI:'Ï',\n\t\tAO:'Ò', BO:'Ó', CO:'Ô', DO:213, HO:'Ö',\n\t\tAU:'Ù', BU:'Ú', CU:'Û',         HU:'Ü',\n\t\tAa:'à', Ba:'á', Ca:'â', Da:227, Ha:'ä', Ja:229,\n\t\tAe:'è', Be:'é', Ce:'ê',         He:'ë',\n\t\tAi:'ì', Bi:'í', Ci:'î',         Hi:'ï',\n\t\tAo:'ò', Bo:'ó', Co:'ô', Do:245, Ho:'ö',\n\t\tAu:'ù', Bu:'ú', Cu:'û',         Hu:'ü',\n\t\tKC:'Ç', Kc:'ç', q:'æ',  z:'œ',  a:'Æ',  j:'Œ',\n\t\tDN:209, Dn:241, Hy:255,\n\t\tS:169,  c:170,  R:174,  \"B \":180,\n\t\t/*::[*/0/*::]*/:176,    /*::[*/1/*::]*/:177,  /*::[*/2/*::]*/:178,\n\t\t/*::[*/3/*::]*/:179,    /*::[*/5/*::]*/:181,  /*::[*/6/*::]*/:182,\n\t\t/*::[*/7/*::]*/:183,    Q:185,  k:186,  b:208,  i:216,  l:222,  s:240,  y:248,\n\t\t\"!\":161, '\"':162, \"#\":163, \"(\":164, \"%\":165, \"'\":167, \"H \":168,\n\t\t\"+\":171, \";\":187, \"<\":188, \"=\":189, \">\":190, \"?\":191, \"{\":223\n\t}/*:any*/);\n\tvar sylk_char_regex = new RegExp(\"\\u001BN(\" + keys(sylk_escapes).join(\"|\").replace(/\\|\\|\\|/, \"|\\\\||\").replace(/([?()+])/g,\"\\\\$1\") + \"|\\\\|)\", \"gm\");\n\tvar sylk_char_fn = function(_, $1){ var o = sylk_escapes[$1]; return typeof o == \"number\" ? _getansi(o) : o; };\n\tvar decode_sylk_char = function($$, $1, $2) { var newcc = (($1.charCodeAt(0) - 0x20)<<4) | ($2.charCodeAt(0) - 0x30); return newcc == 59 ? $$ : _getansi(newcc); };\n\tsylk_escapes[\"|\"] = 254;\n\t/* https://oss.sheetjs.com/notes/sylk/ for more details */\n\tfunction sylk_to_aoa(d/*:RawData*/, opts)/*:[AOA, Worksheet]*/ {\n\t\tswitch(opts.type) {\n\t\t\tcase 'base64': return sylk_to_aoa_str(Base64_decode(d), opts);\n\t\t\tcase 'binary': return sylk_to_aoa_str(d, opts);\n\t\t\tcase 'buffer': return sylk_to_aoa_str(has_buf && Buffer.isBuffer(d) ? d.toString('binary') : a2s(d), opts);\n\t\t\tcase 'array': return sylk_to_aoa_str(cc2str(d), opts);\n\t\t}\n\t\tthrow new Error(\"Unrecognized type \" + opts.type);\n\t}\n\tfunction sylk_to_aoa_str(str/*:string*/, opts)/*:[AOA, Worksheet]*/ {\n\t\tvar records = str.split(/[\\n\\r]+/), R = -1, C = -1, ri = 0, rj = 0, arr/*:AOA*/ = [];\n\t\tvar formats/*:Array<string>*/ = [];\n\t\tvar next_cell_format/*:string|null*/ = null;\n\t\tvar sht = {}, rowinfo/*:Array<RowInfo>*/ = [], colinfo/*:Array<ColInfo>*/ = [], cw/*:Array<string>*/ = [];\n\t\tvar Mval = 0, j;\n\t\tvar wb = { Workbook: { WBProps: {}, Names: [] } };\n\t\tif(+opts.codepage >= 0) set_cp(+opts.codepage);\n\t\tfor (; ri !== records.length; ++ri) {\n\t\t\tMval = 0;\n\t\t\tvar rstr=records[ri].trim().replace(/\\x1B([\\x20-\\x2F])([\\x30-\\x3F])/g, decode_sylk_char).replace(sylk_char_regex, sylk_char_fn);\n\t\t\tvar record=rstr.replace(/;;/g, \"\\u0000\").split(\";\").map(function(x) { return x.replace(/\\u0000/g, \";\"); });\n\t\t\tvar RT=record[0], val;\n\t\t\tif(rstr.length > 0) switch(RT) {\n\t\t\tcase 'ID': break; /* header */\n\t\t\tcase 'E': break; /* EOF */\n\t\t\tcase 'B': break; /* dimensions */\n\t\t\tcase 'O': /* workbook options */\n\t\t\tfor(rj=1; rj<record.length; ++rj) switch(record[rj].charAt(0)) {\n\t\t\t\tcase 'V': {\n\t\t\t\t\tvar d1904 = parseInt(record[rj].slice(1), 10);\n\t\t\t\t\t// NOTE: it is technically an error if d1904 >= 5 or < 0\n\t\t\t\t\tif(d1904 >= 1 && d1904 <= 4) wb.Workbook.WBProps.date1904 = true;\n\t\t\t\t} break;\n\t\t\t} break;\n\t\t\tcase 'W': break; /* window */\n\t\t\tcase 'P':\n\t\t\t\tswitch(record[1].charAt(0)){\n\t\t\t\t\tcase 'P': formats.push(rstr.slice(3).replace(/;;/g, \";\")); break;\n\t\t\t\t} break;\n\t\t\tcase 'NN': { /* defined name */\n\t\t\t\tvar nn = {Sheet: 0};\n\t\t\t\tfor(rj=1; rj<record.length; ++rj) switch(record[rj].charAt(0)) {\n\t\t\t\t\tcase 'N': nn.Name = record[rj].slice(1); break;\n\t\t\t\t\tcase 'E': nn.Ref = (opts && opts.sheet || \"Sheet1\") + \"!\" + rc_to_a1(record[rj].slice(1)); break;\n\t\t\t\t}\n\t\t\t\twb.Workbook.Names.push(nn);\n\t\t\t} break;\n\t\t\t// case 'NE': // ??\n\t\t\t// case 'NU': // ??\n\t\t\tcase 'C': /* cell */\n\t\t\tvar C_seen_K = false, C_seen_X = false, C_seen_S = false, C_seen_E = false, _R = -1, _C = -1, formula = \"\", cell_t = \"z\";\n\t\t\tfor(rj=1; rj<record.length; ++rj) switch(record[rj].charAt(0)) {\n\t\t\t\tcase 'A': break; // TODO: comment\n\t\t\t\tcase 'X': C = parseInt(record[rj].slice(1), 10)-1; C_seen_X = true; break;\n\t\t\t\tcase 'Y':\n\t\t\t\t\tR = parseInt(record[rj].slice(1), 10)-1; if(!C_seen_X) C = 0;\n\t\t\t\t\tfor(j = arr.length; j <= R; ++j) arr[j] = [];\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'K':\n\t\t\t\t\tval = record[rj].slice(1);\n\t\t\t\t\tif(val.charAt(0) === '\"') { val = val.slice(1,val.length - 1); cell_t = \"s\"; }\n\t\t\t\t\telse if(val === 'TRUE' || val === 'FALSE') { val = val === 'TRUE'; cell_t = \"b\"; }\n\t\t\t\t\telse if(!isNaN(fuzzynum(val))) {\n\t\t\t\t\t\tval = fuzzynum(val); cell_t = \"n\";\n\t\t\t\t\t\tif(next_cell_format !== null && fmt_is_date(next_cell_format) && opts.cellDates) { val = numdate(wb.Workbook.WBProps.date1904 ? val + 1462 : val); cell_t = \"d\"; }\n\t\t\t\t\t} else if(!isNaN(fuzzydate(val).getDate())) {\n\t\t\t\t\t\tval = parseDate(val); cell_t = \"d\";\n\t\t\t\t\t\tif(!opts.cellDates) { cell_t = \"n\"; val = datenum(val, wb.Workbook.WBProps.date1904); }\n\t\t\t\t\t}\n\t\t\t\t\tif(typeof $cptable !== 'undefined' && typeof val == \"string\" && ((opts||{}).type != \"string\") && (opts||{}).codepage) val = $cptable.utils.decode(opts.codepage, val);\n\t\t\t\t\tC_seen_K = true;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'E':\n\t\t\t\t\tC_seen_E = true;\n\t\t\t\t\tformula = rc_to_a1(record[rj].slice(1), {r:R,c:C});\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'S':\n\t\t\t\t\tC_seen_S = true;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'G': break; // unknown\n\t\t\t\tcase 'R': _R = parseInt(record[rj].slice(1), 10)-1; break;\n\t\t\t\tcase 'C': _C = parseInt(record[rj].slice(1), 10)-1; break;\n\t\t\t\t// case 'P': // ??\n\t\t\t\t// case 'D': // ??\n\t\t\t\tdefault: if(opts && opts.WTF) throw new Error(\"SYLK bad record \" + rstr);\n\t\t\t}\n\t\t\tif(C_seen_K) {\n\t\t\t\tif(!arr[R][C]) arr[R][C] = { t: cell_t, v: val };\n\t\t\t\telse { arr[R][C].t = cell_t; arr[R][C].v = val; }\n\t\t\t\tif(next_cell_format) arr[R][C].z = next_cell_format;\n\t\t\t\tif(opts.cellText !== false && next_cell_format) arr[R][C].w = SSF_format(arr[R][C].z, arr[R][C].v, { date1904: wb.Workbook.WBProps.date1904 });\n\t\t\t\tnext_cell_format = null;\n\t\t\t}\n\t\t\tif(C_seen_S) {\n\t\t\t\tif(C_seen_E) throw new Error(\"SYLK shared formula cannot have own formula\");\n\t\t\t\tvar shrbase = _R > -1 && arr[_R][_C];\n\t\t\t\tif(!shrbase || !shrbase[1]) throw new Error(\"SYLK shared formula cannot find base\");\n\t\t\t\tformula = shift_formula_str(shrbase[1], {r: R - _R, c: C - _C});\n\t\t\t}\n\t\t\tif(formula) {\n\t\t\t\tif(!arr[R][C]) arr[R][C] = { t: 'n', f: formula };\n\t\t\t\telse arr[R][C].f = formula;\n\t\t\t}\n\t\t\tbreak;\n\t\t\tcase 'F': /* Format */\n\t\t\tvar F_seen = 0;\n\t\t\tfor(rj=1; rj<record.length; ++rj) switch(record[rj].charAt(0)) {\n\t\t\t\tcase 'X': C = parseInt(record[rj].slice(1), 10)-1; ++F_seen; break;\n\t\t\t\tcase 'Y':\n\t\t\t\t\tR = parseInt(record[rj].slice(1), 10)-1; /*C = 0;*/\n\t\t\t\t\tfor(j = arr.length; j <= R; ++j) arr[j] = [];\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'M': Mval = parseInt(record[rj].slice(1), 10) / 20; break;\n\t\t\t\tcase 'F': break; /* ??? */\n\t\t\t\tcase 'G': break; /* hide grid */\n\t\t\t\tcase 'P':\n\t\t\t\t\tnext_cell_format = formats[parseInt(record[rj].slice(1), 10)];\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'S': break; /* cell style */\n\t\t\t\tcase 'D': break; /* column */\n\t\t\t\tcase 'N': break; /* font */\n\t\t\t\tcase 'W':\n\t\t\t\t\tcw = record[rj].slice(1).split(\" \");\n\t\t\t\t\tfor(j = parseInt(cw[0], 10); j <= parseInt(cw[1], 10); ++j) {\n\t\t\t\t\t\tMval = parseInt(cw[2], 10);\n\t\t\t\t\t\tcolinfo[j-1] = Mval === 0 ? {hidden:true}: {wch:Mval};\n\t\t\t\t\t} break;\n\t\t\t\tcase 'C': /* default column format */\n\t\t\t\t\tC = parseInt(record[rj].slice(1), 10)-1;\n\t\t\t\t\tif(!colinfo[C]) colinfo[C] = {};\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'R': /* row properties */\n\t\t\t\t\tR = parseInt(record[rj].slice(1), 10)-1;\n\t\t\t\t\tif(!rowinfo[R]) rowinfo[R] = {};\n\t\t\t\t\tif(Mval > 0) { rowinfo[R].hpt = Mval; rowinfo[R].hpx = pt2px(Mval); }\n\t\t\t\t\telse if(Mval === 0) rowinfo[R].hidden = true;\n\t\t\t\t\tbreak;\n\t\t\t\t// case 'K': // ??\n\t\t\t\t// case 'E': // ??\n\t\t\t\tdefault: if(opts && opts.WTF) throw new Error(\"SYLK bad record \" + rstr);\n\t\t\t}\n\t\t\tif(F_seen < 1) next_cell_format = null; break;\n\t\t\tdefault: if(opts && opts.WTF) throw new Error(\"SYLK bad record \" + rstr);\n\t\t\t}\n\t\t}\n\t\tif(rowinfo.length > 0) sht['!rows'] = rowinfo;\n\t\tif(colinfo.length > 0) sht['!cols'] = colinfo;\n\t\tcolinfo.forEach(function(col) { process_col(col); });\n\t\tif(opts && opts.sheetRows) arr = arr.slice(0, opts.sheetRows);\n\t\treturn [arr, sht, wb];\n\t}\n\n\tfunction sylk_to_workbook(d/*:RawData*/, opts)/*:Workbook*/ {\n\t\tvar aoasht = sylk_to_aoa(d, opts);\n\t\tvar aoa = aoasht[0], ws = aoasht[1], wb = aoasht[2];\n\t\tvar _opts = dup(opts); _opts.date1904 = (((wb||{}).Workbook || {}).WBProps || {}).date1904;\n\t\tvar o = aoa_to_sheet(aoa, _opts);\n\t\tkeys(ws).forEach(function(k) { o[k] = ws[k]; });\n\t\tvar outwb = sheet_to_workbook(o, opts);\n\t\tkeys(wb).forEach(function(k) { outwb[k] = wb[k]; });\n\t\toutwb.bookType = \"sylk\";\n\t\treturn outwb;\n\t}\n\n\tfunction write_ws_cell_sylk(cell/*:Cell*/, ws/*:Worksheet*/, R/*:number*/, C/*:number*//*::, opts*/)/*:string*/ {\n\t\tvar o = \"C;Y\" + (R+1) + \";X\" + (C+1) + \";K\";\n\t\tswitch(cell.t) {\n\t\t\tcase 'n':\n\t\t\t\to += (cell.v||0);\n\t\t\t\tif(cell.f && !cell.F) o += \";E\" + a1_to_rc(cell.f, {r:R, c:C}); break;\n\t\t\tcase 'b': o += cell.v ? \"TRUE\" : \"FALSE\"; break;\n\t\t\tcase 'e': o += cell.w || cell.v; break;\n\t\t\tcase 'd': o += '\"' + (cell.w || cell.v) + '\"'; break;\n\t\t\tcase 's': o += '\"' + (cell.v == null ? \"\" : String(cell.v)).replace(/\"/g,\"\").replace(/;/g, \";;\") + '\"'; break;\n\t\t}\n\t\treturn o;\n\t}\n\n\tfunction write_ws_cols_sylk(out, cols) {\n\t\tcols.forEach(function(col, i) {\n\t\t\tvar rec = \"F;W\" + (i+1) + \" \" + (i+1) + \" \";\n\t\t\tif(col.hidden) rec += \"0\";\n\t\t\telse {\n\t\t\t\tif(typeof col.width == 'number' && !col.wpx) col.wpx = width2px(col.width);\n\t\t\t\tif(typeof col.wpx == 'number' && !col.wch) col.wch = px2char(col.wpx);\n\t\t\t\tif(typeof col.wch == 'number') rec += Math.round(col.wch);\n\t\t\t}\n\t\t\tif(rec.charAt(rec.length - 1) != \" \") out.push(rec);\n\t\t});\n\t}\n\n\tfunction write_ws_rows_sylk(out/*:Array<string>*/, rows/*:Array<RowInfo>*/) {\n\t\trows.forEach(function(row, i) {\n\t\t\tvar rec = \"F;\";\n\t\t\tif(row.hidden) rec += \"M0;\";\n\t\t\telse if(row.hpt) rec += \"M\" + 20 * row.hpt + \";\";\n\t\t\telse if(row.hpx) rec += \"M\" + 20 * px2pt(row.hpx) + \";\";\n\t\t\tif(rec.length > 2) out.push(rec + \"R\" + (i+1));\n\t\t});\n\t}\n\n\tfunction sheet_to_sylk(ws/*:Worksheet*/, opts/*:?any*/, wb/*:?WorkBook*/)/*:string*/ {\n\t\t/* TODO: codepage */\n\t\tvar preamble/*:Array<string>*/ = [\"ID;PSheetJS;N;E\"], o/*:Array<string>*/ = [];\n\t\tvar r = safe_decode_range(ws['!ref']), cell/*:Cell*/;\n\t\tvar dense = ws[\"!data\"] != null;\n\t\tvar RS = \"\\r\\n\";\n\t\tvar d1904 = (((wb||{}).Workbook||{}).WBProps||{}).date1904;\n\n\t\tpreamble.push(\"P;PGeneral\");\n\t\tpreamble.push(\"F;P0;DG0G8;M255\");\n\t\tif(ws['!cols']) write_ws_cols_sylk(preamble, ws['!cols']);\n\t\tif(ws['!rows']) write_ws_rows_sylk(preamble, ws['!rows']);\n\n\t\tpreamble.push(\"B;Y\" + (r.e.r - r.s.r + 1) + \";X\" + (r.e.c - r.s.c + 1) + \";D\" + [r.s.c,r.s.r,r.e.c,r.e.r].join(\" \"));\n\t\tpreamble.push(\"O;L;D;B\" + (d1904 ? \";V4\" : \"\") + \";K47;G100 0.001\");\n\t\tfor(var R = r.s.r; R <= r.e.r; ++R) {\n\t\t\tif(dense && !ws[\"!data\"][R]) continue;\n\t\t\tvar p = [];\n\t\t\tfor(var C = r.s.c; C <= r.e.c; ++C) {\n\t\t\t\tcell = dense ? ws[\"!data\"][R][C] : ws[encode_col(C) + encode_row(R)];\n\t\t\t\tif(!cell || (cell.v == null && (!cell.f || cell.F))) continue;\n\t\t\t\tp.push(write_ws_cell_sylk(cell, ws, R, C, opts)); // TODO: pass date1904 info\n\t\t\t}\n\t\t\to.push(p.join(RS));\n\t\t}\n\t\treturn preamble.join(RS) + RS + o.join(RS) + RS + \"E\" + RS;\n\t}\n\n\treturn {\n\t\tto_workbook: sylk_to_workbook,\n\t\tfrom_sheet: sheet_to_sylk\n\t};\n})();\n\nvar DIF = /*#__PURE__*/(function() {\n\tfunction dif_to_aoa(d/*:RawData*/, opts)/*:AOA*/ {\n\t\tswitch(opts.type) {\n\t\t\tcase 'base64': return dif_to_aoa_str(Base64_decode(d), opts);\n\t\t\tcase 'binary': return dif_to_aoa_str(d, opts);\n\t\t\tcase 'buffer': return dif_to_aoa_str(has_buf && Buffer.isBuffer(d) ? d.toString('binary') : a2s(d), opts);\n\t\t\tcase 'array': return dif_to_aoa_str(cc2str(d), opts);\n\t\t}\n\t\tthrow new Error(\"Unrecognized type \" + opts.type);\n\t}\n\tfunction dif_to_aoa_str(str/*:string*/, opts)/*:AOA*/ {\n\t\tvar records = str.split('\\n'), R = -1, C = -1, ri = 0, arr/*:AOA*/ = [];\n\t\tfor (; ri !== records.length; ++ri) {\n\t\t\tif (records[ri].trim() === 'BOT') { arr[++R] = []; C = 0; continue; }\n\t\t\tif (R < 0) continue;\n\t\t\tvar metadata = records[ri].trim().split(\",\");\n\t\t\tvar type = metadata[0], value = metadata[1];\n\t\t\t++ri;\n\t\t\tvar data = records[ri] || \"\";\n\t\t\twhile(((data.match(/[\"]/g)||[]).length & 1) && ri < records.length - 1) data += \"\\n\" + records[++ri];\n\t\t\tdata = data.trim();\n\t\t\tswitch (+type) {\n\t\t\t\tcase -1:\n\t\t\t\t\tif (data === 'BOT') { arr[++R] = []; C = 0; continue; }\n\t\t\t\t\telse if (data !== 'EOD') throw new Error(\"Unrecognized DIF special command \" + data);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 0:\n\t\t\t\t\tif(data === 'TRUE') arr[R][C] = true;\n\t\t\t\t\telse if(data === 'FALSE') arr[R][C] = false;\n\t\t\t\t\telse if(!isNaN(fuzzynum(value))) arr[R][C] = fuzzynum(value);\n\t\t\t\t\telse if(!isNaN(fuzzydate(value).getDate())) arr[R][C] = parseDate(value);\n\t\t\t\t\telse arr[R][C] = value;\n\t\t\t\t\t++C; break;\n\t\t\t\tcase 1:\n\t\t\t\t\tdata = data.slice(1,data.length-1);\n\t\t\t\t\tdata = data.replace(/\"\"/g, '\"');\n\t\t\t\t\tif(DIF_XL && data && data.match(/^=\".*\"$/)) data = data.slice(2, -1);\n\t\t\t\t\tarr[R][C++] = data !== '' ? data : null;\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif (data === 'EOD') break;\n\t\t}\n\t\tif(opts && opts.sheetRows) arr = arr.slice(0, opts.sheetRows);\n\t\treturn arr;\n\t}\n\n\tfunction dif_to_sheet(str/*:string*/, opts)/*:Worksheet*/ { return aoa_to_sheet(dif_to_aoa(str, opts), opts); }\n\tfunction dif_to_workbook(str/*:string*/, opts)/*:Workbook*/ {\n\t\tvar o = sheet_to_workbook(dif_to_sheet(str, opts), opts);\n\t\to.bookType = \"dif\";\n\t\treturn o;\n\t}\n\n\tfunction make_value(v/*:number*/, s/*:string*/)/*:string*/ { return \"0,\" + String(v) + \"\\r\\n\" + s; }\n\tfunction make_value_str(s/*:string*/)/*:string*/ { return \"1,0\\r\\n\\\"\" + s.replace(/\"/g,'\"\"') + '\"'; }\n\tfunction sheet_to_dif(ws/*:Worksheet*//*::, opts:?any*/)/*:string*/ {\n\t\tvar _DIF_XL = DIF_XL;\n\t\tvar r = safe_decode_range(ws['!ref']);\n\t\tvar dense = ws[\"!data\"] != null;\n\t\tvar o/*:Array<string>*/ = [\n\t\t\t\"TABLE\\r\\n0,1\\r\\n\\\"sheetjs\\\"\\r\\n\",\n\t\t\t\"VECTORS\\r\\n0,\" + (r.e.r - r.s.r + 1) + \"\\r\\n\\\"\\\"\\r\\n\",\n\t\t\t\"TUPLES\\r\\n0,\" + (r.e.c - r.s.c + 1) + \"\\r\\n\\\"\\\"\\r\\n\",\n\t\t\t\"DATA\\r\\n0,0\\r\\n\\\"\\\"\\r\\n\"\n\t\t];\n\t\tfor(var R = r.s.r; R <= r.e.r; ++R) {\n\t\t\tvar row = dense ? ws[\"!data\"][R] : [];\n\t\t\tvar p = \"-1,0\\r\\nBOT\\r\\n\";\n\t\t\tfor(var C = r.s.c; C <= r.e.c; ++C) {\n\t\t\t\tvar cell/*:Cell*/ = dense ? (row && row[C]) : ws[encode_cell({r:R,c:C})];\n\t\t\t\tif(cell == null) { p +=(\"1,0\\r\\n\\\"\\\"\\r\\n\"); continue;}\n\t\t\t\tswitch(cell.t) {\n\t\t\t\t\tcase 'n':\n\t\t\t\t\t\tif(_DIF_XL) {\n\t\t\t\t\t\t\tif(cell.w != null) p +=(\"0,\" + cell.w + \"\\r\\nV\");\n\t\t\t\t\t\t\telse if(cell.v != null) p +=(make_value(cell.v, \"V\")); // TODO: should this call SSF_format?\n\t\t\t\t\t\t\telse if(cell.f != null && !cell.F) p +=(make_value_str(\"=\" + cell.f));\n\t\t\t\t\t\t\telse p +=(\"1,0\\r\\n\\\"\\\"\");\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tif(cell.v == null) p +=(\"1,0\\r\\n\\\"\\\"\");\n\t\t\t\t\t\t\telse p +=(make_value(cell.v, \"V\"));\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'b':\n\t\t\t\t\t\tp +=(cell.v ? make_value(1, \"TRUE\") : make_value(0, \"FALSE\"));\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 's':\n\t\t\t\t\t\tp +=(make_value_str((!_DIF_XL || isNaN(+cell.v)) ? cell.v : '=\"' + cell.v + '\"'));\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'd':\n\t\t\t\t\t\tif(!cell.w) cell.w = SSF_format(cell.z || table_fmt[14], datenum(parseDate(cell.v)));\n\t\t\t\t\t\tif(_DIF_XL) p +=(make_value(cell.w, \"V\"));\n\t\t\t\t\t\telse p +=(make_value_str(cell.w));\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault: p +=(\"1,0\\r\\n\\\"\\\"\");\n\t\t\t\t}\n\t\t\t\tp += \"\\r\\n\";\n\t\t\t}\n\t\t\to.push(p);\n\t\t}\n\t\treturn o.join(\"\") + \"-1,0\\r\\nEOD\";\n\t}\n\treturn {\n\t\tto_workbook: dif_to_workbook,\n\t\tto_sheet: dif_to_sheet,\n\t\tfrom_sheet: sheet_to_dif\n\t};\n})();\n\nvar ETH = /*#__PURE__*/(function() {\n\tfunction decode(s/*:string*/)/*:string*/ { return s.replace(/\\\\b/g,\"\\\\\").replace(/\\\\c/g,\":\").replace(/\\\\n/g,\"\\n\"); }\n\tfunction encode(s/*:string*/)/*:string*/ { return s.replace(/\\\\/g, \"\\\\b\").replace(/:/g, \"\\\\c\").replace(/\\n/g,\"\\\\n\"); }\n\n\tfunction eth_to_aoa(str/*:string*/, opts)/*:AOA*/ {\n\t\tvar records = str.split('\\n'), R = -1, C = -1, ri = 0, arr/*:AOA*/ = [];\n\t\tfor (; ri !== records.length; ++ri) {\n\t\t\tvar record = records[ri].trim().split(\":\");\n\t\t\tif(record[0] !== 'cell') continue;\n\t\t\tvar addr = decode_cell(record[1]);\n\t\t\tif(arr.length <= addr.r) for(R = arr.length; R <= addr.r; ++R) if(!arr[R]) arr[R] = [];\n\t\t\tR = addr.r; C = addr.c;\n\t\t\tswitch(record[2]) {\n\t\t\t\tcase 't': arr[R][C] = decode(record[3]); break;\n\t\t\t\tcase 'v': arr[R][C] = +record[3]; break;\n\t\t\t\tcase 'vtf': var _f = record[record.length - 1];\n\t\t\t\t\t/* falls through */\n\t\t\t\tcase 'vtc':\n\t\t\t\t\tswitch(record[3]) {\n\t\t\t\t\t\tcase 'nl': arr[R][C] = +record[4] ? true : false; break;\n\t\t\t\t\t\tdefault: arr[R][C] = +record[4]; break;\n\t\t\t\t\t}\n\t\t\t\t\tif(record[2] == 'vtf') arr[R][C] = [arr[R][C], _f];\n\t\t\t}\n\t\t}\n\t\tif(opts && opts.sheetRows) arr = arr.slice(0, opts.sheetRows);\n\t\treturn arr;\n\t}\n\n\tfunction eth_to_sheet(d/*:string*/, opts)/*:Worksheet*/ { return aoa_to_sheet(eth_to_aoa(d, opts), opts); }\n\tfunction eth_to_workbook(d/*:string*/, opts)/*:Workbook*/ { return sheet_to_workbook(eth_to_sheet(d, opts), opts); }\n\n\tvar header = [\n\t\t\"socialcalc:version:1.5\",\n\t\t\"MIME-Version: 1.0\",\n\t\t\"Content-Type: multipart/mixed; boundary=SocialCalcSpreadsheetControlSave\"\n\t].join(\"\\n\");\n\n\tvar sep = [\n\t\t\"--SocialCalcSpreadsheetControlSave\",\n\t\t\"Content-type: text/plain; charset=UTF-8\"\n\t].join(\"\\n\") + \"\\n\";\n\n\t/* TODO: the other parts */\n\tvar meta = [\n\t\t\"# SocialCalc Spreadsheet Control Save\",\n\t\t\"part:sheet\"\n\t].join(\"\\n\");\n\n\tvar end = \"--SocialCalcSpreadsheetControlSave--\";\n\n\tfunction sheet_to_eth_data(ws/*:Worksheet*/)/*:string*/ {\n\t\tif(!ws || !ws['!ref']) return \"\";\n\t\tvar o/*:Array<string>*/ = [], oo/*:Array<string>*/ = [], cell, coord = \"\";\n\t\tvar r = decode_range(ws['!ref']);\n\t\tvar dense = ws[\"!data\"] != null;\n\t\tfor(var R = r.s.r; R <= r.e.r; ++R) {\n\t\t\tfor(var C = r.s.c; C <= r.e.c; ++C) {\n\t\t\t\tcoord = encode_cell({r:R,c:C});\n\t\t\t\tcell = dense ? (ws[\"!data\"][R]||[])[C] : ws[coord];\n\t\t\t\tif(!cell || cell.v == null || cell.t === 'z') continue;\n\t\t\t\too = [\"cell\", coord, 't'];\n\t\t\t\tswitch(cell.t) {\n\t\t\t\t\tcase 's': case 'str': oo.push(encode(cell.v)); break;\n\t\t\t\t\tcase 'n':\n\t\t\t\t\t\tif(!cell.f) { oo[2]='v'; oo[3]=cell.v; }\n\t\t\t\t\t\telse { oo[2]='vtf'; oo[3]='n'; oo[4]=cell.v; oo[5]=encode(cell.f); }\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'b':\n\t\t\t\t\t\too[2] = 'vt'+(cell.f?'f':'c'); oo[3]='nl'; oo[4]=cell.v?\"1\":\"0\";\n\t\t\t\t\t\too[5] = encode(cell.f||(cell.v?'TRUE':'FALSE'));\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'd':\n\t\t\t\t\t\tvar t = datenum(parseDate(cell.v));\n\t\t\t\t\t\too[2] = 'vtc'; oo[3] = 'nd'; oo[4] = \"\"+t;\n\t\t\t\t\t\too[5] = cell.w || SSF_format(cell.z || table_fmt[14], t);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'e': continue;\n\t\t\t\t}\n\t\t\t\to.push(oo.join(\":\"));\n\t\t\t}\n\t\t}\n\t\to.push(\"sheet:c:\" + (r.e.c-r.s.c+1) + \":r:\" + (r.e.r-r.s.r+1) + \":tvf:1\");\n\t\to.push(\"valueformat:1:text-wiki\");\n\t\t//o.push(\"copiedfrom:\" + ws['!ref']); // clipboard only\n\t\treturn o.join(\"\\n\");\n\t}\n\n\tfunction sheet_to_eth(ws/*:Worksheet*//*::, opts:?any*/)/*:string*/ {\n\t\treturn [header, sep, meta, sep, sheet_to_eth_data(ws), end].join(\"\\n\");\n\t\t// return [\"version:1.5\", sheet_to_eth_data(ws)].join(\"\\n\"); // clipboard form\n\t}\n\n\treturn {\n\t\tto_workbook: eth_to_workbook,\n\t\tto_sheet: eth_to_sheet,\n\t\tfrom_sheet: sheet_to_eth\n\t};\n})();\n\nvar PRN = /*#__PURE__*/(function() {\n\tfunction set_text_arr(data/*:string*/, arr/*:AOA*/, R/*:number*/, C/*:number*/, o/*:any*/) {\n\t\tif(o.raw) arr[R][C] = data;\n\t\telse if(data === \"\"){/* empty */}\n\t\telse if(data === 'TRUE') arr[R][C] = true;\n\t\telse if(data === 'FALSE') arr[R][C] = false;\n\t\telse if(!isNaN(fuzzynum(data))) arr[R][C] = fuzzynum(data);\n\t\telse if(!isNaN(fuzzydate(data).getDate())) arr[R][C] = parseDate(data);\n\t\telse arr[R][C] = data;\n\t}\n\n\tfunction prn_to_aoa_str(f/*:string*/, opts)/*:AOA*/ {\n\t\tvar o = opts || {};\n\t\tvar arr/*:AOA*/ = ([]/*:any*/);\n\t\tif(!f || f.length === 0) return arr;\n\t\tvar lines = f.split(/[\\r\\n]/);\n\t\tvar L = lines.length - 1;\n\t\twhile(L >= 0 && lines[L].length === 0) --L;\n\t\tvar start = 10, idx = 0;\n\t\tvar R = 0;\n\t\tfor(; R <= L; ++R) {\n\t\t\tidx = lines[R].indexOf(\" \");\n\t\t\tif(idx == -1) idx = lines[R].length; else idx++;\n\t\t\tstart = Math.max(start, idx);\n\t\t}\n\t\tfor(R = 0; R <= L; ++R) {\n\t\t\tarr[R] = [];\n\t\t\t/* TODO: confirm that widths are always 10 */\n\t\t\tvar C = 0;\n\t\t\tset_text_arr(lines[R].slice(0, start).trim(), arr, R, C, o);\n\t\t\tfor(C = 1; C <= (lines[R].length - start)/10 + 1; ++C)\n\t\t\t\tset_text_arr(lines[R].slice(start+(C-1)*10,start+C*10).trim(),arr,R,C,o);\n\t\t}\n\t\tif(o.sheetRows) arr = arr.slice(0, o.sheetRows);\n\t\treturn arr;\n\t}\n\n\t// List of accepted CSV separators\n\tvar guess_seps = {\n\t\t/*::[*/0x2C/*::]*/: ',',\n\t\t/*::[*/0x09/*::]*/: \"\\t\",\n\t\t/*::[*/0x3B/*::]*/: ';',\n\t\t/*::[*/0x7C/*::]*/: '|'\n\t};\n\n\t// CSV separator weights to be used in case of equal numbers\n\tvar guess_sep_weights = {\n\t\t/*::[*/0x2C/*::]*/: 3,\n\t\t/*::[*/0x09/*::]*/: 2,\n\t\t/*::[*/0x3B/*::]*/: 1,\n\t\t/*::[*/0x7C/*::]*/: 0\n\t};\n\n\tfunction guess_sep(str) {\n\t\tvar cnt = {}, instr = false, end = 0, cc = 0;\n\t\tfor(;end < str.length;++end) {\n\t\t\tif((cc=str.charCodeAt(end)) == 0x22) instr = !instr;\n\t\t\telse if(!instr && cc in guess_seps) cnt[cc] = (cnt[cc]||0)+1;\n\t\t}\n\n\t\tcc = [];\n\t\tfor(end in cnt) if ( Object.prototype.hasOwnProperty.call(cnt, end) ) {\n\t\t\tcc.push([ cnt[end], end ]);\n\t\t}\n\n\t\tif ( !cc.length ) {\n\t\t\tcnt = guess_sep_weights;\n\t\t\tfor(end in cnt) if ( Object.prototype.hasOwnProperty.call(cnt, end) ) {\n\t\t\t\tcc.push([ cnt[end], end ]);\n\t\t\t}\n\t\t}\n\n\t\tcc.sort(function(a, b) { return a[0] - b[0] || guess_sep_weights[a[1]] - guess_sep_weights[b[1]]; });\n\n\t\treturn guess_seps[cc.pop()[1]] || 0x2C;\n\t}\n\n\tfunction dsv_to_sheet_str(str/*:string*/, opts)/*:Worksheet*/ {\n\t\tvar o = opts || {};\n\t\tvar sep = \"\";\n\t\tif(DENSE != null && o.dense == null) o.dense = DENSE;\n\t\tvar ws/*:Worksheet*/ = ({}/*:any*/);\n\t\tif(o.dense) ws[\"!data\"] = [];\n\t\tvar range/*:Range*/ = ({s: {c:0, r:0}, e: {c:0, r:0}}/*:any*/);\n\n\t\tif(str.slice(0,4) == \"sep=\") {\n\t\t\t// If the line ends in \\r\\n\n\t\t\tif(str.charCodeAt(5) == 13 && str.charCodeAt(6) == 10 ) {\n\t\t\t\tsep = str.charAt(4); str = str.slice(7);\n\t\t\t}\n\t\t\t// If line ends in \\r OR \\n\n\t\t\telse if(str.charCodeAt(5) == 13 || str.charCodeAt(5) == 10 ) {\n\t\t\t\tsep = str.charAt(4); str = str.slice(6);\n\t\t\t}\n\t\t\telse sep = guess_sep(str.slice(0,1024));\n\t\t}\n\t\telse if(o && o.FS) sep = o.FS;\n\t\telse sep = guess_sep(str.slice(0,1024));\n\t\tvar R = 0, C = 0, v = 0;\n\t\tvar start = 0, end = 0, sepcc = sep.charCodeAt(0), instr = false, cc=0, startcc=str.charCodeAt(0);\n\t\tvar _re/*:?RegExp*/ = o.dateNF != null ? dateNF_regex(o.dateNF) : null;\n\t\tfunction finish_cell() {\n\t\t\tvar s = str.slice(start, end); if(s.slice(-1) == \"\\r\") s = s.slice(0, -1);\n\t\t\tvar cell = ({}/*:any*/);\n\t\t\tif(s.charAt(0) == '\"' && s.charAt(s.length - 1) == '\"') s = s.slice(1,-1).replace(/\"\"/g,'\"');\n\t\t\tif(s.length === 0) cell.t = 'z';\n\t\t\telse if(o.raw) { cell.t = 's'; cell.v = s; }\n\t\t\telse if(s.trim().length === 0) { cell.t = 's'; cell.v = s; }\n\t\t\telse if(s.charCodeAt(0) == 0x3D) {\n\t\t\t\tif(s.charCodeAt(1) == 0x22 && s.charCodeAt(s.length - 1) == 0x22) { cell.t = 's'; cell.v = s.slice(2,-1).replace(/\"\"/g,'\"'); }\n\t\t\t\telse if(fuzzyfmla(s)) { cell.t = 'n'; cell.f = s.slice(1); }\n\t\t\t\telse { cell.t = 's'; cell.v = s; } }\n\t\t\telse if(s == \"TRUE\") { cell.t = 'b'; cell.v = true; }\n\t\t\telse if(s == \"FALSE\") { cell.t = 'b'; cell.v = false; }\n\t\t\telse if(!isNaN(v = fuzzynum(s))) { cell.t = 'n'; if(o.cellText !== false) cell.w = s; cell.v = v; }\n\t\t\telse if(!isNaN((v = fuzzydate(s)).getDate()) || _re && s.match(_re)) {\n\t\t\t\tcell.z = o.dateNF || table_fmt[14];\n\t\t\t\tvar k = 0;\n\t\t\t\tif(_re && s.match(_re)){ s=dateNF_fix(s, o.dateNF, (s.match(_re)||[])); k=1; v = parseDate(s, k); }\n\t\t\t\tif(o.cellDates) { cell.t = 'd'; cell.v = v; }\n\t\t\t\telse { cell.t = 'n'; cell.v = datenum(v); }\n\t\t\t\tif(o.cellText !== false) cell.w = SSF_format(cell.z, cell.v instanceof Date ? datenum(cell.v):cell.v);\n\t\t\t\tif(!o.cellNF) delete cell.z;\n\t\t\t} else {\n\t\t\t\tcell.t = 's';\n\t\t\t\tcell.v = s;\n\t\t\t}\n\t\t\tif(cell.t == 'z'){}\n\t\t\telse if(o.dense) { if(!ws[\"!data\"][R]) ws[\"!data\"][R] = []; ws[\"!data\"][R][C] = cell; }\n\t\t\telse ws[encode_cell({c:C,r:R})] = cell;\n\t\t\tstart = end+1; startcc = str.charCodeAt(start);\n\t\t\tif(range.e.c < C) range.e.c = C;\n\t\t\tif(range.e.r < R) range.e.r = R;\n\t\t\tif(cc == sepcc) ++C; else { C = 0; ++R; if(o.sheetRows && o.sheetRows <= R) return true; }\n\t\t}\n\t\touter: for(;end < str.length;++end) switch((cc=str.charCodeAt(end))) {\n\t\t\tcase 0x22: if(startcc === 0x22) instr = !instr; break;\n\t\t\tcase 0x0d:\n\t\t\t\tif(instr) break;\n\t\t\t\tif(str.charCodeAt(end+1) == 0x0a) ++end;\n\t\t\t\t/* falls through */\n\t\t\tcase sepcc: case 0x0a: if(!instr && finish_cell()) break outer; break;\n\t\t\tdefault: break;\n\t\t}\n\t\tif(end - start > 0) finish_cell();\n\n\t\tws['!ref'] = encode_range(range);\n\t\treturn ws;\n\t}\n\n\tfunction prn_to_sheet_str(str/*:string*/, opts)/*:Worksheet*/ {\n\t\tif(!(opts && opts.PRN)) return dsv_to_sheet_str(str, opts);\n\t\tif(opts.FS) return dsv_to_sheet_str(str, opts);\n\t\tif(str.slice(0,4) == \"sep=\") return dsv_to_sheet_str(str, opts);\n\t\tif(str.indexOf(\"\\t\") >= 0 || str.indexOf(\",\") >= 0 || str.indexOf(\";\") >= 0) return dsv_to_sheet_str(str, opts);\n\t\treturn aoa_to_sheet(prn_to_aoa_str(str, opts), opts);\n\t}\n\n\tfunction prn_to_sheet(d/*:RawData*/, opts)/*:Worksheet*/ {\n\t\tvar str = \"\", bytes = opts.type == 'string' ? [0,0,0,0] : firstbyte(d, opts);\n\t\tswitch(opts.type) {\n\t\t\tcase 'base64': str = Base64_decode(d); break;\n\t\t\tcase 'binary': str = d; break;\n\t\t\tcase 'buffer':\n\t\t\t\tif(opts.codepage == 65001) str = d.toString('utf8'); // TODO: test if buf\n\t\t\t\telse if(opts.codepage && typeof $cptable !== 'undefined') str = $cptable.utils.decode(opts.codepage, d);\n\t\t\t\telse str = has_buf && Buffer.isBuffer(d) ? d.toString('binary') : a2s(d);\n\t\t\t\tbreak;\n\t\t\tcase 'array': str = cc2str(d); break;\n\t\t\tcase 'string': str = d; break;\n\t\t\tdefault: throw new Error(\"Unrecognized type \" + opts.type);\n\t\t}\n\t\tif(bytes[0] == 0xEF && bytes[1] == 0xBB && bytes[2] == 0xBF) str = utf8read(str.slice(3));\n\t\telse if(opts.type != 'string' && opts.type != 'buffer' && opts.codepage == 65001) str = utf8read(str);\n\t\telse if((opts.type == 'binary') && typeof $cptable !== 'undefined' && opts.codepage)  str = $cptable.utils.decode(opts.codepage, $cptable.utils.encode(28591,str));\n\t\tif(str.slice(0,19) == \"socialcalc:version:\") return ETH.to_sheet(opts.type == 'string' ? str : utf8read(str), opts);\n\t\treturn prn_to_sheet_str(str, opts);\n\t}\n\n\tfunction prn_to_workbook(d/*:RawData*/, opts)/*:Workbook*/ { return sheet_to_workbook(prn_to_sheet(d, opts), opts); }\n\n\tfunction sheet_to_prn(ws/*:Worksheet*//*::, opts:?any*/)/*:string*/ {\n\t\tvar o/*:Array<string>*/ = [];\n\t\tvar r = safe_decode_range(ws['!ref']), cell/*:Cell*/;\n\t\tvar dense = ws[\"!data\"] != null;\n\t\tfor(var R = r.s.r; R <= r.e.r; ++R) {\n\t\t\tvar oo/*:Array<string>*/ = [];\n\t\t\tfor(var C = r.s.c; C <= r.e.c; ++C) {\n\t\t\t\tvar coord = encode_cell({r:R,c:C});\n\t\t\t\tcell = dense ? (ws[\"!data\"][R]||[])[C] : ws[coord];\n\t\t\t\tif(!cell || cell.v == null) { oo.push(\"          \"); continue; }\n\t\t\t\tvar w = (cell.w || (format_cell(cell), cell.w) || \"\").slice(0,10);\n\t\t\t\twhile(w.length < 10) w += \" \";\n\t\t\t\too.push(w + (C === 0 ? \" \" : \"\"));\n\t\t\t}\n\t\t\to.push(oo.join(\"\"));\n\t\t}\n\t\treturn o.join(\"\\n\");\n\t}\n\n\treturn {\n\t\tto_workbook: prn_to_workbook,\n\t\tto_sheet: prn_to_sheet,\n\t\tfrom_sheet: sheet_to_prn\n\t};\n})();\n\n/* Excel defaults to SYLK but warns if data is not valid */\nfunction read_wb_ID(d, opts) {\n\tvar o = opts || {}, OLD_WTF = !!o.WTF; o.WTF = true;\n\ttry {\n\t\tvar out = SYLK.to_workbook(d, o);\n\t\to.WTF = OLD_WTF;\n\t\treturn out;\n\t} catch(e) {\n\t\to.WTF = OLD_WTF;\n\t\tif(!e.message.match(/SYLK bad record ID/) && OLD_WTF) throw e;\n\t\treturn PRN.to_workbook(d, opts);\n\t}\n}\n\nvar WK_ = /*#__PURE__*/(function() {\n\tfunction lotushopper(data, cb/*:RecordHopperCB*/, opts/*:any*/) {\n\t\tif(!data) return;\n\t\tprep_blob(data, data.l || 0);\n\t\tvar Enum = opts.Enum || WK1Enum;\n\t\twhile(data.l < data.length) {\n\t\t\tvar RT = data.read_shift(2);\n\t\t\tvar R = Enum[RT] || Enum[0xFFFF];\n\t\t\tvar length = data.read_shift(2);\n\t\t\tvar tgt = data.l + length;\n\t\t\tvar d = R.f && R.f(data, length, opts);\n\t\t\tdata.l = tgt;\n\t\t\tif(cb(d, R, RT)) return;\n\t\t}\n\t}\n\n\tfunction lotus_to_workbook(d/*:RawData*/, opts) {\n\t\tswitch(opts.type) {\n\t\t\tcase 'base64': return lotus_to_workbook_buf(s2a(Base64_decode(d)), opts);\n\t\t\tcase 'binary': return lotus_to_workbook_buf(s2a(d), opts);\n\t\t\tcase 'buffer':\n\t\t\tcase 'array': return lotus_to_workbook_buf(d, opts);\n\t\t}\n\t\tthrow \"Unsupported type \" + opts.type;\n\t}\n\n\tfunction lotus_to_workbook_buf(d, opts)/*:Workbook*/ {\n\t\tif(!d) return d;\n\t\tvar o = opts || {};\n\t\tif(DENSE != null && o.dense == null) o.dense = DENSE;\n\t\tvar s/*:Worksheet*/ = ({}/*:any*/), n = \"Sheet1\", next_n = \"\", sidx = 0;\n\t\tvar sheets = {}, snames = [], realnames = [], sdata = [];\n\t\tif(o.dense) sdata = s[\"!data\"] = [];\n\n\t\tvar refguess = {s: {r:0, c:0}, e: {r:0, c:0} };\n\t\tvar sheetRows = o.sheetRows || 0;\n\n\t\tif(d[4] == 0x51 && d[5] == 0x50 && d[6] == 0x57) return qpw_to_workbook_buf(d, opts);\n\t\tif(d[2] == 0x00) {\n\t\t\tif(d[3] == 0x08 || d[3] == 0x09) {\n\t\t\t\tif(d.length >= 16 && d[14] == 0x05 && d[15] === 0x6c) throw new Error(\"Unsupported Works 3 for Mac file\");\n\t\t\t}\n\t\t}\n\n\t\tif(d[2] == 0x02) {\n\t\t\to.Enum = WK1Enum;\n\t\t\tlotushopper(d, function(val, R, RT) { switch(RT) {\n\t\t\t\tcase 0x00: /* BOF */\n\t\t\t\t\to.vers = val;\n\t\t\t\t\tif(val >= 0x1000) o.qpro = true;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 0xFF: /* BOF (works 3+) */\n\t\t\t\t\to.vers = val;\n\t\t\t\t\to.works = true;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 0x06: refguess = val; break; /* RANGE */\n\t\t\t\tcase 0xCC: if(val) next_n = val; break; /* SHEETNAMECS */\n\t\t\t\tcase 0xDE: next_n = val; break; /* SHEETNAMELP */\n\t\t\t\tcase 0x0F: /* LABEL */\n\t\t\t\tcase 0x33: /* STRING */\n\t\t\t\t\tif((!o.qpro && !o.works || RT == 0x33) && val[1].v.charCodeAt(0) < 0x30) val[1].v = val[1].v.slice(1);\n\t\t\t\t\tif(o.works || o.works2) val[1].v = val[1].v.replace(/\\r\\n/g, \"\\n\");\n\t\t\t\t\t/* falls through */\n\t\t\t\tcase 0x0D: /* INTEGER */\n\t\t\t\tcase 0x0E: /* NUMBER */\n\t\t\t\tcase 0x10: /* FORMULA */\n\t\t\t\t\t/* TODO: actual translation of the format code */\n\t\t\t\t\tif(RT == 0x0E && (val[2] & 0x70) == 0x70 && (val[2] & 0x0F) > 1 && (val[2] & 0x0F) < 15) {\n\t\t\t\t\t\tval[1].z = o.dateNF || table_fmt[14];\n\t\t\t\t\t\tif(o.cellDates) { val[1].t = 'd'; val[1].v = numdate(val[1].v); }\n\t\t\t\t\t}\n\n\t\t\t\t\tif(o.qpro) {\n\t\t\t\t\t\tif(val[3] > sidx) {\n\t\t\t\t\t\t\ts[\"!ref\"] = encode_range(refguess);\n\t\t\t\t\t\t\tsheets[n] = s;\n\t\t\t\t\t\t\tsnames.push(n);\n\t\t\t\t\t\t\ts = ({}/*:any*/); if(o.dense) sdata = s[\"!data\"] = [];\n\t\t\t\t\t\t\trefguess = {s: {r:0, c:0}, e: {r:0, c:0} };\n\t\t\t\t\t\t\tsidx = val[3]; n = next_n || \"Sheet\" + (sidx + 1); next_n = \"\";\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tvar tmpcell = o.dense ? (sdata[val[0].r]||[])[val[0].c] : s[encode_cell(val[0])];\n\t\t\t\t\tif(tmpcell) {\n\t\t\t\t\t\ttmpcell.t = val[1].t; tmpcell.v = val[1].v;\n\t\t\t\t\t\tif(val[1].z != null) tmpcell.z = val[1].z;\n\t\t\t\t\t\tif(val[1].f != null) tmpcell.f = val[1].f;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tif(o.dense) {\n\t\t\t\t\t\tif(!sdata[val[0].r]) sdata[val[0].r] = [];\n\t\t\t\t\t\tsdata[val[0].r][val[0].c] = val[1];\n\t\t\t\t\t} else s[encode_cell(val[0])] = val[1];\n\t\t\t\t\tbreak;\n\t\t\t\tcase 0x5405: o.works2 = true; break;\n\t\t\t\tdefault:\n\t\t\t}}, o);\n\t\t} else if(d[2] == 0x1A || d[2] == 0x0E) {\n\t\t\to.Enum = WK3Enum;\n\t\t\tif(d[2] == 0x0E) { o.qpro = true; d.l = 0; }\n\t\t\tlotushopper(d, function(val, R, RT) { switch(RT) {\n\t\t\t\tcase 0xCC: n = val; break; /* SHEETNAMECS */\n\t\t\t\tcase 0x16: /* LABEL16 */\n\t\t\t\t\tif(val[1].v.charCodeAt(0) < 0x30) val[1].v = val[1].v.slice(1);\n\t\t\t\t\t// TODO: R9 appears to encode control codes this way -- verify against other versions\n\t\t\t\t\tval[1].v = val[1].v.replace(/\\x0F./g, function($$) { return String.fromCharCode($$.charCodeAt(1) - 0x20); }).replace(/\\r\\n/g, \"\\n\");\n\t\t\t\t\t/* falls through */\n\t\t\t\tcase 0x17: /* NUMBER17 */\n\t\t\t\tcase 0x18: /* NUMBER18 */\n\t\t\t\tcase 0x19: /* FORMULA19 */\n\t\t\t\tcase 0x25: /* NUMBER25 */\n\t\t\t\tcase 0x27: /* NUMBER27 */\n\t\t\t\tcase 0x28: /* FORMULA28 */\n\t\t\t\t\tif(val[3] > sidx) {\n\t\t\t\t\t\ts[\"!ref\"] = encode_range(refguess);\n\t\t\t\t\t\tsheets[n] = s;\n\t\t\t\t\t\tsnames.push(n);\n\t\t\t\t\t\ts = ({}/*:any*/); if(o.dense) sdata = s[\"!data\"] = [];\n\t\t\t\t\t\trefguess = {s: {r:0, c:0}, e: {r:0, c:0} };\n\t\t\t\t\t\tsidx = val[3]; n = \"Sheet\" + (sidx + 1);\n\t\t\t\t\t}\n\t\t\t\t\tif(sheetRows > 0 && val[0].r >= sheetRows) break;\n\t\t\t\t\tif(o.dense) {\n\t\t\t\t\t\tif(!sdata[val[0].r]) sdata[val[0].r] = [];\n\t\t\t\t\t\tsdata[val[0].r][val[0].c] = val[1];\n\t\t\t\t\t} else s[encode_cell(val[0])] = val[1];\n\t\t\t\t\tif(refguess.e.c < val[0].c) refguess.e.c = val[0].c;\n\t\t\t\t\tif(refguess.e.r < val[0].r) refguess.e.r = val[0].r;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 0x1B: /* XFORMAT */\n\t\t\t\t\tif(val[0x36b0]) realnames[val[0x36b0][0]] = val[0x36b0][1];\n\t\t\t\t\tbreak;\n\t\t\t\tcase 0x0601: /* SHEETINFOQP */\n\t\t\t\t\trealnames[val[0]] = val[1]; if(val[0] == sidx) n = val[1]; break;\n\t\t\t\tdefault: break;\n\t\t\t}}, o);\n\t\t} else throw new Error(\"Unrecognized LOTUS BOF \" + d[2]);\n\t\ts[\"!ref\"] = encode_range(refguess);\n\t\tsheets[next_n || n] = s;\n\t\tsnames.push(next_n || n);\n\t\tif(!realnames.length) return { SheetNames: snames, Sheets: sheets };\n\t\tvar osheets = {}, rnames = [];\n\t\t/* TODO: verify no collisions */\n\t\tfor(var i = 0; i < realnames.length; ++i) if(sheets[snames[i]]) {\n\t\t\trnames.push(realnames[i] || snames[i]);\n\t\t\tosheets[realnames[i]] = sheets[realnames[i]] || sheets[snames[i]];\n\t\t} else {\n\t\t\trnames.push(realnames[i]);\n\t\t\tosheets[realnames[i]] = ({ \"!ref\": \"A1\" });\n\t\t}\n\t\treturn { SheetNames: rnames, Sheets: osheets };\n\t}\n\n\tfunction sheet_to_wk1(ws/*:Worksheet*/, opts/*:WriteOpts*/) {\n\t\tvar o = opts || {};\n\t\tif(+o.codepage >= 0) set_cp(+o.codepage);\n\t\tif(o.type == \"string\") throw new Error(\"Cannot write WK1 to JS string\");\n\t\tvar ba = buf_array();\n\t\tvar range = safe_decode_range(ws[\"!ref\"]);\n\t\tvar dense = ws[\"!data\"] != null;\n\t\tvar cols = [];\n\n\t\twrite_biff_rec(ba, 0x00, write_BOF_WK1(0x0406));\n\t\twrite_biff_rec(ba, 0x06, write_RANGE(range));\n\t\tvar max_R = Math.min(range.e.r, 8191);\n\t\tfor(var C = range.s.c; C <= range.e.c; ++C) cols[C] = encode_col(C);\n\t\tfor(var R = range.s.r; R <= max_R; ++R) {\n\t\t\tvar rr = encode_row(R);\n\t\t\tfor(C = range.s.c; C <= range.e.c; ++C) {\n\t\t\t\tvar cell = dense ? (ws[\"!data\"][R]||[])[C] : ws[cols[C] + rr];\n\t\t\t\tif(!cell || cell.t == \"z\") continue;\n\t\t\t\t/* TODO: formula records */\n\t\t\t\tif(cell.t == \"n\") {\n\t\t\t\t\tif((cell.v|0)==cell.v && cell.v >= -32768 && cell.v <= 32767) write_biff_rec(ba, 0x0d, write_INTEGER(R, C, cell.v));\n\t\t\t\t\telse write_biff_rec(ba, 0x0e, write_NUMBER(R, C, cell.v));\n\t\t\t\t} else {\n\t\t\t\t\tvar str = format_cell(cell);\n\t\t\t\t\twrite_biff_rec(ba, 0x0F, write_LABEL(R, C, str.slice(0, 239)));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\twrite_biff_rec(ba, 0x01);\n\t\treturn ba.end();\n\t}\n\n\tfunction book_to_wk3(wb/*:Workbook*/, opts/*:WriteOpts*/) {\n\t\tvar o = opts || {};\n\t\tif(+o.codepage >= 0) set_cp(+o.codepage);\n\t\tif(o.type == \"string\") throw new Error(\"Cannot write WK3 to JS string\");\n\t\tvar ba = buf_array();\n\n\t\twrite_biff_rec(ba, 0x00, write_BOF_WK3(wb));\n\n\t\tfor(var i = 0, cnt = 0; i < wb.SheetNames.length; ++i) if((wb.Sheets[wb.SheetNames[i]] || {})[\"!ref\"]) write_biff_rec(ba, 0x1b, write_XFORMAT_SHEETNAME(wb.SheetNames[i], cnt++));\n\n\t\tvar wsidx = 0;\n\t\tfor(i = 0; i < wb.SheetNames.length; ++i) {\n\t\t\tvar ws = wb.Sheets[wb.SheetNames[i]];\n\t\t\tif(!ws || !ws[\"!ref\"]) continue;\n\t\t\tvar range = safe_decode_range(ws[\"!ref\"]);\n\t\t\tvar dense = ws[\"!data\"] != null;\n\t\t\tvar cols = [];\n\t\t\tvar max_R = Math.min(range.e.r, 8191);\n\t\t\tfor(var R = range.s.r; R <= max_R; ++R) {\n\t\t\t\tvar rr = encode_row(R);\n\t\t\t\tfor(var C = range.s.c; C <= range.e.c; ++C) {\n\t\t\t\t\tif(R === range.s.r) cols[C] = encode_col(C);\n\t\t\t\t\tvar ref = cols[C] + rr;\n\t\t\t\t\tvar cell = dense ? (ws[\"!data\"][R]||[])[C] : ws[ref];\n\t\t\t\t\tif(!cell || cell.t == \"z\") continue;\n\t\t\t\t\t/* TODO: FORMULA19 NUMBER18 records */\n\t\t\t\t\tif(cell.t == \"n\") {\n\t\t\t\t\t\twrite_biff_rec(ba, 0x17, write_NUMBER_17(R, C, wsidx, cell.v));\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvar str = format_cell(cell);\n\t\t\t\t\t\t/* TODO: max len? */\n\t\t\t\t\t\twrite_biff_rec(ba, 0x16, write_LABEL_16(R, C, wsidx, str.slice(0, 239)));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t++wsidx;\n\t\t}\n\n\t\twrite_biff_rec(ba, 0x01);\n\t\treturn ba.end();\n\t}\n\n\n\tfunction write_BOF_WK1(v/*:number*/) {\n\t\tvar out = new_buf(2);\n\t\tout.write_shift(2, v);\n\t\treturn out;\n\t}\n\n\tfunction write_BOF_WK3(wb/*:Workbook*/) {\n\t\tvar out = new_buf(26);\n\t\tout.write_shift(2, 0x1000);\n\t\tout.write_shift(2, 0x0004);\n\t\tout.write_shift(4, 0x0000);\n\t\tvar rows = 0, cols = 0, wscnt = 0;\n\t\tfor(var i = 0; i < wb.SheetNames.length; ++i) {\n\t\t\tvar name = wb.SheetNames[i];\n\t\t\tvar ws = wb.Sheets[name];\n\t\t\tif(!ws || !ws[\"!ref\"]) continue;\n\t\t\t++wscnt;\n\t\t\tvar range = decode_range(ws[\"!ref\"]);\n\t\t\tif(rows < range.e.r) rows = range.e.r;\n\t\t\tif(cols < range.e.c) cols = range.e.c;\n\t\t}\n\t\tif(rows > 8191) rows = 8191;\n\t\tout.write_shift(2, rows);\n\t\tout.write_shift(1, wscnt);\n\t\tout.write_shift(1, cols);\n\t\tout.write_shift(2, 0x00);\n\t\tout.write_shift(2, 0x00);\n\t\tout.write_shift(1, 0x01);\n\t\tout.write_shift(1, 0x02);\n\t\tout.write_shift(4, 0);\n\t\tout.write_shift(4, 0);\n\t\treturn out;\n\t}\n\n\tfunction parse_RANGE(blob, length, opts) {\n\t\tvar o = {s:{c:0,r:0},e:{c:0,r:0}};\n\t\tif(length == 8 && opts.qpro) {\n\t\t\to.s.c = blob.read_shift(1);\n\t\t\tblob.l++;\n\t\t\to.s.r = blob.read_shift(2);\n\t\t\to.e.c = blob.read_shift(1);\n\t\t\tblob.l++;\n\t\t\to.e.r = blob.read_shift(2);\n\t\t\treturn o;\n\t\t}\n\t\to.s.c = blob.read_shift(2);\n\t\to.s.r = blob.read_shift(2);\n\t\tif(length == 12 && opts.qpro) blob.l += 2;\n\t\to.e.c = blob.read_shift(2);\n\t\to.e.r = blob.read_shift(2);\n\t\tif(length == 12 && opts.qpro) blob.l += 2;\n\t\tif(o.s.c == 0xFFFF) o.s.c = o.e.c = o.s.r = o.e.r = 0;\n\t\treturn o;\n\t}\n\tfunction write_RANGE(range) {\n\t\tvar out = new_buf(8);\n\t\tout.write_shift(2, range.s.c);\n\t\tout.write_shift(2, range.s.r);\n\t\tout.write_shift(2, range.e.c);\n\t\tout.write_shift(2, range.e.r);\n\t\treturn out;\n\t}\n\n\tfunction parse_cell(blob, length, opts) {\n\t\tvar o = [{c:0,r:0}, {t:'n',v:0}, 0, 0];\n\t\tif(opts.qpro && opts.vers != 0x5120) {\n\t\t\to[0].c = blob.read_shift(1);\n\t\t\to[3] = blob.read_shift(1);\n\t\t\to[0].r = blob.read_shift(2);\n\t\t\tblob.l+=2;\n\t\t} else if(opts.works) { // TODO: verify with more complex works3-4 examples\n\t\t\to[0].c = blob.read_shift(2); o[0].r = blob.read_shift(2);\n\t\t\to[2] = blob.read_shift(2);\n\t\t} else {\n\t\t\to[2] = blob.read_shift(1);\n\t\t\to[0].c = blob.read_shift(2); o[0].r = blob.read_shift(2);\n\t\t}\n\t\treturn o;\n\t}\n\n\tfunction parse_LABEL(blob, length, opts) {\n\t\tvar tgt = blob.l + length;\n\t\tvar o = parse_cell(blob, length, opts);\n\t\to[1].t = 's';\n\t\tif(opts.vers == 0x5120) {\n\t\t\tblob.l++;\n\t\t\tvar len = blob.read_shift(1);\n\t\t\to[1].v = blob.read_shift(len, 'utf8');\n\t\t\treturn o;\n\t\t}\n\t\tif(opts.qpro) blob.l++;\n\t\to[1].v = blob.read_shift(tgt - blob.l, 'cstr');\n\t\treturn o;\n\t}\n\tfunction write_LABEL(R, C, s) {\n\t\t/* TODO: encoding */\n\t\tvar o = new_buf(7 + s.length);\n\t\to.write_shift(1, 0xFF);\n\t\to.write_shift(2, C);\n\t\to.write_shift(2, R);\n\t\to.write_shift(1, 0x27); // ??\n\t\tfor(var i = 0; i < o.length; ++i) {\n\t\t\tvar cc = s.charCodeAt(i);\n\t\t\to.write_shift(1, cc >= 0x80 ? 0x5F : cc);\n\t\t}\n\t\to.write_shift(1, 0);\n\t\treturn o;\n\t}\n\tfunction parse_STRING(blob, length, opts) {\n\t\tvar tgt = blob.l + length;\n\t\tvar o = parse_cell(blob, length, opts);\n\t\to[1].t = 's';\n\t\tif(opts.vers == 0x5120) {\n\t\t\tvar len = blob.read_shift(1);\n\t\t\to[1].v = blob.read_shift(len, 'utf8');\n\t\t\treturn o;\n\t\t}\n\t\to[1].v = blob.read_shift(tgt - blob.l, 'cstr');\n\t\treturn o;\n\t}\n\n\tfunction parse_INTEGER(blob, length, opts) {\n\t\tvar o = parse_cell(blob, length, opts);\n\t\to[1].v = blob.read_shift(2, 'i');\n\t\treturn o;\n\t}\n\tfunction write_INTEGER(R, C, v) {\n\t\tvar o = new_buf(7);\n\t\to.write_shift(1, 0xFF);\n\t\to.write_shift(2, C);\n\t\to.write_shift(2, R);\n\t\to.write_shift(2, v, 'i');\n\t\treturn o;\n\t}\n\n\tfunction parse_NUMBER(blob, length, opts) {\n\t\tvar o = parse_cell(blob, length, opts);\n\t\to[1].v = blob.read_shift(8, 'f');\n\t\treturn o;\n\t}\n\tfunction write_NUMBER(R, C, v) {\n\t\tvar o = new_buf(13);\n\t\to.write_shift(1, 0xFF);\n\t\to.write_shift(2, C);\n\t\to.write_shift(2, R);\n\t\to.write_shift(8, v, 'f');\n\t\treturn o;\n\t}\n\n\tfunction parse_FORMULA(blob, length, opts) {\n\t\tvar tgt = blob.l + length;\n\t\tvar o = parse_cell(blob, length, opts);\n\t\t/* TODO: formula */\n\t\to[1].v = blob.read_shift(8, 'f');\n\t\tif(opts.qpro) blob.l = tgt;\n\t\telse {\n\t\t\tvar flen = blob.read_shift(2);\n\t\t\twk1_fmla_to_csf(blob.slice(blob.l, blob.l + flen), o);\n\t\t\tblob.l += flen;\n\t\t}\n\t\treturn o;\n\t}\n\n\tfunction wk1_parse_rc(B, V, col) {\n\t\tvar rel = V & 0x8000;\n\t\tV &= ~0x8000;\n\t\tV = (rel ? B : 0) + ((V >= 0x2000) ? V - 0x4000 : V);\n\t\treturn (rel ? \"\" : \"$\") + (col ? encode_col(V) : encode_row(V));\n\t}\n\t/* var oprec = [\n\t\t8, 8, 8, 8, 8, 8, 8, 8, 6, 4, 4, 5, 5, 7, 3, 3,\n\t\t3, 3, 3, 3, 1, 1, 2, 6, 8, 8, 8, 8, 8, 8, 8, 8\n\t]; */\n\t/* TODO: flesh out */\n\tvar FuncTab = {\n\t\t0x1F: [\"NA\", 0],\n\t\t// 0x20: [\"ERR\", 0],\n\t\t0x21: [\"ABS\", 1],\n\t\t0x22: [\"TRUNC\", 1],\n\t\t0x23: [\"SQRT\", 1],\n\t\t0x24: [\"LOG\", 1],\n\t\t0x25: [\"LN\", 1],\n\t\t0x26: [\"PI\", 0],\n\t\t0x27: [\"SIN\", 1],\n\t\t0x28: [\"COS\", 1],\n\t\t0x29: [\"TAN\", 1],\n\t\t0x2A: [\"ATAN2\", 2],\n\t\t0x2B: [\"ATAN\", 1],\n\t\t0x2C: [\"ASIN\", 1],\n\t\t0x2D: [\"ACOS\", 1],\n\t\t0x2E: [\"EXP\", 1],\n\t\t0x2F: [\"MOD\", 2],\n\t\t// 0x30\n\t\t0x31: [\"ISNA\", 1],\n\t\t0x32: [\"ISERR\", 1],\n\t\t0x33: [\"FALSE\", 0],\n\t\t0x34: [\"TRUE\", 0],\n\t\t0x35: [\"RAND\", 0],\n\t\t// 0x36 DATE\n\t\t// 0x37 NOW\n\t\t// 0x38 PMT\n\t\t// 0x39 PV\n\t\t// 0x3A FV\n\t\t// 0x3B IF\n\t\t// 0x3C DAY\n\t\t// 0x3D MONTH\n\t\t// 0x3E YEAR\n\t\t0x3F: [\"ROUND\", 2],\n\t\t// 0x40 TIME\n\t\t// 0x41 HOUR\n\t\t// 0x42 MINUTE\n\t\t// 0x43 SECOND\n\t\t0x44: [\"ISNUMBER\", 1],\n\t\t0x45: [\"ISTEXT\", 1],\n\t\t0x46: [\"LEN\", 1],\n\t\t0x47: [\"VALUE\", 1],\n\t\t// 0x48: [\"FIXED\", ?? 1],\n\t\t0x49: [\"MID\", 3],\n\t\t0x4A: [\"CHAR\", 1],\n\t\t// 0x4B\n\t\t// 0x4C FIND\n\t\t// 0x4D DATEVALUE\n\t\t// 0x4E TIMEVALUE\n\t\t// 0x4F CELL\n\t\t0x50: [\"SUM\", 69],\n\t\t0x51: [\"AVERAGEA\", 69],\n\t\t0x52: [\"COUNTA\", 69],\n\t\t0x53: [\"MINA\", 69],\n\t\t0x54: [\"MAXA\", 69],\n\t\t// 0x55 VLOOKUP\n\t\t// 0x56 NPV\n\t\t// 0x57 VAR\n\t\t// 0x58 STD\n\t\t// 0x59 IRR\n\t\t// 0x5A HLOOKUP\n\t\t// 0x5B DSUM\n\t\t// 0x5C DAVERAGE\n\t\t// 0x5D DCOUNTA\n\t\t// 0x5E DMIN\n\t\t// 0x5F DMAX\n\t\t// 0x60 DVARP\n\t\t// 0x61 DSTDEVP\n\t\t// 0x62 INDEX\n\t\t// 0x63 COLS\n\t\t// 0x64 ROWS\n\t\t// 0x65 REPEAT\n\t\t0x66: [\"UPPER\", 1],\n\t\t0x67: [\"LOWER\", 1],\n\t\t// 0x68 LEFT\n\t\t// 0x69 RIGHT\n\t\t// 0x6A REPLACE\n\t\t0x6B: [\"PROPER\", 1],\n\t\t// 0x6C CELL\n\t\t0x6D: [\"TRIM\", 1],\n\t\t// 0x6E CLEAN\n\t\t0x6F: [\"T\", 1]\n\t\t// 0x70 V\n\t};\n\tvar BinOpTab = [\n\t\t  \"\",   \"\",   \"\",   \"\",   \"\",   \"\",   \"\",   \"\", // eslint-disable-line no-mixed-spaces-and-tabs\n\t\t  \"\",  \"+\",  \"-\",  \"*\",  \"/\",  \"^\",  \"=\", \"<>\", // eslint-disable-line no-mixed-spaces-and-tabs\n\t\t\"<=\", \">=\",  \"<\",  \">\",   \"\",   \"\",   \"\",   \"\", // eslint-disable-line no-mixed-spaces-and-tabs\n\t\t \"&\",   \"\",   \"\",   \"\",   \"\",   \"\",   \"\",   \"\"  // eslint-disable-line no-mixed-spaces-and-tabs\n\t];\n\n\tfunction wk1_fmla_to_csf(blob, o) {\n\t\tprep_blob(blob, 0);\n\t\tvar out = [], argc = 0, R = \"\", C = \"\", argL = \"\", argR = \"\";\n\t\twhile(blob.l < blob.length) {\n\t\t\tvar cc = blob[blob.l++];\n\t\t\tswitch(cc) {\n\t\t\t\tcase 0x00: out.push(blob.read_shift(8, 'f')); break;\n\t\t\t\tcase 0x01: {\n\t\t\t\t\tC = wk1_parse_rc(o[0].c, blob.read_shift(2), true);\n\t\t\t\t\tR = wk1_parse_rc(o[0].r, blob.read_shift(2), false);\n\t\t\t\t\tout.push(C + R);\n\t\t\t\t} break;\n\t\t\t\tcase 0x02: {\n\t\t\t\t\tvar c = wk1_parse_rc(o[0].c, blob.read_shift(2), true);\n\t\t\t\t\tvar r = wk1_parse_rc(o[0].r, blob.read_shift(2), false);\n\t\t\t\t\tC = wk1_parse_rc(o[0].c, blob.read_shift(2), true);\n\t\t\t\t\tR = wk1_parse_rc(o[0].r, blob.read_shift(2), false);\n\t\t\t\t\tout.push(c + r + \":\" + C + R);\n\t\t\t\t} break;\n\t\t\t\tcase 0x03:\n\t\t\t\t\tif(blob.l < blob.length) { console.error(\"WK1 premature formula end\"); return; }\n\t\t\t\t\tbreak;\n\t\t\t\tcase 0x04: out.push(\"(\" + out.pop() + \")\"); break;\n\t\t\t\tcase 0x05: out.push(blob.read_shift(2)); break;\n\t\t\t\tcase 0x06: {\n\t\t\t\t\t/* TODO: text encoding */\n\t\t\t\t\tvar Z = \"\"; while((cc = blob[blob.l++])) Z += String.fromCharCode(cc);\n\t\t\t\t\tout.push('\"' + Z.replace(/\"/g, '\"\"') + '\"');\n\t\t\t\t} break;\n\n\t\t\t\tcase 0x08: out.push(\"-\" + out.pop()); break;\n\t\t\t\tcase 0x17: out.push(\"+\" + out.pop()); break;\n\t\t\t\tcase 0x16: out.push(\"NOT(\" + out.pop() + \")\"); break;\n\n\t\t\t\tcase 0x14: case 0x15: {\n\t\t\t\t\targR = out.pop(); argL = out.pop();\n\t\t\t\t\tout.push([\"AND\", \"OR\"][cc - 0x14] + \"(\" + argL + \",\" + argR + \")\");\n\t\t\t\t} break;\n\n\t\t\t\tdefault:\n\t\t\t\t\tif(cc < 0x20 && BinOpTab[cc]) {\n\t\t\t\t\t\targR = out.pop(); argL = out.pop();\n\t\t\t\t\t\tout.push(argL + BinOpTab[cc] + argR);\n\t\t\t\t\t} else if(FuncTab[cc]) {\n\t\t\t\t\t\targc = FuncTab[cc][1];\n\t\t\t\t\t\tif(argc == 69) argc = blob[blob.l++];\n\t\t\t\t\t\tif(argc > out.length) { console.error(\"WK1 bad formula parse 0x\" + cc.toString(16) + \":|\" + out.join(\"|\") + \"|\"); return; }\n\t\t\t\t\t\tvar args = out.slice(-argc);\n\t\t\t\t\t\tout.length -= argc;\n\t\t\t\t\t\tout.push(FuncTab[cc][0] + \"(\" + args.join(\",\") + \")\");\n\t\t\t\t\t}\n\t\t\t\t\telse if(cc <= 0x07) return console.error(\"WK1 invalid opcode \" + cc.toString(16));\n\t\t\t\t\telse if(cc <= 0x18) return console.error(\"WK1 unsupported op \" + cc.toString(16));\n\t\t\t\t\telse if(cc <= 0x1E) return console.error(\"WK1 invalid opcode \" + cc.toString(16));\n\t\t\t\t\telse if(cc <= 0x73) return console.error(\"WK1 unsupported function opcode \" + cc.toString(16));\n\t\t\t\t\t// possible future functions ??\n\t\t\t\t\telse return console.error(\"WK1 unrecognized opcode \" + cc.toString(16));\n\t\t\t}\n\t\t}\n\t\tif(out.length == 1) o[1].f = \"\" + out[0];\n\t\telse console.error(\"WK1 bad formula parse |\" + out.join(\"|\") + \"|\");\n\t}\n\n\n\tfunction parse_cell_3(blob/*::, length*/) {\n\t\tvar o = [{c:0,r:0}, {t:'n',v:0}, 0];\n\t\to[0].r = blob.read_shift(2); o[3] = blob[blob.l++]; o[0].c = blob[blob.l++];\n\t\treturn o;\n\t}\n\n\tfunction parse_LABEL_16(blob, length) {\n\t\tvar o = parse_cell_3(blob, length);\n\t\to[1].t = 's';\n\t\to[1].v = blob.read_shift(length - 4, 'cstr');\n\t\treturn o;\n\t}\n\tfunction write_LABEL_16(R, C, wsidx, s) {\n\t\t/* TODO: encoding */\n\t\tvar o = new_buf(6 + s.length);\n\t\to.write_shift(2, R);\n\t\to.write_shift(1, wsidx);\n\t\to.write_shift(1, C);\n\t\to.write_shift(1, 0x27);\n\t\tfor(var i = 0; i < s.length; ++i) {\n\t\t\tvar cc = s.charCodeAt(i);\n\t\t\to.write_shift(1, cc >= 0x80 ? 0x5F : cc);\n\t\t}\n\t\to.write_shift(1, 0);\n\t\treturn o;\n\t}\n\n\tfunction parse_NUMBER_18(blob, length) {\n\t\tvar o = parse_cell_3(blob, length);\n\t\to[1].v = blob.read_shift(2);\n\t\tvar v = o[1].v >> 1;\n\t\tif(o[1].v & 0x1) {\n\t\t\tswitch(v & 0x07) {\n\t\t\t\tcase 0: v = (v >> 3) * 5000; break;\n\t\t\t\tcase 1: v = (v >> 3) * 500; break;\n\t\t\t\tcase 2: v = (v >> 3) / 20; break;\n\t\t\t\tcase 3: v = (v >> 3) / 200; break;\n\t\t\t\tcase 4: v = (v >> 3) / 2000; break;\n\t\t\t\tcase 5: v = (v >> 3) / 20000; break;\n\t\t\t\tcase 6: v = (v >> 3) / 16; break;\n\t\t\t\tcase 7: v = (v >> 3) / 64; break;\n\t\t\t}\n\t\t}\n\t\to[1].v = v;\n\t\treturn o;\n\t}\n\n\tfunction parse_NUMBER_17(blob, length) {\n\t\tvar o = parse_cell_3(blob, length);\n\t\tvar v1 = blob.read_shift(4);\n\t\tvar v2 = blob.read_shift(4);\n\t\tvar e = blob.read_shift(2);\n\t\tif(e == 0xFFFF) {\n\t\t\tif(v1 === 0 && v2 === 0xC0000000) { o[1].t = \"e\"; o[1].v = 0x0F; } // ERR -> #VALUE!\n\t\t\telse if(v1 === 0 && v2 === 0xD0000000) { o[1].t = \"e\"; o[1].v = 0x2A; } // NA -> #N/A\n\t\t\telse o[1].v = 0;\n\t\t\treturn o;\n\t\t}\n\t\tvar s = e & 0x8000; e = (e&0x7FFF) - 16446;\n\t\to[1].v = (1 - s*2) * (v2 * Math.pow(2, e+32) + v1 * Math.pow(2, e));\n\t\treturn o;\n\t}\n\tfunction write_NUMBER_17(R, C, wsidx, v) {\n\t\tvar o = new_buf(14);\n\t\to.write_shift(2, R);\n\t\to.write_shift(1, wsidx);\n\t\to.write_shift(1, C);\n\t\tif(v == 0) {\n\t\t\to.write_shift(4, 0);\n\t\t\to.write_shift(4, 0);\n\t\t\to.write_shift(2, 0xFFFF);\n\t\t\treturn o;\n\t\t}\n\t\tvar s = 0, e = 0, v1 = 0, v2 = 0;\n\t\tif(v < 0) { s = 1; v = -v; }\n\t\te = Math.log2(v) | 0;\n\t\tv /= Math.pow(2, e-31);\n\t\tv2 = (v)>>>0;\n\t\tif((v2&0x80000000) == 0) { v/=2; ++e; v2 = v >>> 0; }\n\t\tv -= v2;\n\t\tv2 |= 0x80000000;\n\t\tv2 >>>= 0;\n\t\tv *= Math.pow(2, 32);\n\t\tv1 = v>>>0;\n\t\to.write_shift(4, v1);\n\t\to.write_shift(4, v2);\n\t\te += 0x3FFF + (s ? 0x8000 : 0);\n\t\to.write_shift(2, e);\n\t\treturn o;\n\t}\n\n\tfunction parse_FORMULA_19(blob, length) {\n\t\tvar o = parse_NUMBER_17(blob, 14);\n\t\tblob.l += length - 14; /* TODO: WK3 formula */\n\t\treturn o;\n\t}\n\n\tfunction parse_NUMBER_25(blob, length) {\n\t\tvar o = parse_cell_3(blob, length);\n\t\tvar v1 = blob.read_shift(4);\n\t\to[1].v = v1 >> 6;\n\t\treturn o;\n\t}\n\n\tfunction parse_NUMBER_27(blob, length) {\n\t\tvar o = parse_cell_3(blob, length);\n\t\tvar v1 = blob.read_shift(8,'f');\n\t\to[1].v = v1;\n\t\treturn o;\n\t}\n\n\tfunction parse_FORMULA_28(blob, length) {\n\t\tvar o = parse_NUMBER_27(blob, 12);\n\t\tblob.l += length - 12; /* TODO: formula */\n\t\treturn o;\n\t}\n\n\tfunction parse_SHEETNAMECS(blob, length) {\n\t\treturn blob[blob.l + length - 1] == 0 ? blob.read_shift(length, 'cstr') : \"\";\n\t}\n\n\tfunction parse_SHEETNAMELP(blob, length) {\n\t\tvar len = blob[blob.l++];\n\t\tif(len > length - 1) len = length - 1;\n\t\tvar o = \"\"; while(o.length < len) o += String.fromCharCode(blob[blob.l++]);\n\t\treturn o;\n\t}\n\n\tfunction parse_SHEETINFOQP(blob, length, opts) {\n\t\tif(!opts.qpro || length < 21) return;\n\t\tvar id = blob.read_shift(1);\n\t\tblob.l += 17;\n\t\tblob.l += 1; //var len = blob.read_shift(1);\n\t\tblob.l += 2;\n\t\tvar nm = blob.read_shift(length - 21, 'cstr');\n\t\treturn [id, nm];\n\t}\n\n\tfunction parse_XFORMAT(blob, length) {\n\t\tvar o = {}, tgt = blob.l + length;\n\t\twhile(blob.l < tgt) {\n\t\t\tvar dt = blob.read_shift(2);\n\t\t\tif(dt == 0x36b0) {\n\t\t\t\to[dt] = [0, \"\"];\n\t\t\t\to[dt][0] = blob.read_shift(2);\n\t\t\t\twhile(blob[blob.l]) { o[dt][1] += String.fromCharCode(blob[blob.l]); blob.l++; } blob.l++;\n\t\t\t}\n\t\t\t// TODO: 0x3a99 ??\n\t\t}\n\t\treturn o;\n\t}\n\tfunction write_XFORMAT_SHEETNAME(name, wsidx) {\n\t\tvar out = new_buf(5 + name.length);\n\t\tout.write_shift(2, 0x36b0);\n\t\tout.write_shift(2, wsidx);\n\t\tfor(var i = 0; i < name.length; ++i) {\n\t\t\tvar cc = name.charCodeAt(i);\n\t\t\tout[out.l++] = cc > 0x7F ? 0x5F : cc;\n\t\t}\n\t\tout[out.l++] = 0;\n\t\treturn out;\n\t}\n\n\tvar WK1Enum = {\n\t\t/*::[*/0x0000/*::]*/: { n:\"BOF\", f:parseuint16 },\n\t\t/*::[*/0x0001/*::]*/: { n:\"EOF\" },\n\t\t/*::[*/0x0002/*::]*/: { n:\"CALCMODE\" },\n\t\t/*::[*/0x0003/*::]*/: { n:\"CALCORDER\" },\n\t\t/*::[*/0x0004/*::]*/: { n:\"SPLIT\" },\n\t\t/*::[*/0x0005/*::]*/: { n:\"SYNC\" },\n\t\t/*::[*/0x0006/*::]*/: { n:\"RANGE\", f:parse_RANGE },\n\t\t/*::[*/0x0007/*::]*/: { n:\"WINDOW1\" },\n\t\t/*::[*/0x0008/*::]*/: { n:\"COLW1\" },\n\t\t/*::[*/0x0009/*::]*/: { n:\"WINTWO\" },\n\t\t/*::[*/0x000A/*::]*/: { n:\"COLW2\" },\n\t\t/*::[*/0x000B/*::]*/: { n:\"NAME\" },\n\t\t/*::[*/0x000C/*::]*/: { n:\"BLANK\" },\n\t\t/*::[*/0x000D/*::]*/: { n:\"INTEGER\", f:parse_INTEGER },\n\t\t/*::[*/0x000E/*::]*/: { n:\"NUMBER\", f:parse_NUMBER },\n\t\t/*::[*/0x000F/*::]*/: { n:\"LABEL\", f:parse_LABEL },\n\t\t/*::[*/0x0010/*::]*/: { n:\"FORMULA\", f:parse_FORMULA },\n\t\t/*::[*/0x0018/*::]*/: { n:\"TABLE\" },\n\t\t/*::[*/0x0019/*::]*/: { n:\"ORANGE\" },\n\t\t/*::[*/0x001A/*::]*/: { n:\"PRANGE\" },\n\t\t/*::[*/0x001B/*::]*/: { n:\"SRANGE\" },\n\t\t/*::[*/0x001C/*::]*/: { n:\"FRANGE\" },\n\t\t/*::[*/0x001D/*::]*/: { n:\"KRANGE1\" },\n\t\t/*::[*/0x0020/*::]*/: { n:\"HRANGE\" },\n\t\t/*::[*/0x0023/*::]*/: { n:\"KRANGE2\" },\n\t\t/*::[*/0x0024/*::]*/: { n:\"PROTEC\" },\n\t\t/*::[*/0x0025/*::]*/: { n:\"FOOTER\" },\n\t\t/*::[*/0x0026/*::]*/: { n:\"HEADER\" },\n\t\t/*::[*/0x0027/*::]*/: { n:\"SETUP\" },\n\t\t/*::[*/0x0028/*::]*/: { n:\"MARGINS\" },\n\t\t/*::[*/0x0029/*::]*/: { n:\"LABELFMT\" },\n\t\t/*::[*/0x002A/*::]*/: { n:\"TITLES\" },\n\t\t/*::[*/0x002B/*::]*/: { n:\"SHEETJS\" },\n\t\t/*::[*/0x002D/*::]*/: { n:\"GRAPH\" },\n\t\t/*::[*/0x002E/*::]*/: { n:\"NGRAPH\" },\n\t\t/*::[*/0x002F/*::]*/: { n:\"CALCCOUNT\" },\n\t\t/*::[*/0x0030/*::]*/: { n:\"UNFORMATTED\" },\n\t\t/*::[*/0x0031/*::]*/: { n:\"CURSORW12\" },\n\t\t/*::[*/0x0032/*::]*/: { n:\"WINDOW\" },\n\t\t/*::[*/0x0033/*::]*/: { n:\"STRING\", f:parse_STRING },\n\t\t/*::[*/0x0037/*::]*/: { n:\"PASSWORD\" },\n\t\t/*::[*/0x0038/*::]*/: { n:\"LOCKED\" },\n\t\t/*::[*/0x003C/*::]*/: { n:\"QUERY\" },\n\t\t/*::[*/0x003D/*::]*/: { n:\"QUERYNAME\" },\n\t\t/*::[*/0x003E/*::]*/: { n:\"PRINT\" },\n\t\t/*::[*/0x003F/*::]*/: { n:\"PRINTNAME\" },\n\t\t/*::[*/0x0040/*::]*/: { n:\"GRAPH2\" },\n\t\t/*::[*/0x0041/*::]*/: { n:\"GRAPHNAME\" },\n\t\t/*::[*/0x0042/*::]*/: { n:\"ZOOM\" },\n\t\t/*::[*/0x0043/*::]*/: { n:\"SYMSPLIT\" },\n\t\t/*::[*/0x0044/*::]*/: { n:\"NSROWS\" },\n\t\t/*::[*/0x0045/*::]*/: { n:\"NSCOLS\" },\n\t\t/*::[*/0x0046/*::]*/: { n:\"RULER\" },\n\t\t/*::[*/0x0047/*::]*/: { n:\"NNAME\" },\n\t\t/*::[*/0x0048/*::]*/: { n:\"ACOMM\" },\n\t\t/*::[*/0x0049/*::]*/: { n:\"AMACRO\" },\n\t\t/*::[*/0x004A/*::]*/: { n:\"PARSE\" },\n\t\t/*::[*/0x0066/*::]*/: { n:\"PRANGES??\" },\n\t\t/*::[*/0x0067/*::]*/: { n:\"RRANGES??\" },\n\t\t/*::[*/0x0068/*::]*/: { n:\"FNAME??\" },\n\t\t/*::[*/0x0069/*::]*/: { n:\"MRANGES??\" },\n\t\t/*::[*/0x00CC/*::]*/: { n:\"SHEETNAMECS\", f:parse_SHEETNAMECS },\n\t\t/*::[*/0x00DE/*::]*/: { n:\"SHEETNAMELP\", f:parse_SHEETNAMELP },\n\t\t/*::[*/0x00FF/*::]*/: { n:\"BOF\", f:parseuint16 },\n\t\t/*::[*/0xFFFF/*::]*/: { n:\"\" }\n\t};\n\n\tvar WK3Enum = {\n\t\t/*::[*/0x0000/*::]*/: { n:\"BOF\" },\n\t\t/*::[*/0x0001/*::]*/: { n:\"EOF\" },\n\t\t/*::[*/0x0002/*::]*/: { n:\"PASSWORD\" },\n\t\t/*::[*/0x0003/*::]*/: { n:\"CALCSET\" },\n\t\t/*::[*/0x0004/*::]*/: { n:\"WINDOWSET\" },\n\t\t/*::[*/0x0005/*::]*/: { n:\"SHEETCELLPTR\" },\n\t\t/*::[*/0x0006/*::]*/: { n:\"SHEETLAYOUT\" },\n\t\t/*::[*/0x0007/*::]*/: { n:\"COLUMNWIDTH\" },\n\t\t/*::[*/0x0008/*::]*/: { n:\"HIDDENCOLUMN\" },\n\t\t/*::[*/0x0009/*::]*/: { n:\"USERRANGE\" },\n\t\t/*::[*/0x000A/*::]*/: { n:\"SYSTEMRANGE\" },\n\t\t/*::[*/0x000B/*::]*/: { n:\"ZEROFORCE\" },\n\t\t/*::[*/0x000C/*::]*/: { n:\"SORTKEYDIR\" },\n\t\t/*::[*/0x000D/*::]*/: { n:\"FILESEAL\" },\n\t\t/*::[*/0x000E/*::]*/: { n:\"DATAFILLNUMS\" },\n\t\t/*::[*/0x000F/*::]*/: { n:\"PRINTMAIN\" },\n\t\t/*::[*/0x0010/*::]*/: { n:\"PRINTSTRING\" },\n\t\t/*::[*/0x0011/*::]*/: { n:\"GRAPHMAIN\" },\n\t\t/*::[*/0x0012/*::]*/: { n:\"GRAPHSTRING\" },\n\t\t/*::[*/0x0013/*::]*/: { n:\"??\" },\n\t\t/*::[*/0x0014/*::]*/: { n:\"ERRCELL\" },\n\t\t/*::[*/0x0015/*::]*/: { n:\"NACELL\" },\n\t\t/*::[*/0x0016/*::]*/: { n:\"LABEL16\", f:parse_LABEL_16},\n\t\t/*::[*/0x0017/*::]*/: { n:\"NUMBER17\", f:parse_NUMBER_17 },\n\t\t/*::[*/0x0018/*::]*/: { n:\"NUMBER18\", f:parse_NUMBER_18 },\n\t\t/*::[*/0x0019/*::]*/: { n:\"FORMULA19\", f:parse_FORMULA_19},\n\t\t/*::[*/0x001A/*::]*/: { n:\"FORMULA1A\" },\n\t\t/*::[*/0x001B/*::]*/: { n:\"XFORMAT\", f:parse_XFORMAT },\n\t\t/*::[*/0x001C/*::]*/: { n:\"DTLABELMISC\" },\n\t\t/*::[*/0x001D/*::]*/: { n:\"DTLABELCELL\" },\n\t\t/*::[*/0x001E/*::]*/: { n:\"GRAPHWINDOW\" },\n\t\t/*::[*/0x001F/*::]*/: { n:\"CPA\" },\n\t\t/*::[*/0x0020/*::]*/: { n:\"LPLAUTO\" },\n\t\t/*::[*/0x0021/*::]*/: { n:\"QUERY\" },\n\t\t/*::[*/0x0022/*::]*/: { n:\"HIDDENSHEET\" },\n\t\t/*::[*/0x0023/*::]*/: { n:\"??\" },\n\t\t/*::[*/0x0025/*::]*/: { n:\"NUMBER25\", f:parse_NUMBER_25 },\n\t\t/*::[*/0x0026/*::]*/: { n:\"??\" },\n\t\t/*::[*/0x0027/*::]*/: { n:\"NUMBER27\", f:parse_NUMBER_27 },\n\t\t/*::[*/0x0028/*::]*/: { n:\"FORMULA28\", f:parse_FORMULA_28 },\n\t\t/*::[*/0x008E/*::]*/: { n:\"??\" },\n\t\t/*::[*/0x0093/*::]*/: { n:\"??\" },\n\t\t/*::[*/0x0096/*::]*/: { n:\"??\" },\n\t\t/*::[*/0x0097/*::]*/: { n:\"??\" },\n\t\t/*::[*/0x0098/*::]*/: { n:\"??\" },\n\t\t/*::[*/0x0099/*::]*/: { n:\"??\" },\n\t\t/*::[*/0x009A/*::]*/: { n:\"??\" },\n\t\t/*::[*/0x009B/*::]*/: { n:\"??\" },\n\t\t/*::[*/0x009C/*::]*/: { n:\"??\" },\n\t\t/*::[*/0x00A3/*::]*/: { n:\"??\" },\n\t\t/*::[*/0x00AE/*::]*/: { n:\"??\" },\n\t\t/*::[*/0x00AF/*::]*/: { n:\"??\" },\n\t\t/*::[*/0x00B0/*::]*/: { n:\"??\" },\n\t\t/*::[*/0x00B1/*::]*/: { n:\"??\" },\n\t\t/*::[*/0x00B8/*::]*/: { n:\"??\" },\n\t\t/*::[*/0x00B9/*::]*/: { n:\"??\" },\n\t\t/*::[*/0x00BA/*::]*/: { n:\"??\" },\n\t\t/*::[*/0x00BB/*::]*/: { n:\"??\" },\n\t\t/*::[*/0x00BC/*::]*/: { n:\"??\" },\n\t\t/*::[*/0x00C3/*::]*/: { n:\"??\" },\n\t\t/*::[*/0x00C9/*::]*/: { n:\"??\" },\n\t\t/*::[*/0x00CC/*::]*/: { n:\"SHEETNAMECS\", f:parse_SHEETNAMECS },\n\t\t/*::[*/0x00CD/*::]*/: { n:\"??\" },\n\t\t/*::[*/0x00CE/*::]*/: { n:\"??\" },\n\t\t/*::[*/0x00CF/*::]*/: { n:\"??\" },\n\t\t/*::[*/0x00D0/*::]*/: { n:\"??\" },\n\t\t/*::[*/0x0100/*::]*/: { n:\"??\" },\n\t\t/*::[*/0x0103/*::]*/: { n:\"??\" },\n\t\t/*::[*/0x0104/*::]*/: { n:\"??\" },\n\t\t/*::[*/0x0105/*::]*/: { n:\"??\" },\n\t\t/*::[*/0x0106/*::]*/: { n:\"??\" },\n\t\t/*::[*/0x0107/*::]*/: { n:\"??\" },\n\t\t/*::[*/0x0109/*::]*/: { n:\"??\" },\n\t\t/*::[*/0x010A/*::]*/: { n:\"??\" },\n\t\t/*::[*/0x010B/*::]*/: { n:\"??\" },\n\t\t/*::[*/0x010C/*::]*/: { n:\"??\" },\n\t\t/*::[*/0x010E/*::]*/: { n:\"??\" },\n\t\t/*::[*/0x010F/*::]*/: { n:\"??\" },\n\t\t/*::[*/0x0180/*::]*/: { n:\"??\" },\n\t\t/*::[*/0x0185/*::]*/: { n:\"??\" },\n\t\t/*::[*/0x0186/*::]*/: { n:\"??\" },\n\t\t/*::[*/0x0189/*::]*/: { n:\"??\" },\n\t\t/*::[*/0x018C/*::]*/: { n:\"??\" },\n\t\t/*::[*/0x0200/*::]*/: { n:\"??\" },\n\t\t/*::[*/0x0202/*::]*/: { n:\"??\" },\n\t\t/*::[*/0x0201/*::]*/: { n:\"??\" },\n\t\t/*::[*/0x0204/*::]*/: { n:\"??\" },\n\t\t/*::[*/0x0205/*::]*/: { n:\"??\" },\n\t\t/*::[*/0x0280/*::]*/: { n:\"??\" },\n\t\t/*::[*/0x0281/*::]*/: { n:\"??\" },\n\t\t/*::[*/0x0282/*::]*/: { n:\"??\" },\n\t\t/*::[*/0x0283/*::]*/: { n:\"??\" },\n\t\t/*::[*/0x0284/*::]*/: { n:\"??\" },\n\t\t/*::[*/0x0285/*::]*/: { n:\"??\" },\n\t\t/*::[*/0x0286/*::]*/: { n:\"??\" },\n\t\t/*::[*/0x0287/*::]*/: { n:\"??\" },\n\t\t/*::[*/0x0288/*::]*/: { n:\"??\" },\n\t\t/*::[*/0x0292/*::]*/: { n:\"??\" },\n\t\t/*::[*/0x0293/*::]*/: { n:\"??\" },\n\t\t/*::[*/0x0294/*::]*/: { n:\"??\" },\n\t\t/*::[*/0x0295/*::]*/: { n:\"??\" },\n\t\t/*::[*/0x0296/*::]*/: { n:\"??\" },\n\t\t/*::[*/0x0299/*::]*/: { n:\"??\" },\n\t\t/*::[*/0x029A/*::]*/: { n:\"??\" },\n\t\t/*::[*/0x0300/*::]*/: { n:\"??\" },\n\t\t/*::[*/0x0304/*::]*/: { n:\"??\" },\n\t\t/*::[*/0x0601/*::]*/: { n:\"SHEETINFOQP\", f:parse_SHEETINFOQP },\n\t\t/*::[*/0x0640/*::]*/: { n:\"??\" },\n\t\t/*::[*/0x0642/*::]*/: { n:\"??\" },\n\t\t/*::[*/0x0701/*::]*/: { n:\"??\" },\n\t\t/*::[*/0x0702/*::]*/: { n:\"??\" },\n\t\t/*::[*/0x0703/*::]*/: { n:\"??\" },\n\t\t/*::[*/0x0704/*::]*/: { n:\"??\" },\n\t\t/*::[*/0x0780/*::]*/: { n:\"??\" },\n\t\t/*::[*/0x0800/*::]*/: { n:\"??\" },\n\t\t/*::[*/0x0801/*::]*/: { n:\"??\" },\n\t\t/*::[*/0x0804/*::]*/: { n:\"??\" },\n\t\t/*::[*/0x0A80/*::]*/: { n:\"??\" },\n\t\t/*::[*/0x2AF6/*::]*/: { n:\"??\" },\n\t\t/*::[*/0x3231/*::]*/: { n:\"??\" },\n\t\t/*::[*/0x6E49/*::]*/: { n:\"??\" },\n\t\t/*::[*/0x6F44/*::]*/: { n:\"??\" },\n\t\t/*::[*/0xFFFF/*::]*/: { n:\"\" }\n\t};\n\n\t/* QPW uses a different set of record types */\n\tfunction qpw_to_workbook_buf(d, opts)/*:Workbook*/ {\n\t\tprep_blob(d, 0);\n\t\tvar o = opts || {};\n\t\tif(DENSE != null && o.dense == null) o.dense = DENSE;\n\t\tvar s/*:Worksheet*/ = ({}/*:any*/); if(o.dense) s[\"!data\"] = [];\n\t\tvar SST = [], sname = \"\", formulae = [];\n\t\tvar range = {s:{r:-1,c:-1}, e:{r:-1,c:-1}};\n\t\tvar cnt = 0, type = 0, C = 0, R = 0;\n\t\tvar wb = { SheetNames: [], Sheets: {} };\n\t\touter: while(d.l < d.length) {\n\t\t\tvar RT = d.read_shift(2), length = d.read_shift(2);\n\t\t\tvar p = d.slice(d.l, d.l + length);\n\t\t\tprep_blob(p, 0);\n\t\t\tswitch(RT) {\n\t\t\t\tcase 0x01: /* BOF */\n\t\t\t\t\tif(p.read_shift(4) != 0x39575051) throw \"Bad QPW9 BOF!\";\n\t\t\t\t\tbreak;\n\t\t\t\tcase 0x02: /* EOF */ break outer;\n\n\t\t\t\t/* TODO: The behavior here should be consistent with Numbers: QP Notebook ~ .TN.SheetArchive, QP Sheet ~ .TST.TableModelArchive */\n\t\t\t\tcase 0x0401: /* BON */ break;\n\t\t\t\tcase 0x0402: /* EON */ /* TODO: backfill missing sheets based on BON cnt */ break;\n\n\t\t\t\tcase 0x0407: { /* SST */\n\t\t\t\t\tp.l += 12;\n\t\t\t\t\twhile(p.l < p.length) {\n\t\t\t\t\t\tcnt = p.read_shift(2);\n\t\t\t\t\t\ttype = p.read_shift(1);\n\t\t\t\t\t\tSST.push(p.read_shift(cnt, 'cstr'));\n\t\t\t\t\t}\n\t\t\t\t} break;\n\t\t\t\tcase 0x0408: { /* FORMULAE */\n\t\t\t\t\t//p.l += 12;\n\t\t\t\t\t//while(p.l < p.length) {\n\t\t\t\t\t//\tcnt = p.read_shift(2);\n\t\t\t\t\t//\tformulae.push(p.slice(p.l, p.l + cnt + 1)); p.l += cnt + 1;\n\t\t\t\t\t//}\n\t\t\t\t} break;\n\n\t\t\t\tcase 0x0601: { /* BOS */\n\t\t\t\t\tvar sidx = p.read_shift(2);\n\t\t\t\t\ts = ({}/*:any*/); if(o.dense) s[\"!data\"] = [];\n\t\t\t\t\trange.s.c = p.read_shift(2);\n\t\t\t\t\trange.e.c = p.read_shift(2);\n\t\t\t\t\trange.s.r = p.read_shift(4);\n\t\t\t\t\trange.e.r = p.read_shift(4);\n\t\t\t\t\tp.l += 4;\n\t\t\t\t\tif(p.l + 2 < p.length) {\n\t\t\t\t\t\tcnt = p.read_shift(2);\n\t\t\t\t\t\ttype = p.read_shift(1);\n\t\t\t\t\t\tsname = cnt == 0 ? \"\" : p.read_shift(cnt, 'cstr');\n\t\t\t\t\t}\n\t\t\t\t\tif(!sname) sname = encode_col(sidx);\n\t\t\t\t\t/* TODO: backfill empty sheets */\n\t\t\t\t} break;\n\t\t\t\tcase 0x0602: { /* EOS */\n\t\t\t\t\t/* NOTE: QP valid range A1:IV1000000 */\n\t\t\t\t\tif(range.s.c > 0xFF || range.s.r > 999999) break;\n\t\t\t\t\tif(range.e.c < range.s.c) range.e.c = range.s.c;\n\t\t\t\t\tif(range.e.r < range.s.r) range.e.r = range.s.r;\n\t\t\t\t\ts[\"!ref\"] = encode_range(range);\n\t\t\t\t\tbook_append_sheet(wb, s, sname); // TODO: a barrel roll\n\t\t\t\t} break;\n\n\t\t\t\tcase 0x0A01: { /* COL (like XLS Row, modulo the layout transposition) */\n\t\t\t\t\tC = p.read_shift(2);\n\t\t\t\t\tif(range.e.c < C) range.e.c = C;\n\t\t\t\t\tif(range.s.c > C) range.s.c = C;\n\t\t\t\t\tR = p.read_shift(4);\n\t\t\t\t\tif(range.s.r > R) range.s.r = R;\n\t\t\t\t\tR = p.read_shift(4);\n\t\t\t\t\tif(range.e.r < R) range.e.r = R;\n\t\t\t\t} break;\n\n\t\t\t\tcase 0x0C01: { /* MulCells (like XLS MulRK, but takes advantage of common column data patterns) */\n\t\t\t\t\tR = p.read_shift(4), cnt = p.read_shift(4);\n\t\t\t\t\tif(range.s.r > R) range.s.r = R;\n\t\t\t\t\tif(range.e.r < R + cnt - 1) range.e.r = R + cnt - 1;\n\t\t\t\t\tvar CC = encode_col(C);\n\t\t\t\t\twhile(p.l < p.length) {\n\t\t\t\t\t\tvar cell = { t: \"z\" };\n\t\t\t\t\t\tvar flags = p.read_shift(1);\n\t\t\t\t\t\tif(flags & 0x80) p.l += 2;\n\t\t\t\t\t\tvar mul = (flags & 0x40) ? p.read_shift(2) - 1: 0;\n\t\t\t\t\t\tswitch(flags & 0x1F) {\n\t\t\t\t\t\t\tcase 1: break;\n\t\t\t\t\t\t\tcase 2: cell = { t: \"n\", v: p.read_shift(2) }; break;\n\t\t\t\t\t\t\tcase 3: cell = { t: \"n\", v: p.read_shift(2, 'i') }; break;\n\t\t\t\t\t\t\tcase 5: cell = { t: \"n\", v: p.read_shift(8, 'f') }; break;\n\t\t\t\t\t\t\tcase 7: cell = { t: \"s\", v: SST[type = p.read_shift(4) - 1] }; break;\n\t\t\t\t\t\t\tcase 8: cell = { t: \"n\", v: p.read_shift(8, 'f') }; p.l += 2; /* cell.f = formulae[p.read_shift(4)]; */ p.l += 4; break;\n\t\t\t\t\t\t\tdefault: throw \"Unrecognized QPW cell type \" + (flags & 0x1F);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tvar delta = 0;\n\t\t\t\t\t\tif(flags & 0x20) switch(flags & 0x1F) {\n\t\t\t\t\t\t\tcase 2: delta = p.read_shift(2); break;\n\t\t\t\t\t\t\tcase 3: delta = p.read_shift(2, 'i'); break;\n\t\t\t\t\t\t\tcase 7: delta = p.read_shift(2); break;\n\t\t\t\t\t\t\tdefault: throw \"Unsupported delta for QPW cell type \" + (flags & 0x1F);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif(!(!o.sheetStubs && cell.t == \"z\")) {\n\t\t\t\t\t\t\tif(s[\"!data\"] != null) {\n\t\t\t\t\t\t\t\tif(!s[\"!data\"][R]) s[\"!data\"][R] = [];\n\t\t\t\t\t\t\t\ts[\"!data\"][R][C] = cell;\n\t\t\t\t\t\t\t} else s[CC + encode_row(R)] = cell;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t++R; --cnt;\n\t\t\t\t\t\twhile(mul-- > 0 && cnt >= 0) {\n\t\t\t\t\t\t\tif(flags & 0x20) switch(flags & 0x1F) {\n\t\t\t\t\t\t\t\tcase 2: cell = { t: \"n\", v: (cell.v + delta) & 0xFFFF }; break;\n\t\t\t\t\t\t\t\tcase 3: cell = { t: \"n\", v: (cell.v + delta) & 0xFFFF }; if(cell.v > 0x7FFF) cell.v -= 0x10000; break;\n\t\t\t\t\t\t\t\tcase 7: cell = { t: \"s\", v: SST[type = (type + delta) >>> 0] }; break;\n\t\t\t\t\t\t\t\tdefault: throw \"Cannot apply delta for QPW cell type \" + (flags & 0x1F);\n\t\t\t\t\t\t\t} else switch(flags & 0x1F) {\n\t\t\t\t\t\t\t\tcase 1: cell = { t: \"z\" }; break;\n\t\t\t\t\t\t\t\tcase 2: cell = { t: \"n\", v: p.read_shift(2) }; break;\n\t\t\t\t\t\t\t\tcase 7: cell = { t: \"s\", v: SST[type = p.read_shift(4) - 1] }; break;\n\t\t\t\t\t\t\t\tdefault: throw \"Cannot apply repeat for QPW cell type \" + (flags & 0x1F);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif(!(!o.sheetStubs && cell.t == \"z\")) {\n\t\t\t\t\t\t\t\tif(s[\"!data\"] != null) {\n\t\t\t\t\t\t\t\t\tif(!s[\"!data\"][R]) s[\"!data\"][R] = [];\n\t\t\t\t\t\t\t\t\ts[\"!data\"][R][C] = cell;\n\t\t\t\t\t\t\t\t} else s[CC + encode_row(R)] = cell;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t++R; --cnt;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} break;\n\n\t\t\t\tdefault: break;\n\t\t\t}\n\t\t\td.l += length;\n\t\t}\n\t\treturn wb;\n\t}\n\n\treturn {\n\t\tsheet_to_wk1: sheet_to_wk1,\n\t\tbook_to_wk3: book_to_wk3,\n\t\tto_workbook: lotus_to_workbook\n\t};\n})();\n/* 18.4.7 rPr CT_RPrElt */\nfunction parse_rpr(rpr) {\n\tvar font = {}, m = rpr.match(tagregex), i = 0;\n\tvar pass = false;\n\tif(m) for(;i!=m.length; ++i) {\n\t\tvar y = parsexmltag(m[i]);\n\t\tswitch(y[0].replace(/\\w*:/g,\"\")) {\n\t\t\t/* 18.8.12 condense CT_BooleanProperty */\n\t\t\t/* ** not required . */\n\t\t\tcase '<condense': break;\n\t\t\t/* 18.8.17 extend CT_BooleanProperty */\n\t\t\t/* ** not required . */\n\t\t\tcase '<extend': break;\n\t\t\t/* 18.8.36 shadow CT_BooleanProperty */\n\t\t\t/* ** not required . */\n\t\t\tcase '<shadow':\n\t\t\t\tif(!y.val) break;\n\t\t\t\t/* falls through */\n\t\t\tcase '<shadow>':\n\t\t\tcase '<shadow/>': font.shadow = 1; break;\n\t\t\tcase '</shadow>': break;\n\n\t\t\t/* 18.4.1 charset CT_IntProperty TODO */\n\t\t\tcase '<charset':\n\t\t\t\tif(y.val == '1') break;\n\t\t\t\tfont.cp = CS2CP[parseInt(y.val, 10)];\n\t\t\t\tbreak;\n\n\t\t\t/* 18.4.2 outline CT_BooleanProperty TODO */\n\t\t\tcase '<outline':\n\t\t\t\tif(!y.val) break;\n\t\t\t\t/* falls through */\n\t\t\tcase '<outline>':\n\t\t\tcase '<outline/>': font.outline = 1; break;\n\t\t\tcase '</outline>': break;\n\n\t\t\t/* 18.4.5 rFont CT_FontName */\n\t\t\tcase '<rFont': font.name = y.val; break;\n\n\t\t\t/* 18.4.11 sz CT_FontSize */\n\t\t\tcase '<sz': font.sz = y.val; break;\n\n\t\t\t/* 18.4.10 strike CT_BooleanProperty */\n\t\t\tcase '<strike':\n\t\t\t\tif(!y.val) break;\n\t\t\t\t/* falls through */\n\t\t\tcase '<strike>':\n\t\t\tcase '<strike/>': font.strike = 1; break;\n\t\t\tcase '</strike>': break;\n\n\t\t\t/* 18.4.13 u CT_UnderlineProperty */\n\t\t\tcase '<u':\n\t\t\t\tif(!y.val) break;\n\t\t\t\tswitch(y.val) {\n\t\t\t\t\tcase 'double': font.uval = \"double\"; break;\n\t\t\t\t\tcase 'singleAccounting': font.uval = \"single-accounting\"; break;\n\t\t\t\t\tcase 'doubleAccounting': font.uval = \"double-accounting\"; break;\n\t\t\t\t}\n\t\t\t\t/* falls through */\n\t\t\tcase '<u>':\n\t\t\tcase '<u/>': font.u = 1; break;\n\t\t\tcase '</u>': break;\n\n\t\t\t/* 18.8.2 b */\n\t\t\tcase '<b':\n\t\t\t\tif(y.val == '0') break;\n\t\t\t\t/* falls through */\n\t\t\tcase '<b>':\n\t\t\tcase '<b/>': font.b = 1; break;\n\t\t\tcase '</b>': break;\n\n\t\t\t/* 18.8.26 i */\n\t\t\tcase '<i':\n\t\t\t\tif(y.val == '0') break;\n\t\t\t\t/* falls through */\n\t\t\tcase '<i>':\n\t\t\tcase '<i/>': font.i = 1; break;\n\t\t\tcase '</i>': break;\n\n\t\t\t/* 18.3.1.15 color CT_Color TODO: tint, theme, auto, indexed */\n\t\t\tcase '<color':\n\t\t\t\tif(y.rgb) font.color = y.rgb.slice(2,8);\n\t\t\t\tbreak;\n\t\t\tcase '<color>': case '<color/>': case '</color>': break;\n\n\t\t\t/* 18.8.18 family ST_FontFamily */\n\t\t\tcase '<family': font.family = y.val; break;\n\t\t\tcase '<family>': case '<family/>': case '</family>': break;\n\n\t\t\t/* 18.4.14 vertAlign CT_VerticalAlignFontProperty TODO */\n\t\t\tcase '<vertAlign': font.valign = y.val; break;\n\t\t\tcase '<vertAlign>': case '<vertAlign/>': case '</vertAlign>': break;\n\n\t\t\t/* 18.8.35 scheme CT_FontScheme TODO */\n\t\t\tcase '<scheme': break;\n\t\t\tcase '<scheme>': case '<scheme/>': case '</scheme>': break;\n\n\t\t\t/* 18.2.10 extLst CT_ExtensionList ? */\n\t\t\tcase '<extLst': case '<extLst>': case '</extLst>': break;\n\t\t\tcase '<ext': pass = true; break;\n\t\t\tcase '</ext>': pass = false; break;\n\t\t\tdefault:\n\t\t\t\tif(y[0].charCodeAt(1) !== 47 && !pass) throw new Error('Unrecognized rich format ' + y[0]);\n\t\t}\n\t}\n\treturn font;\n}\n\nvar parse_rs = /*#__PURE__*/(function() {\n\tvar tregex = matchtag(\"t\"), rpregex = matchtag(\"rPr\");\n\t/* 18.4.4 r CT_RElt */\n\tfunction parse_r(r) {\n\t\t/* 18.4.12 t ST_Xstring */\n\t\tvar t = r.match(tregex)/*, cp = 65001*/;\n\t\tif(!t) return {t:\"s\", v:\"\"};\n\n\t\tvar o/*:Cell*/ = ({t:'s', v:unescapexml(t[1])}/*:any*/);\n\t\tvar rpr = r.match(rpregex);\n\t\tif(rpr) o.s = parse_rpr(rpr[1]);\n\t\treturn o;\n\t}\n\tvar rregex = /<(?:\\w+:)?r>/g, rend = /<\\/(?:\\w+:)?r>/;\n\treturn function parse_rs(rs) {\n\t\treturn rs.replace(rregex,\"\").split(rend).map(parse_r).filter(function(r) { return r.v; });\n\t};\n})();\n\n\n/* Parse a list of <r> tags */\nvar rs_to_html = /*#__PURE__*/(function parse_rs_factory() {\n\tvar nlregex = /(\\r\\n|\\n)/g;\n\tfunction parse_rpr2(font, intro, outro) {\n\t\tvar style/*:Array<string>*/ = [];\n\n\t\tif(font.u) style.push(\"text-decoration: underline;\");\n\t\tif(font.uval) style.push(\"text-underline-style:\" + font.uval + \";\");\n\t\tif(font.sz) style.push(\"font-size:\" + font.sz + \"pt;\");\n\t\tif(font.outline) style.push(\"text-effect: outline;\");\n\t\tif(font.shadow) style.push(\"text-shadow: auto;\");\n\t\tintro.push('<span style=\"' + style.join(\"\") + '\">');\n\n\t\tif(font.b) { intro.push(\"<b>\"); outro.push(\"</b>\"); }\n\t\tif(font.i) { intro.push(\"<i>\"); outro.push(\"</i>\"); }\n\t\tif(font.strike) { intro.push(\"<s>\"); outro.push(\"</s>\"); }\n\n\t\tvar align = font.valign || \"\";\n\t\tif(align == \"superscript\" || align == \"super\") align = \"sup\";\n\t\telse if(align == \"subscript\") align = \"sub\";\n\t\tif(align != \"\") { intro.push(\"<\" + align + \">\"); outro.push(\"</\" + align + \">\"); }\n\n\t\toutro.push(\"</span>\");\n\t\treturn font;\n\t}\n\n\t/* 18.4.4 r CT_RElt */\n\tfunction r_to_html(r) {\n\t\tvar terms/*:[Array<string>, string, Array<string>]*/ = [[],r.v,[]];\n\t\tif(!r.v) return \"\";\n\n\t\tif(r.s) parse_rpr2(r.s, terms[0], terms[2]);\n\n\t\treturn terms[0].join(\"\") + terms[1].replace(nlregex,'<br/>') + terms[2].join(\"\");\n\t}\n\n\treturn function parse_rs(rs) {\n\t\treturn rs.map(r_to_html).join(\"\");\n\t};\n})();\n\n/* 18.4.8 si CT_Rst */\nvar sitregex = /<(?:\\w+:)?t[^>]*>([^<]*)<\\/(?:\\w+:)?t>/g, sirregex = /<(?:\\w+:)?r\\b[^>]*>/;\nvar sirphregex = /<(?:\\w+:)?rPh.*?>([\\s\\S]*?)<\\/(?:\\w+:)?rPh>/g;\nfunction parse_si(x, opts) {\n\tvar html = opts ? opts.cellHTML : true;\n\tvar z = {};\n\tif(!x) return { t: \"\" };\n\t//var y;\n\t/* 18.4.12 t ST_Xstring (Plaintext String) */\n\t// TODO: is whitespace actually valid here?\n\tif(x.match(/^\\s*<(?:\\w+:)?t[^>]*>/)) {\n\t\tz.t = unescapexml(utf8read(x.slice(x.indexOf(\">\")+1).split(/<\\/(?:\\w+:)?t>/)[0]||\"\"), true);\n\t\tz.r = utf8read(x);\n\t\tif(html) z.h = escapehtml(z.t);\n\t}\n\t/* 18.4.4 r CT_RElt (Rich Text Run) */\n\telse if((/*y = */x.match(sirregex))) {\n\t\tz.r = utf8read(x);\n\t\tz.t = unescapexml(utf8read((x.replace(sirphregex, '').match(sitregex)||[]).join(\"\").replace(tagregex,\"\")), true);\n\t\tif(html) z.h = rs_to_html(parse_rs(z.r));\n\t}\n\t/* 18.4.3 phoneticPr CT_PhoneticPr (TODO: needed for Asian support) */\n\t/* 18.4.6 rPh CT_PhoneticRun (TODO: needed for Asian support) */\n\treturn z;\n}\n\n/* 18.4 Shared String Table */\nvar sstr0 = /<(?:\\w+:)?sst([^>]*)>([\\s\\S]*)<\\/(?:\\w+:)?sst>/;\nvar sstr1 = /<(?:\\w+:)?(?:si|sstItem)>/g;\nvar sstr2 = /<\\/(?:\\w+:)?(?:si|sstItem)>/;\nfunction parse_sst_xml(data/*:string*/, opts)/*:SST*/ {\n\tvar s/*:SST*/ = ([]/*:any*/), ss = \"\";\n\tif(!data) return s;\n\t/* 18.4.9 sst CT_Sst */\n\tvar sst = data.match(sstr0);\n\tif(sst) {\n\t\tss = sst[2].replace(sstr1,\"\").split(sstr2);\n\t\tfor(var i = 0; i != ss.length; ++i) {\n\t\t\tvar o = parse_si(ss[i].trim(), opts);\n\t\t\tif(o != null) s[s.length] = o;\n\t\t}\n\t\tsst = parsexmltag(sst[1]); s.Count = sst.count; s.Unique = sst.uniqueCount;\n\t}\n\treturn s;\n}\n\nvar straywsregex = /^\\s|\\s$|[\\t\\n\\r]/;\nfunction write_sst_xml(sst/*:SST*/, opts)/*:string*/ {\n\tif(!opts.bookSST) return \"\";\n\tvar o = [XML_HEADER];\n\to[o.length] = (writextag('sst', null, {\n\t\txmlns: XMLNS_main[0],\n\t\tcount: sst.Count,\n\t\tuniqueCount: sst.Unique\n\t}));\n\tfor(var i = 0; i != sst.length; ++i) { if(sst[i] == null) continue;\n\t\tvar s/*:XLString*/ = sst[i];\n\t\tvar sitag = \"<si>\";\n\t\tif(s.r) sitag += s.r;\n\t\telse {\n\t\t\tsitag += \"<t\";\n\t\t\tif(!s.t) s.t = \"\";\n\t\t\tif(typeof s.t !== \"string\") s.t = String(s.t);\n\t\t\tif(s.t.match(straywsregex)) sitag += ' xml:space=\"preserve\"';\n\t\t\tsitag += \">\" + escapexml(s.t) + \"</t>\";\n\t\t}\n\t\tsitag += \"</si>\";\n\t\to[o.length] = (sitag);\n\t}\n\tif(o.length>2){ o[o.length] = ('</sst>'); o[1]=o[1].replace(\"/>\",\">\"); }\n\treturn o.join(\"\");\n}\n/* [MS-XLSB] 2.4.221 BrtBeginSst */\nfunction parse_BrtBeginSst(data) {\n\treturn [data.read_shift(4), data.read_shift(4)];\n}\n\n/* [MS-XLSB] 2.1.7.45 Shared Strings */\nfunction parse_sst_bin(data, opts)/*:SST*/ {\n\tvar s/*:SST*/ = ([]/*:any*/);\n\tvar pass = false;\n\trecordhopper(data, function hopper_sst(val, R, RT) {\n\t\tswitch(RT) {\n\t\t\tcase 0x009F: /* BrtBeginSst */\n\t\t\t\ts.Count = val[0]; s.Unique = val[1]; break;\n\t\t\tcase 0x0013: /* BrtSSTItem */\n\t\t\t\ts.push(val); break;\n\t\t\tcase 0x00A0: /* BrtEndSst */\n\t\t\t\treturn true;\n\n\t\t\tcase 0x0023: /* BrtFRTBegin */\n\t\t\t\tpass = true; break;\n\t\t\tcase 0x0024: /* BrtFRTEnd */\n\t\t\t\tpass = false; break;\n\n\t\t\tdefault:\n\t\t\t\tif(R.T){}\n\t\t\t\tif(!pass || opts.WTF) throw new Error(\"Unexpected record 0x\" + RT.toString(16));\n\t\t}\n\t});\n\treturn s;\n}\n\nfunction write_BrtBeginSst(sst, o) {\n\tif(!o) o = new_buf(8);\n\to.write_shift(4, sst.Count);\n\to.write_shift(4, sst.Unique);\n\treturn o;\n}\n\nvar write_BrtSSTItem = write_RichStr;\n\nfunction write_sst_bin(sst/*::, opts*/) {\n\tvar ba = buf_array();\n\twrite_record(ba, 0x009F /* BrtBeginSst */, write_BrtBeginSst(sst));\n\tfor(var i = 0; i < sst.length; ++i) write_record(ba, 0x0013 /* BrtSSTItem */, write_BrtSSTItem(sst[i]));\n\t/* FRTSST */\n\twrite_record(ba, 0x00A0 /* BrtEndSst */);\n\treturn ba.end();\n}\nfunction _JS2ANSI(str/*:string*/)/*:Array<number>*/ {\n\tif(typeof $cptable !== 'undefined') return $cptable.utils.encode(current_ansi, str);\n\tvar o/*:Array<number>*/ = [], oo = str.split(\"\");\n\tfor(var i = 0; i < oo.length; ++i) o[i] = oo[i].charCodeAt(0);\n\treturn o;\n}\n\n/* [MS-OFFCRYPTO] 2.1.4 Version */\nfunction parse_CRYPTOVersion(blob, length/*:?number*/) {\n\tvar o/*:any*/ = {};\n\to.Major = blob.read_shift(2);\n\to.Minor = blob.read_shift(2);\n\t/*:: if(length == null) return o; */\n\tif(length >= 4) blob.l += length - 4;\n\treturn o;\n}\n\n/* [MS-OFFCRYPTO] 2.1.5 DataSpaceVersionInfo */\nfunction parse_DataSpaceVersionInfo(blob) {\n\tvar o = {};\n\to.id = blob.read_shift(0, 'lpp4');\n\to.R = parse_CRYPTOVersion(blob, 4);\n\to.U = parse_CRYPTOVersion(blob, 4);\n\to.W = parse_CRYPTOVersion(blob, 4);\n\treturn o;\n}\n\n/* [MS-OFFCRYPTO] 2.1.6.1 DataSpaceMapEntry Structure */\nfunction parse_DataSpaceMapEntry(blob) {\n\tvar len = blob.read_shift(4);\n\tvar end = blob.l + len - 4;\n\tvar o = {};\n\tvar cnt = blob.read_shift(4);\n\tvar comps/*:Array<{t:number, v:string}>*/ = [];\n\t/* [MS-OFFCRYPTO] 2.1.6.2 DataSpaceReferenceComponent Structure */\n\twhile(cnt-- > 0) comps.push({ t: blob.read_shift(4), v: blob.read_shift(0, 'lpp4') });\n\to.name = blob.read_shift(0, 'lpp4');\n\to.comps = comps;\n\tif(blob.l != end) throw new Error(\"Bad DataSpaceMapEntry: \" + blob.l + \" != \" + end);\n\treturn o;\n}\n\n/* [MS-OFFCRYPTO] 2.1.6 DataSpaceMap */\nfunction parse_DataSpaceMap(blob) {\n\tvar o = [];\n\tblob.l += 4; // must be 0x8\n\tvar cnt = blob.read_shift(4);\n\twhile(cnt-- > 0) o.push(parse_DataSpaceMapEntry(blob));\n\treturn o;\n}\n\n/* [MS-OFFCRYPTO] 2.1.7 DataSpaceDefinition */\nfunction parse_DataSpaceDefinition(blob)/*:Array<string>*/ {\n\tvar o/*:Array<string>*/ = [];\n\tblob.l += 4; // must be 0x8\n\tvar cnt = blob.read_shift(4);\n\twhile(cnt-- > 0) o.push(blob.read_shift(0, 'lpp4'));\n\treturn o;\n}\n\n/* [MS-OFFCRYPTO] 2.1.8 DataSpaceDefinition */\nfunction parse_TransformInfoHeader(blob) {\n\tvar o = {};\n\t/*var len = */blob.read_shift(4);\n\tblob.l += 4; // must be 0x1\n\to.id = blob.read_shift(0, 'lpp4');\n\to.name = blob.read_shift(0, 'lpp4');\n\to.R = parse_CRYPTOVersion(blob, 4);\n\to.U = parse_CRYPTOVersion(blob, 4);\n\to.W = parse_CRYPTOVersion(blob, 4);\n\treturn o;\n}\n\nfunction parse_Primary(blob) {\n\t/* [MS-OFFCRYPTO] 2.2.6 IRMDSTransformInfo */\n\tvar hdr = parse_TransformInfoHeader(blob);\n\t/* [MS-OFFCRYPTO] 2.1.9 EncryptionTransformInfo */\n\thdr.ename = blob.read_shift(0, '8lpp4');\n\thdr.blksz = blob.read_shift(4);\n\thdr.cmode = blob.read_shift(4);\n\tif(blob.read_shift(4) != 0x04) throw new Error(\"Bad !Primary record\");\n\treturn hdr;\n}\n\n/* [MS-OFFCRYPTO] 2.3.2 Encryption Header */\nfunction parse_EncryptionHeader(blob, length/*:number*/) {\n\tvar tgt = blob.l + length;\n\tvar o = {};\n\to.Flags = (blob.read_shift(4) & 0x3F);\n\tblob.l += 4;\n\to.AlgID = blob.read_shift(4);\n\tvar valid = false;\n\tswitch(o.AlgID) {\n\t\tcase 0x660E: case 0x660F: case 0x6610: valid = (o.Flags == 0x24); break;\n\t\tcase 0x6801: valid = (o.Flags == 0x04); break;\n\t\tcase 0: valid = (o.Flags == 0x10 || o.Flags == 0x04 || o.Flags == 0x24); break;\n\t\tdefault: throw 'Unrecognized encryption algorithm: ' + o.AlgID;\n\t}\n\tif(!valid) throw new Error(\"Encryption Flags/AlgID mismatch\");\n\to.AlgIDHash = blob.read_shift(4);\n\to.KeySize = blob.read_shift(4);\n\to.ProviderType = blob.read_shift(4);\n\tblob.l += 8;\n\to.CSPName = blob.read_shift((tgt-blob.l)>>1, 'utf16le');\n\tblob.l = tgt;\n\treturn o;\n}\n\n/* [MS-OFFCRYPTO] 2.3.3 Encryption Verifier */\nfunction parse_EncryptionVerifier(blob, length/*:number*/) {\n\tvar o = {}, tgt = blob.l + length;\n\tblob.l += 4; // SaltSize must be 0x10\n\to.Salt = blob.slice(blob.l, blob.l+16); blob.l += 16;\n\to.Verifier = blob.slice(blob.l, blob.l+16); blob.l += 16;\n\t/*var sz = */blob.read_shift(4);\n\to.VerifierHash = blob.slice(blob.l, tgt); blob.l = tgt;\n\treturn o;\n}\n\n/* [MS-OFFCRYPTO] 2.3.4.* EncryptionInfo Stream */\nfunction parse_EncryptionInfo(blob) {\n\tvar vers = parse_CRYPTOVersion(blob);\n\tswitch(vers.Minor) {\n\t\tcase 0x02: return [vers.Minor, parse_EncInfoStd(blob, vers)];\n\t\tcase 0x03: return [vers.Minor, parse_EncInfoExt(blob, vers)];\n\t\tcase 0x04: return [vers.Minor, parse_EncInfoAgl(blob, vers)];\n\t}\n\tthrow new Error(\"ECMA-376 Encrypted file unrecognized Version: \" + vers.Minor);\n}\n\n/* [MS-OFFCRYPTO] 2.3.4.5  EncryptionInfo Stream (Standard Encryption) */\nfunction parse_EncInfoStd(blob/*::, vers*/) {\n\tvar flags = blob.read_shift(4);\n\tif((flags & 0x3F) != 0x24) throw new Error(\"EncryptionInfo mismatch\");\n\tvar sz = blob.read_shift(4);\n\t//var tgt = blob.l + sz;\n\tvar hdr = parse_EncryptionHeader(blob, sz);\n\tvar verifier = parse_EncryptionVerifier(blob, blob.length - blob.l);\n\treturn { t:\"Std\", h:hdr, v:verifier };\n}\n/* [MS-OFFCRYPTO] 2.3.4.6  EncryptionInfo Stream (Extensible Encryption) */\nfunction parse_EncInfoExt(/*::blob, vers*/) { throw new Error(\"File is password-protected: ECMA-376 Extensible\"); }\n/* [MS-OFFCRYPTO] 2.3.4.10 EncryptionInfo Stream (Agile Encryption) */\nfunction parse_EncInfoAgl(blob/*::, vers*/) {\n\tvar KeyData = [\"saltSize\",\"blockSize\",\"keyBits\",\"hashSize\",\"cipherAlgorithm\",\"cipherChaining\",\"hashAlgorithm\",\"saltValue\"];\n\tblob.l+=4;\n\tvar xml = blob.read_shift(blob.length - blob.l, 'utf8');\n\tvar o = {};\n\txml.replace(tagregex, function xml_agile(x) {\n\t\tvar y/*:any*/ = parsexmltag(x);\n\t\tswitch(strip_ns(y[0])) {\n\t\t\tcase '<?xml': break;\n\t\t\tcase '<encryption': case '</encryption>': break;\n\t\t\tcase '<keyData': KeyData.forEach(function(k) { o[k] = y[k]; }); break;\n\t\t\tcase '<dataIntegrity': o.encryptedHmacKey = y.encryptedHmacKey; o.encryptedHmacValue = y.encryptedHmacValue; break;\n\t\t\tcase '<keyEncryptors>': case '<keyEncryptors': o.encs = []; break;\n\t\t\tcase '</keyEncryptors>': break;\n\n\t\t\tcase '<keyEncryptor': o.uri = y.uri; break;\n\t\t\tcase '</keyEncryptor>': break;\n\t\t\tcase '<encryptedKey': o.encs.push(y); break;\n\t\t\tdefault: throw y[0];\n\t\t}\n\t});\n\treturn o;\n}\n\n/* [MS-OFFCRYPTO] 2.3.5.1 RC4 CryptoAPI Encryption Header */\nfunction parse_RC4CryptoHeader(blob, length/*:number*/) {\n\tvar o = {};\n\tvar vers = o.EncryptionVersionInfo = parse_CRYPTOVersion(blob, 4); length -= 4;\n\tif(vers.Minor != 2) throw new Error('unrecognized minor version code: ' + vers.Minor);\n\tif(vers.Major > 4 || vers.Major < 2) throw new Error('unrecognized major version code: ' + vers.Major);\n\to.Flags = blob.read_shift(4); length -= 4;\n\tvar sz = blob.read_shift(4); length -= 4;\n\to.EncryptionHeader = parse_EncryptionHeader(blob, sz); length -= sz;\n\to.EncryptionVerifier = parse_EncryptionVerifier(blob, length);\n\treturn o;\n}\n/* [MS-OFFCRYPTO] 2.3.6.1 RC4 Encryption Header */\nfunction parse_RC4Header(blob/*::, length*/) {\n\tvar o = {};\n\tvar vers = o.EncryptionVersionInfo = parse_CRYPTOVersion(blob, 4);\n\tif(vers.Major != 1 || vers.Minor != 1) throw 'unrecognized version code ' + vers.Major + ' : ' + vers.Minor;\n\to.Salt = blob.read_shift(16);\n\to.EncryptedVerifier = blob.read_shift(16);\n\to.EncryptedVerifierHash = blob.read_shift(16);\n\treturn o;\n}\n\n/* [MS-OFFCRYPTO] 2.3.7.1 Binary Document Password Verifier Derivation */\nfunction crypto_CreatePasswordVerifier_Method1(Password/*:string*/) {\n\tvar Verifier = 0x0000, PasswordArray;\n\tvar PasswordDecoded = _JS2ANSI(Password);\n\tvar len = PasswordDecoded.length + 1, i, PasswordByte;\n\tvar Intermediate1, Intermediate2, Intermediate3;\n\tPasswordArray = new_raw_buf(len);\n\tPasswordArray[0] = PasswordDecoded.length;\n\tfor(i = 1; i != len; ++i) PasswordArray[i] = PasswordDecoded[i-1];\n\tfor(i = len-1; i >= 0; --i) {\n\t\tPasswordByte = PasswordArray[i];\n\t\tIntermediate1 = ((Verifier & 0x4000) === 0x0000) ? 0 : 1;\n\t\tIntermediate2 = (Verifier << 1) & 0x7FFF;\n\t\tIntermediate3 = Intermediate1 | Intermediate2;\n\t\tVerifier = Intermediate3 ^ PasswordByte;\n\t}\n\treturn Verifier ^ 0xCE4B;\n}\n\n/* [MS-OFFCRYPTO] 2.3.7.2 Binary Document XOR Array Initialization */\nvar crypto_CreateXorArray_Method1 = /*#__PURE__*/(function() {\n\tvar PadArray = [0xBB, 0xFF, 0xFF, 0xBA, 0xFF, 0xFF, 0xB9, 0x80, 0x00, 0xBE, 0x0F, 0x00, 0xBF, 0x0F, 0x00];\n\tvar InitialCode = [0xE1F0, 0x1D0F, 0xCC9C, 0x84C0, 0x110C, 0x0E10, 0xF1CE, 0x313E, 0x1872, 0xE139, 0xD40F, 0x84F9, 0x280C, 0xA96A, 0x4EC3];\n\tvar XorMatrix = [0xAEFC, 0x4DD9, 0x9BB2, 0x2745, 0x4E8A, 0x9D14, 0x2A09, 0x7B61, 0xF6C2, 0xFDA5, 0xEB6B, 0xC6F7, 0x9DCF, 0x2BBF, 0x4563, 0x8AC6, 0x05AD, 0x0B5A, 0x16B4, 0x2D68, 0x5AD0, 0x0375, 0x06EA, 0x0DD4, 0x1BA8, 0x3750, 0x6EA0, 0xDD40, 0xD849, 0xA0B3, 0x5147, 0xA28E, 0x553D, 0xAA7A, 0x44D5, 0x6F45, 0xDE8A, 0xAD35, 0x4A4B, 0x9496, 0x390D, 0x721A, 0xEB23, 0xC667, 0x9CEF, 0x29FF, 0x53FE, 0xA7FC, 0x5FD9, 0x47D3, 0x8FA6, 0x0F6D, 0x1EDA, 0x3DB4, 0x7B68, 0xF6D0, 0xB861, 0x60E3, 0xC1C6, 0x93AD, 0x377B, 0x6EF6, 0xDDEC, 0x45A0, 0x8B40, 0x06A1, 0x0D42, 0x1A84, 0x3508, 0x6A10, 0xAA51, 0x4483, 0x8906, 0x022D, 0x045A, 0x08B4, 0x1168, 0x76B4, 0xED68, 0xCAF1, 0x85C3, 0x1BA7, 0x374E, 0x6E9C, 0x3730, 0x6E60, 0xDCC0, 0xA9A1, 0x4363, 0x86C6, 0x1DAD, 0x3331, 0x6662, 0xCCC4, 0x89A9, 0x0373, 0x06E6, 0x0DCC, 0x1021, 0x2042, 0x4084, 0x8108, 0x1231, 0x2462, 0x48C4];\n\tvar Ror = function(Byte) { return ((Byte/2) | (Byte*128)) & 0xFF; };\n\tvar XorRor = function(byte1, byte2) { return Ror(byte1 ^ byte2); };\n\tvar CreateXorKey_Method1 = function(Password) {\n\t\tvar XorKey = InitialCode[Password.length - 1];\n\t\tvar CurrentElement = 0x68;\n\t\tfor(var i = Password.length-1; i >= 0; --i) {\n\t\t\tvar Char = Password[i];\n\t\t\tfor(var j = 0; j != 7; ++j) {\n\t\t\t\tif(Char & 0x40) XorKey ^= XorMatrix[CurrentElement];\n\t\t\t\tChar *= 2; --CurrentElement;\n\t\t\t}\n\t\t}\n\t\treturn XorKey;\n\t};\n\treturn function(password/*:string*/) {\n\t\tvar Password = _JS2ANSI(password);\n\t\tvar XorKey = CreateXorKey_Method1(Password);\n\t\tvar Index = Password.length;\n\t\tvar ObfuscationArray = new_raw_buf(16);\n\t\tfor(var i = 0; i != 16; ++i) ObfuscationArray[i] = 0x00;\n\t\tvar Temp, PasswordLastChar, PadIndex;\n\t\tif((Index & 1) === 1) {\n\t\t\tTemp = XorKey >> 8;\n\t\t\tObfuscationArray[Index] = XorRor(PadArray[0], Temp);\n\t\t\t--Index;\n\t\t\tTemp = XorKey & 0xFF;\n\t\t\tPasswordLastChar = Password[Password.length - 1];\n\t\t\tObfuscationArray[Index] = XorRor(PasswordLastChar, Temp);\n\t\t}\n\t\twhile(Index > 0) {\n\t\t\t--Index;\n\t\t\tTemp = XorKey >> 8;\n\t\t\tObfuscationArray[Index] = XorRor(Password[Index], Temp);\n\t\t\t--Index;\n\t\t\tTemp = XorKey & 0xFF;\n\t\t\tObfuscationArray[Index] = XorRor(Password[Index], Temp);\n\t\t}\n\t\tIndex = 15;\n\t\tPadIndex = 15 - Password.length;\n\t\twhile(PadIndex > 0) {\n\t\t\tTemp = XorKey >> 8;\n\t\t\tObfuscationArray[Index] = XorRor(PadArray[PadIndex], Temp);\n\t\t\t--Index;\n\t\t\t--PadIndex;\n\t\t\tTemp = XorKey & 0xFF;\n\t\t\tObfuscationArray[Index] = XorRor(Password[Index], Temp);\n\t\t\t--Index;\n\t\t\t--PadIndex;\n\t\t}\n\t\treturn ObfuscationArray;\n\t};\n})();\n\n/* [MS-OFFCRYPTO] 2.3.7.3 Binary Document XOR Data Transformation Method 1 */\nvar crypto_DecryptData_Method1 = function(password/*:string*/, Data, XorArrayIndex, XorArray, O) {\n\t/* If XorArray is set, use it; if O is not set, make changes in-place */\n\tif(!O) O = Data;\n\tif(!XorArray) XorArray = crypto_CreateXorArray_Method1(password);\n\tvar Index, Value;\n\tfor(Index = 0; Index != Data.length; ++Index) {\n\t\tValue = Data[Index];\n\t\tValue ^= XorArray[XorArrayIndex];\n\t\tValue = ((Value>>5) | (Value<<3)) & 0xFF;\n\t\tO[Index] = Value;\n\t\t++XorArrayIndex;\n\t}\n\treturn [O, XorArrayIndex, XorArray];\n};\n\nvar crypto_MakeXorDecryptor = function(password/*:string*/) {\n\tvar XorArrayIndex = 0, XorArray = crypto_CreateXorArray_Method1(password);\n\treturn function(Data) {\n\t\tvar O = crypto_DecryptData_Method1(\"\", Data, XorArrayIndex, XorArray);\n\t\tXorArrayIndex = O[1];\n\t\treturn O[0];\n\t};\n};\n\n/* 2.5.343 */\nfunction parse_XORObfuscation(blob, length, opts, out) {\n\tvar o = ({ key: parseuint16(blob), verificationBytes: parseuint16(blob) }/*:any*/);\n\tif(opts.password) o.verifier = crypto_CreatePasswordVerifier_Method1(opts.password);\n\tout.valid = o.verificationBytes === o.verifier;\n\tif(out.valid) out.insitu = crypto_MakeXorDecryptor(opts.password);\n\treturn o;\n}\n\n/* 2.4.117 */\nfunction parse_FilePassHeader(blob, length/*:number*/, oo) {\n\tvar o = oo || {}; o.Info = blob.read_shift(2); blob.l -= 2;\n\tif(o.Info === 1) o.Data = parse_RC4Header(blob, length);\n\telse o.Data = parse_RC4CryptoHeader(blob, length);\n\treturn o;\n}\nfunction parse_FilePass(blob, length/*:number*/, opts) {\n\tvar o = ({ Type: opts.biff >= 8 ? blob.read_shift(2) : 0 }/*:any*/); /* wEncryptionType */\n\tif(o.Type) parse_FilePassHeader(blob, length-2, o);\n\telse parse_XORObfuscation(blob, opts.biff >= 8 ? length : length - 2, opts, o);\n\treturn o;\n}\n\n\nfunction rtf_to_sheet(d, opts) {\n  switch (opts.type) {\n    case \"base64\":\n      return rtf_to_sheet_str(Base64_decode(d), opts);\n    case \"binary\":\n      return rtf_to_sheet_str(d, opts);\n    case \"buffer\":\n      return rtf_to_sheet_str(has_buf && Buffer.isBuffer(d) ? d.toString(\"binary\") : a2s(d), opts);\n    case \"array\":\n      return rtf_to_sheet_str(cc2str(d), opts);\n  }\n  throw new Error(\"Unrecognized type \" + opts.type);\n}\nfunction rtf_to_sheet_str(str, opts) {\n  var o = opts || {};\n  var ws = {};\n  var dense = o.dense;\n  if (dense)\n    ws[\"!data\"] = [];\n  var rows = str.match(/\\\\trowd[\\s\\S]*?\\\\row\\b/g);\n  if (!rows)\n    throw new Error(\"RTF missing table\");\n  var range = { s: { c: 0, r: 0 }, e: { c: 0, r: rows.length - 1 } };\n  var row = [];\n  rows.forEach(function(rowtf, R) {\n    if (dense)\n      row = ws[\"!data\"][R] = [];\n    var rtfre = /\\\\[\\w\\-]+\\b/g;\n    var last_index = 0;\n    var res;\n    var C = -1;\n    var payload = [];\n    while ((res = rtfre.exec(rowtf)) != null) {\n      var data = rowtf.slice(last_index, rtfre.lastIndex - res[0].length);\n      if (data.charCodeAt(0) == 32)\n        data = data.slice(1);\n      if (data.length)\n        payload.push(data);\n      switch (res[0]) {\n        case \"\\\\cell\":\n          ++C;\n          if (payload.length) {\n            var cell = { v: payload.join(\"\"), t: \"s\" };\n            if (cell.v == \"TRUE\" || cell.v == \"FALSE\") {\n              cell.v = cell.v == \"TRUE\";\n              cell.t = \"b\";\n            } else if (!isNaN(fuzzynum(cell.v))) {\n              cell.t = \"n\";\n              if (o.cellText !== false)\n                cell.w = cell.v;\n              cell.v = fuzzynum(cell.v);\n            }\n            if (dense)\n              row[C] = cell;\n            else\n              ws[encode_cell({ r: R, c: C })] = cell;\n          }\n          payload = [];\n          break;\n        case \"\\\\par\":\n          payload.push(\"\\n\");\n          break;\n      }\n      last_index = rtfre.lastIndex;\n    }\n    if (C > range.e.c)\n      range.e.c = C;\n  });\n  ws[\"!ref\"] = encode_range(range);\n  return ws;\n}\nfunction rtf_to_workbook(d, opts) {\n  var wb = sheet_to_workbook(rtf_to_sheet(d, opts), opts);\n  wb.bookType = \"rtf\";\n  return wb;\n}\nfunction sheet_to_rtf(ws, opts) {\n  var o = [\"{\\\\rtf1\\\\ansi\"];\n  if (!ws[\"!ref\"])\n    return o[0] + \"}\";\n  var r = safe_decode_range(ws[\"!ref\"]), cell;\n  var dense = ws[\"!data\"] != null, row = [];\n  for (var R = r.s.r; R <= r.e.r; ++R) {\n    o.push(\"\\\\trowd\\\\trautofit1\");\n    for (var C = r.s.c; C <= r.e.c; ++C)\n      o.push(\"\\\\cellx\" + (C + 1));\n    o.push(\"\\\\pard\\\\intbl\");\n    if (dense)\n      row = ws[\"!data\"][R] || [];\n    for (C = r.s.c; C <= r.e.c; ++C) {\n      var coord = encode_cell({ r: R, c: C });\n      cell = dense ? row[C] : ws[coord];\n      if (!cell || cell.v == null && (!cell.f || cell.F)) {\n        o.push(\" \\\\cell\");\n        continue;\n      }\n      o.push(\" \" + (cell.w || (format_cell(cell), cell.w) || \"\").replace(/[\\r\\n]/g, \"\\\\par \"));\n      o.push(\"\\\\cell\");\n    }\n    o.push(\"\\\\pard\\\\intbl\\\\row\");\n  }\n  return o.join(\"\") + \"}\";\n}\nfunction hex2RGB(h) {\n\tvar o = h.slice(h[0]===\"#\"?1:0).slice(0,6);\n\treturn [parseInt(o.slice(0,2),16),parseInt(o.slice(2,4),16),parseInt(o.slice(4,6),16)];\n}\nfunction rgb2Hex(rgb) {\n\tfor(var i=0,o=1; i!=3; ++i) o = o*256 + (rgb[i]>255?255:rgb[i]<0?0:rgb[i]);\n\treturn o.toString(16).toUpperCase().slice(1);\n}\n\nfunction rgb2HSL(rgb) {\n\tvar R = rgb[0]/255, G = rgb[1]/255, B=rgb[2]/255;\n\tvar M = Math.max(R, G, B), m = Math.min(R, G, B), C = M - m;\n\tif(C === 0) return [0, 0, R];\n\n\tvar H6 = 0, S = 0, L2 = (M + m);\n\tS = C / (L2 > 1 ? 2 - L2 : L2);\n\tswitch(M){\n\t\tcase R: H6 = ((G - B) / C + 6)%6; break;\n\t\tcase G: H6 = ((B - R) / C + 2); break;\n\t\tcase B: H6 = ((R - G) / C + 4); break;\n\t}\n\treturn [H6 / 6, S, L2 / 2];\n}\n\nfunction hsl2RGB(hsl){\n\tvar H = hsl[0], S = hsl[1], L = hsl[2];\n\tvar C = S * 2 * (L < 0.5 ? L : 1 - L), m = L - C/2;\n\tvar rgb = [m,m,m], h6 = 6*H;\n\n\tvar X;\n\tif(S !== 0) switch(h6|0) {\n\t\tcase 0: case 6: X = C * h6; rgb[0] += C; rgb[1] += X; break;\n\t\tcase 1: X = C * (2 - h6);   rgb[0] += X; rgb[1] += C; break;\n\t\tcase 2: X = C * (h6 - 2);   rgb[1] += C; rgb[2] += X; break;\n\t\tcase 3: X = C * (4 - h6);   rgb[1] += X; rgb[2] += C; break;\n\t\tcase 4: X = C * (h6 - 4);   rgb[2] += C; rgb[0] += X; break;\n\t\tcase 5: X = C * (6 - h6);   rgb[2] += X; rgb[0] += C; break;\n\t}\n\tfor(var i = 0; i != 3; ++i) rgb[i] = Math.round(rgb[i]*255);\n\treturn rgb;\n}\n\n/* 18.8.3 bgColor tint algorithm */\nfunction rgb_tint(hex, tint) {\n\tif(tint === 0) return hex;\n\tvar hsl = rgb2HSL(hex2RGB(hex));\n\tif (tint < 0) hsl[2] = hsl[2] * (1 + tint);\n\telse hsl[2] = 1 - (1 - hsl[2]) * (1 - tint);\n\treturn rgb2Hex(hsl2RGB(hsl));\n}\n\n/* 18.3.1.13 width calculations */\n/* [MS-OI29500] 2.1.595 Column Width & Formatting */\nvar DEF_MDW = 6, MAX_MDW = 15, MIN_MDW = 1, MDW = DEF_MDW;\nfunction width2px(width) { return Math.floor(( width + (Math.round(128/MDW))/256 )* MDW ); }\nfunction px2char(px) { return (Math.floor((px - 5)/MDW * 100 + 0.5))/100; }\nfunction char2width(chr) { return (Math.round((chr * MDW + 5)/MDW*256))/256; }\n//function px2char_(px) { return (((px - 5)/MDW * 100 + 0.5))/100; }\n//function char2width_(chr) { return (((chr * MDW + 5)/MDW*256))/256; }\nfunction cycle_width(collw) { return char2width(px2char(width2px(collw))); }\n/* XLSX/XLSB/XLS specify width in units of MDW */\nfunction find_mdw_colw(collw) {\n\tvar delta = Math.abs(collw - cycle_width(collw)), _MDW = MDW;\n\tif(delta > 0.005) for(MDW=MIN_MDW; MDW<MAX_MDW; ++MDW) if(Math.abs(collw - cycle_width(collw)) <= delta) { delta = Math.abs(collw - cycle_width(collw)); _MDW = MDW; }\n\tMDW = _MDW;\n}\n/* XLML specifies width in terms of pixels */\n/*function find_mdw_wpx(wpx) {\n\tvar delta = Infinity, guess = 0, _MDW = MIN_MDW;\n\tfor(MDW=MIN_MDW; MDW<MAX_MDW; ++MDW) {\n\t\tguess = char2width_(px2char_(wpx))*256;\n\t\tguess = (guess) % 1;\n\t\tif(guess > 0.5) guess--;\n\t\tif(Math.abs(guess) < delta) { delta = Math.abs(guess); _MDW = MDW; }\n\t}\n\tMDW = _MDW;\n}*/\n\nfunction process_col(coll/*:ColInfo*/) {\n\tif(coll.width) {\n\t\tcoll.wpx = width2px(coll.width);\n\t\tcoll.wch = px2char(coll.wpx);\n\t\tcoll.MDW = MDW;\n\t} else if(coll.wpx) {\n\t\tcoll.wch = px2char(coll.wpx);\n\t\tcoll.width = char2width(coll.wch);\n\t\tcoll.MDW = MDW;\n\t} else if(typeof coll.wch == 'number') {\n\t\tcoll.width = char2width(coll.wch);\n\t\tcoll.wpx = width2px(coll.width);\n\t\tcoll.MDW = MDW;\n\t}\n\tif(coll.customWidth) delete coll.customWidth;\n}\n\nvar DEF_PPI = 96, PPI = DEF_PPI;\nfunction px2pt(px) { return px * 96 / PPI; }\nfunction pt2px(pt) { return pt * PPI / 96; }\n\n/* [MS-EXSPXML3] 2.4.54 ST_enmPattern */\nvar XLMLPatternTypeMap = {\n\t\"None\": \"none\",\n\t\"Solid\": \"solid\",\n\t\"Gray50\": \"mediumGray\",\n\t\"Gray75\": \"darkGray\",\n\t\"Gray25\": \"lightGray\",\n\t\"HorzStripe\": \"darkHorizontal\",\n\t\"VertStripe\": \"darkVertical\",\n\t\"ReverseDiagStripe\": \"darkDown\",\n\t\"DiagStripe\": \"darkUp\",\n\t\"DiagCross\": \"darkGrid\",\n\t\"ThickDiagCross\": \"darkTrellis\",\n\t\"ThinHorzStripe\": \"lightHorizontal\",\n\t\"ThinVertStripe\": \"lightVertical\",\n\t\"ThinReverseDiagStripe\": \"lightDown\",\n\t\"ThinHorzCross\": \"lightGrid\"\n};\n\n/* 18.8.5 borders CT_Borders */\nfunction parse_borders(t, styles, themes, opts) {\n\tstyles.Borders = [];\n\tvar border = {};\n\tvar pass = false;\n\t(t[0].match(tagregex)||[]).forEach(function(x) {\n\t\tvar y = parsexmltag(x);\n\t\tswitch(strip_ns(y[0])) {\n\t\t\tcase '<borders': case '<borders>': case '</borders>': break;\n\n\t\t\t/* 18.8.4 border CT_Border */\n\t\t\tcase '<border': case '<border>': case '<border/>':\n\t\t\t\tborder = /*::(*/{}/*:: :any)*/;\n\t\t\t\tif(y.diagonalUp) border.diagonalUp = parsexmlbool(y.diagonalUp);\n\t\t\t\tif(y.diagonalDown) border.diagonalDown = parsexmlbool(y.diagonalDown);\n\t\t\t\tstyles.Borders.push(border);\n\t\t\t\tbreak;\n\t\t\tcase '</border>': break;\n\n\t\t\t/* note: not in spec, appears to be CT_BorderPr */\n\t\t\tcase '<left/>': break;\n\t\t\tcase '<left': case '<left>': break;\n\t\t\tcase '</left>': break;\n\n\t\t\t/* note: not in spec, appears to be CT_BorderPr */\n\t\t\tcase '<right/>': break;\n\t\t\tcase '<right': case '<right>': break;\n\t\t\tcase '</right>': break;\n\n\t\t\t/* 18.8.43 top CT_BorderPr */\n\t\t\tcase '<top/>': break;\n\t\t\tcase '<top': case '<top>': break;\n\t\t\tcase '</top>': break;\n\n\t\t\t/* 18.8.6 bottom CT_BorderPr */\n\t\t\tcase '<bottom/>': break;\n\t\t\tcase '<bottom': case '<bottom>': break;\n\t\t\tcase '</bottom>': break;\n\n\t\t\t/* 18.8.13 diagonal CT_BorderPr */\n\t\t\tcase '<diagonal': case '<diagonal>': case '<diagonal/>': break;\n\t\t\tcase '</diagonal>': break;\n\n\t\t\t/* 18.8.25 horizontal CT_BorderPr */\n\t\t\tcase '<horizontal': case '<horizontal>': case '<horizontal/>': break;\n\t\t\tcase '</horizontal>': break;\n\n\t\t\t/* 18.8.44 vertical CT_BorderPr */\n\t\t\tcase '<vertical': case '<vertical>': case '<vertical/>': break;\n\t\t\tcase '</vertical>': break;\n\n\t\t\t/* 18.8.37 start CT_BorderPr */\n\t\t\tcase '<start': case '<start>': case '<start/>': break;\n\t\t\tcase '</start>': break;\n\n\t\t\t/* 18.8.16 end CT_BorderPr */\n\t\t\tcase '<end': case '<end>': case '<end/>': break;\n\t\t\tcase '</end>': break;\n\n\t\t\t/* 18.8.? color CT_Color */\n\t\t\tcase '<color': case '<color>':\n\t\t\t\tbreak;\n\t\t\tcase '<color/>': case '</color>': break;\n\n\t\t\t/* 18.2.10 extLst CT_ExtensionList ? */\n\t\t\tcase '<extLst': case '<extLst>': case '</extLst>': break;\n\t\t\tcase '<ext': pass = true; break;\n\t\t\tcase '</ext>': pass = false; break;\n\t\t\tdefault: if(opts && opts.WTF) {\n\t\t\t\tif(!pass) throw new Error('unrecognized ' + y[0] + ' in borders');\n\t\t\t}\n\t\t}\n\t});\n}\n\n/* 18.8.21 fills CT_Fills */\nfunction parse_fills(t, styles, themes, opts) {\n\tstyles.Fills = [];\n\tvar fill = {};\n\tvar pass = false;\n\t(t[0].match(tagregex)||[]).forEach(function(x) {\n\t\tvar y = parsexmltag(x);\n\t\tswitch(strip_ns(y[0])) {\n\t\t\tcase '<fills': case '<fills>': case '</fills>': break;\n\n\t\t\t/* 18.8.20 fill CT_Fill */\n\t\t\tcase '<fill>': case '<fill': case '<fill/>':\n\t\t\t\tfill = {}; styles.Fills.push(fill); break;\n\t\t\tcase '</fill>': break;\n\n\t\t\t/* 18.8.24 gradientFill CT_GradientFill */\n\t\t\tcase '<gradientFill>': break;\n\t\t\tcase '<gradientFill':\n\t\t\tcase '</gradientFill>': styles.Fills.push(fill); fill = {}; break;\n\n\t\t\t/* 18.8.32 patternFill CT_PatternFill */\n\t\t\tcase '<patternFill': case '<patternFill>':\n\t\t\t\tif(y.patternType) fill.patternType = y.patternType;\n\t\t\t\tbreak;\n\t\t\tcase '<patternFill/>': case '</patternFill>': break;\n\n\t\t\t/* 18.8.3 bgColor CT_Color */\n\t\t\tcase '<bgColor':\n\t\t\t\tif(!fill.bgColor) fill.bgColor = {};\n\t\t\t\tif(y.indexed) fill.bgColor.indexed = parseInt(y.indexed, 10);\n\t\t\t\tif(y.theme) fill.bgColor.theme = parseInt(y.theme, 10);\n\t\t\t\tif(y.tint) fill.bgColor.tint = parseFloat(y.tint);\n\t\t\t\t/* Excel uses ARGB strings */\n\t\t\t\tif(y.rgb) fill.bgColor.rgb = y.rgb.slice(-6);\n\t\t\t\tbreak;\n\t\t\tcase '<bgColor/>': case '</bgColor>': break;\n\n\t\t\t/* 18.8.19 fgColor CT_Color */\n\t\t\tcase '<fgColor':\n\t\t\t\tif(!fill.fgColor) fill.fgColor = {};\n\t\t\t\tif(y.theme) fill.fgColor.theme = parseInt(y.theme, 10);\n\t\t\t\tif(y.tint) fill.fgColor.tint = parseFloat(y.tint);\n\t\t\t\t/* Excel uses ARGB strings */\n\t\t\t\tif(y.rgb != null) fill.fgColor.rgb = y.rgb.slice(-6);\n\t\t\t\tbreak;\n\t\t\tcase '<fgColor/>': case '</fgColor>': break;\n\n\t\t\t/* 18.8.38 stop CT_GradientStop */\n\t\t\tcase '<stop': case '<stop/>': break;\n\t\t\tcase '</stop>': break;\n\n\t\t\t/* 18.8.? color CT_Color */\n\t\t\tcase '<color': case '<color/>': break;\n\t\t\tcase '</color>': break;\n\n\t\t\t/* 18.2.10 extLst CT_ExtensionList ? */\n\t\t\tcase '<extLst': case '<extLst>': case '</extLst>': break;\n\t\t\tcase '<ext': pass = true; break;\n\t\t\tcase '</ext>': pass = false; break;\n\t\t\tdefault: if(opts && opts.WTF) {\n\t\t\t\tif(!pass) throw new Error('unrecognized ' + y[0] + ' in fills');\n\t\t\t}\n\t\t}\n\t});\n}\n\n/* 18.8.23 fonts CT_Fonts */\nfunction parse_fonts(t, styles, themes, opts) {\n\tstyles.Fonts = [];\n\tvar font = {};\n\tvar pass = false;\n\t(t[0].match(tagregex)||[]).forEach(function(x) {\n\t\tvar y = parsexmltag(x);\n\t\tswitch(strip_ns(y[0])) {\n\t\t\tcase '<fonts': case '<fonts>': case '</fonts>': break;\n\n\t\t\t/* 18.8.22 font CT_Font */\n\t\t\tcase '<font': case '<font>': break;\n\t\t\tcase '</font>': case '<font/>':\n\t\t\t\tstyles.Fonts.push(font);\n\t\t\t\tfont = {};\n\t\t\t\tbreak;\n\n\t\t\t/* 18.8.29 name CT_FontName */\n\t\t\tcase '<name': if(y.val) font.name = utf8read(y.val); break;\n\t\t\tcase '<name/>': case '</name>': break;\n\n\t\t\t/* 18.8.2  b CT_BooleanProperty */\n\t\t\tcase '<b': font.bold = y.val ? parsexmlbool(y.val) : 1; break;\n\t\t\tcase '<b/>': font.bold = 1; break;\n\n\t\t\t/* 18.8.26 i CT_BooleanProperty */\n\t\t\tcase '<i': font.italic = y.val ? parsexmlbool(y.val) : 1; break;\n\t\t\tcase '<i/>': font.italic = 1; break;\n\n\t\t\t/* 18.4.13 u CT_UnderlineProperty */\n\t\t\tcase '<u':\n\t\t\t\tswitch(y.val) {\n\t\t\t\t\tcase \"none\": font.underline = 0x00; break;\n\t\t\t\t\tcase \"single\": font.underline = 0x01; break;\n\t\t\t\t\tcase \"double\": font.underline = 0x02; break;\n\t\t\t\t\tcase \"singleAccounting\": font.underline = 0x21; break;\n\t\t\t\t\tcase \"doubleAccounting\": font.underline = 0x22; break;\n\t\t\t\t} break;\n\t\t\tcase '<u/>': font.underline = 1; break;\n\n\t\t\t/* 18.4.10 strike CT_BooleanProperty */\n\t\t\tcase '<strike': font.strike = y.val ? parsexmlbool(y.val) : 1; break;\n\t\t\tcase '<strike/>': font.strike = 1; break;\n\n\t\t\t/* 18.4.2  outline CT_BooleanProperty */\n\t\t\tcase '<outline': font.outline = y.val ? parsexmlbool(y.val) : 1; break;\n\t\t\tcase '<outline/>': font.outline = 1; break;\n\n\t\t\t/* 18.8.36 shadow CT_BooleanProperty */\n\t\t\tcase '<shadow': font.shadow = y.val ? parsexmlbool(y.val) : 1; break;\n\t\t\tcase '<shadow/>': font.shadow = 1; break;\n\n\t\t\t/* 18.8.12 condense CT_BooleanProperty */\n\t\t\tcase '<condense': font.condense = y.val ? parsexmlbool(y.val) : 1; break;\n\t\t\tcase '<condense/>': font.condense = 1; break;\n\n\t\t\t/* 18.8.17 extend CT_BooleanProperty */\n\t\t\tcase '<extend': font.extend = y.val ? parsexmlbool(y.val) : 1; break;\n\t\t\tcase '<extend/>': font.extend = 1; break;\n\n\t\t\t/* 18.4.11 sz CT_FontSize */\n\t\t\tcase '<sz': if(y.val) font.sz = +y.val; break;\n\t\t\tcase '<sz/>': case '</sz>': break;\n\n\t\t\t/* 18.4.14 vertAlign CT_VerticalAlignFontProperty */\n\t\t\tcase '<vertAlign': if(y.val) font.vertAlign = y.val; break;\n\t\t\tcase '<vertAlign/>': case '</vertAlign>': break;\n\n\t\t\t/* 18.8.18 family CT_FontFamily */\n\t\t\tcase '<family': if(y.val) font.family = parseInt(y.val,10); break;\n\t\t\tcase '<family/>': case '</family>': break;\n\n\t\t\t/* 18.8.35 scheme CT_FontScheme */\n\t\t\tcase '<scheme': if(y.val) font.scheme = y.val; break;\n\t\t\tcase '<scheme/>': case '</scheme>': break;\n\n\t\t\t/* 18.4.1 charset CT_IntProperty */\n\t\t\tcase '<charset':\n\t\t\t\tif(y.val == '1') break;\n\t\t\t\ty.codepage = CS2CP[parseInt(y.val, 10)];\n\t\t\t\tbreak;\n\n\t\t\t/* 18.?.? color CT_Color */\n\t\t\tcase '<color':\n\t\t\t\tif(!font.color) font.color = {};\n\t\t\t\tif(y.auto) font.color.auto = parsexmlbool(y.auto);\n\n\t\t\t\tif(y.rgb) font.color.rgb = y.rgb.slice(-6);\n\t\t\t\telse if(y.indexed) {\n\t\t\t\t\tfont.color.index = parseInt(y.indexed, 10);\n\t\t\t\t\tvar icv = XLSIcv[font.color.index];\n\t\t\t\t\tif(font.color.index == 81) icv = XLSIcv[1];\n\t\t\t\t\tif(!icv) icv = XLSIcv[1]; //throw new Error(x); // note: 206 is valid\n\t\t\t\t\tfont.color.rgb = icv[0].toString(16) + icv[1].toString(16) + icv[2].toString(16);\n\t\t\t\t} else if(y.theme) {\n\t\t\t\t\tfont.color.theme = parseInt(y.theme, 10);\n\t\t\t\t\tif(y.tint) font.color.tint = parseFloat(y.tint);\n\t\t\t\t\tif(y.theme && themes.themeElements && themes.themeElements.clrScheme) {\n\t\t\t\t\t\tfont.color.rgb = rgb_tint(themes.themeElements.clrScheme[font.color.theme].rgb, font.color.tint || 0);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\t\t\tcase '<color/>': case '</color>': break;\n\n\t\t\t/* note: sometimes mc:AlternateContent appears bare */\n\t\t\tcase '<AlternateContent': pass = true; break;\n\t\t\tcase '</AlternateContent>': pass = false; break;\n\n\t\t\t/* 18.2.10 extLst CT_ExtensionList ? */\n\t\t\tcase '<extLst': case '<extLst>': case '</extLst>': break;\n\t\t\tcase '<ext': pass = true; break;\n\t\t\tcase '</ext>': pass = false; break;\n\t\t\tdefault: if(opts && opts.WTF) {\n\t\t\t\tif(!pass) throw new Error('unrecognized ' + y[0] + ' in fonts');\n\t\t\t}\n\t\t}\n\t});\n}\n\n/* 18.8.31 numFmts CT_NumFmts */\nfunction parse_numFmts(t, styles, opts) {\n\tstyles.NumberFmt = [];\n\tvar k/*Array<number>*/ = (keys(table_fmt)/*:any*/);\n\tfor(var i=0; i < k.length; ++i) styles.NumberFmt[k[i]] = table_fmt[k[i]];\n\tvar m = t[0].match(tagregex);\n\tif(!m) return;\n\tfor(i=0; i < m.length; ++i) {\n\t\tvar y = parsexmltag(m[i]);\n\t\tswitch(strip_ns(y[0])) {\n\t\t\tcase '<numFmts': case '</numFmts>': case '<numFmts/>': case '<numFmts>': break;\n\t\t\tcase '<numFmt': {\n\t\t\t\tvar f=unescapexml(utf8read(y.formatCode)), j=parseInt(y.numFmtId,10);\n\t\t\t\tstyles.NumberFmt[j] = f;\n\t\t\t\tif(j>0) {\n\t\t\t\t\tif(j > 0x188) {\n\t\t\t\t\t\tfor(j = 0x188; j > 0x3c; --j) if(styles.NumberFmt[j] == null) break;\n\t\t\t\t\t\tstyles.NumberFmt[j] = f;\n\t\t\t\t\t}\n\t\t\t\t\tSSF__load(f,j);\n\t\t\t\t}\n\t\t\t} break;\n\t\t\tcase '</numFmt>': break;\n\t\t\tdefault: if(opts.WTF) throw new Error('unrecognized ' + y[0] + ' in numFmts');\n\t\t}\n\t}\n}\n\nfunction write_numFmts(NF/*:{[n:number|string]:string}*//*::, opts*/) {\n\tvar o = [\"<numFmts>\"];\n\t[[5,8],[23,26],[41,44],[/*63*/50,/*66],[164,*/392]].forEach(function(r) {\n\t\tfor(var i = r[0]; i <= r[1]; ++i) if(NF[i] != null) o[o.length] = (writextag('numFmt',null,{numFmtId:i,formatCode:escapexml(NF[i])}));\n\t});\n\tif(o.length === 1) return \"\";\n\to[o.length] = (\"</numFmts>\");\n\to[0] = writextag('numFmts', null, { count:o.length-2 }).replace(\"/>\", \">\");\n\treturn o.join(\"\");\n}\n\n/* 18.8.10 cellXfs CT_CellXfs */\nvar cellXF_uint = [ \"numFmtId\", \"fillId\", \"fontId\", \"borderId\", \"xfId\" ];\nvar cellXF_bool = [ \"applyAlignment\", \"applyBorder\", \"applyFill\", \"applyFont\", \"applyNumberFormat\", \"applyProtection\", \"pivotButton\", \"quotePrefix\" ];\nfunction parse_cellXfs(t, styles, opts) {\n\tstyles.CellXf = [];\n\tvar xf;\n\tvar pass = false;\n\t(t[0].match(tagregex)||[]).forEach(function(x) {\n\t\tvar y = parsexmltag(x), i = 0;\n\t\tswitch(strip_ns(y[0])) {\n\t\t\tcase '<cellXfs': case '<cellXfs>': case '<cellXfs/>': case '</cellXfs>': break;\n\n\t\t\t/* 18.8.45 xf CT_Xf */\n\t\t\tcase '<xf': case '<xf/>':\n\t\t\t\txf = y;\n\t\t\t\tdelete xf[0];\n\t\t\t\tfor(i = 0; i < cellXF_uint.length; ++i) if(xf[cellXF_uint[i]])\n\t\t\t\t\txf[cellXF_uint[i]] = parseInt(xf[cellXF_uint[i]], 10);\n\t\t\t\tfor(i = 0; i < cellXF_bool.length; ++i) if(xf[cellXF_bool[i]])\n\t\t\t\t\txf[cellXF_bool[i]] = parsexmlbool(xf[cellXF_bool[i]]);\n\t\t\t\tif(styles.NumberFmt && xf.numFmtId > 0x188) {\n\t\t\t\t\tfor(i = 0x188; i > 0x3c; --i) if(styles.NumberFmt[xf.numFmtId] == styles.NumberFmt[i]) { xf.numFmtId = i; break; }\n\t\t\t\t}\n\t\t\t\tstyles.CellXf.push(xf); break;\n\t\t\tcase '</xf>': break;\n\n\t\t\t/* 18.8.1 alignment CT_CellAlignment */\n\t\t\tcase '<alignment': case '<alignment/>':\n\t\t\t\tvar alignment = {};\n\t\t\t\tif(y.vertical) alignment.vertical = y.vertical;\n\t\t\t\tif(y.horizontal) alignment.horizontal = y.horizontal;\n\t\t\t\tif(y.textRotation != null) alignment.textRotation = y.textRotation;\n\t\t\t\tif(y.indent) alignment.indent = y.indent;\n\t\t\t\tif(y.wrapText) alignment.wrapText = parsexmlbool(y.wrapText);\n\t\t\t\txf.alignment = alignment;\n\t\t\t\tbreak;\n\t\t\tcase '</alignment>': break;\n\n\t\t\t/* 18.8.33 protection CT_CellProtection */\n\t\t\tcase '<protection':\n\t\t\t\tbreak;\n\t\t\tcase '</protection>': case '<protection/>': break;\n\n\t\t\t/* note: sometimes mc:AlternateContent appears bare */\n\t\t\tcase '<AlternateContent': pass = true; break;\n\t\t\tcase '</AlternateContent>': pass = false; break;\n\n\t\t\t/* 18.2.10 extLst CT_ExtensionList ? */\n\t\t\tcase '<extLst': case '<extLst>': case '</extLst>': break;\n\t\t\tcase '<ext': pass = true; break;\n\t\t\tcase '</ext>': pass = false; break;\n\t\t\tdefault: if(opts && opts.WTF) {\n\t\t\t\tif(!pass) throw new Error('unrecognized ' + y[0] + ' in cellXfs');\n\t\t\t}\n\t\t}\n\t});\n}\n\nfunction write_cellXfs(cellXfs)/*:string*/ {\n\tvar o/*:Array<string>*/ = [];\n\to[o.length] = (writextag('cellXfs',null));\n\tcellXfs.forEach(function(c) {\n\t\to[o.length] = (writextag('xf', null, c));\n\t});\n\to[o.length] = (\"</cellXfs>\");\n\tif(o.length === 2) return \"\";\n\to[0] = writextag('cellXfs',null, {count:o.length-2}).replace(\"/>\",\">\");\n\treturn o.join(\"\");\n}\n\n/* 18.8 Styles CT_Stylesheet*/\nvar parse_sty_xml= /*#__PURE__*/(function make_pstyx() {\nvar numFmtRegex = /<(?:\\w+:)?numFmts([^>]*)>[\\S\\s]*?<\\/(?:\\w+:)?numFmts>/;\nvar cellXfRegex = /<(?:\\w+:)?cellXfs([^>]*)>[\\S\\s]*?<\\/(?:\\w+:)?cellXfs>/;\nvar fillsRegex = /<(?:\\w+:)?fills([^>]*)>[\\S\\s]*?<\\/(?:\\w+:)?fills>/;\nvar fontsRegex = /<(?:\\w+:)?fonts([^>]*)>[\\S\\s]*?<\\/(?:\\w+:)?fonts>/;\nvar bordersRegex = /<(?:\\w+:)?borders([^>]*)>[\\S\\s]*?<\\/(?:\\w+:)?borders>/;\n\nreturn function parse_sty_xml(data, themes, opts) {\n\tvar styles = {};\n\tif(!data) return styles;\n\tdata = data.replace(/<!--([\\s\\S]*?)-->/mg,\"\").replace(/<!DOCTYPE[^\\[]*\\[[^\\]]*\\]>/gm,\"\");\n\t/* 18.8.39 styleSheet CT_Stylesheet */\n\tvar t;\n\n\t/* 18.8.31 numFmts CT_NumFmts ? */\n\tif((t=data.match(numFmtRegex))) parse_numFmts(t, styles, opts);\n\n\t/* 18.8.23 fonts CT_Fonts ? */\n\tif((t=data.match(fontsRegex))) parse_fonts(t, styles, themes, opts);\n\n\t/* 18.8.21 fills CT_Fills ? */\n\tif((t=data.match(fillsRegex))) parse_fills(t, styles, themes, opts);\n\n\t/* 18.8.5  borders CT_Borders ? */\n\tif((t=data.match(bordersRegex))) parse_borders(t, styles, themes, opts);\n\n\t/* 18.8.9  cellStyleXfs CT_CellStyleXfs ? */\n\t/* 18.8.8  cellStyles CT_CellStyles ? */\n\n\t/* 18.8.10 cellXfs CT_CellXfs ? */\n\tif((t=data.match(cellXfRegex))) parse_cellXfs(t, styles, opts);\n\n\t/* 18.8.15 dxfs CT_Dxfs ? */\n\t/* 18.8.42 tableStyles CT_TableStyles ? */\n\t/* 18.8.11 colors CT_Colors ? */\n\t/* 18.2.10 extLst CT_ExtensionList ? */\n\n\treturn styles;\n};\n})();\n\nfunction write_sty_xml(wb/*:Workbook*/, opts)/*:string*/ {\n\tvar o = [XML_HEADER, writextag('styleSheet', null, {\n\t\t'xmlns': XMLNS_main[0],\n\t\t'xmlns:vt': XMLNS.vt\n\t})], w;\n\tif(wb.SSF && (w = write_numFmts(wb.SSF)) != null) o[o.length] = w;\n\to[o.length] = ('<fonts count=\"1\"><font><sz val=\"12\"/><color theme=\"1\"/><name val=\"Calibri\"/><family val=\"2\"/><scheme val=\"minor\"/></font></fonts>');\n\to[o.length] = ('<fills count=\"2\"><fill><patternFill patternType=\"none\"/></fill><fill><patternFill patternType=\"gray125\"/></fill></fills>');\n\to[o.length] = ('<borders count=\"1\"><border><left/><right/><top/><bottom/><diagonal/></border></borders>');\n\to[o.length] = ('<cellStyleXfs count=\"1\"><xf numFmtId=\"0\" fontId=\"0\" fillId=\"0\" borderId=\"0\"/></cellStyleXfs>');\n\tif((w = write_cellXfs(opts.cellXfs))) o[o.length] = (w);\n\to[o.length] = ('<cellStyles count=\"1\"><cellStyle name=\"Normal\" xfId=\"0\" builtinId=\"0\"/></cellStyles>');\n\to[o.length] = ('<dxfs count=\"0\"/>');\n\to[o.length] = ('<tableStyles count=\"0\" defaultTableStyle=\"TableStyleMedium9\" defaultPivotStyle=\"PivotStyleMedium4\"/>');\n\n\tif(o.length>2){ o[o.length] = ('</styleSheet>'); o[1]=o[1].replace(\"/>\",\">\"); }\n\treturn o.join(\"\");\n}\n/* [MS-XLSB] 2.4.657 BrtFmt */\nfunction parse_BrtFmt(data, length/*:number*/) {\n\tvar numFmtId = data.read_shift(2);\n\tvar stFmtCode = parse_XLWideString(data,length-2);\n\treturn [numFmtId, stFmtCode];\n}\nfunction write_BrtFmt(i/*:number*/, f/*:string*/, o) {\n\tif(!o) o = new_buf(6 + 4 * f.length);\n\to.write_shift(2, i);\n\twrite_XLWideString(f, o);\n\tvar out = (o.length > o.l) ? o.slice(0, o.l) : o;\n\tif(o.l == null) o.l = o.length;\n\treturn out;\n}\n\n/* [MS-XLSB] 2.4.659 BrtFont TODO */\nfunction parse_BrtFont(data, length/*:number*/, opts) {\n\tvar out = ({}/*:any*/);\n\n\tout.sz = data.read_shift(2) / 20;\n\n\tvar grbit = parse_FontFlags(data, 2, opts);\n\tif(grbit.fItalic) out.italic = 1;\n\tif(grbit.fCondense) out.condense = 1;\n\tif(grbit.fExtend) out.extend = 1;\n\tif(grbit.fShadow) out.shadow = 1;\n\tif(grbit.fOutline) out.outline = 1;\n\tif(grbit.fStrikeout) out.strike = 1;\n\n\tvar bls = data.read_shift(2);\n\tif(bls === 0x02BC) out.bold = 1;\n\n\tswitch(data.read_shift(2)) {\n\t\t/* case 0: out.vertAlign = \"baseline\"; break; */\n\t\tcase 1: out.vertAlign = \"superscript\"; break;\n\t\tcase 2: out.vertAlign = \"subscript\"; break;\n\t}\n\n\tvar underline = data.read_shift(1);\n\tif(underline != 0) out.underline = underline;\n\n\tvar family = data.read_shift(1);\n\tif(family > 0) out.family = family;\n\n\tvar bCharSet = data.read_shift(1);\n\tif(bCharSet > 0) out.charset = bCharSet;\n\n\tdata.l++;\n\tout.color = parse_BrtColor(data, 8);\n\n\tswitch(data.read_shift(1)) {\n\t\t/* case 0: out.scheme = \"none\": break; */\n\t\tcase 1: out.scheme = \"major\"; break;\n\t\tcase 2: out.scheme = \"minor\"; break;\n\t}\n\n\tout.name = parse_XLWideString(data, length - 21);\n\n\treturn out;\n}\nfunction write_BrtFont(font/*:any*/, o) {\n\tif(!o) o = new_buf(25+4*32);\n\to.write_shift(2, font.sz * 20);\n\twrite_FontFlags(font, o);\n\to.write_shift(2, font.bold ? 0x02BC : 0x0190);\n\tvar sss = 0;\n\tif(font.vertAlign == \"superscript\") sss = 1;\n\telse if(font.vertAlign == \"subscript\") sss = 2;\n\to.write_shift(2, sss);\n\to.write_shift(1, font.underline || 0);\n\to.write_shift(1, font.family || 0);\n\to.write_shift(1, font.charset || 0);\n\to.write_shift(1, 0);\n\twrite_BrtColor(font.color, o);\n\tvar scheme = 0;\n\tif(font.scheme == \"major\") scheme = 1;\n\tif(font.scheme == \"minor\") scheme = 2;\n\to.write_shift(1, scheme);\n\twrite_XLWideString(font.name, o);\n\treturn o.length > o.l ? o.slice(0, o.l) : o;\n}\n\n/* [MS-XLSB] 2.4.650 BrtFill */\nvar XLSBFillPTNames = [\n\t\"none\",\n\t\"solid\",\n\t\"mediumGray\",\n\t\"darkGray\",\n\t\"lightGray\",\n\t\"darkHorizontal\",\n\t\"darkVertical\",\n\t\"darkDown\",\n\t\"darkUp\",\n\t\"darkGrid\",\n\t\"darkTrellis\",\n\t\"lightHorizontal\",\n\t\"lightVertical\",\n\t\"lightDown\",\n\t\"lightUp\",\n\t\"lightGrid\",\n\t\"lightTrellis\",\n\t\"gray125\",\n\t\"gray0625\"\n];\nvar rev_XLSBFillPTNames/*:EvertNumType*/;\n/* TODO: gradient fill representation */\nvar parse_BrtFill = parsenoop;\nfunction write_BrtFill(fill, o) {\n\tif(!o) o = new_buf(4*3 + 8*7 + 16*1);\n\tif(!rev_XLSBFillPTNames) rev_XLSBFillPTNames = (evert(XLSBFillPTNames)/*:any*/);\n\tvar fls/*:number*/ = rev_XLSBFillPTNames[fill.patternType];\n\tif(fls == null) fls = 0x28;\n\to.write_shift(4, fls);\n\tvar j = 0;\n\tif(fls != 0x28) {\n\t\t/* TODO: custom FG Color */\n\t\twrite_BrtColor({auto:1}, o);\n\t\t/* TODO: custom BG Color */\n\t\twrite_BrtColor({auto:1}, o);\n\n\t\tfor(; j < 12; ++j) o.write_shift(4, 0);\n\t} else {\n\t\tfor(; j < 4; ++j) o.write_shift(4, 0);\n\n\t\tfor(; j < 12; ++j) o.write_shift(4, 0); /* TODO */\n\t\t/* iGradientType */\n\t\t/* xnumDegree */\n\t\t/* xnumFillToLeft */\n\t\t/* xnumFillToRight */\n\t\t/* xnumFillToTop */\n\t\t/* xnumFillToBottom */\n\t\t/* cNumStop */\n\t\t/* xfillGradientStop */\n\t}\n\treturn o.length > o.l ? o.slice(0, o.l) : o;\n}\n\n/* [MS-XLSB] 2.4.824 BrtXF */\nfunction parse_BrtXF(data, length/*:number*/) {\n\tvar tgt = data.l + length;\n\tvar ixfeParent = data.read_shift(2);\n\tvar ifmt = data.read_shift(2);\n\tdata.l = tgt;\n\treturn {ixfe:ixfeParent, numFmtId:ifmt };\n}\nfunction write_BrtXF(data, ixfeP, o) {\n\tif(!o) o = new_buf(16);\n\to.write_shift(2, ixfeP||0);\n\to.write_shift(2, data.numFmtId||0);\n\to.write_shift(2, 0); /* iFont */\n\to.write_shift(2, 0); /* iFill */\n\to.write_shift(2, 0); /* ixBorder */\n\to.write_shift(1, 0); /* trot */\n\to.write_shift(1, 0); /* indent */\n\tvar flow = 0;\n\to.write_shift(1, flow); /* flags */\n\to.write_shift(1, 0); /* flags */\n\to.write_shift(1, 0); /* xfGrbitAtr */\n\to.write_shift(1, 0);\n\treturn o;\n}\n\n/* [MS-XLSB] 2.5.4 Blxf TODO */\nfunction write_Blxf(data, o) {\n\tif(!o) o = new_buf(10);\n\to.write_shift(1, 0); /* dg */\n\to.write_shift(1, 0);\n\to.write_shift(4, 0); /* color */\n\to.write_shift(4, 0); /* color */\n\treturn o;\n}\n/* [MS-XLSB] 2.4.302 BrtBorder TODO */\nvar parse_BrtBorder = parsenoop;\nfunction write_BrtBorder(border, o) {\n\tif(!o) o = new_buf(51);\n\to.write_shift(1, 0); /* diagonal */\n\twrite_Blxf(null, o); /* top */\n\twrite_Blxf(null, o); /* bottom */\n\twrite_Blxf(null, o); /* left */\n\twrite_Blxf(null, o); /* right */\n\twrite_Blxf(null, o); /* diag */\n\treturn o.length > o.l ? o.slice(0, o.l) : o;\n}\n\n/* [MS-XLSB] 2.4.763 BrtStyle TODO */\nfunction write_BrtStyle(style, o) {\n\tif(!o) o = new_buf(12+4*10);\n\to.write_shift(4, style.xfId);\n\to.write_shift(2, 1);\n\to.write_shift(1, +style.builtinId);\n\to.write_shift(1, 0); /* iLevel */\n\twrite_XLNullableWideString(style.name || \"\", o);\n\treturn o.length > o.l ? o.slice(0, o.l) : o;\n}\n\n/* [MS-XLSB] 2.4.272 BrtBeginTableStyles */\nfunction write_BrtBeginTableStyles(cnt, defTableStyle, defPivotStyle) {\n\tvar o = new_buf(4+256*2*4);\n\to.write_shift(4, cnt);\n\twrite_XLNullableWideString(defTableStyle, o);\n\twrite_XLNullableWideString(defPivotStyle, o);\n\treturn o.length > o.l ? o.slice(0, o.l) : o;\n}\n\n/* [MS-XLSB] 2.1.7.50 Styles */\nfunction parse_sty_bin(data, themes, opts) {\n\tvar styles = {};\n\tstyles.NumberFmt = ([]/*:any*/);\n\tfor(var y in table_fmt) styles.NumberFmt[y] = table_fmt[y];\n\n\tstyles.CellXf = [];\n\tstyles.Fonts = [];\n\tvar state/*:Array<string>*/ = [];\n\tvar pass = false;\n\trecordhopper(data, function hopper_sty(val, R, RT) {\n\t\tswitch(RT) {\n\t\t\tcase 0x002C: /* BrtFmt */\n\t\t\t\tstyles.NumberFmt[val[0]] = val[1]; SSF__load(val[1], val[0]);\n\t\t\t\tbreak;\n\t\t\tcase 0x002B: /* BrtFont */\n\t\t\t\tstyles.Fonts.push(val);\n\t\t\t\tif(val.color.theme != null && themes && themes.themeElements && themes.themeElements.clrScheme) {\n\t\t\t\t\tval.color.rgb = rgb_tint(themes.themeElements.clrScheme[val.color.theme].rgb, val.color.tint || 0);\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 0x0401: /* BrtKnownFonts */ break;\n\t\t\tcase 0x002D: /* BrtFill */\n\t\t\t\tbreak;\n\t\t\tcase 0x002E: /* BrtBorder */\n\t\t\t\tbreak;\n\t\t\tcase 0x002F: /* BrtXF */\n\t\t\t\tif(state[state.length - 1] == 0x0269 /* BrtBeginCellXFs */) {\n\t\t\t\t\tstyles.CellXf.push(val);\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 0x0030: /* BrtStyle */\n\t\t\tcase 0x01FB: /* BrtDXF */\n\t\t\tcase 0x023C: /* BrtMRUColor */\n\t\t\tcase 0x01DB: /* BrtIndexedColor */\n\t\t\t\tbreak;\n\n\t\t\tcase 0x0493: /* BrtDXF14 */\n\t\t\tcase 0x0836: /* BrtDXF15 */\n\t\t\tcase 0x046A: /* BrtSlicerStyleElement */\n\t\t\tcase 0x0200: /* BrtTableStyleElement */\n\t\t\tcase 0x082F: /* BrtTimelineStyleElement */\n\t\t\tcase 0x0C00: /* BrtUid */\n\t\t\t\tbreak;\n\n\t\t\tcase 0x0023: /* BrtFRTBegin */\n\t\t\t\tpass = true; break;\n\t\t\tcase 0x0024: /* BrtFRTEnd */\n\t\t\t\tpass = false; break;\n\t\t\tcase 0x0025: /* BrtACBegin */\n\t\t\t\tstate.push(RT); pass = true; break;\n\t\t\tcase 0x0026: /* BrtACEnd */\n\t\t\t\tstate.pop(); pass = false; break;\n\n\t\t\tdefault:\n\t\t\t\tif(R.T > 0) state.push(RT);\n\t\t\t\telse if(R.T < 0) state.pop();\n\t\t\t\telse if(!pass || (opts.WTF && state[state.length-1] != 0x0025 /* BrtACBegin */)) throw new Error(\"Unexpected record 0x\" + RT.toString(16));\n\t\t}\n\t});\n\treturn styles;\n}\n\nfunction write_FMTS_bin(ba, NF/*:?SSFTable*/) {\n\tif(!NF) return;\n\tvar cnt = 0;\n\t[[5,8],[23,26],[41,44],[/*63*/50,/*66],[164,*/392]].forEach(function(r) {\n\t\t/*:: if(!NF) return; */\n\t\tfor(var i = r[0]; i <= r[1]; ++i) if(NF[i] != null) ++cnt;\n\t});\n\n\tif(cnt == 0) return;\n\twrite_record(ba, 0x0267 /* BrtBeginFmts */, write_UInt32LE(cnt));\n\t[[5,8],[23,26],[41,44],[/*63*/50,/*66],[164,*/392]].forEach(function(r) {\n\t\t/*:: if(!NF) return; */\n\t\tfor(var i = r[0]; i <= r[1]; ++i) if(NF[i] != null) write_record(ba, 0x002C /* BrtFmt */, write_BrtFmt(i, NF[i]));\n\t});\n\twrite_record(ba, 0x0268 /* BrtEndFmts */);\n}\n\nfunction write_FONTS_bin(ba/*::, data*/) {\n\tvar cnt = 1;\n\n\tif(cnt == 0) return;\n\twrite_record(ba, 0x0263 /* BrtBeginFonts */, write_UInt32LE(cnt));\n\twrite_record(ba, 0x002B /* BrtFont */, write_BrtFont({\n\t\tsz:12,\n\t\tcolor: {theme:1},\n\t\tname: \"Calibri\",\n\t\tfamily: 2,\n\t\tscheme: \"minor\"\n\t}));\n\t/* 1*65491BrtFont [ACFONTS] */\n\twrite_record(ba, 0x0264 /* BrtEndFonts */);\n}\n\nfunction write_FILLS_bin(ba/*::, data*/) {\n\tvar cnt = 2;\n\n\tif(cnt == 0) return;\n\twrite_record(ba, 0x025B /* BrtBeginFills */, write_UInt32LE(cnt));\n\twrite_record(ba, 0x002D /* BrtFill */, write_BrtFill({patternType:\"none\"}));\n\twrite_record(ba, 0x002D /* BrtFill */, write_BrtFill({patternType:\"gray125\"}));\n\t/* 1*65431BrtFill */\n\twrite_record(ba, 0x025C /* BrtEndFills */);\n}\n\nfunction write_BORDERS_bin(ba/*::, data*/) {\n\tvar cnt = 1;\n\n\tif(cnt == 0) return;\n\twrite_record(ba, 0x0265 /* BrtBeginBorders */, write_UInt32LE(cnt));\n\twrite_record(ba, 0x002E /* BrtBorder */, write_BrtBorder({}));\n\t/* 1*65430BrtBorder */\n\twrite_record(ba, 0x0266 /* BrtEndBorders */);\n}\n\nfunction write_CELLSTYLEXFS_bin(ba/*::, data*/) {\n\tvar cnt = 1;\n\twrite_record(ba, 0x0272 /* BrtBeginCellStyleXFs */, write_UInt32LE(cnt));\n\twrite_record(ba, 0x002F /* BrtXF */, write_BrtXF({\n\t\tnumFmtId: 0,\n\t\tfontId:   0,\n\t\tfillId:   0,\n\t\tborderId: 0\n\t}, 0xFFFF));\n\t/* 1*65430(BrtXF *FRT) */\n\twrite_record(ba, 0x0273 /* BrtEndCellStyleXFs */);\n}\n\nfunction write_CELLXFS_bin(ba, data) {\n\twrite_record(ba, 0x0269 /* BrtBeginCellXFs */, write_UInt32LE(data.length));\n\tdata.forEach(function(c) { write_record(ba, 0x002F /* BrtXF */, write_BrtXF(c,0)); });\n\t/* 1*65430(BrtXF *FRT) */\n\twrite_record(ba, 0x026A /* BrtEndCellXFs */);\n}\n\nfunction write_STYLES_bin(ba/*::, data*/) {\n\tvar cnt = 1;\n\n\twrite_record(ba, 0x026B /* BrtBeginStyles */, write_UInt32LE(cnt));\n\twrite_record(ba, 0x0030 /* BrtStyle */, write_BrtStyle({\n\t\txfId:0,\n\t\tbuiltinId:0,\n\t\tname:\"Normal\"\n\t}));\n\t/* 1*65430(BrtStyle *FRT) */\n\twrite_record(ba, 0x026C /* BrtEndStyles */);\n}\n\nfunction write_DXFS_bin(ba/*::, data*/) {\n\tvar cnt = 0;\n\n\twrite_record(ba, 0x01F9 /* BrtBeginDXFs */, write_UInt32LE(cnt));\n\t/* *2147483647(BrtDXF *FRT) */\n\twrite_record(ba, 0x01FA /* BrtEndDXFs */);\n}\n\nfunction write_TABLESTYLES_bin(ba/*::, data*/) {\n\tvar cnt = 0;\n\n\twrite_record(ba, 0x01FC /* BrtBeginTableStyles */, write_BrtBeginTableStyles(cnt, \"TableStyleMedium9\", \"PivotStyleMedium4\"));\n\t/* *TABLESTYLE */\n\twrite_record(ba, 0x01FD /* BrtEndTableStyles */);\n}\n\nfunction write_COLORPALETTE_bin(/*::ba, data*/) {\n\treturn;\n\t/* BrtBeginColorPalette [INDEXEDCOLORS] [MRUCOLORS] BrtEndColorPalette */\n}\n\n/* [MS-XLSB] 2.1.7.50 Styles */\nfunction write_sty_bin(wb, opts) {\n\tvar ba = buf_array();\n\twrite_record(ba, 0x0116 /* BrtBeginStyleSheet */);\n\twrite_FMTS_bin(ba, wb.SSF);\n\twrite_FONTS_bin(ba, wb);\n\twrite_FILLS_bin(ba, wb);\n\twrite_BORDERS_bin(ba, wb);\n\twrite_CELLSTYLEXFS_bin(ba, wb);\n\twrite_CELLXFS_bin(ba, opts.cellXfs);\n\twrite_STYLES_bin(ba, wb);\n\twrite_DXFS_bin(ba, wb);\n\twrite_TABLESTYLES_bin(ba, wb);\n\twrite_COLORPALETTE_bin(ba, wb);\n\t/* FRTSTYLESHEET*/\n\twrite_record(ba, 0x0117 /* BrtEndStyleSheet */);\n\treturn ba.end();\n}\n/* Even though theme layout is dk1 lt1 dk2 lt2, true order is lt1 dk1 lt2 dk2 */\nvar XLSXThemeClrScheme = [\n\t'</a:lt1>', '</a:dk1>', '</a:lt2>', '</a:dk2>',\n\t'</a:accent1>', '</a:accent2>', '</a:accent3>',\n\t'</a:accent4>', '</a:accent5>', '</a:accent6>',\n\t'</a:hlink>', '</a:folHlink>'\n];\n/* 20.1.6.2 clrScheme CT_ColorScheme */\nfunction parse_clrScheme(t, themes, opts) {\n\tthemes.themeElements.clrScheme = [];\n\tvar color = {};\n\t(t[0].match(tagregex)||[]).forEach(function(x) {\n\t\tvar y = parsexmltag(x);\n\t\tswitch(y[0]) {\n\t\t\t/* 20.1.6.2 clrScheme (Color Scheme) CT_ColorScheme */\n\t\t\tcase '<a:clrScheme': case '</a:clrScheme>': break;\n\n\t\t\t/* 20.1.2.3.32 srgbClr CT_SRgbColor */\n\t\t\tcase '<a:srgbClr':\n\t\t\t\tcolor.rgb = y.val; break;\n\n\t\t\t/* 20.1.2.3.33 sysClr CT_SystemColor */\n\t\t\tcase '<a:sysClr':\n\t\t\t\tcolor.rgb = y.lastClr; break;\n\n\t\t\t/* 20.1.4.1.1 accent1 (Accent 1) */\n\t\t\t/* 20.1.4.1.2 accent2 (Accent 2) */\n\t\t\t/* 20.1.4.1.3 accent3 (Accent 3) */\n\t\t\t/* 20.1.4.1.4 accent4 (Accent 4) */\n\t\t\t/* 20.1.4.1.5 accent5 (Accent 5) */\n\t\t\t/* 20.1.4.1.6 accent6 (Accent 6) */\n\t\t\t/* 20.1.4.1.9 dk1 (Dark 1) */\n\t\t\t/* 20.1.4.1.10 dk2 (Dark 2) */\n\t\t\t/* 20.1.4.1.15 folHlink (Followed Hyperlink) */\n\t\t\t/* 20.1.4.1.19 hlink (Hyperlink) */\n\t\t\t/* 20.1.4.1.22 lt1 (Light 1) */\n\t\t\t/* 20.1.4.1.23 lt2 (Light 2) */\n\t\t\tcase '<a:dk1>': case '</a:dk1>':\n\t\t\tcase '<a:lt1>': case '</a:lt1>':\n\t\t\tcase '<a:dk2>': case '</a:dk2>':\n\t\t\tcase '<a:lt2>': case '</a:lt2>':\n\t\t\tcase '<a:accent1>': case '</a:accent1>':\n\t\t\tcase '<a:accent2>': case '</a:accent2>':\n\t\t\tcase '<a:accent3>': case '</a:accent3>':\n\t\t\tcase '<a:accent4>': case '</a:accent4>':\n\t\t\tcase '<a:accent5>': case '</a:accent5>':\n\t\t\tcase '<a:accent6>': case '</a:accent6>':\n\t\t\tcase '<a:hlink>': case '</a:hlink>':\n\t\t\tcase '<a:folHlink>': case '</a:folHlink>':\n\t\t\t\tif (y[0].charAt(1) === '/') {\n\t\t\t\t\tthemes.themeElements.clrScheme[XLSXThemeClrScheme.indexOf(y[0])] = color;\n\t\t\t\t\tcolor = {};\n\t\t\t\t} else {\n\t\t\t\t\tcolor.name = y[0].slice(3, y[0].length - 1);\n\t\t\t\t}\n\t\t\t\tbreak;\n\n\t\t\tdefault: if(opts && opts.WTF) throw new Error('Unrecognized ' + y[0] + ' in clrScheme');\n\t\t}\n\t});\n}\n\n/* 20.1.4.1.18 fontScheme CT_FontScheme */\nfunction parse_fontScheme(/*::t, themes, opts*/) { }\n\n/* 20.1.4.1.15 fmtScheme CT_StyleMatrix */\nfunction parse_fmtScheme(/*::t, themes, opts*/) { }\n\nvar clrsregex = /<a:clrScheme([^>]*)>[\\s\\S]*<\\/a:clrScheme>/;\nvar fntsregex = /<a:fontScheme([^>]*)>[\\s\\S]*<\\/a:fontScheme>/;\nvar fmtsregex = /<a:fmtScheme([^>]*)>[\\s\\S]*<\\/a:fmtScheme>/;\n\n/* 20.1.6.10 themeElements CT_BaseStyles */\nfunction parse_themeElements(data, themes, opts) {\n\tthemes.themeElements = {};\n\n\tvar t;\n\n\t[\n\t\t/* clrScheme CT_ColorScheme */\n\t\t['clrScheme', clrsregex, parse_clrScheme],\n\t\t/* fontScheme CT_FontScheme */\n\t\t['fontScheme', fntsregex, parse_fontScheme],\n\t\t/* fmtScheme CT_StyleMatrix */\n\t\t['fmtScheme', fmtsregex, parse_fmtScheme]\n\t].forEach(function(m) {\n\t\tif(!(t=data.match(m[1]))) throw new Error(m[0] + ' not found in themeElements');\n\t\tm[2](t, themes, opts);\n\t});\n}\n\nvar themeltregex = /<a:themeElements([^>]*)>[\\s\\S]*<\\/a:themeElements>/;\n\n/* 14.2.7 Theme Part */\nfunction parse_theme_xml(data/*:string*/, opts) {\n\t/* 20.1.6.9 theme CT_OfficeStyleSheet */\n\tif(!data || data.length === 0) data = write_theme();\n\n\tvar t;\n\tvar themes = {};\n\n\t/* themeElements CT_BaseStyles */\n\tif(!(t=data.match(themeltregex))) throw new Error('themeElements not found in theme');\n\tparse_themeElements(t[0], themes, opts);\n\tthemes.raw = data;\n\treturn themes;\n}\n\nfunction write_theme(Themes, opts)/*:string*/ {\n\tif(opts && opts.themeXLSX) return opts.themeXLSX;\n\tif(Themes && typeof Themes.raw == \"string\") return Themes.raw;\n\tvar o = [XML_HEADER];\n\to[o.length] = '<a:theme xmlns:a=\"http://schemas.openxmlformats.org/drawingml/2006/main\" name=\"Office Theme\">';\n\to[o.length] =  '<a:themeElements>';\n\n\to[o.length] =   '<a:clrScheme name=\"Office\">';\n\to[o.length] =    '<a:dk1><a:sysClr val=\"windowText\" lastClr=\"000000\"/></a:dk1>';\n\to[o.length] =    '<a:lt1><a:sysClr val=\"window\" lastClr=\"FFFFFF\"/></a:lt1>';\n\to[o.length] =    '<a:dk2><a:srgbClr val=\"1F497D\"/></a:dk2>';\n\to[o.length] =    '<a:lt2><a:srgbClr val=\"EEECE1\"/></a:lt2>';\n\to[o.length] =    '<a:accent1><a:srgbClr val=\"4F81BD\"/></a:accent1>';\n\to[o.length] =    '<a:accent2><a:srgbClr val=\"C0504D\"/></a:accent2>';\n\to[o.length] =    '<a:accent3><a:srgbClr val=\"9BBB59\"/></a:accent3>';\n\to[o.length] =    '<a:accent4><a:srgbClr val=\"8064A2\"/></a:accent4>';\n\to[o.length] =    '<a:accent5><a:srgbClr val=\"4BACC6\"/></a:accent5>';\n\to[o.length] =    '<a:accent6><a:srgbClr val=\"F79646\"/></a:accent6>';\n\to[o.length] =    '<a:hlink><a:srgbClr val=\"0000FF\"/></a:hlink>';\n\to[o.length] =    '<a:folHlink><a:srgbClr val=\"800080\"/></a:folHlink>';\n\to[o.length] =   '</a:clrScheme>';\n\n\to[o.length] =   '<a:fontScheme name=\"Office\">';\n\to[o.length] =    '<a:majorFont>';\n\to[o.length] =     '<a:latin typeface=\"Cambria\"/>';\n\to[o.length] =     '<a:ea typeface=\"\"/>';\n\to[o.length] =     '<a:cs typeface=\"\"/>';\n\to[o.length] =     '<a:font script=\"Jpan\" typeface=\"ＭＳ Ｐゴシック\"/>';\n\to[o.length] =     '<a:font script=\"Hang\" typeface=\"맑은 고딕\"/>';\n\to[o.length] =     '<a:font script=\"Hans\" typeface=\"宋体\"/>';\n\to[o.length] =     '<a:font script=\"Hant\" typeface=\"新細明體\"/>';\n\to[o.length] =     '<a:font script=\"Arab\" typeface=\"Times New Roman\"/>';\n\to[o.length] =     '<a:font script=\"Hebr\" typeface=\"Times New Roman\"/>';\n\to[o.length] =     '<a:font script=\"Thai\" typeface=\"Tahoma\"/>';\n\to[o.length] =     '<a:font script=\"Ethi\" typeface=\"Nyala\"/>';\n\to[o.length] =     '<a:font script=\"Beng\" typeface=\"Vrinda\"/>';\n\to[o.length] =     '<a:font script=\"Gujr\" typeface=\"Shruti\"/>';\n\to[o.length] =     '<a:font script=\"Khmr\" typeface=\"MoolBoran\"/>';\n\to[o.length] =     '<a:font script=\"Knda\" typeface=\"Tunga\"/>';\n\to[o.length] =     '<a:font script=\"Guru\" typeface=\"Raavi\"/>';\n\to[o.length] =     '<a:font script=\"Cans\" typeface=\"Euphemia\"/>';\n\to[o.length] =     '<a:font script=\"Cher\" typeface=\"Plantagenet Cherokee\"/>';\n\to[o.length] =     '<a:font script=\"Yiii\" typeface=\"Microsoft Yi Baiti\"/>';\n\to[o.length] =     '<a:font script=\"Tibt\" typeface=\"Microsoft Himalaya\"/>';\n\to[o.length] =     '<a:font script=\"Thaa\" typeface=\"MV Boli\"/>';\n\to[o.length] =     '<a:font script=\"Deva\" typeface=\"Mangal\"/>';\n\to[o.length] =     '<a:font script=\"Telu\" typeface=\"Gautami\"/>';\n\to[o.length] =     '<a:font script=\"Taml\" typeface=\"Latha\"/>';\n\to[o.length] =     '<a:font script=\"Syrc\" typeface=\"Estrangelo Edessa\"/>';\n\to[o.length] =     '<a:font script=\"Orya\" typeface=\"Kalinga\"/>';\n\to[o.length] =     '<a:font script=\"Mlym\" typeface=\"Kartika\"/>';\n\to[o.length] =     '<a:font script=\"Laoo\" typeface=\"DokChampa\"/>';\n\to[o.length] =     '<a:font script=\"Sinh\" typeface=\"Iskoola Pota\"/>';\n\to[o.length] =     '<a:font script=\"Mong\" typeface=\"Mongolian Baiti\"/>';\n\to[o.length] =     '<a:font script=\"Viet\" typeface=\"Times New Roman\"/>';\n\to[o.length] =     '<a:font script=\"Uigh\" typeface=\"Microsoft Uighur\"/>';\n\to[o.length] =     '<a:font script=\"Geor\" typeface=\"Sylfaen\"/>';\n\to[o.length] =    '</a:majorFont>';\n\to[o.length] =    '<a:minorFont>';\n\to[o.length] =     '<a:latin typeface=\"Calibri\"/>';\n\to[o.length] =     '<a:ea typeface=\"\"/>';\n\to[o.length] =     '<a:cs typeface=\"\"/>';\n\to[o.length] =     '<a:font script=\"Jpan\" typeface=\"ＭＳ Ｐゴシック\"/>';\n\to[o.length] =     '<a:font script=\"Hang\" typeface=\"맑은 고딕\"/>';\n\to[o.length] =     '<a:font script=\"Hans\" typeface=\"宋体\"/>';\n\to[o.length] =     '<a:font script=\"Hant\" typeface=\"新細明體\"/>';\n\to[o.length] =     '<a:font script=\"Arab\" typeface=\"Arial\"/>';\n\to[o.length] =     '<a:font script=\"Hebr\" typeface=\"Arial\"/>';\n\to[o.length] =     '<a:font script=\"Thai\" typeface=\"Tahoma\"/>';\n\to[o.length] =     '<a:font script=\"Ethi\" typeface=\"Nyala\"/>';\n\to[o.length] =     '<a:font script=\"Beng\" typeface=\"Vrinda\"/>';\n\to[o.length] =     '<a:font script=\"Gujr\" typeface=\"Shruti\"/>';\n\to[o.length] =     '<a:font script=\"Khmr\" typeface=\"DaunPenh\"/>';\n\to[o.length] =     '<a:font script=\"Knda\" typeface=\"Tunga\"/>';\n\to[o.length] =     '<a:font script=\"Guru\" typeface=\"Raavi\"/>';\n\to[o.length] =     '<a:font script=\"Cans\" typeface=\"Euphemia\"/>';\n\to[o.length] =     '<a:font script=\"Cher\" typeface=\"Plantagenet Cherokee\"/>';\n\to[o.length] =     '<a:font script=\"Yiii\" typeface=\"Microsoft Yi Baiti\"/>';\n\to[o.length] =     '<a:font script=\"Tibt\" typeface=\"Microsoft Himalaya\"/>';\n\to[o.length] =     '<a:font script=\"Thaa\" typeface=\"MV Boli\"/>';\n\to[o.length] =     '<a:font script=\"Deva\" typeface=\"Mangal\"/>';\n\to[o.length] =     '<a:font script=\"Telu\" typeface=\"Gautami\"/>';\n\to[o.length] =     '<a:font script=\"Taml\" typeface=\"Latha\"/>';\n\to[o.length] =     '<a:font script=\"Syrc\" typeface=\"Estrangelo Edessa\"/>';\n\to[o.length] =     '<a:font script=\"Orya\" typeface=\"Kalinga\"/>';\n\to[o.length] =     '<a:font script=\"Mlym\" typeface=\"Kartika\"/>';\n\to[o.length] =     '<a:font script=\"Laoo\" typeface=\"DokChampa\"/>';\n\to[o.length] =     '<a:font script=\"Sinh\" typeface=\"Iskoola Pota\"/>';\n\to[o.length] =     '<a:font script=\"Mong\" typeface=\"Mongolian Baiti\"/>';\n\to[o.length] =     '<a:font script=\"Viet\" typeface=\"Arial\"/>';\n\to[o.length] =     '<a:font script=\"Uigh\" typeface=\"Microsoft Uighur\"/>';\n\to[o.length] =     '<a:font script=\"Geor\" typeface=\"Sylfaen\"/>';\n\to[o.length] =    '</a:minorFont>';\n\to[o.length] =   '</a:fontScheme>';\n\n\to[o.length] =   '<a:fmtScheme name=\"Office\">';\n\to[o.length] =    '<a:fillStyleLst>';\n\to[o.length] =     '<a:solidFill><a:schemeClr val=\"phClr\"/></a:solidFill>';\n\to[o.length] =     '<a:gradFill rotWithShape=\"1\">';\n\to[o.length] =      '<a:gsLst>';\n\to[o.length] =       '<a:gs pos=\"0\"><a:schemeClr val=\"phClr\"><a:tint val=\"50000\"/><a:satMod val=\"300000\"/></a:schemeClr></a:gs>';\n\to[o.length] =       '<a:gs pos=\"35000\"><a:schemeClr val=\"phClr\"><a:tint val=\"37000\"/><a:satMod val=\"300000\"/></a:schemeClr></a:gs>';\n\to[o.length] =       '<a:gs pos=\"100000\"><a:schemeClr val=\"phClr\"><a:tint val=\"15000\"/><a:satMod val=\"350000\"/></a:schemeClr></a:gs>';\n\to[o.length] =      '</a:gsLst>';\n\to[o.length] =      '<a:lin ang=\"16200000\" scaled=\"1\"/>';\n\to[o.length] =     '</a:gradFill>';\n\to[o.length] =     '<a:gradFill rotWithShape=\"1\">';\n\to[o.length] =      '<a:gsLst>';\n\to[o.length] =       '<a:gs pos=\"0\"><a:schemeClr val=\"phClr\"><a:tint val=\"100000\"/><a:shade val=\"100000\"/><a:satMod val=\"130000\"/></a:schemeClr></a:gs>';\n\to[o.length] =       '<a:gs pos=\"100000\"><a:schemeClr val=\"phClr\"><a:tint val=\"50000\"/><a:shade val=\"100000\"/><a:satMod val=\"350000\"/></a:schemeClr></a:gs>';\n\to[o.length] =      '</a:gsLst>';\n\to[o.length] =      '<a:lin ang=\"16200000\" scaled=\"0\"/>';\n\to[o.length] =     '</a:gradFill>';\n\to[o.length] =    '</a:fillStyleLst>';\n\to[o.length] =    '<a:lnStyleLst>';\n\to[o.length] =     '<a:ln w=\"9525\" cap=\"flat\" cmpd=\"sng\" algn=\"ctr\"><a:solidFill><a:schemeClr val=\"phClr\"><a:shade val=\"95000\"/><a:satMod val=\"105000\"/></a:schemeClr></a:solidFill><a:prstDash val=\"solid\"/></a:ln>';\n\to[o.length] =     '<a:ln w=\"25400\" cap=\"flat\" cmpd=\"sng\" algn=\"ctr\"><a:solidFill><a:schemeClr val=\"phClr\"/></a:solidFill><a:prstDash val=\"solid\"/></a:ln>';\n\to[o.length] =     '<a:ln w=\"38100\" cap=\"flat\" cmpd=\"sng\" algn=\"ctr\"><a:solidFill><a:schemeClr val=\"phClr\"/></a:solidFill><a:prstDash val=\"solid\"/></a:ln>';\n\to[o.length] =    '</a:lnStyleLst>';\n\to[o.length] =    '<a:effectStyleLst>';\n\to[o.length] =     '<a:effectStyle>';\n\to[o.length] =      '<a:effectLst>';\n\to[o.length] =       '<a:outerShdw blurRad=\"40000\" dist=\"20000\" dir=\"5400000\" rotWithShape=\"0\"><a:srgbClr val=\"000000\"><a:alpha val=\"38000\"/></a:srgbClr></a:outerShdw>';\n\to[o.length] =      '</a:effectLst>';\n\to[o.length] =     '</a:effectStyle>';\n\to[o.length] =     '<a:effectStyle>';\n\to[o.length] =      '<a:effectLst>';\n\to[o.length] =       '<a:outerShdw blurRad=\"40000\" dist=\"23000\" dir=\"5400000\" rotWithShape=\"0\"><a:srgbClr val=\"000000\"><a:alpha val=\"35000\"/></a:srgbClr></a:outerShdw>';\n\to[o.length] =      '</a:effectLst>';\n\to[o.length] =     '</a:effectStyle>';\n\to[o.length] =     '<a:effectStyle>';\n\to[o.length] =      '<a:effectLst>';\n\to[o.length] =       '<a:outerShdw blurRad=\"40000\" dist=\"23000\" dir=\"5400000\" rotWithShape=\"0\"><a:srgbClr val=\"000000\"><a:alpha val=\"35000\"/></a:srgbClr></a:outerShdw>';\n\to[o.length] =      '</a:effectLst>';\n\to[o.length] =      '<a:scene3d><a:camera prst=\"orthographicFront\"><a:rot lat=\"0\" lon=\"0\" rev=\"0\"/></a:camera><a:lightRig rig=\"threePt\" dir=\"t\"><a:rot lat=\"0\" lon=\"0\" rev=\"1200000\"/></a:lightRig></a:scene3d>';\n\to[o.length] =      '<a:sp3d><a:bevelT w=\"63500\" h=\"25400\"/></a:sp3d>';\n\to[o.length] =     '</a:effectStyle>';\n\to[o.length] =    '</a:effectStyleLst>';\n\to[o.length] =    '<a:bgFillStyleLst>';\n\to[o.length] =     '<a:solidFill><a:schemeClr val=\"phClr\"/></a:solidFill>';\n\to[o.length] =     '<a:gradFill rotWithShape=\"1\">';\n\to[o.length] =      '<a:gsLst>';\n\to[o.length] =       '<a:gs pos=\"0\"><a:schemeClr val=\"phClr\"><a:tint val=\"40000\"/><a:satMod val=\"350000\"/></a:schemeClr></a:gs>';\n\to[o.length] =       '<a:gs pos=\"40000\"><a:schemeClr val=\"phClr\"><a:tint val=\"45000\"/><a:shade val=\"99000\"/><a:satMod val=\"350000\"/></a:schemeClr></a:gs>';\n\to[o.length] =       '<a:gs pos=\"100000\"><a:schemeClr val=\"phClr\"><a:shade val=\"20000\"/><a:satMod val=\"255000\"/></a:schemeClr></a:gs>';\n\to[o.length] =      '</a:gsLst>';\n\to[o.length] =      '<a:path path=\"circle\"><a:fillToRect l=\"50000\" t=\"-80000\" r=\"50000\" b=\"180000\"/></a:path>';\n\to[o.length] =     '</a:gradFill>';\n\to[o.length] =     '<a:gradFill rotWithShape=\"1\">';\n\to[o.length] =      '<a:gsLst>';\n\to[o.length] =       '<a:gs pos=\"0\"><a:schemeClr val=\"phClr\"><a:tint val=\"80000\"/><a:satMod val=\"300000\"/></a:schemeClr></a:gs>';\n\to[o.length] =       '<a:gs pos=\"100000\"><a:schemeClr val=\"phClr\"><a:shade val=\"30000\"/><a:satMod val=\"200000\"/></a:schemeClr></a:gs>';\n\to[o.length] =      '</a:gsLst>';\n\to[o.length] =      '<a:path path=\"circle\"><a:fillToRect l=\"50000\" t=\"50000\" r=\"50000\" b=\"50000\"/></a:path>';\n\to[o.length] =     '</a:gradFill>';\n\to[o.length] =    '</a:bgFillStyleLst>';\n\to[o.length] =   '</a:fmtScheme>';\n\to[o.length] =  '</a:themeElements>';\n\n\to[o.length] =  '<a:objectDefaults>';\n\to[o.length] =   '<a:spDef>';\n\to[o.length] =    '<a:spPr/><a:bodyPr/><a:lstStyle/><a:style><a:lnRef idx=\"1\"><a:schemeClr val=\"accent1\"/></a:lnRef><a:fillRef idx=\"3\"><a:schemeClr val=\"accent1\"/></a:fillRef><a:effectRef idx=\"2\"><a:schemeClr val=\"accent1\"/></a:effectRef><a:fontRef idx=\"minor\"><a:schemeClr val=\"lt1\"/></a:fontRef></a:style>';\n\to[o.length] =   '</a:spDef>';\n\to[o.length] =   '<a:lnDef>';\n\to[o.length] =    '<a:spPr/><a:bodyPr/><a:lstStyle/><a:style><a:lnRef idx=\"2\"><a:schemeClr val=\"accent1\"/></a:lnRef><a:fillRef idx=\"0\"><a:schemeClr val=\"accent1\"/></a:fillRef><a:effectRef idx=\"1\"><a:schemeClr val=\"accent1\"/></a:effectRef><a:fontRef idx=\"minor\"><a:schemeClr val=\"tx1\"/></a:fontRef></a:style>';\n\to[o.length] =   '</a:lnDef>';\n\to[o.length] =  '</a:objectDefaults>';\n\to[o.length] =  '<a:extraClrSchemeLst/>';\n\to[o.length] = '</a:theme>';\n\treturn o.join(\"\");\n}\n/* [MS-XLS] 2.4.326 TODO: payload is a zip file */\nfunction parse_Theme(blob, length, opts) {\n\tvar end = blob.l + length;\n\tvar dwThemeVersion = blob.read_shift(4);\n\tif(dwThemeVersion === 124226) return;\n\tif(!opts.cellStyles) { blob.l = end; return; }\n\tvar data = blob.slice(blob.l);\n\tblob.l = end;\n\tvar zip; try { zip = zip_read(data, {type: \"array\"}); } catch(e) { return; }\n\tvar themeXML = getzipstr(zip, \"theme/theme/theme1.xml\", true);\n\tif(!themeXML) return;\n\treturn parse_theme_xml(themeXML, opts);\n}\n\n/* 2.5.49 */\nfunction parse_ColorTheme(blob/*::, length*/) { return blob.read_shift(4); }\n\n/* 2.5.155 */\nfunction parse_FullColorExt(blob/*::, length*/) {\n\tvar o = {};\n\to.xclrType = blob.read_shift(2);\n\to.nTintShade = blob.read_shift(2);\n\tswitch(o.xclrType) {\n\t\tcase 0: blob.l += 4; break;\n\t\tcase 1: o.xclrValue = parse_IcvXF(blob, 4); break;\n\t\tcase 2: o.xclrValue = parse_LongRGBA(blob, 4); break;\n\t\tcase 3: o.xclrValue = parse_ColorTheme(blob, 4); break;\n\t\tcase 4: blob.l += 4; break;\n\t}\n\tblob.l += 8;\n\treturn o;\n}\n\n/* 2.5.164 TODO: read 7 bits*/\nfunction parse_IcvXF(blob, length) {\n\treturn parsenoop(blob, length);\n}\n\n/* 2.5.280 */\nfunction parse_XFExtGradient(blob, length) {\n\treturn parsenoop(blob, length);\n}\n\n/* [MS-XLS] 2.5.108 */\nfunction parse_ExtProp(blob/*::, length*/)/*:Array<any>*/ {\n\tvar extType = blob.read_shift(2);\n\tvar cb = blob.read_shift(2) - 4;\n\tvar o = [extType];\n\tswitch(extType) {\n\t\tcase 0x04: case 0x05: case 0x07: case 0x08:\n\t\tcase 0x09: case 0x0A: case 0x0B: case 0x0D:\n\t\t\to[1] = parse_FullColorExt(blob, cb); break;\n\t\tcase 0x06: o[1] = parse_XFExtGradient(blob, cb); break;\n\t\tcase 0x0E: case 0x0F: o[1] = blob.read_shift(cb === 1 ? 1 : 2); break;\n\t\tdefault: throw new Error(\"Unrecognized ExtProp type: \" + extType + \" \" + cb);\n\t}\n\treturn o;\n}\n\n/* 2.4.355 */\nfunction parse_XFExt(blob, length) {\n\tvar end = blob.l + length;\n\tblob.l += 2;\n\tvar ixfe = blob.read_shift(2);\n\tblob.l += 2;\n\tvar cexts = blob.read_shift(2);\n\tvar ext/*:AOA*/ = [];\n\twhile(cexts-- > 0) ext.push(parse_ExtProp(blob, end-blob.l));\n\treturn {ixfe:ixfe, ext:ext};\n}\n\n/* xf is an XF, see parse_XFExt for xfext */\nfunction update_xfext(xf, xfext) {\n\txfext.forEach(function(xfe) {\n\t\tswitch(xfe[0]) { /* 2.5.108 extPropData */\n\t\t\tcase 0x04: break; /* foreground color */\n\t\t\tcase 0x05: break; /* background color */\n\t\t\tcase 0x06: break; /* gradient fill */\n\t\t\tcase 0x07: break; /* top cell border color */\n\t\t\tcase 0x08: break; /* bottom cell border color */\n\t\t\tcase 0x09: break; /* left cell border color */\n\t\t\tcase 0x0a: break; /* right cell border color */\n\t\t\tcase 0x0b: break; /* diagonal cell border color */\n\t\t\tcase 0x0d: /* text color */\n\t\t\t\tbreak;\n\t\t\tcase 0x0e: break; /* font scheme */\n\t\t\tcase 0x0f: break; /* indentation level */\n\t\t}\n\t});\n}\n\nfunction parse_BrtMdtinfo(data, length) {\n  return {\n    flags: data.read_shift(4),\n    version: data.read_shift(4),\n    name: parse_XLWideString(data, length - 8)\n  };\n}\nfunction write_BrtMdtinfo(data) {\n  var o = new_buf(12 + 2 * data.name.length);\n  o.write_shift(4, data.flags);\n  o.write_shift(4, data.version);\n  write_XLWideString(data.name, o);\n  return o.slice(0, o.l);\n}\nfunction parse_BrtMdb(data) {\n  var out = [];\n  var cnt = data.read_shift(4);\n  while (cnt-- > 0)\n    out.push([data.read_shift(4), data.read_shift(4)]);\n  return out;\n}\nfunction write_BrtMdb(mdb) {\n  var o = new_buf(4 + 8 * mdb.length);\n  o.write_shift(4, mdb.length);\n  for (var i = 0; i < mdb.length; ++i) {\n    o.write_shift(4, mdb[i][0]);\n    o.write_shift(4, mdb[i][1]);\n  }\n  return o;\n}\nfunction write_BrtBeginEsfmd(cnt, name) {\n  var o = new_buf(8 + 2 * name.length);\n  o.write_shift(4, cnt);\n  write_XLWideString(name, o);\n  return o.slice(0, o.l);\n}\nfunction parse_BrtBeginEsmdb(data) {\n  data.l += 4;\n  return data.read_shift(4) != 0;\n}\nfunction write_BrtBeginEsmdb(cnt, cm) {\n  var o = new_buf(8);\n  o.write_shift(4, cnt);\n  o.write_shift(4, cm ? 1 : 0);\n  return o;\n}\nfunction parse_xlmeta_bin(data, name, _opts) {\n  var out = { Types: [], Cell: [], Value: [] };\n  var opts = _opts || {};\n  var state = [];\n  var pass = false;\n  var metatype = 2;\n  recordhopper(data, function(val, R, RT) {\n    switch (RT) {\n      case 335:\n        out.Types.push({ name: val.name });\n        break;\n      case 51:\n        val.forEach(function(r) {\n          if (metatype == 1)\n            out.Cell.push({ type: out.Types[r[0] - 1].name, index: r[1] });\n          else if (metatype == 0)\n            out.Value.push({ type: out.Types[r[0] - 1].name, index: r[1] });\n        });\n        break;\n      case 337:\n        metatype = val ? 1 : 0;\n        break;\n      case 338:\n        metatype = 2;\n        break;\n      case 35:\n        state.push(RT);\n        pass = true;\n        break;\n      case 36:\n        state.pop();\n        pass = false;\n        break;\n      default:\n        if (R.T) {\n        } else if (!pass || opts.WTF && state[state.length - 1] != 35)\n          throw new Error(\"Unexpected record 0x\" + RT.toString(16));\n    }\n  });\n  return out;\n}\nfunction write_xlmeta_bin() {\n  var ba = buf_array();\n  write_record(ba, 332);\n  write_record(ba, 334, write_UInt32LE(1));\n  write_record(ba, 335, write_BrtMdtinfo({\n    name: \"XLDAPR\",\n    version: 12e4,\n    flags: 3496657072\n  }));\n  write_record(ba, 336);\n  write_record(ba, 339, write_BrtBeginEsfmd(1, \"XLDAPR\"));\n  write_record(ba, 52);\n  write_record(ba, 35, write_UInt32LE(514));\n  write_record(ba, 4096, write_UInt32LE(0));\n  write_record(ba, 4097, writeuint16(1));\n  write_record(ba, 36);\n  write_record(ba, 53);\n  write_record(ba, 340);\n  write_record(ba, 337, write_BrtBeginEsmdb(1, true));\n  write_record(ba, 51, write_BrtMdb([[1, 0]]));\n  write_record(ba, 338);\n  write_record(ba, 333);\n  return ba.end();\n}\nfunction parse_xlmeta_xml(data, name, opts) {\n  var out = { Types: [], Cell: [], Value: [] };\n  if (!data)\n    return out;\n  var pass = false;\n  var metatype = 2;\n  var lastmeta;\n  data.replace(tagregex, function(x) {\n    var y = parsexmltag(x);\n    switch (strip_ns(y[0])) {\n      case \"<?xml\":\n        break;\n      case \"<metadata\":\n      case \"</metadata>\":\n        break;\n      case \"<metadataTypes\":\n      case \"</metadataTypes>\":\n        break;\n      case \"<metadataType\":\n        out.Types.push({ name: y.name });\n        break;\n      case \"</metadataType>\":\n        break;\n      case \"<futureMetadata\":\n        for (var j = 0; j < out.Types.length; ++j)\n          if (out.Types[j].name == y.name)\n            lastmeta = out.Types[j];\n        break;\n      case \"</futureMetadata>\":\n        break;\n      case \"<bk>\":\n        break;\n      case \"</bk>\":\n        break;\n      case \"<rc\":\n        if (metatype == 1)\n          out.Cell.push({ type: out.Types[y.t - 1].name, index: +y.v });\n        else if (metatype == 0)\n          out.Value.push({ type: out.Types[y.t - 1].name, index: +y.v });\n        break;\n      case \"</rc>\":\n        break;\n      case \"<cellMetadata\":\n        metatype = 1;\n        break;\n      case \"</cellMetadata>\":\n        metatype = 2;\n        break;\n      case \"<valueMetadata\":\n        metatype = 0;\n        break;\n      case \"</valueMetadata>\":\n        metatype = 2;\n        break;\n      case \"<extLst\":\n      case \"<extLst>\":\n      case \"</extLst>\":\n      case \"<extLst/>\":\n        break;\n      case \"<ext\":\n        pass = true;\n        break;\n      case \"</ext>\":\n        pass = false;\n        break;\n      case \"<rvb\":\n        if (!lastmeta)\n          break;\n        if (!lastmeta.offsets)\n          lastmeta.offsets = [];\n        lastmeta.offsets.push(+y.i);\n        break;\n      default:\n        if (!pass && (opts == null ? void 0 : opts.WTF))\n          throw new Error(\"unrecognized \" + y[0] + \" in metadata\");\n    }\n    return x;\n  });\n  return out;\n}\nfunction write_xlmeta_xml() {\n  var o = [XML_HEADER];\n  o.push('<metadata xmlns=\"http://schemas.openxmlformats.org/spreadsheetml/2006/main\" xmlns:xlrd=\"http://schemas.microsoft.com/office/spreadsheetml/2017/richdata\" xmlns:xda=\"http://schemas.microsoft.com/office/spreadsheetml/2017/dynamicarray\">\\n  <metadataTypes count=\"1\">\\n    <metadataType name=\"XLDAPR\" minSupportedVersion=\"120000\" copy=\"1\" pasteAll=\"1\" pasteValues=\"1\" merge=\"1\" splitFirst=\"1\" rowColShift=\"1\" clearFormats=\"1\" clearComments=\"1\" assign=\"1\" coerce=\"1\" cellMeta=\"1\"/>\\n  </metadataTypes>\\n  <futureMetadata name=\"XLDAPR\" count=\"1\">\\n    <bk>\\n      <extLst>\\n        <ext uri=\"{bdbb8cdc-fa1e-496e-a857-3c3f30c029c3}\">\\n          <xda:dynamicArrayProperties fDynamic=\"1\" fCollapsed=\"0\"/>\\n        </ext>\\n      </extLst>\\n    </bk>\\n  </futureMetadata>\\n  <cellMetadata count=\"1\">\\n    <bk>\\n      <rc t=\"1\" v=\"0\"/>\\n    </bk>\\n  </cellMetadata>\\n</metadata>');\n  return o.join(\"\");\n}\n/* 18.6 Calculation Chain */\nfunction parse_cc_xml(data/*::, name, opts*/)/*:Array<any>*/ {\n\tvar d = [];\n\tif(!data) return d;\n\tvar i = 1;\n\t(data.match(tagregex)||[]).forEach(function(x) {\n\t\tvar y = parsexmltag(x);\n\t\tswitch(y[0]) {\n\t\t\tcase '<?xml': break;\n\t\t\t/* 18.6.2  calcChain CT_CalcChain 1 */\n\t\t\tcase '<calcChain': case '<calcChain>': case '</calcChain>': break;\n\t\t\t/* 18.6.1  c CT_CalcCell 1 */\n\t\t\tcase '<c': delete y[0]; if(y.i) i = y.i; else y.i = i; d.push(y); break;\n\t\t}\n\t});\n\treturn d;\n}\n\n//function write_cc_xml(data, opts) { }\n\n/* [MS-XLSB] 2.6.4.1 */\nfunction parse_BrtCalcChainItem$(data) {\n\tvar out = {};\n\tout.i = data.read_shift(4);\n\tvar cell = {};\n\tcell.r = data.read_shift(4);\n\tcell.c = data.read_shift(4);\n\tout.r = encode_cell(cell);\n\tvar flags = data.read_shift(1);\n\tif(flags & 0x2) out.l = '1';\n\tif(flags & 0x8) out.a = '1';\n\treturn out;\n}\n\n/* 18.6 Calculation Chain */\nfunction parse_cc_bin(data, name, opts) {\n\tvar out = [];\n\tvar pass = false;\n\trecordhopper(data, function hopper_cc(val, R, RT) {\n\t\tswitch(RT) {\n\t\t\tcase 0x003F: /* 'BrtCalcChainItem$' */\n\t\t\t\tout.push(val); break;\n\n\t\t\tdefault:\n\t\t\t\tif(R.T){/* empty */}\n\t\t\t\telse if(!pass || opts.WTF) throw new Error(\"Unexpected record 0x\" + RT.toString(16));\n\t\t}\n\t});\n\treturn out;\n}\n\n//function write_cc_bin(data, opts) { }\n/* 18.14 Supplementary Workbook Data */\nfunction parse_xlink_xml(/*::data, rel, name:string, _opts*/) {\n\t//var opts = _opts || {};\n\t//if(opts.WTF) throw \"XLSX External Link\";\n}\n\n/* [MS-XLSB] 2.1.7.25 External Link */\nfunction parse_xlink_bin(data, rel, name/*:string*/, _opts) {\n\tif(!data) return data;\n\tvar opts = _opts || {};\n\n\tvar pass = false, end = false;\n\n\trecordhopper(data, function xlink_parse(val, R, RT) {\n\t\tif(end) return;\n\t\tswitch(RT) {\n\t\t\tcase 0x0167: /* 'BrtSupTabs' */\n\t\t\tcase 0x016B: /* 'BrtExternTableStart' */\n\t\t\tcase 0x016C: /* 'BrtExternTableEnd' */\n\t\t\tcase 0x016E: /* 'BrtExternRowHdr' */\n\t\t\tcase 0x016F: /* 'BrtExternCellBlank' */\n\t\t\tcase 0x0170: /* 'BrtExternCellReal' */\n\t\t\tcase 0x0171: /* 'BrtExternCellBool' */\n\t\t\tcase 0x0172: /* 'BrtExternCellError' */\n\t\t\tcase 0x0173: /* 'BrtExternCellString' */\n\t\t\tcase 0x01D8: /* 'BrtExternValueMeta' */\n\t\t\tcase 0x0241: /* 'BrtSupNameStart' */\n\t\t\tcase 0x0242: /* 'BrtSupNameValueStart' */\n\t\t\tcase 0x0243: /* 'BrtSupNameValueEnd' */\n\t\t\tcase 0x0244: /* 'BrtSupNameNum' */\n\t\t\tcase 0x0245: /* 'BrtSupNameErr' */\n\t\t\tcase 0x0246: /* 'BrtSupNameSt' */\n\t\t\tcase 0x0247: /* 'BrtSupNameNil' */\n\t\t\tcase 0x0248: /* 'BrtSupNameBool' */\n\t\t\tcase 0x0249: /* 'BrtSupNameFmla' */\n\t\t\tcase 0x024A: /* 'BrtSupNameBits' */\n\t\t\tcase 0x024B: /* 'BrtSupNameEnd' */\n\t\t\t\tbreak;\n\n\t\t\tcase 0x0023: /* 'BrtFRTBegin' */\n\t\t\t\tpass = true; break;\n\t\t\tcase 0x0024: /* 'BrtFRTEnd' */\n\t\t\t\tpass = false; break;\n\n\t\t\tdefault:\n\t\t\t\tif(R.T){/* empty */}\n\t\t\t\telse if(!pass || opts.WTF) throw new Error(\"Unexpected record 0x\" + RT.toString(16));\n\t\t}\n\t}, opts);\n}\n/* 20.5 DrawingML - SpreadsheetML Drawing */\n/* 20.5.2.35 wsDr CT_Drawing */\nfunction parse_drawing(data, rels/*:any*/) {\n\tif(!data) return \"??\";\n\t/*\n\t  Chartsheet Drawing:\n\t   - 20.5.2.35 wsDr CT_Drawing\n\t    - 20.5.2.1  absoluteAnchor CT_AbsoluteAnchor\n\t     - 20.5.2.16 graphicFrame CT_GraphicalObjectFrame\n\t      - 20.1.2.2.16 graphic CT_GraphicalObject\n\t       - 20.1.2.2.17 graphicData CT_GraphicalObjectData\n          - chart reference\n\t   the actual type is based on the URI of the graphicData\n\t\tTODO: handle embedded charts and other types of graphics\n\t*/\n\tvar id = (data.match(/<c:chart [^>]*r:id=\"([^\"]*)\"/)||[\"\",\"\"])[1];\n\n\treturn rels['!id'][id].Target;\n}\n\n/* L.5.5.2 SpreadsheetML Comments + VML Schema */\nfunction write_vml(rId/*:number*/, comments) {\n\tvar csize = [21600, 21600];\n\t/* L.5.2.1.2 Path Attribute */\n\tvar bbox = [\"m0,0l0\",csize[1],csize[0],csize[1],csize[0],\"0xe\"].join(\",\");\n\tvar o = [\n\t\twritextag(\"xml\", null, { 'xmlns:v': XLMLNS.v, 'xmlns:o': XLMLNS.o, 'xmlns:x': XLMLNS.x, 'xmlns:mv': XLMLNS.mv }).replace(/\\/>/,\">\"),\n\t\twritextag(\"o:shapelayout\", writextag(\"o:idmap\", null, {'v:ext':\"edit\", 'data':rId}), {'v:ext':\"edit\"})\n\t];\n\n\tvar _shapeid = 65536 * rId;\n\n\tvar _comments = comments || [];\n\tif(_comments.length > 0) o.push(writextag(\"v:shapetype\", [\n\t\twritextag(\"v:stroke\", null, {joinstyle:\"miter\"}),\n\t\twritextag(\"v:path\", null, {gradientshapeok:\"t\", 'o:connecttype':\"rect\"})\n\t].join(\"\"), {id:\"_x0000_t202\", coordsize:csize.join(\",\"), 'o:spt':202, path:bbox}));\n\n\t_comments.forEach(function(x) { ++_shapeid; o.push(write_vml_comment(x, _shapeid)); });\n\to.push('</xml>');\n\treturn o.join(\"\");\n}\n\nfunction write_vml_comment(x, _shapeid)/*:string*/ {\n\tvar c = decode_cell(x[0]);\n\tvar fillopts = /*::(*/{'color2':\"#BEFF82\", 'type':\"gradient\"}/*:: :any)*/;\n\tif(fillopts.type == \"gradient\") fillopts.angle = \"-180\";\n\tvar fillparm = fillopts.type == \"gradient\" ? writextag(\"o:fill\", null, {type:\"gradientUnscaled\", 'v:ext':\"view\"}) : null;\n\tvar fillxml = writextag('v:fill', fillparm, fillopts);\n\n\tvar shadata = ({on:\"t\", 'obscured':\"t\"}/*:any*/);\n\n\treturn [\n\t'<v:shape' + wxt_helper({\n\t\tid:'_x0000_s' + _shapeid,\n\t\ttype:\"#_x0000_t202\",\n\t\tstyle:\"position:absolute; margin-left:80pt;margin-top:5pt;width:104pt;height:64pt;z-index:10\" + (x[1].hidden ? \";visibility:hidden\" : \"\") ,\n\t\tfillcolor:\"#ECFAD4\",\n\t\tstrokecolor:\"#edeaa1\"\n\t}) + '>',\n\t\tfillxml,\n\t\twritextag(\"v:shadow\", null, shadata),\n\t\twritextag(\"v:path\", null, {'o:connecttype':\"none\"}),\n\t\t'<v:textbox><div style=\"text-align:left\"></div></v:textbox>',\n\t\t'<x:ClientData ObjectType=\"Note\">',\n\t\t\t'<x:MoveWithCells/>',\n\t\t\t'<x:SizeWithCells/>',\n\t\t\t/* Part 4 19.4.2.3 Anchor (Anchor) */\n\t\t\twritetag('x:Anchor', [c.c+1, 0, c.r+1, 0, c.c+3, 20, c.r+5, 20].join(\",\")),\n\t\t\twritetag('x:AutoFill', \"False\"),\n\t\t\twritetag('x:Row', String(c.r)),\n\t\t\twritetag('x:Column', String(c.c)),\n\t\t\tx[1].hidden ? '' : '<x:Visible/>',\n\t\t'</x:ClientData>',\n\t'</v:shape>'\n\t].join(\"\");\n}\nfunction sheet_insert_comments(sheet/*:WorkSheet*/, comments/*:Array<RawComment>*/, threaded/*:boolean*/, people/*:?Array<any>*/) {\n\tvar dense = sheet[\"!data\"] != null;\n\tvar cell/*:Cell*/;\n\tcomments.forEach(function(comment) {\n\t\tvar r = decode_cell(comment.ref);\n\t\tif(r.r < 0 || r.c < 0) return;\n\t\tif(dense) {\n\t\t\tif(!sheet[\"!data\"][r.r]) sheet[\"!data\"][r.r] = [];\n\t\t\tcell = sheet[\"!data\"][r.r][r.c];\n\t\t} else cell = sheet[comment.ref];\n\t\tif (!cell) {\n\t\t\tcell = ({t:\"z\"}/*:any*/);\n\t\t\tif(dense) sheet[\"!data\"][r.r][r.c] = cell;\n\t\t\telse sheet[comment.ref] = cell;\n\t\t\tvar range = safe_decode_range(sheet[\"!ref\"]||\"BDWGO1000001:A1\");\n\t\t\tif(range.s.r > r.r) range.s.r = r.r;\n\t\t\tif(range.e.r < r.r) range.e.r = r.r;\n\t\t\tif(range.s.c > r.c) range.s.c = r.c;\n\t\t\tif(range.e.c < r.c) range.e.c = r.c;\n\t\t\tvar encoded = encode_range(range);\n\t\t\tsheet[\"!ref\"] = encoded;\n\t\t}\n\n\t\tif (!cell.c) cell.c = [];\n\t\tvar o/*:Comment*/ = ({a: comment.author, t: comment.t, r: comment.r, T: threaded});\n\t\tif(comment.h) o.h = comment.h;\n\n\t\t/* threaded comments always override */\n\t\tfor(var i = cell.c.length - 1; i >= 0; --i) {\n\t\t\tif(!threaded && cell.c[i].T) return;\n\t\t\tif(threaded && !cell.c[i].T) cell.c.splice(i, 1);\n\t\t}\n\t\tif(threaded && people) for(i = 0; i < people.length; ++i) {\n\t\t\tif(o.a == people[i].id) { o.a = people[i].name || o.a; break; }\n\t\t}\n\t\tcell.c.push(o);\n\t});\n}\n/* 18.7 Comments */\nfunction parse_comments_xml(data/*:string*/, opts)/*:Array<RawComment>*/ {\n\t/* 18.7.6 CT_Comments */\n\tif(data.match(/<(?:\\w+:)?comments *\\/>/)) return [];\n\tvar authors/*:Array<string>*/ = [];\n\tvar commentList/*:Array<RawComment>*/ = [];\n\tvar authtag = data.match(/<(?:\\w+:)?authors>([\\s\\S]*)<\\/(?:\\w+:)?authors>/);\n\tif(authtag && authtag[1]) authtag[1].split(/<\\/\\w*:?author>/).forEach(function(x) {\n\t\tif(x === \"\" || x.trim() === \"\") return;\n\t\tvar a = x.match(/<(?:\\w+:)?author[^>]*>(.*)/);\n\t\tif(a) authors.push(a[1]);\n\t});\n\tvar cmnttag = data.match(/<(?:\\w+:)?commentList>([\\s\\S]*)<\\/(?:\\w+:)?commentList>/);\n\tif(cmnttag && cmnttag[1]) cmnttag[1].split(/<\\/\\w*:?comment>/).forEach(function(x) {\n\t\tif(x === \"\" || x.trim() === \"\") return;\n\t\tvar cm = x.match(/<(?:\\w+:)?comment[^>]*>/);\n\t\tif(!cm) return;\n\t\tvar y = parsexmltag(cm[0]);\n\t\tvar comment/*:RawComment*/ = ({ author: y.authorId && authors[y.authorId] || \"sheetjsghost\", ref: y.ref, guid: y.guid }/*:any*/);\n\t\tvar cell = decode_cell(y.ref);\n\t\tif(opts.sheetRows && opts.sheetRows <= cell.r) return;\n\t\tvar textMatch = x.match(/<(?:\\w+:)?text>([\\s\\S]*)<\\/(?:\\w+:)?text>/);\n\t\tvar rt = !!textMatch && !!textMatch[1] && parse_si(textMatch[1]) || {r:\"\",t:\"\",h:\"\"};\n\t\tcomment.r = rt.r;\n\t\tif(rt.r == \"<t></t>\") rt.t = rt.h = \"\";\n\t\tcomment.t = (rt.t||\"\").replace(/\\r\\n/g,\"\\n\").replace(/\\r/g,\"\\n\");\n\t\tif(opts.cellHTML) comment.h = rt.h;\n\t\tcommentList.push(comment);\n\t});\n\treturn commentList;\n}\n\nfunction write_comments_xml(data/*::, opts*/) {\n\tvar o = [XML_HEADER, writextag('comments', null, { 'xmlns': XMLNS_main[0] })];\n\n\tvar iauthor/*:Array<string>*/ = [];\n\to.push(\"<authors>\");\n\tdata.forEach(function(x) { x[1].forEach(function(w) { var a = escapexml(w.a);\n\t\tif(iauthor.indexOf(a) == -1) {\n\t\t\tiauthor.push(a);\n\t\t\to.push(\"<author>\" + a + \"</author>\");\n\t\t}\n\t\tif(w.T && w.ID && iauthor.indexOf(\"tc=\" + w.ID) == -1) {\n\t\t\tiauthor.push(\"tc=\" + w.ID);\n\t\t\to.push(\"<author>\" + \"tc=\" + w.ID + \"</author>\");\n\t\t}\n\t}); });\n\tif(iauthor.length == 0) { iauthor.push(\"SheetJ5\"); o.push(\"<author>SheetJ5</author>\"); }\n\to.push(\"</authors>\");\n\to.push(\"<commentList>\");\n\tdata.forEach(function(d) {\n\t\t/* 18.7.3 CT_Comment */\n\t\tvar lastauthor = 0, ts = [], tcnt = 0;\n\t\tif(d[1][0] && d[1][0].T && d[1][0].ID) lastauthor = iauthor.indexOf(\"tc=\" + d[1][0].ID);\n\t\td[1].forEach(function(c) {\n\t\t\tif(c.a) lastauthor = iauthor.indexOf(escapexml(c.a));\n\t\t\tif(c.T) ++tcnt;\n\t\t\tts.push(c.t == null ? \"\" : escapexml(c.t));\n\t\t});\n\t\tif(tcnt === 0) {\n\t\t\td[1].forEach(function(c) {\n\t\t\t\to.push('<comment ref=\"' + d[0] + '\" authorId=\"' + iauthor.indexOf(escapexml(c.a)) + '\"><text>');\n\t\t\t\to.push(writetag(\"t\", c.t == null ? \"\" : escapexml(c.t)));\n\t\t\t\to.push('</text></comment>');\n\t\t\t});\n\t\t} else {\n\t\t\t/* based on Threaded Comments -> Comments projection */\n\t\t\to.push('<comment ref=\"' + d[0] + '\" authorId=\"' + lastauthor + '\"><text>');\n\t\t\tvar t = \"Comment:\\n    \" + (ts[0]) + \"\\n\";\n\t\t\tfor(var i = 1; i < ts.length; ++i) t += \"Reply:\\n    \" + ts[i] + \"\\n\";\n\t\t\to.push(writetag(\"t\", escapexml(t)));\n\t\t\to.push('</text></comment>');\n\t\t}\n\t});\n\to.push(\"</commentList>\");\n\tif(o.length>2) { o[o.length] = ('</comments>'); o[1]=o[1].replace(\"/>\",\">\"); }\n\treturn o.join(\"\");\n}\n\n/* [MS-XLSX] 2.1.17 */\nfunction parse_tcmnt_xml(data/*:string*/, opts)/*:Array<RawComment>*/ {\n\tvar out = [];\n\tvar pass = false, comment = {}, tidx = 0;\n\tdata.replace(tagregex, function xml_tcmnt(x, idx) {\n\t\tvar y/*:any*/ = parsexmltag(x);\n\t\tswitch(strip_ns(y[0])) {\n\t\t\tcase '<?xml': break;\n\n\t\t\t/* 2.6.207 ThreadedComments CT_ThreadedComments */\n\t\t\tcase '<ThreadedComments': break;\n\t\t\tcase '</ThreadedComments>': break;\n\n\t\t\t/* 2.6.205 threadedComment CT_ThreadedComment */\n\t\t\tcase '<threadedComment': comment = {author: y.personId, guid: y.id, ref: y.ref, T: 1}; break;\n\t\t\tcase '</threadedComment>': if(comment.t != null) out.push(comment); break;\n\n\t\t\tcase '<text>': case '<text': tidx = idx + x.length; break;\n\t\t\tcase '</text>': comment.t = data.slice(tidx, idx).replace(/\\r\\n/g, \"\\n\").replace(/\\r/g, \"\\n\"); break;\n\n\t\t\t/* 2.6.206 mentions CT_ThreadedCommentMentions TODO */\n\t\t\tcase '<mentions': case '<mentions>': pass = true; break;\n\t\t\tcase '</mentions>': pass = false; break;\n\n\t\t\t/* 2.6.202 mention CT_Mention TODO */\n\n\t\t\t/* 18.2.10 extLst CT_ExtensionList ? */\n\t\t\tcase '<extLst': case '<extLst>': case '</extLst>': case '<extLst/>': break;\n\t\t\t/* 18.2.7  ext CT_Extension + */\n\t\t\tcase '<ext': pass=true; break;\n\t\t\tcase '</ext>': pass=false; break;\n\n\t\t\tdefault: if(!pass && opts.WTF) throw new Error('unrecognized ' + y[0] + ' in threaded comments');\n\t\t}\n\t\treturn x;\n\t});\n\treturn out;\n}\n\nfunction write_tcmnt_xml(comments, people, opts) {\n\tvar o = [XML_HEADER, writextag('ThreadedComments', null, { 'xmlns': XMLNS.TCMNT }).replace(/[\\/]>/, \">\")];\n\tcomments.forEach(function(carr) {\n\t\tvar rootid = \"\";\n\t\t(carr[1] || []).forEach(function(c, idx) {\n\t\t\tif(!c.T) { delete c.ID; return; }\n\t\t\tif(c.a && people.indexOf(c.a) == -1) people.push(c.a);\n\t\t\tvar tcopts = {\n\t\t\t\tref: carr[0],\n\t\t\t\tid: \"{54EE7951-7262-4200-6969-\" + (\"000000000000\" + opts.tcid++).slice(-12) + \"}\"\n\t\t\t};\n\t\t\tif(idx == 0) rootid = tcopts.id;\n\t\t\telse tcopts.parentId = rootid;\n\t\t\tc.ID = tcopts.id;\n\t\t\tif(c.a) tcopts.personId = \"{54EE7950-7262-4200-6969-\" + (\"000000000000\" + people.indexOf(c.a)).slice(-12) + \"}\";\n\t\t\to.push(writextag('threadedComment', writetag('text', c.t||\"\"), tcopts));\n\t\t});\n\t});\n\to.push('</ThreadedComments>');\n\treturn o.join(\"\");\n}\n\n/* [MS-XLSX] 2.1.18 */\nfunction parse_people_xml(data/*:string*/, opts) {\n\tvar out = [];\n\tvar pass = false;\n\tdata.replace(tagregex, function xml_tcmnt(x) {\n\t\tvar y/*:any*/ = parsexmltag(x);\n\t\tswitch(strip_ns(y[0])) {\n\t\t\tcase '<?xml': break;\n\n\t\t\t/* 2.4.85 personList CT_PersonList */\n\t\t\tcase '<personList': break;\n\t\t\tcase '</personList>': break;\n\n\t\t\t/* 2.6.203 person CT_Person TODO: providers */\n\t\t\tcase '<person': out.push({name: y.displayname, id: y.id }); break;\n\t\t\tcase '</person>': break;\n\n\t\t\t/* 18.2.10 extLst CT_ExtensionList ? */\n\t\t\tcase '<extLst': case '<extLst>': case '</extLst>': case '<extLst/>': break;\n\t\t\t/* 18.2.7  ext CT_Extension + */\n\t\t\tcase '<ext': pass=true; break;\n\t\t\tcase '</ext>': pass=false; break;\n\n\t\t\tdefault: if(!pass && opts.WTF) throw new Error('unrecognized ' + y[0] + ' in threaded comments');\n\t\t}\n\t\treturn x;\n\t});\n\treturn out;\n}\nfunction write_people_xml(people/*, opts*/) {\n\tvar o = [XML_HEADER, writextag('personList', null, {\n\t\t'xmlns': XMLNS.TCMNT,\n\t\t'xmlns:x': XMLNS_main[0]\n\t}).replace(/[\\/]>/, \">\")];\n\tpeople.forEach(function(person, idx) {\n\t\to.push(writextag('person', null, {\n\t\t\tdisplayName: person,\n\t\t\tid: \"{54EE7950-7262-4200-6969-\" + (\"000000000000\" + idx).slice(-12) + \"}\",\n\t\t\tuserId: person,\n\t\t\tproviderId: \"None\"\n\t\t}));\n\t});\n\to.push(\"</personList>\");\n\treturn o.join(\"\");\n}\n/* [MS-XLSB] 2.4.28 BrtBeginComment */\nfunction parse_BrtBeginComment(data) {\n\tvar out = {};\n\tout.iauthor = data.read_shift(4);\n\tvar rfx = parse_UncheckedRfX(data, 16);\n\tout.rfx = rfx.s;\n\tout.ref = encode_cell(rfx.s);\n\tdata.l += 16; /*var guid = parse_GUID(data); */\n\treturn out;\n}\nfunction write_BrtBeginComment(data, o) {\n\tif(o == null) o = new_buf(36);\n\to.write_shift(4, data[1].iauthor);\n\twrite_UncheckedRfX((data[0]/*:any*/), o);\n\to.write_shift(4, 0);\n\to.write_shift(4, 0);\n\to.write_shift(4, 0);\n\to.write_shift(4, 0);\n\treturn o;\n}\n\n/* [MS-XLSB] 2.4.327 BrtCommentAuthor */\nvar parse_BrtCommentAuthor = parse_XLWideString;\nfunction write_BrtCommentAuthor(data) { return write_XLWideString(data.slice(0, 54)); }\n\n/* [MS-XLSB] 2.1.7.8 Comments */\nfunction parse_comments_bin(data, opts)/*:Array<RawComment>*/ {\n\tvar out/*:Array<RawComment>*/ = [];\n\tvar authors/*:Array<string>*/ = [];\n\tvar c = {};\n\tvar pass = false;\n\trecordhopper(data, function hopper_cmnt(val, R, RT) {\n\t\tswitch(RT) {\n\t\t\tcase 0x0278: /* 'BrtCommentAuthor' */\n\t\t\t\tauthors.push(val); break;\n\t\t\tcase 0x027B: /* 'BrtBeginComment' */\n\t\t\t\tc = val; break;\n\t\t\tcase 0x027D: /* 'BrtCommentText' */\n\t\t\t\tc.t = val.t; c.h = val.h; c.r = val.r; break;\n\t\t\tcase 0x027C: /* 'BrtEndComment' */\n\t\t\t\tc.author = authors[c.iauthor];\n\t\t\t\tdelete (c/*:any*/).iauthor;\n\t\t\t\tif(opts.sheetRows && c.rfx && opts.sheetRows <= c.rfx.r) break;\n\t\t\t\tif(!c.t) c.t = \"\";\n\t\t\t\tdelete c.rfx; out.push(c); break;\n\n\t\t\tcase 0x0C00: /* 'BrtUid' */\n\t\t\t\tbreak;\n\n\t\t\tcase 0x0023: /* 'BrtFRTBegin' */\n\t\t\t\tpass = true; break;\n\t\t\tcase 0x0024: /* 'BrtFRTEnd' */\n\t\t\t\tpass = false; break;\n\t\t\tcase 0x0025: /* 'BrtACBegin' */ break;\n\t\t\tcase 0x0026: /* 'BrtACEnd' */ break;\n\n\n\t\t\tdefault:\n\t\t\t\tif(R.T){/* empty */}\n\t\t\t\telse if(!pass || opts.WTF) throw new Error(\"Unexpected record 0x\" + RT.toString(16));\n\t\t}\n\t});\n\treturn out;\n}\n\nfunction write_comments_bin(data/*::, opts*/) {\n\tvar ba = buf_array();\n\tvar iauthor/*:Array<string>*/ = [];\n\twrite_record(ba, 0x0274 /* BrtBeginComments */);\n\n\twrite_record(ba, 0x0276 /* BrtBeginCommentAuthors */);\n\tdata.forEach(function(comment) {\n\t\tcomment[1].forEach(function(c) {\n\t\t\tif(iauthor.indexOf(c.a) > -1) return;\n\t\t\tiauthor.push(c.a.slice(0,54));\n\t\t\twrite_record(ba, 0x0278 /* BrtCommentAuthor */, write_BrtCommentAuthor(c.a));\n\t\t});\n\t});\n\twrite_record(ba, 0x0277 /* BrtEndCommentAuthors */);\n\n\twrite_record(ba, 0x0279 /* BrtBeginCommentList */);\n\tdata.forEach(function(comment) {\n\t\tcomment[1].forEach(function(c) {\n\t\t\tc.iauthor = iauthor.indexOf(c.a);\n\t\t\tvar range = {s:decode_cell(comment[0]),e:decode_cell(comment[0])};\n\t\t\twrite_record(ba, 0x027B /* BrtBeginComment */, write_BrtBeginComment([range, c]));\n\t\t\tif(c.t && c.t.length > 0) write_record(ba, 0x027D /* BrtCommentText */, write_BrtCommentText(c));\n\t\t\twrite_record(ba, 0x027C /* BrtEndComment */);\n\t\t\tdelete c.iauthor;\n\t\t});\n\t});\n\twrite_record(ba, 0x027A /* BrtEndCommentList */);\n\n\twrite_record(ba, 0x0275 /* BrtEndComments */);\n\treturn ba.end();\n}\nvar CT_VBA = \"application/vnd.ms-office.vbaProject\";\nfunction make_vba_xls(cfb) {\n  var newcfb = CFB.utils.cfb_new({ root: \"R\" });\n  cfb.FullPaths.forEach(function(p, i) {\n    if (p.slice(-1) === \"/\" || !p.match(/_VBA_PROJECT_CUR/))\n      return;\n    var newpath = p.replace(/^[^\\/]*/, \"R\").replace(/\\/_VBA_PROJECT_CUR\\u0000*/, \"\");\n    CFB.utils.cfb_add(newcfb, newpath, cfb.FileIndex[i].content);\n  });\n  return CFB.write(newcfb);\n}\nfunction fill_vba_xls(cfb, vba) {\n  vba.FullPaths.forEach(function(p, i) {\n    if (i == 0)\n      return;\n    var newpath = p.replace(/[^\\/]*[\\/]/, \"/_VBA_PROJECT_CUR/\");\n    if (newpath.slice(-1) !== \"/\")\n      CFB.utils.cfb_add(cfb, newpath, vba.FileIndex[i].content);\n  });\n}\nvar VBAFMTS = [\"xlsb\", \"xlsm\", \"xlam\", \"biff8\", \"xla\"];\n/* macro and dialog sheet stubs */\nfunction parse_ds_bin(/*::data:any, opts, idx:number, rels, wb, themes, styles*/)/*:Worksheet*/ { return {'!type':'dialog'}; }\nfunction parse_ds_xml(/*::data:any, opts, idx:number, rels, wb, themes, styles*/)/*:Worksheet*/ { return {'!type':'dialog'}; }\nfunction parse_ms_bin(/*::data:any, opts, idx:number, rels, wb, themes, styles*/)/*:Worksheet*/ { return {'!type':'macro'}; }\nfunction parse_ms_xml(/*::data:any, opts, idx:number, rels, wb, themes, styles*/)/*:Worksheet*/ { return {'!type':'macro'}; }\n/* TODO: it will be useful to parse the function str */\nvar rc_to_a1 = /*#__PURE__*/(function(){\n\tvar rcregex = /(^|[^A-Za-z_])R(\\[?-?\\d+\\]|[1-9]\\d*|)C(\\[?-?\\d+\\]|[1-9]\\d*|)(?![A-Za-z0-9_])/g;\n\tvar rcbase/*:Cell*/ = ({r:0,c:0}/*:any*/);\n\tfunction rcfunc($$,$1,$2,$3) {\n\t\tvar cRel = false, rRel = false;\n\n\t\tif($2.length == 0) rRel = true;\n\t\telse if($2.charAt(0) == \"[\") { rRel = true; $2 = $2.slice(1, -1); }\n\n\t\tif($3.length == 0) cRel = true;\n\t\telse if($3.charAt(0) == \"[\") { cRel = true; $3 = $3.slice(1, -1); }\n\n\t\tvar R = $2.length>0?parseInt($2,10)|0:0, C = $3.length>0?parseInt($3,10)|0:0;\n\n\t\tif(cRel) C += rcbase.c; else --C;\n\t\tif(rRel) R += rcbase.r; else --R;\n\t\treturn $1 + (cRel ? \"\" : \"$\") + encode_col(C) + (rRel ? \"\" : \"$\") + encode_row(R);\n\t}\n\treturn function rc_to_a1(fstr/*:string*/, base/*:Cell*/)/*:string*/ {\n\t\trcbase = base;\n\t\treturn fstr.replace(rcregex, rcfunc);\n\t};\n})();\n\nvar crefregex = /(^|[^._A-Z0-9])([$]?)([A-Z]{1,2}|[A-W][A-Z]{2}|X[A-E][A-Z]|XF[A-D])([$]?)(10[0-3]\\d{4}|104[0-7]\\d{3}|1048[0-4]\\d{2}|10485[0-6]\\d|104857[0-6]|[1-9]\\d{0,5})(?![_.\\(A-Za-z0-9])/g;\nvar a1_to_rc = /*#__PURE__*/(function(){\n\treturn function a1_to_rc(fstr/*:string*/, base/*:CellAddress*/) {\n\t\treturn fstr.replace(crefregex, function($0, $1, $2, $3, $4, $5) {\n\t\t\tvar c = decode_col($3) - ($2 ? 0 : base.c);\n\t\t\tvar r = decode_row($5) - ($4 ? 0 : base.r);\n\t\t\tvar R = $4 == \"$\" ? (r+1) : (r == 0 ? \"\" : \"[\" + r + \"]\");\n\t\t\tvar C = $2 == \"$\" ? (c+1) : (c == 0 ? \"\" : \"[\" + c + \"]\");\n\t\t\treturn $1 + \"R\" + R + \"C\" + C;\n\t\t});\n\t};\n})();\n\n/* no defined name can collide with a valid cell address A1:XFD1048576 ... except LOG10! */\nfunction shift_formula_str(f/*:string*/, delta/*:Cell*/)/*:string*/ {\n\treturn f.replace(crefregex, function($0, $1, $2, $3, $4, $5) {\n\t\treturn $1+($2==\"$\" ? $2+$3 : encode_col(decode_col($3)+delta.c))+($4==\"$\" ? $4+$5 : encode_row(decode_row($5) + delta.r));\n\t});\n}\n\nfunction shift_formula_xlsx(f/*:string*/, range/*:string*/, cell/*:string*/)/*:string*/ {\n\tvar r = decode_range(range), s = r.s, c = decode_cell(cell);\n\tvar delta = {r:c.r - s.r, c:c.c - s.c};\n\treturn shift_formula_str(f, delta);\n}\n\n/* TODO: parse formula */\nfunction fuzzyfmla(f/*:string*/)/*:boolean*/ {\n\tif(f.length == 1) return false;\n\treturn true;\n}\n\nfunction _xlfn(f/*:string*/)/*:string*/ {\n\treturn f.replace(/_xlfn\\./g,\"\");\n}\nfunction parseread1(blob) { blob.l+=1; return; }\n\n/* [MS-XLS] 2.5.51 */\nfunction parse_ColRelU(blob, length) {\n\tvar c = blob.read_shift(length == 1 ? 1 : 2);\n\treturn [c & 0x3FFF, (c >> 14) & 1, (c >> 15) & 1];\n}\n\n/* [MS-XLS] 2.5.198.105 ; [MS-XLSB] 2.5.97.89 */\nfunction parse_RgceArea(blob, length, opts) {\n\tvar w = 2;\n\tif(opts) {\n\t\tif(opts.biff >= 2 && opts.biff <= 5) return parse_RgceArea_BIFF2(blob, length, opts);\n\t\telse if(opts.biff == 12) w = 4;\n\t}\n\tvar r=blob.read_shift(w), R=blob.read_shift(w);\n\tvar c=parse_ColRelU(blob, 2);\n\tvar C=parse_ColRelU(blob, 2);\n\treturn { s:{r:r, c:c[0], cRel:c[1], rRel:c[2]}, e:{r:R, c:C[0], cRel:C[1], rRel:C[2]} };\n}\n/* BIFF 2-5 encodes flags in the row field */\nfunction parse_RgceArea_BIFF2(blob/*::, length, opts*/) {\n\tvar r=parse_ColRelU(blob, 2), R=parse_ColRelU(blob, 2);\n\tvar c=blob.read_shift(1);\n\tvar C=blob.read_shift(1);\n\treturn { s:{r:r[0], c:c, cRel:r[1], rRel:r[2]}, e:{r:R[0], c:C, cRel:R[1], rRel:R[2]} };\n}\n\n/* [MS-XLS] 2.5.198.105 ; [MS-XLSB] 2.5.97.90 */\nfunction parse_RgceAreaRel(blob, length, opts) {\n\tif(opts.biff < 8) return parse_RgceArea_BIFF2(blob, length, opts);\n\tvar r=blob.read_shift(opts.biff == 12 ? 4 : 2), R=blob.read_shift(opts.biff == 12 ? 4 : 2);\n\tvar c=parse_ColRelU(blob, 2);\n\tvar C=parse_ColRelU(blob, 2);\n\treturn { s:{r:r, c:c[0], cRel:c[1], rRel:c[2]}, e:{r:R, c:C[0], cRel:C[1], rRel:C[2]} };\n}\n\n/* [MS-XLS] 2.5.198.109 ; [MS-XLSB] 2.5.97.91 */\nfunction parse_RgceLoc(blob, length, opts) {\n\tif(opts && opts.biff >= 2 && opts.biff <= 5) return parse_RgceLoc_BIFF2(blob, length, opts);\n\tvar r = blob.read_shift(opts && opts.biff == 12 ? 4 : 2);\n\tvar c = parse_ColRelU(blob, 2);\n\treturn {r:r, c:c[0], cRel:c[1], rRel:c[2]};\n}\nfunction parse_RgceLoc_BIFF2(blob/*::, length, opts*/) {\n\tvar r = parse_ColRelU(blob, 2);\n\tvar c = blob.read_shift(1);\n\treturn {r:r[0], c:c, cRel:r[1], rRel:r[2]};\n}\n\n/* [MS-XLS] 2.5.198.107, 2.5.47 */\nfunction parse_RgceElfLoc(blob/*::, length, opts*/) {\n\tvar r = blob.read_shift(2);\n\tvar c = blob.read_shift(2);\n\treturn {r:r, c:c & 0xFF, fQuoted:!!(c & 0x4000), cRel:c>>15, rRel:c>>15 };\n}\n\n/* [MS-XLS] 2.5.198.111 ; [MS-XLSB] 2.5.97.92 TODO */\nfunction parse_RgceLocRel(blob, length, opts) {\n\tvar biff = opts && opts.biff ? opts.biff : 8;\n\tif(biff >= 2 && biff <= 5) return parse_RgceLocRel_BIFF2(blob, length, opts);\n\tvar r = blob.read_shift(biff >= 12 ? 4 : 2);\n\tvar cl = blob.read_shift(2);\n\tvar cRel = (cl & 0x4000) >> 14, rRel = (cl & 0x8000) >> 15;\n\tcl &= 0x3FFF;\n\tif(rRel == 1) while(r > 0x7FFFF) r -= 0x100000;\n\tif(cRel == 1) while(cl > 0x1FFF) cl = cl - 0x4000;\n\treturn {r:r,c:cl,cRel:cRel,rRel:rRel};\n}\nfunction parse_RgceLocRel_BIFF2(blob/*::, length:number, opts*/) {\n\tvar rl = blob.read_shift(2);\n\tvar c = blob.read_shift(1);\n\tvar rRel = (rl & 0x8000) >> 15, cRel = (rl & 0x4000) >> 14;\n\trl &= 0x3FFF;\n\tif(rRel == 1 && rl >= 0x2000) rl = rl - 0x4000;\n\tif(cRel == 1 && c >= 0x80) c = c - 0x100;\n\treturn {r:rl,c:c,cRel:cRel,rRel:rRel};\n}\n\n/* [MS-XLS] 2.5.198.27 ; [MS-XLSB] 2.5.97.18 */\nfunction parse_PtgArea(blob, length, opts) {\n\tvar type = (blob[blob.l++] & 0x60) >> 5;\n\tvar area = parse_RgceArea(blob, opts.biff >= 2 && opts.biff <= 5 ? 6 : 8, opts);\n\treturn [type, area];\n}\n\n/* [MS-XLS] 2.5.198.28 ; [MS-XLSB] 2.5.97.19 */\nfunction parse_PtgArea3d(blob, length, opts) {\n\tvar type = (blob[blob.l++] & 0x60) >> 5;\n\tvar ixti = blob.read_shift(2, 'i');\n\tvar w = 8;\n\tif(opts) switch(opts.biff) {\n\t\tcase 5: blob.l += 12; w = 6; break;\n\t\tcase 12: w = 12; break;\n\t}\n\tvar area = parse_RgceArea(blob, w, opts);\n\treturn [type, ixti, area];\n}\n\n/* [MS-XLS] 2.5.198.29 ; [MS-XLSB] 2.5.97.20 */\nfunction parse_PtgAreaErr(blob, length, opts) {\n\tvar type = (blob[blob.l++] & 0x60) >> 5;\n\tblob.l += opts && (opts.biff > 8) ? 12 : (opts.biff < 8 ? 6 : 8);\n\treturn [type];\n}\n/* [MS-XLS] 2.5.198.30 ; [MS-XLSB] 2.5.97.21 */\nfunction parse_PtgAreaErr3d(blob, length, opts) {\n\tvar type = (blob[blob.l++] & 0x60) >> 5;\n\tvar ixti = blob.read_shift(2);\n\tvar w = 8;\n\tif(opts) switch(opts.biff) {\n\t\tcase 5: blob.l += 12; w = 6; break;\n\t\tcase 12: w = 12; break;\n\t}\n\tblob.l += w;\n\treturn [type, ixti];\n}\n\n/* [MS-XLS] 2.5.198.31 ; [MS-XLSB] 2.5.97.22 */\nfunction parse_PtgAreaN(blob, length, opts) {\n\tvar type = (blob[blob.l++] & 0x60) >> 5;\n\tvar area = parse_RgceAreaRel(blob, length - 1, opts);\n\treturn [type, area];\n}\n\n/* [MS-XLS] 2.5.198.32 ; [MS-XLSB] 2.5.97.23 */\nfunction parse_PtgArray(blob, length, opts) {\n\tvar type = (blob[blob.l++] & 0x60) >> 5;\n\tblob.l += opts.biff == 2 ? 6 : opts.biff == 12 ? 14 : 7;\n\treturn [type];\n}\n\n/* [MS-XLS] 2.5.198.33 ; [MS-XLSB] 2.5.97.24 */\nfunction parse_PtgAttrBaxcel(blob) {\n\tvar bitSemi = blob[blob.l+1] & 0x01; /* 1 = volatile */\n\tvar bitBaxcel = 1;\n\tblob.l += 4;\n\treturn [bitSemi, bitBaxcel];\n}\n\n/* [MS-XLS] 2.5.198.34 ; [MS-XLSB] 2.5.97.25 */\nfunction parse_PtgAttrChoose(blob, length, opts)/*:Array<number>*/ {\n\tblob.l +=2;\n\tvar offset = blob.read_shift(opts && opts.biff == 2 ? 1 : 2);\n\tvar o/*:Array<number>*/ = [];\n\t/* offset is 1 less than the number of elements */\n\tfor(var i = 0; i <= offset; ++i) o.push(blob.read_shift(opts && opts.biff == 2 ? 1 : 2));\n\treturn o;\n}\n\n/* [MS-XLS] 2.5.198.35 ; [MS-XLSB] 2.5.97.26 */\nfunction parse_PtgAttrGoto(blob, length, opts) {\n\tvar bitGoto = (blob[blob.l+1] & 0xFF) ? 1 : 0;\n\tblob.l += 2;\n\treturn [bitGoto, blob.read_shift(opts && opts.biff == 2 ? 1 : 2)];\n}\n\n/* [MS-XLS] 2.5.198.36 ; [MS-XLSB] 2.5.97.27 */\nfunction parse_PtgAttrIf(blob, length, opts) {\n\tvar bitIf = (blob[blob.l+1] & 0xFF) ? 1 : 0;\n\tblob.l += 2;\n\treturn [bitIf, blob.read_shift(opts && opts.biff == 2 ? 1 : 2)];\n}\n\n/* [MS-XLSB] 2.5.97.28 */\nfunction parse_PtgAttrIfError(blob) {\n\tvar bitIf = (blob[blob.l+1] & 0xFF) ? 1 : 0;\n\tblob.l += 2;\n\treturn [bitIf, blob.read_shift(2)];\n}\n\n/* [MS-XLS] 2.5.198.37 ; [MS-XLSB] 2.5.97.29 */\nfunction parse_PtgAttrSemi(blob, length, opts) {\n\tvar bitSemi = (blob[blob.l+1] & 0xFF) ? 1 : 0;\n\tblob.l += opts && opts.biff == 2 ? 3 : 4;\n\treturn [bitSemi];\n}\n\n/* [MS-XLS] 2.5.198.40 ; [MS-XLSB] 2.5.97.32 */\nfunction parse_PtgAttrSpaceType(blob/*::, length*/) {\n\tvar type = blob.read_shift(1), cch = blob.read_shift(1);\n\treturn [type, cch];\n}\n\n/* [MS-XLS] 2.5.198.38 ; [MS-XLSB] 2.5.97.30 */\nfunction parse_PtgAttrSpace(blob) {\n\tblob.read_shift(2);\n\treturn parse_PtgAttrSpaceType(blob, 2);\n}\n\n/* [MS-XLS] 2.5.198.39 ; [MS-XLSB] 2.5.97.31 */\nfunction parse_PtgAttrSpaceSemi(blob) {\n\tblob.read_shift(2);\n\treturn parse_PtgAttrSpaceType(blob, 2);\n}\n\n/* [MS-XLS] 2.5.198.84 ; [MS-XLSB] 2.5.97.68 TODO */\nfunction parse_PtgRef(blob, length, opts) {\n\t//var ptg = blob[blob.l] & 0x1F;\n\tvar type = (blob[blob.l] & 0x60)>>5;\n\tblob.l += 1;\n\tvar loc = parse_RgceLoc(blob, 0, opts);\n\treturn [type, loc];\n}\n\n/* [MS-XLS] 2.5.198.88 ; [MS-XLSB] 2.5.97.72 TODO */\nfunction parse_PtgRefN(blob, length, opts) {\n\tvar type = (blob[blob.l] & 0x60)>>5;\n\tblob.l += 1;\n\tvar loc = parse_RgceLocRel(blob, 0, opts);\n\treturn [type, loc];\n}\n\n/* [MS-XLS] 2.5.198.85 ; [MS-XLSB] 2.5.97.69 TODO */\nfunction parse_PtgRef3d(blob, length, opts) {\n\tvar type = (blob[blob.l] & 0x60)>>5;\n\tblob.l += 1;\n\tvar ixti = blob.read_shift(2); // XtiIndex\n\tif(opts && opts.biff == 5) blob.l += 12;\n\tvar loc = parse_RgceLoc(blob, 0, opts); // TODO: or RgceLocRel\n\treturn [type, ixti, loc];\n}\n\n\n/* [MS-XLS] 2.5.198.62 ; [MS-XLSB] 2.5.97.45 TODO */\nfunction parse_PtgFunc(blob, length, opts) {\n\t//var ptg = blob[blob.l] & 0x1F;\n\tvar type = (blob[blob.l] & 0x60)>>5;\n\tblob.l += 1;\n\tvar iftab = blob.read_shift(opts && opts.biff <= 3 ? 1 : 2);\n\treturn [FtabArgc[iftab], Ftab[iftab], type];\n}\n/* [MS-XLS] 2.5.198.63 ; [MS-XLSB] 2.5.97.46 TODO */\nfunction parse_PtgFuncVar(blob, length, opts) {\n\tvar type = blob[blob.l++];\n\tvar cparams = blob.read_shift(1), tab = opts && opts.biff <= 3 ? [(type == 0x58 ? -1 : 0), blob.read_shift(1)]: parsetab(blob);\n\treturn [cparams, (tab[0] === 0 ? Ftab : Cetab)[tab[1]]];\n}\n\nfunction parsetab(blob) {\n\treturn [blob[blob.l+1]>>7, blob.read_shift(2) & 0x7FFF];\n}\n\n/* [MS-XLS] 2.5.198.41 ; [MS-XLSB] 2.5.97.33 */\nfunction parse_PtgAttrSum(blob, length, opts) {\n\tblob.l += opts && opts.biff == 2 ? 3 : 4; return;\n}\n\n/* [MS-XLS] 2.5.198.58 ; [MS-XLSB] 2.5.97.40 */\nfunction parse_PtgExp(blob, length, opts) {\n\tblob.l++;\n\tif(opts && opts.biff == 12) return [blob.read_shift(4, 'i'), 0];\n\tvar row = blob.read_shift(2);\n\tvar col = blob.read_shift(opts && opts.biff == 2 ? 1 : 2);\n\treturn [row, col];\n}\n\n/* [MS-XLS] 2.5.198.57 ; [MS-XLSB] 2.5.97.39 */\nfunction parse_PtgErr(blob) { blob.l++; return BErr[blob.read_shift(1)]; }\n\n/* [MS-XLS] 2.5.198.66 ; [MS-XLSB] 2.5.97.49 */\nfunction parse_PtgInt(blob) { blob.l++; return blob.read_shift(2); }\n\n/* [MS-XLS] 2.5.198.42 ; [MS-XLSB] 2.5.97.34 */\nfunction parse_PtgBool(blob) { blob.l++; return blob.read_shift(1)!==0;}\n\n/* [MS-XLS] 2.5.198.79 ; [MS-XLSB] 2.5.97.63 */\nfunction parse_PtgNum(blob) { blob.l++; return parse_Xnum(blob, 8); }\n\n/* [MS-XLS] 2.5.198.89 ; [MS-XLSB] 2.5.97.74 */\nfunction parse_PtgStr(blob, length, opts) { blob.l++; return parse_ShortXLUnicodeString(blob, length-1, opts); }\n\n/* [MS-XLS] 2.5.192.112 + 2.5.192.11{3,4,5,6,7} */\n/* [MS-XLSB] 2.5.97.93 + 2.5.97.9{4,5,6,7} */\nfunction parse_SerAr(blob, biff/*:number*/) {\n\tvar val = [blob.read_shift(1)];\n\tif(biff == 12) switch(val[0]) {\n\t\tcase 0x02: val[0] = 0x04; break; /* SerBool */\n\t\tcase 0x04: val[0] = 0x10; break; /* SerErr */\n\t\tcase 0x00: val[0] = 0x01; break; /* SerNum */\n\t\tcase 0x01: val[0] = 0x02; break; /* SerStr */\n\t}\n\tswitch(val[0]) {\n\t\tcase 0x04: /* SerBool -- boolean */\n\t\t\tval[1] = parsebool(blob, 1) ? 'TRUE' : 'FALSE';\n\t\t\tif(biff != 12) blob.l += 7; break;\n\t\tcase 0x25: /* appears to be an alias */\n\t\tcase 0x10: /* SerErr -- error */\n\t\t\tval[1] = BErr[blob[blob.l]];\n\t\t\tblob.l += ((biff == 12) ? 4 : 8); break;\n\t\tcase 0x00: /* SerNil -- honestly, I'm not sure how to reproduce this */\n\t\t\tblob.l += 8; break;\n\t\tcase 0x01: /* SerNum -- Xnum */\n\t\t\tval[1] = parse_Xnum(blob, 8); break;\n\t\tcase 0x02: /* SerStr -- XLUnicodeString (<256 chars) */\n\t\t\tval[1] = parse_XLUnicodeString2(blob, 0, {biff:biff > 0 && biff < 8 ? 2 : biff}); break;\n\t\tdefault: throw new Error(\"Bad SerAr: \" + val[0]); /* Unreachable */\n\t}\n\treturn val;\n}\n\n/* [MS-XLS] 2.5.198.61 ; [MS-XLSB] 2.5.97.44 */\nfunction parse_PtgExtraMem(blob, cce, opts) {\n\tvar count = blob.read_shift((opts.biff == 12) ? 4 : 2);\n\tvar out/*:Array<Range>*/ = [];\n\tfor(var i = 0; i != count; ++i) out.push(((opts.biff == 12) ? parse_UncheckedRfX : parse_Ref8U)(blob, 8));\n\treturn out;\n}\n\n/* [MS-XLS] 2.5.198.59 ; [MS-XLSB] 2.5.97.41 */\nfunction parse_PtgExtraArray(blob, length, opts) {\n\tvar rows = 0, cols = 0;\n\tif(opts.biff == 12) {\n\t\trows = blob.read_shift(4); // DRw\n\t\tcols = blob.read_shift(4); // DCol\n\t} else {\n\t\tcols = 1 + blob.read_shift(1); //DColByteU\n\t\trows = 1 + blob.read_shift(2); //DRw\n\t}\n\tif(opts.biff >= 2 && opts.biff < 8) { --rows; if(--cols == 0) cols = 0x100; }\n\t// $FlowIgnore\n\tfor(var i = 0, o/*:Array<Array<any>>*/ = []; i != rows && (o[i] = []); ++i)\n\t\tfor(var j = 0; j != cols; ++j) o[i][j] = parse_SerAr(blob, opts.biff);\n\treturn o;\n}\n\n/* [MS-XLS] 2.5.198.76 ; [MS-XLSB] 2.5.97.60 */\nfunction parse_PtgName(blob, length, opts) {\n\tvar type = (blob.read_shift(1) >>> 5) & 0x03;\n\tvar w = (!opts || (opts.biff >= 8)) ? 4 : 2;\n\tvar nameindex = blob.read_shift(w);\n\tswitch(opts.biff) {\n\t\tcase 2: blob.l += 5; break;\n\t\tcase 3: case 4: blob.l += 8; break;\n\t\tcase 5: blob.l += 12; break;\n\t}\n\treturn [type, 0, nameindex];\n}\n\n/* [MS-XLS] 2.5.198.77 ; [MS-XLSB] 2.5.97.61 */\nfunction parse_PtgNameX(blob, length, opts) {\n\tif(opts.biff == 5) return parse_PtgNameX_BIFF5(blob, length, opts);\n\tvar type = (blob.read_shift(1) >>> 5) & 0x03;\n\tvar ixti = blob.read_shift(2); // XtiIndex\n\tvar nameindex = blob.read_shift(4);\n\treturn [type, ixti, nameindex];\n}\nfunction parse_PtgNameX_BIFF5(blob/*::, length, opts*/) {\n\tvar type = (blob.read_shift(1) >>> 5) & 0x03;\n\tvar ixti = blob.read_shift(2, 'i'); // XtiIndex\n\tblob.l += 8;\n\tvar nameindex = blob.read_shift(2);\n\tblob.l += 12;\n\treturn [type, ixti, nameindex];\n}\n\n/* [MS-XLS] 2.5.198.70 ; [MS-XLSB] 2.5.97.54 */\nfunction parse_PtgMemArea(blob, length, opts) {\n\tvar type = (blob.read_shift(1) >>> 5) & 0x03;\n\tblob.l += (opts && opts.biff == 2 ? 3 : 4);\n\tvar cce = blob.read_shift(opts && opts.biff == 2 ? 1 : 2);\n\treturn [type, cce];\n}\n\n/* [MS-XLS] 2.5.198.72 ; [MS-XLSB] 2.5.97.56 */\nfunction parse_PtgMemFunc(blob, length, opts) {\n\tvar type = (blob.read_shift(1) >>> 5) & 0x03;\n\tvar cce = blob.read_shift(opts && opts.biff == 2 ? 1 : 2);\n\treturn [type, cce];\n}\n\n\n/* [MS-XLS] 2.5.198.86 ; [MS-XLSB] 2.5.97.69 */\nfunction parse_PtgRefErr(blob, length, opts) {\n\tvar type = (blob.read_shift(1) >>> 5) & 0x03;\n\tblob.l += 4;\n\tif(opts.biff < 8) blob.l--;\n\tif(opts.biff == 12) blob.l += 2;\n\treturn [type];\n}\n\n/* [MS-XLS] 2.5.198.87 ; [MS-XLSB] 2.5.97.71 */\nfunction parse_PtgRefErr3d(blob, length, opts) {\n\tvar type = (blob[blob.l++] & 0x60) >> 5;\n\tvar ixti = blob.read_shift(2);\n\tvar w = 4;\n\tif(opts) switch(opts.biff) {\n\t\tcase 5: w = 15; break;\n\t\tcase 12: w = 6; break;\n\t}\n\tblob.l += w;\n\treturn [type, ixti];\n}\n\n/* [MS-XLS] 2.5.198.71 ; [MS-XLSB] 2.5.97.55 */\nvar parse_PtgMemErr = parsenoop;\n/* [MS-XLS] 2.5.198.73  ; [MS-XLSB] 2.5.97.57 */\nvar parse_PtgMemNoMem = parsenoop;\n/* [MS-XLS] 2.5.198.92 */\nvar parse_PtgTbl = parsenoop;\n\nfunction parse_PtgElfLoc(blob, length, opts) {\n\tblob.l += 2;\n\treturn [parse_RgceElfLoc(blob, 4, opts)];\n}\nfunction parse_PtgElfNoop(blob/*::, length, opts*/) {\n\tblob.l += 6;\n\treturn [];\n}\n/* [MS-XLS] 2.5.198.46 */\nvar parse_PtgElfCol = parse_PtgElfLoc;\n/* [MS-XLS] 2.5.198.47 */\nvar parse_PtgElfColS = parse_PtgElfNoop;\n/* [MS-XLS] 2.5.198.48 */\nvar parse_PtgElfColSV = parse_PtgElfNoop;\n/* [MS-XLS] 2.5.198.49 */\nvar parse_PtgElfColV = parse_PtgElfLoc;\n/* [MS-XLS] 2.5.198.50 */\nfunction parse_PtgElfLel(blob/*::, length, opts*/) {\n\tblob.l += 2;\n\treturn [parseuint16(blob), blob.read_shift(2) & 0x01];\n}\n/* [MS-XLS] 2.5.198.51 */\nvar parse_PtgElfRadical = parse_PtgElfLoc;\n/* [MS-XLS] 2.5.198.52 */\nvar parse_PtgElfRadicalLel = parse_PtgElfLel;\n/* [MS-XLS] 2.5.198.53 */\nvar parse_PtgElfRadicalS = parse_PtgElfNoop;\n/* [MS-XLS] 2.5.198.54 */\nvar parse_PtgElfRw = parse_PtgElfLoc;\n/* [MS-XLS] 2.5.198.55 */\nvar parse_PtgElfRwV = parse_PtgElfLoc;\n\n/* [MS-XLSB] 2.5.97.52 TODO */\nvar PtgListRT = [\n\t\"Data\",\n\t\"All\",\n\t\"Headers\",\n\t\"??\",\n\t\"?Data2\",\n\t\"??\",\n\t\"?DataHeaders\",\n\t\"??\",\n\t\"Totals\",\n\t\"??\",\n\t\"??\",\n\t\"??\",\n\t\"?DataTotals\",\n\t\"??\",\n\t\"??\",\n\t\"??\",\n\t\"?Current\"\n];\nfunction parse_PtgList(blob/*::, length, opts*/) {\n\tblob.l += 2;\n\tvar ixti = blob.read_shift(2);\n\tvar flags = blob.read_shift(2);\n\tvar idx = blob.read_shift(4);\n\tvar c = blob.read_shift(2);\n\tvar C = blob.read_shift(2);\n\tvar rt = PtgListRT[(flags >> 2) & 0x1F];\n\treturn {ixti: ixti, coltype:(flags&0x3), rt:rt, idx:idx, c:c, C:C};\n}\n/* [MS-XLS] 2.5.198.91 ; [MS-XLSB] 2.5.97.76 */\nfunction parse_PtgSxName(blob/*::, length, opts*/) {\n\tblob.l += 2;\n\treturn [blob.read_shift(4)];\n}\n\n/* [XLS] old spec */\nfunction parse_PtgSheet(blob, length, opts) {\n\tblob.l += 5;\n\tblob.l += 2;\n\tblob.l += (opts.biff == 2 ? 1 : 4);\n\treturn [\"PTGSHEET\"];\n}\nfunction parse_PtgEndSheet(blob, length, opts) {\n\tblob.l += (opts.biff == 2 ? 4 : 5);\n\treturn [\"PTGENDSHEET\"];\n}\nfunction parse_PtgMemAreaN(blob/*::, length, opts*/) {\n\tvar type = (blob.read_shift(1) >>> 5) & 0x03;\n\tvar cce = blob.read_shift(2);\n\treturn [type, cce];\n}\nfunction parse_PtgMemNoMemN(blob/*::, length, opts*/) {\n\tvar type = (blob.read_shift(1) >>> 5) & 0x03;\n\tvar cce = blob.read_shift(2);\n\treturn [type, cce];\n}\nfunction parse_PtgAttrNoop(blob/*::, length, opts*/) {\n\tblob.l += 4;\n\treturn [0, 0];\n}\n\n/* [MS-XLS] 2.5.198.25 ; [MS-XLSB] 2.5.97.16 */\nvar PtgTypes = {\n\t/*::[*/0x01/*::]*/: { n:'PtgExp', f:parse_PtgExp },\n\t/*::[*/0x02/*::]*/: { n:'PtgTbl', f:parse_PtgTbl },\n\t/*::[*/0x03/*::]*/: { n:'PtgAdd', f:parseread1 },\n\t/*::[*/0x04/*::]*/: { n:'PtgSub', f:parseread1 },\n\t/*::[*/0x05/*::]*/: { n:'PtgMul', f:parseread1 },\n\t/*::[*/0x06/*::]*/: { n:'PtgDiv', f:parseread1 },\n\t/*::[*/0x07/*::]*/: { n:'PtgPower', f:parseread1 },\n\t/*::[*/0x08/*::]*/: { n:'PtgConcat', f:parseread1 },\n\t/*::[*/0x09/*::]*/: { n:'PtgLt', f:parseread1 },\n\t/*::[*/0x0A/*::]*/: { n:'PtgLe', f:parseread1 },\n\t/*::[*/0x0B/*::]*/: { n:'PtgEq', f:parseread1 },\n\t/*::[*/0x0C/*::]*/: { n:'PtgGe', f:parseread1 },\n\t/*::[*/0x0D/*::]*/: { n:'PtgGt', f:parseread1 },\n\t/*::[*/0x0E/*::]*/: { n:'PtgNe', f:parseread1 },\n\t/*::[*/0x0F/*::]*/: { n:'PtgIsect', f:parseread1 },\n\t/*::[*/0x10/*::]*/: { n:'PtgUnion', f:parseread1 },\n\t/*::[*/0x11/*::]*/: { n:'PtgRange', f:parseread1 },\n\t/*::[*/0x12/*::]*/: { n:'PtgUplus', f:parseread1 },\n\t/*::[*/0x13/*::]*/: { n:'PtgUminus', f:parseread1 },\n\t/*::[*/0x14/*::]*/: { n:'PtgPercent', f:parseread1 },\n\t/*::[*/0x15/*::]*/: { n:'PtgParen', f:parseread1 },\n\t/*::[*/0x16/*::]*/: { n:'PtgMissArg', f:parseread1 },\n\t/*::[*/0x17/*::]*/: { n:'PtgStr', f:parse_PtgStr },\n\t/*::[*/0x1A/*::]*/: { n:'PtgSheet', f:parse_PtgSheet },\n\t/*::[*/0x1B/*::]*/: { n:'PtgEndSheet', f:parse_PtgEndSheet },\n\t/*::[*/0x1C/*::]*/: { n:'PtgErr', f:parse_PtgErr },\n\t/*::[*/0x1D/*::]*/: { n:'PtgBool', f:parse_PtgBool },\n\t/*::[*/0x1E/*::]*/: { n:'PtgInt', f:parse_PtgInt },\n\t/*::[*/0x1F/*::]*/: { n:'PtgNum', f:parse_PtgNum },\n\t/*::[*/0x20/*::]*/: { n:'PtgArray', f:parse_PtgArray },\n\t/*::[*/0x21/*::]*/: { n:'PtgFunc', f:parse_PtgFunc },\n\t/*::[*/0x22/*::]*/: { n:'PtgFuncVar', f:parse_PtgFuncVar },\n\t/*::[*/0x23/*::]*/: { n:'PtgName', f:parse_PtgName },\n\t/*::[*/0x24/*::]*/: { n:'PtgRef', f:parse_PtgRef },\n\t/*::[*/0x25/*::]*/: { n:'PtgArea', f:parse_PtgArea },\n\t/*::[*/0x26/*::]*/: { n:'PtgMemArea', f:parse_PtgMemArea },\n\t/*::[*/0x27/*::]*/: { n:'PtgMemErr', f:parse_PtgMemErr },\n\t/*::[*/0x28/*::]*/: { n:'PtgMemNoMem', f:parse_PtgMemNoMem },\n\t/*::[*/0x29/*::]*/: { n:'PtgMemFunc', f:parse_PtgMemFunc },\n\t/*::[*/0x2A/*::]*/: { n:'PtgRefErr', f:parse_PtgRefErr },\n\t/*::[*/0x2B/*::]*/: { n:'PtgAreaErr', f:parse_PtgAreaErr },\n\t/*::[*/0x2C/*::]*/: { n:'PtgRefN', f:parse_PtgRefN },\n\t/*::[*/0x2D/*::]*/: { n:'PtgAreaN', f:parse_PtgAreaN },\n\t/*::[*/0x2E/*::]*/: { n:'PtgMemAreaN', f:parse_PtgMemAreaN },\n\t/*::[*/0x2F/*::]*/: { n:'PtgMemNoMemN', f:parse_PtgMemNoMemN },\n\t/*::[*/0x39/*::]*/: { n:'PtgNameX', f:parse_PtgNameX },\n\t/*::[*/0x3A/*::]*/: { n:'PtgRef3d', f:parse_PtgRef3d },\n\t/*::[*/0x3B/*::]*/: { n:'PtgArea3d', f:parse_PtgArea3d },\n\t/*::[*/0x3C/*::]*/: { n:'PtgRefErr3d', f:parse_PtgRefErr3d },\n\t/*::[*/0x3D/*::]*/: { n:'PtgAreaErr3d', f:parse_PtgAreaErr3d },\n\t/*::[*/0xFF/*::]*/: {}\n};\n/* These are duplicated in the PtgTypes table */\nvar PtgDupes = {\n\t/*::[*/0x40/*::]*/: 0x20, /*::[*/0x60/*::]*/: 0x20,\n\t/*::[*/0x41/*::]*/: 0x21, /*::[*/0x61/*::]*/: 0x21,\n\t/*::[*/0x42/*::]*/: 0x22, /*::[*/0x62/*::]*/: 0x22,\n\t/*::[*/0x43/*::]*/: 0x23, /*::[*/0x63/*::]*/: 0x23,\n\t/*::[*/0x44/*::]*/: 0x24, /*::[*/0x64/*::]*/: 0x24,\n\t/*::[*/0x45/*::]*/: 0x25, /*::[*/0x65/*::]*/: 0x25,\n\t/*::[*/0x46/*::]*/: 0x26, /*::[*/0x66/*::]*/: 0x26,\n\t/*::[*/0x47/*::]*/: 0x27, /*::[*/0x67/*::]*/: 0x27,\n\t/*::[*/0x48/*::]*/: 0x28, /*::[*/0x68/*::]*/: 0x28,\n\t/*::[*/0x49/*::]*/: 0x29, /*::[*/0x69/*::]*/: 0x29,\n\t/*::[*/0x4A/*::]*/: 0x2A, /*::[*/0x6A/*::]*/: 0x2A,\n\t/*::[*/0x4B/*::]*/: 0x2B, /*::[*/0x6B/*::]*/: 0x2B,\n\t/*::[*/0x4C/*::]*/: 0x2C, /*::[*/0x6C/*::]*/: 0x2C,\n\t/*::[*/0x4D/*::]*/: 0x2D, /*::[*/0x6D/*::]*/: 0x2D,\n\t/*::[*/0x4E/*::]*/: 0x2E, /*::[*/0x6E/*::]*/: 0x2E,\n\t/*::[*/0x4F/*::]*/: 0x2F, /*::[*/0x6F/*::]*/: 0x2F,\n\t/*::[*/0x58/*::]*/: 0x22, /*::[*/0x78/*::]*/: 0x22,\n\t/*::[*/0x59/*::]*/: 0x39, /*::[*/0x79/*::]*/: 0x39,\n\t/*::[*/0x5A/*::]*/: 0x3A, /*::[*/0x7A/*::]*/: 0x3A,\n\t/*::[*/0x5B/*::]*/: 0x3B, /*::[*/0x7B/*::]*/: 0x3B,\n\t/*::[*/0x5C/*::]*/: 0x3C, /*::[*/0x7C/*::]*/: 0x3C,\n\t/*::[*/0x5D/*::]*/: 0x3D, /*::[*/0x7D/*::]*/: 0x3D\n};\n\nvar Ptg18 = {\n\t/*::[*/0x01/*::]*/: { n:'PtgElfLel', f:parse_PtgElfLel },\n\t/*::[*/0x02/*::]*/: { n:'PtgElfRw', f:parse_PtgElfRw },\n\t/*::[*/0x03/*::]*/: { n:'PtgElfCol', f:parse_PtgElfCol },\n\t/*::[*/0x06/*::]*/: { n:'PtgElfRwV', f:parse_PtgElfRwV },\n\t/*::[*/0x07/*::]*/: { n:'PtgElfColV', f:parse_PtgElfColV },\n\t/*::[*/0x0A/*::]*/: { n:'PtgElfRadical', f:parse_PtgElfRadical },\n\t/*::[*/0x0B/*::]*/: { n:'PtgElfRadicalS', f:parse_PtgElfRadicalS },\n\t/*::[*/0x0D/*::]*/: { n:'PtgElfColS', f:parse_PtgElfColS },\n\t/*::[*/0x0F/*::]*/: { n:'PtgElfColSV', f:parse_PtgElfColSV },\n\t/*::[*/0x10/*::]*/: { n:'PtgElfRadicalLel', f:parse_PtgElfRadicalLel },\n\t/*::[*/0x19/*::]*/: { n:'PtgList', f:parse_PtgList },\n\t/*::[*/0x1D/*::]*/: { n:'PtgSxName', f:parse_PtgSxName },\n\t/*::[*/0xFF/*::]*/: {}\n};\nvar Ptg19 = {\n\t/*::[*/0x00/*::]*/: { n:'PtgAttrNoop', f:parse_PtgAttrNoop },\n\t/*::[*/0x01/*::]*/: { n:'PtgAttrSemi', f:parse_PtgAttrSemi },\n\t/*::[*/0x02/*::]*/: { n:'PtgAttrIf', f:parse_PtgAttrIf },\n\t/*::[*/0x04/*::]*/: { n:'PtgAttrChoose', f:parse_PtgAttrChoose },\n\t/*::[*/0x08/*::]*/: { n:'PtgAttrGoto', f:parse_PtgAttrGoto },\n\t/*::[*/0x10/*::]*/: { n:'PtgAttrSum', f:parse_PtgAttrSum },\n\t/*::[*/0x20/*::]*/: { n:'PtgAttrBaxcel', f:parse_PtgAttrBaxcel },\n\t/*::[*/0x21/*::]*/: { n:'PtgAttrBaxcel', f:parse_PtgAttrBaxcel },\n\t/*::[*/0x40/*::]*/: { n:'PtgAttrSpace', f:parse_PtgAttrSpace },\n\t/*::[*/0x41/*::]*/: { n:'PtgAttrSpaceSemi', f:parse_PtgAttrSpaceSemi },\n\t/*::[*/0x80/*::]*/: { n:'PtgAttrIfError', f:parse_PtgAttrIfError },\n\t/*::[*/0xFF/*::]*/: {}\n};\n\n/* [MS-XLS] 2.5.198.103 ; [MS-XLSB] 2.5.97.87 */\nfunction parse_RgbExtra(blob, length, rgce, opts) {\n\tif(opts.biff < 8) return parsenoop(blob, length);\n\tvar target = blob.l + length;\n\tvar o = [];\n\tfor(var i = 0; i !== rgce.length; ++i) {\n\t\tswitch(rgce[i][0]) {\n\t\t\tcase 'PtgArray': /* PtgArray -> PtgExtraArray */\n\t\t\t\trgce[i][1] = parse_PtgExtraArray(blob, 0, opts);\n\t\t\t\to.push(rgce[i][1]);\n\t\t\t\tbreak;\n\t\t\tcase 'PtgMemArea': /* PtgMemArea -> PtgExtraMem */\n\t\t\t\trgce[i][2] = parse_PtgExtraMem(blob, rgce[i][1], opts);\n\t\t\t\to.push(rgce[i][2]);\n\t\t\t\tbreak;\n\t\t\tcase 'PtgExp': /* PtgExp -> PtgExtraCol */\n\t\t\t\tif(opts && opts.biff == 12) {\n\t\t\t\t\trgce[i][1][1] = blob.read_shift(4);\n\t\t\t\t\to.push(rgce[i][1]);\n\t\t\t\t} break;\n\t\t\tcase 'PtgList': /* TODO: PtgList -> PtgExtraList */\n\t\t\tcase 'PtgElfRadicalS': /* TODO: PtgElfRadicalS -> PtgExtraElf */\n\t\t\tcase 'PtgElfColS': /* TODO: PtgElfColS -> PtgExtraElf */\n\t\t\tcase 'PtgElfColSV': /* TODO: PtgElfColSV -> PtgExtraElf */\n\t\t\t\tthrow \"Unsupported \" + rgce[i][0];\n\t\t\tdefault: break;\n\t\t}\n\t}\n\tlength = target - blob.l;\n\t/* note: this is technically an error but Excel disregards */\n\t//if(target !== blob.l && blob.l !== target - length) throw new Error(target + \" != \" + blob.l);\n\tif(length !== 0) o.push(parsenoop(blob, length));\n\treturn o;\n}\n\n/* [MS-XLS] 2.5.198.104 ; [MS-XLSB] 2.5.97.88 */\nfunction parse_Rgce(blob, length, opts) {\n\tvar target = blob.l + length;\n\tvar R, id, ptgs = [];\n\twhile(target != blob.l) {\n\t\tlength = target - blob.l;\n\t\tid = blob[blob.l];\n\t\tR = PtgTypes[id] || PtgTypes[PtgDupes[id]];\n\t\tif(id === 0x18 || id === 0x19) R = (id === 0x18 ? Ptg18 : Ptg19)[blob[blob.l + 1]];\n\t\tif(!R || !R.f) { /*ptgs.push*/(parsenoop(blob, length)); }\n\t\telse { ptgs.push([R.n, R.f(blob, length, opts)]); }\n\t}\n\treturn ptgs;\n}\n\nfunction stringify_array(f/*:Array<Array<string>>*/)/*:string*/ {\n\tvar o/*:Array<string>*/ = [];\n\tfor(var i = 0; i < f.length; ++i) {\n\t\tvar x = f[i], r/*:Array<string>*/ = [];\n\t\tfor(var j = 0; j < x.length; ++j) {\n\t\t\tvar y = x[j];\n\t\t\tif(y) switch(y[0]) {\n\t\t\t\t// TODO: handle embedded quotes\n\t\t\t\tcase 0x02:\n\t\t\t\t\t/*:: if(typeof y[1] != 'string') throw \"unreachable\"; */\n\t\t\t\t\tr.push('\"' + y[1].replace(/\"/g,'\"\"') + '\"'); break;\n\t\t\t\tdefault: r.push(y[1]);\n\t\t\t} else r.push(\"\");\n\t\t}\n\t\to.push(r.join(\",\"));\n\t}\n\treturn o.join(\";\");\n}\n\n/* [MS-XLS] 2.2.2 ; [MS-XLSB] 2.2.2 TODO */\nvar PtgBinOp = {\n\tPtgAdd: \"+\",\n\tPtgConcat: \"&\",\n\tPtgDiv: \"/\",\n\tPtgEq: \"=\",\n\tPtgGe: \">=\",\n\tPtgGt: \">\",\n\tPtgLe: \"<=\",\n\tPtgLt: \"<\",\n\tPtgMul: \"*\",\n\tPtgNe: \"<>\",\n\tPtgPower: \"^\",\n\tPtgSub: \"-\"\n};\n\n// TODO: explore space\nfunction make_3d_range(start, end) {\n\tvar s = start.lastIndexOf(\"!\"), e = end.lastIndexOf(\"!\");\n\tif(s == -1 && e == -1) return start + \":\" + end;\n\tif(s > 0 && e > 0 && start.slice(0, s).toLowerCase() == end.slice(0, e).toLowerCase()) return start + \":\" + end.slice(e+1);\n\tconsole.error(\"Cannot hydrate range\", start, end);\n\treturn start + \":\" + end;\n}\n\nfunction get_ixti_raw(supbooks, ixti/*:number*/, opts)/*:string*/ {\n\tif(!supbooks) return \"SH33TJSERR0\";\n\tif(opts.biff > 8 && (!supbooks.XTI || !supbooks.XTI[ixti])) return supbooks.SheetNames[ixti];\n\tif(!supbooks.XTI) return \"SH33TJSERR6\";\n\tvar XTI = supbooks.XTI[ixti];\n\tif(opts.biff < 8) {\n\t\tif(ixti > 10000) ixti-= 65536;\n\t\tif(ixti < 0) ixti = -ixti;\n\t\treturn ixti == 0 ? \"\" : supbooks.XTI[ixti - 1];\n\t}\n\tif(!XTI) return \"SH33TJSERR1\";\n\tvar o = \"\";\n\tif(opts.biff > 8) switch(supbooks[XTI[0]][0]) {\n\t\tcase 0x0165: /* 'BrtSupSelf' */\n\t\t\to = XTI[1] == -1 ? \"#REF\" : supbooks.SheetNames[XTI[1]];\n\t\t\treturn XTI[1] == XTI[2] ? o : o + \":\" + supbooks.SheetNames[XTI[2]];\n\t\tcase 0x0166: /* 'BrtSupSame' */\n\t\t\tif(opts.SID != null) return supbooks.SheetNames[opts.SID];\n\t\t\treturn \"SH33TJSSAME\" + supbooks[XTI[0]][0];\n\t\tcase 0x0163: /* 'BrtSupBookSrc' */\n\t\t\t/* falls through */\n\t\tdefault: return \"SH33TJSSRC\" + supbooks[XTI[0]][0];\n\t}\n\tswitch(supbooks[XTI[0]][0][0]) {\n\t\tcase 0x0401:\n\t\t\to = XTI[1] == -1 ? \"#REF\" : (supbooks.SheetNames[XTI[1]] || \"SH33TJSERR3\");\n\t\t\treturn XTI[1] == XTI[2] ? o : o + \":\" + supbooks.SheetNames[XTI[2]];\n\t\tcase 0x3A01: return supbooks[XTI[0]].slice(1).map(function(name) { return name.Name; }).join(\";;\"); //return \"SH33TJSERR8\";\n\t\tdefault:\n\t\t\tif(!supbooks[XTI[0]][0][3]) return \"SH33TJSERR2\";\n\t\t\to = XTI[1] == -1 ? \"#REF\" : (supbooks[XTI[0]][0][3][XTI[1]] || \"SH33TJSERR4\");\n\t\t\treturn XTI[1] == XTI[2] ? o : o + \":\" + supbooks[XTI[0]][0][3][XTI[2]];\n\t}\n}\nfunction get_ixti(supbooks, ixti/*:number*/, opts)/*:string*/ {\n\tvar ixtiraw = get_ixti_raw(supbooks, ixti, opts);\n\treturn ixtiraw == \"#REF\" ? ixtiraw : formula_quote_sheet_name(ixtiraw, opts);\n}\nfunction stringify_formula(formula/*Array<any>*/, range, cell/*:any*/, supbooks, opts)/*:string*/ {\n\tvar biff = (opts && opts.biff) || 8;\n\tvar _range = /*range != null ? range :*/ {s:{c:0, r:0},e:{c:0, r:0}};\n\tvar stack/*:Array<string>*/ = [], e1, e2, /*::type,*/ c/*:CellAddress*/, ixti=0, nameidx=0, r, sname=\"\";\n\tif(!formula[0] || !formula[0][0]) return \"\";\n\tvar last_sp = -1, sp = \"\";\n\tfor(var ff = 0, fflen = formula[0].length; ff < fflen; ++ff) {\n\t\tvar f = formula[0][ff];\n\t\tswitch(f[0]) {\n\t\t\tcase 'PtgUminus': /* [MS-XLS] 2.5.198.93 */\n\t\t\t\tstack.push(\"-\" + stack.pop()); break;\n\t\t\tcase 'PtgUplus': /* [MS-XLS] 2.5.198.95 */\n\t\t\t\tstack.push(\"+\" + stack.pop()); break;\n\t\t\tcase 'PtgPercent': /* [MS-XLS] 2.5.198.81 */\n\t\t\t\tstack.push(stack.pop() + \"%\"); break;\n\n\t\t\tcase 'PtgAdd':    /* [MS-XLS] 2.5.198.26 */\n\t\t\tcase 'PtgConcat': /* [MS-XLS] 2.5.198.43 */\n\t\t\tcase 'PtgDiv':    /* [MS-XLS] 2.5.198.45 */\n\t\t\tcase 'PtgEq':     /* [MS-XLS] 2.5.198.56 */\n\t\t\tcase 'PtgGe':     /* [MS-XLS] 2.5.198.64 */\n\t\t\tcase 'PtgGt':     /* [MS-XLS] 2.5.198.65 */\n\t\t\tcase 'PtgLe':     /* [MS-XLS] 2.5.198.68 */\n\t\t\tcase 'PtgLt':     /* [MS-XLS] 2.5.198.69 */\n\t\t\tcase 'PtgMul':    /* [MS-XLS] 2.5.198.75 */\n\t\t\tcase 'PtgNe':     /* [MS-XLS] 2.5.198.78 */\n\t\t\tcase 'PtgPower':  /* [MS-XLS] 2.5.198.82 */\n\t\t\tcase 'PtgSub':    /* [MS-XLS] 2.5.198.90 */\n\t\t\t\te1 = stack.pop(); e2 = stack.pop();\n\t\t\t\tif(last_sp >= 0) {\n\t\t\t\t\tswitch(formula[0][last_sp][1][0]) {\n\t\t\t\t\t\tcase 0:\n\t\t\t\t\t\t\t// $FlowIgnore\n\t\t\t\t\t\t\tsp = fill(\" \", formula[0][last_sp][1][1]); break;\n\t\t\t\t\t\tcase 1:\n\t\t\t\t\t\t\t// $FlowIgnore\n\t\t\t\t\t\t\tsp = fill(\"\\r\", formula[0][last_sp][1][1]); break;\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tsp = \"\";\n\t\t\t\t\t\t\t// $FlowIgnore\n\t\t\t\t\t\t\tif(opts.WTF) throw new Error(\"Unexpected PtgAttrSpaceType \" + formula[0][last_sp][1][0]);\n\t\t\t\t\t}\n\t\t\t\t\te2 = e2 + sp;\n\t\t\t\t\tlast_sp = -1;\n\t\t\t\t}\n\t\t\t\tstack.push(e2+PtgBinOp[f[0]]+e1);\n\t\t\t\tbreak;\n\n\t\t\tcase 'PtgIsect': /* [MS-XLS] 2.5.198.67 */\n\t\t\t\te1 = stack.pop(); e2 = stack.pop();\n\t\t\t\tstack.push(e2+\" \"+e1);\n\t\t\t\tbreak;\n\t\t\tcase 'PtgUnion': /* [MS-XLS] 2.5.198.94 */\n\t\t\t\te1 = stack.pop(); e2 = stack.pop();\n\t\t\t\tstack.push(e2+\",\"+e1);\n\t\t\t\tbreak;\n\t\t\tcase 'PtgRange': /* [MS-XLS] 2.5.198.83 */\n\t\t\t\te1 = stack.pop(); e2 = stack.pop();\n\t\t\t\tstack.push(make_3d_range(e2,e1));\n\t\t\t\tbreak;\n\n\t\t\tcase 'PtgAttrChoose': /* [MS-XLS] 2.5.198.34 */\n\t\t\t\tbreak;\n\t\t\tcase 'PtgAttrGoto': /* [MS-XLS] 2.5.198.35 */\n\t\t\t\tbreak;\n\t\t\tcase 'PtgAttrIf': /* [MS-XLS] 2.5.198.36 */\n\t\t\t\tbreak;\n\t\t\tcase 'PtgAttrIfError': /* [MS-XLSB] 2.5.97.28 */\n\t\t\t\tbreak;\n\n\n\t\t\tcase 'PtgRef': /* [MS-XLS] 2.5.198.84 */\n\t\t\t\t/*::type = f[1][0]; */c = shift_cell_xls((f[1][1]/*:any*/), _range, opts);\n\t\t\t\tstack.push(encode_cell_xls(c, biff));\n\t\t\t\tbreak;\n\t\t\tcase 'PtgRefN': /* [MS-XLS] 2.5.198.88 */\n\t\t\t\t/*::type = f[1][0]; */c = cell ? shift_cell_xls((f[1][1]/*:any*/), cell, opts) : (f[1][1]/*:any*/);\n\t\t\t\tstack.push(encode_cell_xls(c, biff));\n\t\t\t\tbreak;\n\t\t\tcase 'PtgRef3d': /* [MS-XLS] 2.5.198.85 */\n\t\t\t\t/*::type = f[1][0]; */ixti = /*::Number(*/f[1][1]/*::)*/; c = shift_cell_xls((f[1][2]/*:any*/), _range, opts);\n\t\t\t\tsname = get_ixti(supbooks, ixti, opts);\n\t\t\t\tvar w = sname; /* IE9 fails on defined names */ // eslint-disable-line no-unused-vars\n\t\t\t\tstack.push(sname + \"!\" + encode_cell_xls(c, biff));\n\t\t\t\tbreak;\n\n\t\t\tcase 'PtgFunc': /* [MS-XLS] 2.5.198.62 */\n\t\t\tcase 'PtgFuncVar': /* [MS-XLS] 2.5.198.63 */\n\t\t\t\t/* f[1] = [argc, func, type] */\n\t\t\t\tvar argc/*:number*/ = (f[1][0]/*:any*/), func/*:string*/ = (f[1][1]/*:any*/);\n\t\t\t\tif(!argc) argc = 0;\n\t\t\t\targc &= 0x7F;\n\t\t\t\tvar args = argc == 0 ? [] : stack.slice(-argc);\n\t\t\t\tstack.length -= argc;\n\t\t\t\tif(func === 'User') func = args.shift();\n\t\t\t\tstack.push(func + \"(\" + args.join(\",\") + \")\");\n\t\t\t\tbreak;\n\n\t\t\tcase 'PtgBool': /* [MS-XLS] 2.5.198.42 */\n\t\t\t\tstack.push(f[1] ? \"TRUE\" : \"FALSE\"); break;\n\t\t\tcase 'PtgInt': /* [MS-XLS] 2.5.198.66 */\n\t\t\t\tstack.push(/*::String(*/f[1]/*::)*/); break;\n\t\t\tcase 'PtgNum': /* [MS-XLS] 2.5.198.79 TODO: precision? */\n\t\t\t\tstack.push(String(f[1])); break;\n\t\t\tcase 'PtgStr': /* [MS-XLS] 2.5.198.89 */\n\t\t\t\t// $FlowIgnore\n\t\t\t\tstack.push('\"' + f[1].replace(/\"/g, '\"\"') + '\"'); break;\n\t\t\tcase 'PtgErr': /* [MS-XLS] 2.5.198.57 */\n\t\t\t\tstack.push(/*::String(*/f[1]/*::)*/); break;\n\t\t\tcase 'PtgAreaN': /* [MS-XLS] 2.5.198.31 TODO */\n\t\t\t\t/*::type = f[1][0]; */r = shift_range_xls(f[1][1], cell ? {s:cell} : _range, opts);\n\t\t\t\tstack.push(encode_range_xls((r/*:any*/), opts));\n\t\t\t\tbreak;\n\t\t\tcase 'PtgArea': /* [MS-XLS] 2.5.198.27 TODO: fixed points */\n\t\t\t\t/*::type = f[1][0]; */r = shift_range_xls(f[1][1], _range, opts);\n\t\t\t\tstack.push(encode_range_xls((r/*:any*/), opts));\n\t\t\t\tbreak;\n\t\t\tcase 'PtgArea3d': /* [MS-XLS] 2.5.198.28 TODO */\n\t\t\t\t/*::type = f[1][0]; */ixti = /*::Number(*/f[1][1]/*::)*/; r = f[1][2];\n\t\t\t\tsname = get_ixti(supbooks, ixti, opts);\n\t\t\t\tstack.push(sname + \"!\" + encode_range_xls((r/*:any*/), opts));\n\t\t\t\tbreak;\n\t\t\tcase 'PtgAttrSum': /* [MS-XLS] 2.5.198.41 */\n\t\t\t\tstack.push(\"SUM(\" + stack.pop() + \")\");\n\t\t\t\tbreak;\n\n\t\t\tcase 'PtgAttrBaxcel': /* [MS-XLS] 2.5.198.33 */\n\t\t\tcase 'PtgAttrSemi': /* [MS-XLS] 2.5.198.37 */\n\t\t\t\tbreak;\n\n\t\t\tcase 'PtgName': /* [MS-XLS] 2.5.198.76 ; [MS-XLSB] 2.5.97.60 TODO: revisions */\n\t\t\t\t/* f[1] = type, 0, nameindex */\n\t\t\t\tnameidx = (f[1][2]/*:any*/);\n\t\t\t\tvar lbl = (supbooks.names||[])[nameidx-1] || (supbooks[0]||[])[nameidx];\n\t\t\t\tvar name = lbl ? lbl.Name : \"SH33TJSNAME\" + String(nameidx);\n\t\t\t\t/* [MS-XLSB] 2.5.97.10 Ftab -- last verified 20220204 */\n\t\t\t\tif(name && name.slice(0,6) == \"_xlfn.\" && !opts.xlfn) name = name.slice(6);\n\t\t\t\tstack.push(name);\n\t\t\t\tbreak;\n\n\t\t\tcase 'PtgNameX': /* [MS-XLS] 2.5.198.77 ; [MS-XLSB] 2.5.97.61 TODO: revisions */\n\t\t\t\t/* f[1] = type, ixti, nameindex */\n\t\t\t\tvar bookidx/*:number*/ = (f[1][1]/*:any*/); nameidx = (f[1][2]/*:any*/); var externbook;\n\t\t\t\t/* TODO: Properly handle missing values -- this should be using get_ixti_raw primarily */\n\t\t\t\tif(opts.biff <= 5) {\n\t\t\t\t\tif(bookidx < 0) bookidx = -bookidx;\n\t\t\t\t\tif(supbooks[bookidx]) externbook = supbooks[bookidx][nameidx];\n\t\t\t\t} else {\n\t\t\t\t\tvar o = \"\";\n\t\t\t\t\tif(((supbooks[bookidx]||[])[0]||[])[0] == 0x3A01){/* empty */}\n\t\t\t\t\telse if(((supbooks[bookidx]||[])[0]||[])[0] == 0x0401){\n\t\t\t\t\t\tif(supbooks[bookidx][nameidx] && supbooks[bookidx][nameidx].itab > 0) {\n\t\t\t\t\t\t\to = supbooks.SheetNames[supbooks[bookidx][nameidx].itab-1] + \"!\";\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse o = supbooks.SheetNames[nameidx-1]+ \"!\";\n\t\t\t\t\tif(supbooks[bookidx] && supbooks[bookidx][nameidx]) o += supbooks[bookidx][nameidx].Name;\n\t\t\t\t\telse if(supbooks[0] && supbooks[0][nameidx]) o += supbooks[0][nameidx].Name;\n\t\t\t\t\telse {\n\t\t\t\t\t\tvar ixtidata = (get_ixti_raw(supbooks, bookidx, opts)||\"\").split(\";;\");\n\t\t\t\t\t\tif(ixtidata[nameidx - 1]) o = ixtidata[nameidx - 1]; // TODO: confirm this is correct\n\t\t\t\t\t\telse o += \"SH33TJSERRX\";\n\t\t\t\t\t}\n\t\t\t\t\tstack.push(o);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tif(!externbook) externbook = {Name: \"SH33TJSERRY\"};\n\t\t\t\tstack.push(externbook.Name);\n\t\t\t\tbreak;\n\n\t\t\tcase 'PtgParen': /* [MS-XLS] 2.5.198.80 */\n\t\t\t\tvar lp = '(', rp = ')';\n\t\t\t\tif(last_sp >= 0) {\n\t\t\t\t\tsp = \"\";\n\t\t\t\t\tswitch(formula[0][last_sp][1][0]) {\n\t\t\t\t\t\t// $FlowIgnore\n\t\t\t\t\t\tcase 2: lp = fill(\" \", formula[0][last_sp][1][1]) + lp; break;\n\t\t\t\t\t\t// $FlowIgnore\n\t\t\t\t\t\tcase 3: lp = fill(\"\\r\", formula[0][last_sp][1][1]) + lp; break;\n\t\t\t\t\t\t// $FlowIgnore\n\t\t\t\t\t\tcase 4: rp = fill(\" \", formula[0][last_sp][1][1]) + rp; break;\n\t\t\t\t\t\t// $FlowIgnore\n\t\t\t\t\t\tcase 5: rp = fill(\"\\r\", formula[0][last_sp][1][1]) + rp; break;\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t// $FlowIgnore\n\t\t\t\t\t\t\tif(opts.WTF) throw new Error(\"Unexpected PtgAttrSpaceType \" + formula[0][last_sp][1][0]);\n\t\t\t\t\t}\n\t\t\t\t\tlast_sp = -1;\n\t\t\t\t}\n\t\t\t\tstack.push(lp + stack.pop() + rp); break;\n\n\t\t\tcase 'PtgRefErr': /* [MS-XLS] 2.5.198.86 */\n\t\t\t\tstack.push('#REF!'); break;\n\n\t\t\tcase 'PtgRefErr3d': /* [MS-XLS] 2.5.198.87 */\n\t\t\t\tstack.push('#REF!'); break;\n\n\t\t\tcase 'PtgExp': /* [MS-XLS] 2.5.198.58 TODO */\n\t\t\t\tc = {c:(f[1][1]/*:any*/),r:(f[1][0]/*:any*/)};\n\t\t\t\tvar q = ({c: cell.c, r:cell.r}/*:any*/);\n\t\t\t\tif(supbooks.sharedf[encode_cell(c)]) {\n\t\t\t\t\tvar parsedf = (supbooks.sharedf[encode_cell(c)]);\n\t\t\t\t\tstack.push(stringify_formula(parsedf, _range, q, supbooks, opts));\n\t\t\t\t} else {\n\t\t\t\t\tvar fnd = false;\n\t\t\t\t\tfor(e1=0;e1!=supbooks.arrayf.length; ++e1) {\n\t\t\t\t\t\t/* TODO: should be something like range_has */\n\t\t\t\t\t\te2 = supbooks.arrayf[e1];\n\t\t\t\t\t\tif(c.c < e2[0].s.c || c.c > e2[0].e.c) continue;\n\t\t\t\t\t\tif(c.r < e2[0].s.r || c.r > e2[0].e.r) continue;\n\t\t\t\t\t\tstack.push(stringify_formula(e2[1], _range, q, supbooks, opts));\n\t\t\t\t\t\tfnd = true;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tif(!fnd) stack.push(/*::String(*/f[1]/*::)*/);\n\t\t\t\t}\n\t\t\t\tbreak;\n\n\t\t\tcase 'PtgArray': /* [MS-XLS] 2.5.198.32 TODO */\n\t\t\t\tstack.push(\"{\" + stringify_array(/*::(*/f[1]/*:: :any)*/) + \"}\");\n\t\t\t\tbreak;\n\n\t\t\tcase 'PtgMemArea': /* [MS-XLS] 2.5.198.70 TODO: confirm this is a non-display */\n\t\t\t\t//stack.push(\"(\" + f[2].map(encode_range).join(\",\") + \")\");\n\t\t\t\tbreak;\n\n\t\t\tcase 'PtgAttrSpace': /* [MS-XLS] 2.5.198.38 */\n\t\t\tcase 'PtgAttrSpaceSemi': /* [MS-XLS] 2.5.198.39 */\n\t\t\t\tlast_sp = ff;\n\t\t\t\tbreak;\n\n\t\t\tcase 'PtgTbl': /* [MS-XLS] 2.5.198.92 TODO */\n\t\t\t\tbreak;\n\n\t\t\tcase 'PtgMemErr': /* [MS-XLS] 2.5.198.71 */\n\t\t\t\tbreak;\n\n\t\t\tcase 'PtgMissArg': /* [MS-XLS] 2.5.198.74 */\n\t\t\t\tstack.push(\"\");\n\t\t\t\tbreak;\n\n\t\t\tcase 'PtgAreaErr': /* [MS-XLS] 2.5.198.29 */\n\t\t\t\tstack.push(\"#REF!\"); break;\n\n\t\t\tcase 'PtgAreaErr3d': /* [MS-XLS] 2.5.198.30 */\n\t\t\t\tstack.push(\"#REF!\"); break;\n\n\t\t\tcase 'PtgList': /* [MS-XLSB] 2.5.97.52 */\n\t\t\t\t// $FlowIgnore\n\t\t\t\tstack.push(\"Table\" + f[1].idx + \"[#\" + f[1].rt + \"]\");\n\t\t\t\tbreak;\n\n\t\t\tcase 'PtgMemAreaN':\n\t\t\tcase 'PtgMemNoMemN':\n\t\t\tcase 'PtgAttrNoop':\n\t\t\tcase 'PtgSheet':\n\t\t\tcase 'PtgEndSheet':\n\t\t\t\tbreak;\n\n\t\t\tcase 'PtgMemFunc': /* [MS-XLS] 2.5.198.72 TODO */\n\t\t\t\tbreak;\n\t\t\tcase 'PtgMemNoMem': /* [MS-XLS] 2.5.198.73 TODO */\n\t\t\t\tbreak;\n\n\t\t\tcase 'PtgElfCol': /* [MS-XLS] 2.5.198.46 */\n\t\t\tcase 'PtgElfColS': /* [MS-XLS] 2.5.198.47 */\n\t\t\tcase 'PtgElfColSV': /* [MS-XLS] 2.5.198.48 */\n\t\t\tcase 'PtgElfColV': /* [MS-XLS] 2.5.198.49 */\n\t\t\tcase 'PtgElfLel': /* [MS-XLS] 2.5.198.50 */\n\t\t\tcase 'PtgElfRadical': /* [MS-XLS] 2.5.198.51 */\n\t\t\tcase 'PtgElfRadicalLel': /* [MS-XLS] 2.5.198.52 */\n\t\t\tcase 'PtgElfRadicalS': /* [MS-XLS] 2.5.198.53 */\n\t\t\tcase 'PtgElfRw': /* [MS-XLS] 2.5.198.54 */\n\t\t\tcase 'PtgElfRwV': /* [MS-XLS] 2.5.198.55 */\n\t\t\t\tthrow new Error(\"Unsupported ELFs\");\n\n\t\t\tcase 'PtgSxName': /* [MS-XLS] 2.5.198.91 TODO -- find a test case */\n\t\t\t\tthrow new Error('Unrecognized Formula Token: ' + String(f));\n\t\t\tdefault: throw new Error('Unrecognized Formula Token: ' + String(f));\n\t\t}\n\t\tvar PtgNonDisp = ['PtgAttrSpace', 'PtgAttrSpaceSemi', 'PtgAttrGoto'];\n\t\tif(opts.biff != 3) if(last_sp >= 0 && PtgNonDisp.indexOf(formula[0][ff][0]) == -1) {\n\t\t\tf = formula[0][last_sp];\n\t\t\tvar _left = true;\n\t\t\tswitch(f[1][0]) {\n\t\t\t\t/* note: some bad XLSB files omit the PtgParen */\n\t\t\t\tcase 4: _left = false;\n\t\t\t\t/* falls through */\n\t\t\t\tcase 0:\n\t\t\t\t\t// $FlowIgnore\n\t\t\t\t\tsp = fill(\" \", f[1][1]); break;\n\t\t\t\tcase 5: _left = false;\n\t\t\t\t/* falls through */\n\t\t\t\tcase 1:\n\t\t\t\t\t// $FlowIgnore\n\t\t\t\t\tsp = fill(\"\\r\", f[1][1]); break;\n\t\t\t\tdefault:\n\t\t\t\t\tsp = \"\";\n\t\t\t\t\t// $FlowIgnore\n\t\t\t\t\tif(opts.WTF) throw new Error(\"Unexpected PtgAttrSpaceType \" + f[1][0]);\n\t\t\t}\n\t\t\tstack.push((_left ? sp : \"\") + stack.pop() + (_left ? \"\" : sp));\n\t\t\tlast_sp = -1;\n\t\t}\n\t}\n\tif(stack.length > 1 && opts.WTF) throw new Error(\"bad formula stack\");\n\tif(stack[0] == \"TRUE\") return true; if(stack[0] == \"FALSE\") return false;\n\treturn stack[0];\n}\n\n/* [MS-XLS] 2.5.198.1 TODO */\nfunction parse_ArrayParsedFormula(blob, length, opts/*::, ref*/) {\n\tvar target = blob.l + length, len = opts.biff == 2 ? 1 : 2;\n\tvar rgcb, cce = blob.read_shift(len); // length of rgce\n\tif(cce == 0xFFFF) return [[],parsenoop(blob, length-2)];\n\tvar rgce = parse_Rgce(blob, cce, opts);\n\tif(length !== cce + len) rgcb = parse_RgbExtra(blob, length - cce - len, rgce, opts);\n\tblob.l = target;\n\treturn [rgce, rgcb];\n}\n\n/* [MS-XLS] 2.5.198.3 TODO */\nfunction parse_XLSCellParsedFormula(blob, length, opts) {\n\tvar target = blob.l + length, len = opts.biff == 2 ? 1 : 2;\n\tvar rgcb, cce = blob.read_shift(len); // length of rgce\n\tif(cce == 0xFFFF) return [[],parsenoop(blob, length-2)];\n\tvar rgce = parse_Rgce(blob, cce, opts);\n\tif(length !== cce + len) rgcb = parse_RgbExtra(blob, length - cce - len, rgce, opts);\n\tblob.l = target;\n\treturn [rgce, rgcb];\n}\n\n/* [MS-XLS] 2.5.198.21 */\nfunction parse_NameParsedFormula(blob, length, opts, cce) {\n\tvar target = blob.l + length;\n\tvar rgce = parse_Rgce(blob, cce, opts);\n\tvar rgcb;\n\tif(target !== blob.l) rgcb = parse_RgbExtra(blob, target - blob.l, rgce, opts);\n\treturn [rgce, rgcb];\n}\n\n/* [MS-XLS] 2.5.198.118 TODO */\nfunction parse_SharedParsedFormula(blob, length, opts) {\n\tvar target = blob.l + length;\n\tvar rgcb, cce = blob.read_shift(2); // length of rgce\n\tvar rgce = parse_Rgce(blob, cce, opts);\n\tif(cce == 0xFFFF) return [[],parsenoop(blob, length-2)];\n\tif(length !== cce + 2) rgcb = parse_RgbExtra(blob, target - cce - 2, rgce, opts);\n\treturn [rgce, rgcb];\n}\n\n/* [MS-XLS] 2.5.133 TODO: how to emit empty strings? */\nfunction parse_FormulaValue(blob/*::, length*/) {\n\tvar b;\n\tif(__readUInt16LE(blob,blob.l + 6) !== 0xFFFF) return [parse_Xnum(blob),'n'];\n\tswitch(blob[blob.l]) {\n\t\tcase 0x00: blob.l += 8; return [\"String\", 's'];\n\t\tcase 0x01: b = blob[blob.l+2] === 0x1; blob.l += 8; return [b,'b'];\n\t\tcase 0x02: b = blob[blob.l+2]; blob.l += 8; return [b,'e'];\n\t\tcase 0x03: blob.l += 8; return [\"\",'s'];\n\t}\n\treturn [];\n}\nfunction write_FormulaValue(value) {\n\tif(value == null) {\n\t\t// Blank String Value\n\t\tvar o = new_buf(8);\n\t\to.write_shift(1, 0x03);\n\t\to.write_shift(1, 0);\n\t\to.write_shift(2, 0);\n\t\to.write_shift(2, 0);\n\t\to.write_shift(2, 0xFFFF);\n\t\treturn o;\n\t} else if(typeof value == \"number\") return write_Xnum(value);\n\treturn write_Xnum(0);\n}\n\n/* [MS-XLS] 2.4.127 TODO */\nfunction parse_Formula(blob, length, opts) {\n\tvar end = blob.l + length;\n\tvar cell = parse_XLSCell(blob, 6);\n\tif(opts.biff == 2) ++blob.l;\n\tvar val = parse_FormulaValue(blob,8);\n\tvar flags = blob.read_shift(1);\n\tif(opts.biff != 2) {\n\t\tblob.read_shift(1);\n\t\tif(opts.biff >= 5) {\n\t\t\t/*var chn = */blob.read_shift(4);\n\t\t}\n\t}\n\tvar cbf = parse_XLSCellParsedFormula(blob, end - blob.l, opts);\n\treturn {cell:cell, val:val[0], formula:cbf, shared: (flags >> 3) & 1, tt:val[1]};\n}\nfunction write_Formula(cell/*:Cell*/, R/*:number*/, C/*:number*/, opts, os/*:number*/) {\n\t// Cell\n\tvar o1 = write_XLSCell(R, C, os);\n\n\t// FormulaValue\n\tvar o2 = write_FormulaValue(cell.v);\n\n\t// flags + cache\n\tvar o3 = new_buf(6);\n\tvar flags = 0x01 | 0x20;\n\to3.write_shift(2, flags);\n\to3.write_shift(4, 0);\n\n\t// CellParsedFormula\n\tvar bf = new_buf(cell.bf.length);\n\tfor(var i = 0; i < cell.bf.length; ++i) bf[i] = cell.bf[i];\n\n\tvar out = bconcat([o1, o2, o3, bf]);\n\treturn out;\n}\n\n\n/* XLSB Parsed Formula records have the same shape */\nfunction parse_XLSBParsedFormula(data, length, opts) {\n\tvar cce = data.read_shift(4);\n\tvar rgce = parse_Rgce(data, cce, opts);\n\tvar cb = data.read_shift(4);\n\tvar rgcb = cb > 0 ? parse_RgbExtra(data, cb, rgce, opts) : null;\n\treturn [rgce, rgcb];\n}\n\n/* [MS-XLSB] 2.5.97.1 ArrayParsedFormula */\nvar parse_XLSBArrayParsedFormula = parse_XLSBParsedFormula;\n/* [MS-XLSB] 2.5.97.4 CellParsedFormula */\nvar parse_XLSBCellParsedFormula = parse_XLSBParsedFormula;\n/* [MS-XLSB] 2.5.97.8 DVParsedFormula */\n//var parse_XLSBDVParsedFormula = parse_XLSBParsedFormula;\n/* [MS-XLSB] 2.5.97.9 FRTParsedFormula */\n//var parse_XLSBFRTParsedFormula = parse_XLSBParsedFormula2;\n/* [MS-XLSB] 2.5.97.12 NameParsedFormula */\nvar parse_XLSBNameParsedFormula = parse_XLSBParsedFormula;\n/* [MS-XLSB] 2.5.97.98 SharedParsedFormula */\nvar parse_XLSBSharedParsedFormula = parse_XLSBParsedFormula;\n\n/* Writes a PtgNum or PtgInt */\nfunction write_XLSBFormulaNum(val/*:number*/) {\n\tif((val | 0) == val && val < Math.pow(2,16) && val >= 0) {\n\t\tvar oint = new_buf(11);\n\t\toint.write_shift(4, 3);\n\t\toint.write_shift(1, 0x1e);\n\t\toint.write_shift(2, val);\n\t\toint.write_shift(4, 0);\n\t\treturn oint;\n\t}\n\n\tvar num = new_buf(17);\n\tnum.write_shift(4, 11);\n\tnum.write_shift(1, 0x1f);\n\tnum.write_shift(8, val);\n\tnum.write_shift(4, 0);\n\treturn num;\n}\n/* Writes a PtgErr */\nfunction write_XLSBFormulaErr(val/*:number*/) {\n\tvar oint = new_buf(10);\n\toint.write_shift(4, 2);\n\toint.write_shift(1, 0x1C);\n\toint.write_shift(1, val);\n\toint.write_shift(4, 0);\n\treturn oint;\n}\n/* Writes a PtgBool */\nfunction write_XLSBFormulaBool(val/*:boolean*/) {\n\tvar oint = new_buf(10);\n\toint.write_shift(4, 2);\n\toint.write_shift(1, 0x1D);\n\toint.write_shift(1, val?1:0);\n\toint.write_shift(4, 0);\n\treturn oint;\n}\n\n/* Writes a PtgStr */\nfunction write_XLSBFormulaStr(val/*:string*/) {\n\tvar preamble = new_buf(7);\n\tpreamble.write_shift(4, 3 + 2 * val.length);\n\tpreamble.write_shift(1, 0x17);\n\tpreamble.write_shift(2, val.length);\n\n\tvar body = new_buf(2 * val.length);\n\tbody.write_shift(2 * val.length, val, \"utf16le\");\n\n\tvar postamble = new_buf(4);\n\tpostamble.write_shift(4, 0);\n\n\treturn bconcat([preamble, body, postamble]);\n}\n\n/* Writes a PtgRef */\nfunction write_XLSBFormulaRef(str) {\n\tvar cell = decode_cell(str);\n\tvar out = new_buf(15);\n\tout.write_shift(4, 7);\n\tout.write_shift(1, 0x04 | ((1)<<5));\n\tout.write_shift(4, cell.r);\n\tout.write_shift(2, cell.c | ((str.charAt(0) == \"$\" ? 0 : 1)<<14) | ((str.match(/\\$\\d/) ? 0 : 1)<<15)); // <== ColRelShort\n\tout.write_shift(4, 0);\n\n\treturn out;\n}\n\n/* Writes a PtgRef3d */\nfunction write_XLSBFormulaRef3D(str, wb) {\n\tvar lastbang = str.lastIndexOf(\"!\");\n\tvar sname = str.slice(0, lastbang);\n\tstr = str.slice(lastbang+1);\n\tvar cell = decode_cell(str);\n\tif(sname.charAt(0) == \"'\") sname = sname.slice(1, -1).replace(/''/g, \"'\");\n\n\tvar out = new_buf(17);\n\tout.write_shift(4, 9);\n\tout.write_shift(1, 0x1A | ((1)<<5));\n\tout.write_shift(2, 2 + wb.SheetNames.map(function(n) { return n.toLowerCase(); }).indexOf(sname.toLowerCase()));\n\tout.write_shift(4, cell.r);\n\tout.write_shift(2, cell.c | ((str.charAt(0) == \"$\" ? 0 : 1)<<14) | ((str.match(/\\$\\d/) ? 0 : 1)<<15)); // <== ColRelShort\n\tout.write_shift(4, 0);\n\n\treturn out;\n}\n\n/* Writes a PtgRefErr3d */\nfunction write_XLSBFormulaRefErr3D(str, wb) {\n\tvar lastbang = str.lastIndexOf(\"!\");\n\tvar sname = str.slice(0, lastbang);\n\tstr = str.slice(lastbang+1);\n\tif(sname.charAt(0) == \"'\") sname = sname.slice(1, -1).replace(/''/g, \"'\");\n\n\tvar out = new_buf(17);\n\tout.write_shift(4, 9);\n\tout.write_shift(1, 0x1C | ((1)<<5));\n\tout.write_shift(2, 2 + wb.SheetNames.map(function(n) { return n.toLowerCase(); }).indexOf(sname.toLowerCase()));\n\tout.write_shift(4, 0);\n\tout.write_shift(2, 0); // <== ColRelShort\n\tout.write_shift(4, 0);\n\n\treturn out;\n}\n\n/* Writes a single sheet range [PtgRef PtgRef PtgRange] */\nfunction write_XLSBFormulaRange(_str) {\n\tvar parts = _str.split(\":\"), str = parts[0];\n\n\tvar out = new_buf(23);\n\tout.write_shift(4, 15);\n\n\t/* start cell */\n\tstr = parts[0]; var cell = decode_cell(str);\n\tout.write_shift(1, 0x04 | ((1)<<5));\n\tout.write_shift(4, cell.r);\n\tout.write_shift(2, cell.c | ((str.charAt(0) == \"$\" ? 0 : 1)<<14) | ((str.match(/\\$\\d/) ? 0 : 1)<<15)); // <== ColRelShort\n\tout.write_shift(4, 0);\n\n\t/* end cell */\n\tstr = parts[1]; cell = decode_cell(str);\n\tout.write_shift(1, 0x04 | ((1)<<5));\n\tout.write_shift(4, cell.r);\n\tout.write_shift(2, cell.c | ((str.charAt(0) == \"$\" ? 0 : 1)<<14) | ((str.match(/\\$\\d/) ? 0 : 1)<<15)); // <== ColRelShort\n\tout.write_shift(4, 0);\n\n\t/* PtgRange */\n\tout.write_shift(1, 0x11);\n\n\tout.write_shift(4, 0);\n\n\treturn out;\n}\n\n/* Writes a range with explicit sheet name [PtgRef3D PtgRef3D PtgRange] */\nfunction write_XLSBFormulaRangeWS(_str, wb) {\n\tvar lastbang = _str.lastIndexOf(\"!\");\n\tvar sname = _str.slice(0, lastbang);\n\t_str = _str.slice(lastbang+1);\n\tif(sname.charAt(0) == \"'\") sname = sname.slice(1, -1).replace(/''/g, \"'\");\n\tvar parts = _str.split(\":\"); str = parts[0];\n\n\tvar out = new_buf(27);\n\tout.write_shift(4, 19);\n\n\t/* start cell */\n\tvar str = parts[0], cell = decode_cell(str);\n\tout.write_shift(1, 0x1A | ((1)<<5));\n\tout.write_shift(2, 2 + wb.SheetNames.map(function(n) { return n.toLowerCase(); }).indexOf(sname.toLowerCase()));\n\tout.write_shift(4, cell.r);\n\tout.write_shift(2, cell.c | ((str.charAt(0) == \"$\" ? 0 : 1)<<14) | ((str.match(/\\$\\d/) ? 0 : 1)<<15)); // <== ColRelShort\n\n\t/* end cell */\n\tstr = parts[1]; cell = decode_cell(str);\n\tout.write_shift(1, 0x1A | ((1)<<5));\n\tout.write_shift(2, 2 + wb.SheetNames.map(function(n) { return n.toLowerCase(); }).indexOf(sname.toLowerCase()));\n\tout.write_shift(4, cell.r);\n\tout.write_shift(2, cell.c | ((str.charAt(0) == \"$\" ? 0 : 1)<<14) | ((str.match(/\\$\\d/) ? 0 : 1)<<15)); // <== ColRelShort\n\n\t/* PtgRange */\n\tout.write_shift(1, 0x11);\n\n\tout.write_shift(4, 0);\n\n\treturn out;\n}\n\n/* Writes a range with explicit sheet name [PtgArea3d] */\nfunction write_XLSBFormulaArea3D(_str, wb) {\n\tvar lastbang = _str.lastIndexOf(\"!\");\n\tvar sname = _str.slice(0, lastbang);\n\t_str = _str.slice(lastbang+1);\n\tif(sname.charAt(0) == \"'\") sname = sname.slice(1, -1).replace(/''/g, \"'\");\n\tvar range = decode_range(_str);\n\n\tvar out = new_buf(23);\n\tout.write_shift(4, 15);\n\n\tout.write_shift(1, 0x1B | ((1)<<5));\n\tout.write_shift(2, 2 + wb.SheetNames.map(function(n) { return n.toLowerCase(); }).indexOf(sname.toLowerCase()));\n\tout.write_shift(4, range.s.r);\n\tout.write_shift(4, range.e.r);\n\tout.write_shift(2, range.s.c);\n\tout.write_shift(2, range.e.c);\n\n\tout.write_shift(4, 0);\n\n\treturn out;\n}\n\n\n/* General Formula */\nfunction write_XLSBFormula(val/*:string|number*/, wb) {\n\tif(typeof val == \"number\") return write_XLSBFormulaNum(val);\n\tif(typeof val == \"boolean\") return write_XLSBFormulaBool(val);\n\tif(/^#(DIV\\/0!|GETTING_DATA|N\\/A|NAME\\?|NULL!|NUM!|REF!|VALUE!)$/.test(val)) return write_XLSBFormulaErr(+RBErr[val]);\n\tif(val.match(/^\\$?(?:[A-W][A-Z]{2}|X[A-E][A-Z]|XF[A-D]|[A-Z]{1,2})\\$?(?:10[0-3]\\d{4}|104[0-7]\\d{3}|1048[0-4]\\d{2}|10485[0-6]\\d|104857[0-6]|[1-9]\\d{0,5})$/)) return write_XLSBFormulaRef(val);\n\tif(val.match(/^\\$?(?:[A-W][A-Z]{2}|X[A-E][A-Z]|XF[A-D]|[A-Z]{1,2})\\$?(?:10[0-3]\\d{4}|104[0-7]\\d{3}|1048[0-4]\\d{2}|10485[0-6]\\d|104857[0-6]|[1-9]\\d{0,5}):\\$?(?:[A-W][A-Z]{2}|X[A-E][A-Z]|XF[A-D]|[A-Z]{1,2})\\$?(?:10[0-3]\\d{4}|104[0-7]\\d{3}|1048[0-4]\\d{2}|10485[0-6]\\d|104857[0-6]|[1-9]\\d{0,5})$/)) return write_XLSBFormulaRange(val);\n\tif(val.match(/^#REF!\\$?(?:[A-W][A-Z]{2}|X[A-E][A-Z]|XF[A-D]|[A-Z]{1,2})\\$?(?:10[0-3]\\d{4}|104[0-7]\\d{3}|1048[0-4]\\d{2}|10485[0-6]\\d|104857[0-6]|[1-9]\\d{0,5}):\\$?(?:[A-W][A-Z]{2}|X[A-E][A-Z]|XF[A-D]|[A-Z]{1,2})\\$?(?:10[0-3]\\d{4}|104[0-7]\\d{3}|1048[0-4]\\d{2}|10485[0-6]\\d|104857[0-6]|[1-9]\\d{0,5})$/)) return write_XLSBFormulaArea3D(val, wb);\n\tif(val.match(/^(?:'[^\\\\\\/?*\\[\\]:]*'|[^'][^\\\\\\/?*\\[\\]:'`~!@#$%^()\\-=+{}|;,<.>]*)!\\$?(?:[A-W][A-Z]{2}|X[A-E][A-Z]|XF[A-D]|[A-Z]{1,2})\\$?(?:10[0-3]\\d{4}|104[0-7]\\d{3}|1048[0-4]\\d{2}|10485[0-6]\\d|104857[0-6]|[1-9]\\d{0,5})$/)) return write_XLSBFormulaRef3D(val, wb);\n\tif(val.match(/^(?:'[^\\\\\\/?*\\[\\]:]*'|[^'][^\\\\\\/?*\\[\\]:'`~!@#$%^()\\-=+{}|;,<.>]*)!\\$?(?:[A-W][A-Z]{2}|X[A-E][A-Z]|XF[A-D]|[A-Z]{1,2})\\$?(?:10[0-3]\\d{4}|104[0-7]\\d{3}|1048[0-4]\\d{2}|10485[0-6]\\d|104857[0-6]|[1-9]\\d{0,5}):\\$?(?:[A-W][A-Z]{2}|X[A-E][A-Z]|XF[A-D]|[A-Z]{1,2})\\$?(?:10[0-3]\\d{4}|104[0-7]\\d{3}|1048[0-4]\\d{2}|10485[0-6]\\d|104857[0-6]|[1-9]\\d{0,5})$/)) return write_XLSBFormulaRangeWS(val, wb);\n\tif(/^(?:'[^\\\\\\/?*\\[\\]:]*'|[^'][^\\\\\\/?*\\[\\]:'`~!@#$%^()\\-=+{}|;,<.>]*)!#REF!$/.test(val)) return write_XLSBFormulaRefErr3D(val, wb);\n\tif(/^\".*\"$/.test(val)) return write_XLSBFormulaStr(val);\n\tif(/^[+-]\\d+$/.test(val)) return write_XLSBFormulaNum(parseInt(val, 10));\n\tthrow \"Formula |\" + val + \"| not supported for XLSB\";\n}\nvar write_XLSBNameParsedFormula = write_XLSBFormula;\nvar Cetab = {\n  0: \"BEEP\",\n  1: \"OPEN\",\n  2: \"OPEN.LINKS\",\n  3: \"CLOSE.ALL\",\n  4: \"SAVE\",\n  5: \"SAVE.AS\",\n  6: \"FILE.DELETE\",\n  7: \"PAGE.SETUP\",\n  8: \"PRINT\",\n  9: \"PRINTER.SETUP\",\n  10: \"QUIT\",\n  11: \"NEW.WINDOW\",\n  12: \"ARRANGE.ALL\",\n  13: \"WINDOW.SIZE\",\n  14: \"WINDOW.MOVE\",\n  15: \"FULL\",\n  16: \"CLOSE\",\n  17: \"RUN\",\n  22: \"SET.PRINT.AREA\",\n  23: \"SET.PRINT.TITLES\",\n  24: \"SET.PAGE.BREAK\",\n  25: \"REMOVE.PAGE.BREAK\",\n  26: \"FONT\",\n  27: \"DISPLAY\",\n  28: \"PROTECT.DOCUMENT\",\n  29: \"PRECISION\",\n  30: \"A1.R1C1\",\n  31: \"CALCULATE.NOW\",\n  32: \"CALCULATION\",\n  34: \"DATA.FIND\",\n  35: \"EXTRACT\",\n  36: \"DATA.DELETE\",\n  37: \"SET.DATABASE\",\n  38: \"SET.CRITERIA\",\n  39: \"SORT\",\n  40: \"DATA.SERIES\",\n  41: \"TABLE\",\n  42: \"FORMAT.NUMBER\",\n  43: \"ALIGNMENT\",\n  44: \"STYLE\",\n  45: \"BORDER\",\n  46: \"CELL.PROTECTION\",\n  47: \"COLUMN.WIDTH\",\n  48: \"UNDO\",\n  49: \"CUT\",\n  50: \"COPY\",\n  51: \"PASTE\",\n  52: \"CLEAR\",\n  53: \"PASTE.SPECIAL\",\n  54: \"EDIT.DELETE\",\n  55: \"INSERT\",\n  56: \"FILL.RIGHT\",\n  57: \"FILL.DOWN\",\n  61: \"DEFINE.NAME\",\n  62: \"CREATE.NAMES\",\n  63: \"FORMULA.GOTO\",\n  64: \"FORMULA.FIND\",\n  65: \"SELECT.LAST.CELL\",\n  66: \"SHOW.ACTIVE.CELL\",\n  67: \"GALLERY.AREA\",\n  68: \"GALLERY.BAR\",\n  69: \"GALLERY.COLUMN\",\n  70: \"GALLERY.LINE\",\n  71: \"GALLERY.PIE\",\n  72: \"GALLERY.SCATTER\",\n  73: \"COMBINATION\",\n  74: \"PREFERRED\",\n  75: \"ADD.OVERLAY\",\n  76: \"GRIDLINES\",\n  77: \"SET.PREFERRED\",\n  78: \"AXES\",\n  79: \"LEGEND\",\n  80: \"ATTACH.TEXT\",\n  81: \"ADD.ARROW\",\n  82: \"SELECT.CHART\",\n  83: \"SELECT.PLOT.AREA\",\n  84: \"PATTERNS\",\n  85: \"MAIN.CHART\",\n  86: \"OVERLAY\",\n  87: \"SCALE\",\n  88: \"FORMAT.LEGEND\",\n  89: \"FORMAT.TEXT\",\n  90: \"EDIT.REPEAT\",\n  91: \"PARSE\",\n  92: \"JUSTIFY\",\n  93: \"HIDE\",\n  94: \"UNHIDE\",\n  95: \"WORKSPACE\",\n  96: \"FORMULA\",\n  97: \"FORMULA.FILL\",\n  98: \"FORMULA.ARRAY\",\n  99: \"DATA.FIND.NEXT\",\n  100: \"DATA.FIND.PREV\",\n  101: \"FORMULA.FIND.NEXT\",\n  102: \"FORMULA.FIND.PREV\",\n  103: \"ACTIVATE\",\n  104: \"ACTIVATE.NEXT\",\n  105: \"ACTIVATE.PREV\",\n  106: \"UNLOCKED.NEXT\",\n  107: \"UNLOCKED.PREV\",\n  108: \"COPY.PICTURE\",\n  109: \"SELECT\",\n  110: \"DELETE.NAME\",\n  111: \"DELETE.FORMAT\",\n  112: \"VLINE\",\n  113: \"HLINE\",\n  114: \"VPAGE\",\n  115: \"HPAGE\",\n  116: \"VSCROLL\",\n  117: \"HSCROLL\",\n  118: \"ALERT\",\n  119: \"NEW\",\n  120: \"CANCEL.COPY\",\n  121: \"SHOW.CLIPBOARD\",\n  122: \"MESSAGE\",\n  124: \"PASTE.LINK\",\n  125: \"APP.ACTIVATE\",\n  126: \"DELETE.ARROW\",\n  127: \"ROW.HEIGHT\",\n  128: \"FORMAT.MOVE\",\n  129: \"FORMAT.SIZE\",\n  130: \"FORMULA.REPLACE\",\n  131: \"SEND.KEYS\",\n  132: \"SELECT.SPECIAL\",\n  133: \"APPLY.NAMES\",\n  134: \"REPLACE.FONT\",\n  135: \"FREEZE.PANES\",\n  136: \"SHOW.INFO\",\n  137: \"SPLIT\",\n  138: \"ON.WINDOW\",\n  139: \"ON.DATA\",\n  140: \"DISABLE.INPUT\",\n  142: \"OUTLINE\",\n  143: \"LIST.NAMES\",\n  144: \"FILE.CLOSE\",\n  145: \"SAVE.WORKBOOK\",\n  146: \"DATA.FORM\",\n  147: \"COPY.CHART\",\n  148: \"ON.TIME\",\n  149: \"WAIT\",\n  150: \"FORMAT.FONT\",\n  151: \"FILL.UP\",\n  152: \"FILL.LEFT\",\n  153: \"DELETE.OVERLAY\",\n  155: \"SHORT.MENUS\",\n  159: \"SET.UPDATE.STATUS\",\n  161: \"COLOR.PALETTE\",\n  162: \"DELETE.STYLE\",\n  163: \"WINDOW.RESTORE\",\n  164: \"WINDOW.MAXIMIZE\",\n  166: \"CHANGE.LINK\",\n  167: \"CALCULATE.DOCUMENT\",\n  168: \"ON.KEY\",\n  169: \"APP.RESTORE\",\n  170: \"APP.MOVE\",\n  171: \"APP.SIZE\",\n  172: \"APP.MINIMIZE\",\n  173: \"APP.MAXIMIZE\",\n  174: \"BRING.TO.FRONT\",\n  175: \"SEND.TO.BACK\",\n  185: \"MAIN.CHART.TYPE\",\n  186: \"OVERLAY.CHART.TYPE\",\n  187: \"SELECT.END\",\n  188: \"OPEN.MAIL\",\n  189: \"SEND.MAIL\",\n  190: \"STANDARD.FONT\",\n  191: \"CONSOLIDATE\",\n  192: \"SORT.SPECIAL\",\n  193: \"GALLERY.3D.AREA\",\n  194: \"GALLERY.3D.COLUMN\",\n  195: \"GALLERY.3D.LINE\",\n  196: \"GALLERY.3D.PIE\",\n  197: \"VIEW.3D\",\n  198: \"GOAL.SEEK\",\n  199: \"WORKGROUP\",\n  200: \"FILL.GROUP\",\n  201: \"UPDATE.LINK\",\n  202: \"PROMOTE\",\n  203: \"DEMOTE\",\n  204: \"SHOW.DETAIL\",\n  206: \"UNGROUP\",\n  207: \"OBJECT.PROPERTIES\",\n  208: \"SAVE.NEW.OBJECT\",\n  209: \"SHARE\",\n  210: \"SHARE.NAME\",\n  211: \"DUPLICATE\",\n  212: \"APPLY.STYLE\",\n  213: \"ASSIGN.TO.OBJECT\",\n  214: \"OBJECT.PROTECTION\",\n  215: \"HIDE.OBJECT\",\n  216: \"SET.EXTRACT\",\n  217: \"CREATE.PUBLISHER\",\n  218: \"SUBSCRIBE.TO\",\n  219: \"ATTRIBUTES\",\n  220: \"SHOW.TOOLBAR\",\n  222: \"PRINT.PREVIEW\",\n  223: \"EDIT.COLOR\",\n  224: \"SHOW.LEVELS\",\n  225: \"FORMAT.MAIN\",\n  226: \"FORMAT.OVERLAY\",\n  227: \"ON.RECALC\",\n  228: \"EDIT.SERIES\",\n  229: \"DEFINE.STYLE\",\n  240: \"LINE.PRINT\",\n  243: \"ENTER.DATA\",\n  249: \"GALLERY.RADAR\",\n  250: \"MERGE.STYLES\",\n  251: \"EDITION.OPTIONS\",\n  252: \"PASTE.PICTURE\",\n  253: \"PASTE.PICTURE.LINK\",\n  254: \"SPELLING\",\n  256: \"ZOOM\",\n  259: \"INSERT.OBJECT\",\n  260: \"WINDOW.MINIMIZE\",\n  265: \"SOUND.NOTE\",\n  266: \"SOUND.PLAY\",\n  267: \"FORMAT.SHAPE\",\n  268: \"EXTEND.POLYGON\",\n  269: \"FORMAT.AUTO\",\n  272: \"GALLERY.3D.BAR\",\n  273: \"GALLERY.3D.SURFACE\",\n  274: \"FILL.AUTO\",\n  276: \"CUSTOMIZE.TOOLBAR\",\n  277: \"ADD.TOOL\",\n  278: \"EDIT.OBJECT\",\n  279: \"ON.DOUBLECLICK\",\n  280: \"ON.ENTRY\",\n  281: \"WORKBOOK.ADD\",\n  282: \"WORKBOOK.MOVE\",\n  283: \"WORKBOOK.COPY\",\n  284: \"WORKBOOK.OPTIONS\",\n  285: \"SAVE.WORKSPACE\",\n  288: \"CHART.WIZARD\",\n  289: \"DELETE.TOOL\",\n  290: \"MOVE.TOOL\",\n  291: \"WORKBOOK.SELECT\",\n  292: \"WORKBOOK.ACTIVATE\",\n  293: \"ASSIGN.TO.TOOL\",\n  295: \"COPY.TOOL\",\n  296: \"RESET.TOOL\",\n  297: \"CONSTRAIN.NUMERIC\",\n  298: \"PASTE.TOOL\",\n  302: \"WORKBOOK.NEW\",\n  305: \"SCENARIO.CELLS\",\n  306: \"SCENARIO.DELETE\",\n  307: \"SCENARIO.ADD\",\n  308: \"SCENARIO.EDIT\",\n  309: \"SCENARIO.SHOW\",\n  310: \"SCENARIO.SHOW.NEXT\",\n  311: \"SCENARIO.SUMMARY\",\n  312: \"PIVOT.TABLE.WIZARD\",\n  313: \"PIVOT.FIELD.PROPERTIES\",\n  314: \"PIVOT.FIELD\",\n  315: \"PIVOT.ITEM\",\n  316: \"PIVOT.ADD.FIELDS\",\n  318: \"OPTIONS.CALCULATION\",\n  319: \"OPTIONS.EDIT\",\n  320: \"OPTIONS.VIEW\",\n  321: \"ADDIN.MANAGER\",\n  322: \"MENU.EDITOR\",\n  323: \"ATTACH.TOOLBARS\",\n  324: \"VBAActivate\",\n  325: \"OPTIONS.CHART\",\n  328: \"VBA.INSERT.FILE\",\n  330: \"VBA.PROCEDURE.DEFINITION\",\n  336: \"ROUTING.SLIP\",\n  338: \"ROUTE.DOCUMENT\",\n  339: \"MAIL.LOGON\",\n  342: \"INSERT.PICTURE\",\n  343: \"EDIT.TOOL\",\n  344: \"GALLERY.DOUGHNUT\",\n  350: \"CHART.TREND\",\n  352: \"PIVOT.ITEM.PROPERTIES\",\n  354: \"WORKBOOK.INSERT\",\n  355: \"OPTIONS.TRANSITION\",\n  356: \"OPTIONS.GENERAL\",\n  370: \"FILTER.ADVANCED\",\n  373: \"MAIL.ADD.MAILER\",\n  374: \"MAIL.DELETE.MAILER\",\n  375: \"MAIL.REPLY\",\n  376: \"MAIL.REPLY.ALL\",\n  377: \"MAIL.FORWARD\",\n  378: \"MAIL.NEXT.LETTER\",\n  379: \"DATA.LABEL\",\n  380: \"INSERT.TITLE\",\n  381: \"FONT.PROPERTIES\",\n  382: \"MACRO.OPTIONS\",\n  383: \"WORKBOOK.HIDE\",\n  384: \"WORKBOOK.UNHIDE\",\n  385: \"WORKBOOK.DELETE\",\n  386: \"WORKBOOK.NAME\",\n  388: \"GALLERY.CUSTOM\",\n  390: \"ADD.CHART.AUTOFORMAT\",\n  391: \"DELETE.CHART.AUTOFORMAT\",\n  392: \"CHART.ADD.DATA\",\n  393: \"AUTO.OUTLINE\",\n  394: \"TAB.ORDER\",\n  395: \"SHOW.DIALOG\",\n  396: \"SELECT.ALL\",\n  397: \"UNGROUP.SHEETS\",\n  398: \"SUBTOTAL.CREATE\",\n  399: \"SUBTOTAL.REMOVE\",\n  400: \"RENAME.OBJECT\",\n  412: \"WORKBOOK.SCROLL\",\n  413: \"WORKBOOK.NEXT\",\n  414: \"WORKBOOK.PREV\",\n  415: \"WORKBOOK.TAB.SPLIT\",\n  416: \"FULL.SCREEN\",\n  417: \"WORKBOOK.PROTECT\",\n  420: \"SCROLLBAR.PROPERTIES\",\n  421: \"PIVOT.SHOW.PAGES\",\n  422: \"TEXT.TO.COLUMNS\",\n  423: \"FORMAT.CHARTTYPE\",\n  424: \"LINK.FORMAT\",\n  425: \"TRACER.DISPLAY\",\n  430: \"TRACER.NAVIGATE\",\n  431: \"TRACER.CLEAR\",\n  432: \"TRACER.ERROR\",\n  433: \"PIVOT.FIELD.GROUP\",\n  434: \"PIVOT.FIELD.UNGROUP\",\n  435: \"CHECKBOX.PROPERTIES\",\n  436: \"LABEL.PROPERTIES\",\n  437: \"LISTBOX.PROPERTIES\",\n  438: \"EDITBOX.PROPERTIES\",\n  439: \"PIVOT.REFRESH\",\n  440: \"LINK.COMBO\",\n  441: \"OPEN.TEXT\",\n  442: \"HIDE.DIALOG\",\n  443: \"SET.DIALOG.FOCUS\",\n  444: \"ENABLE.OBJECT\",\n  445: \"PUSHBUTTON.PROPERTIES\",\n  446: \"SET.DIALOG.DEFAULT\",\n  447: \"FILTER\",\n  448: \"FILTER.SHOW.ALL\",\n  449: \"CLEAR.OUTLINE\",\n  450: \"FUNCTION.WIZARD\",\n  451: \"ADD.LIST.ITEM\",\n  452: \"SET.LIST.ITEM\",\n  453: \"REMOVE.LIST.ITEM\",\n  454: \"SELECT.LIST.ITEM\",\n  455: \"SET.CONTROL.VALUE\",\n  456: \"SAVE.COPY.AS\",\n  458: \"OPTIONS.LISTS.ADD\",\n  459: \"OPTIONS.LISTS.DELETE\",\n  460: \"SERIES.AXES\",\n  461: \"SERIES.X\",\n  462: \"SERIES.Y\",\n  463: \"ERRORBAR.X\",\n  464: \"ERRORBAR.Y\",\n  465: \"FORMAT.CHART\",\n  466: \"SERIES.ORDER\",\n  467: \"MAIL.LOGOFF\",\n  468: \"CLEAR.ROUTING.SLIP\",\n  469: \"APP.ACTIVATE.MICROSOFT\",\n  470: \"MAIL.EDIT.MAILER\",\n  471: \"ON.SHEET\",\n  472: \"STANDARD.WIDTH\",\n  473: \"SCENARIO.MERGE\",\n  474: \"SUMMARY.INFO\",\n  475: \"FIND.FILE\",\n  476: \"ACTIVE.CELL.FONT\",\n  477: \"ENABLE.TIPWIZARD\",\n  478: \"VBA.MAKE.ADDIN\",\n  480: \"INSERTDATATABLE\",\n  481: \"WORKGROUP.OPTIONS\",\n  482: \"MAIL.SEND.MAILER\",\n  485: \"AUTOCORRECT\",\n  489: \"POST.DOCUMENT\",\n  491: \"PICKLIST\",\n  493: \"VIEW.SHOW\",\n  494: \"VIEW.DEFINE\",\n  495: \"VIEW.DELETE\",\n  509: \"SHEET.BACKGROUND\",\n  510: \"INSERT.MAP.OBJECT\",\n  511: \"OPTIONS.MENONO\",\n  517: \"MSOCHECKS\",\n  518: \"NORMAL\",\n  519: \"LAYOUT\",\n  520: \"RM.PRINT.AREA\",\n  521: \"CLEAR.PRINT.AREA\",\n  522: \"ADD.PRINT.AREA\",\n  523: \"MOVE.BRK\",\n  545: \"HIDECURR.NOTE\",\n  546: \"HIDEALL.NOTES\",\n  547: \"DELETE.NOTE\",\n  548: \"TRAVERSE.NOTES\",\n  549: \"ACTIVATE.NOTES\",\n  620: \"PROTECT.REVISIONS\",\n  621: \"UNPROTECT.REVISIONS\",\n  647: \"OPTIONS.ME\",\n  653: \"WEB.PUBLISH\",\n  667: \"NEWWEBQUERY\",\n  673: \"PIVOT.TABLE.CHART\",\n  753: \"OPTIONS.SAVE\",\n  755: \"OPTIONS.SPELL\",\n  808: \"HIDEALL.INKANNOTS\"\n};\nvar Ftab = {\n  0: \"COUNT\",\n  1: \"IF\",\n  2: \"ISNA\",\n  3: \"ISERROR\",\n  4: \"SUM\",\n  5: \"AVERAGE\",\n  6: \"MIN\",\n  7: \"MAX\",\n  8: \"ROW\",\n  9: \"COLUMN\",\n  10: \"NA\",\n  11: \"NPV\",\n  12: \"STDEV\",\n  13: \"DOLLAR\",\n  14: \"FIXED\",\n  15: \"SIN\",\n  16: \"COS\",\n  17: \"TAN\",\n  18: \"ATAN\",\n  19: \"PI\",\n  20: \"SQRT\",\n  21: \"EXP\",\n  22: \"LN\",\n  23: \"LOG10\",\n  24: \"ABS\",\n  25: \"INT\",\n  26: \"SIGN\",\n  27: \"ROUND\",\n  28: \"LOOKUP\",\n  29: \"INDEX\",\n  30: \"REPT\",\n  31: \"MID\",\n  32: \"LEN\",\n  33: \"VALUE\",\n  34: \"TRUE\",\n  35: \"FALSE\",\n  36: \"AND\",\n  37: \"OR\",\n  38: \"NOT\",\n  39: \"MOD\",\n  40: \"DCOUNT\",\n  41: \"DSUM\",\n  42: \"DAVERAGE\",\n  43: \"DMIN\",\n  44: \"DMAX\",\n  45: \"DSTDEV\",\n  46: \"VAR\",\n  47: \"DVAR\",\n  48: \"TEXT\",\n  49: \"LINEST\",\n  50: \"TREND\",\n  51: \"LOGEST\",\n  52: \"GROWTH\",\n  53: \"GOTO\",\n  54: \"HALT\",\n  55: \"RETURN\",\n  56: \"PV\",\n  57: \"FV\",\n  58: \"NPER\",\n  59: \"PMT\",\n  60: \"RATE\",\n  61: \"MIRR\",\n  62: \"IRR\",\n  63: \"RAND\",\n  64: \"MATCH\",\n  65: \"DATE\",\n  66: \"TIME\",\n  67: \"DAY\",\n  68: \"MONTH\",\n  69: \"YEAR\",\n  70: \"WEEKDAY\",\n  71: \"HOUR\",\n  72: \"MINUTE\",\n  73: \"SECOND\",\n  74: \"NOW\",\n  75: \"AREAS\",\n  76: \"ROWS\",\n  77: \"COLUMNS\",\n  78: \"OFFSET\",\n  79: \"ABSREF\",\n  80: \"RELREF\",\n  81: \"ARGUMENT\",\n  82: \"SEARCH\",\n  83: \"TRANSPOSE\",\n  84: \"ERROR\",\n  85: \"STEP\",\n  86: \"TYPE\",\n  87: \"ECHO\",\n  88: \"SET.NAME\",\n  89: \"CALLER\",\n  90: \"DEREF\",\n  91: \"WINDOWS\",\n  92: \"SERIES\",\n  93: \"DOCUMENTS\",\n  94: \"ACTIVE.CELL\",\n  95: \"SELECTION\",\n  96: \"RESULT\",\n  97: \"ATAN2\",\n  98: \"ASIN\",\n  99: \"ACOS\",\n  100: \"CHOOSE\",\n  101: \"HLOOKUP\",\n  102: \"VLOOKUP\",\n  103: \"LINKS\",\n  104: \"INPUT\",\n  105: \"ISREF\",\n  106: \"GET.FORMULA\",\n  107: \"GET.NAME\",\n  108: \"SET.VALUE\",\n  109: \"LOG\",\n  110: \"EXEC\",\n  111: \"CHAR\",\n  112: \"LOWER\",\n  113: \"UPPER\",\n  114: \"PROPER\",\n  115: \"LEFT\",\n  116: \"RIGHT\",\n  117: \"EXACT\",\n  118: \"TRIM\",\n  119: \"REPLACE\",\n  120: \"SUBSTITUTE\",\n  121: \"CODE\",\n  122: \"NAMES\",\n  123: \"DIRECTORY\",\n  124: \"FIND\",\n  125: \"CELL\",\n  126: \"ISERR\",\n  127: \"ISTEXT\",\n  128: \"ISNUMBER\",\n  129: \"ISBLANK\",\n  130: \"T\",\n  131: \"N\",\n  132: \"FOPEN\",\n  133: \"FCLOSE\",\n  134: \"FSIZE\",\n  135: \"FREADLN\",\n  136: \"FREAD\",\n  137: \"FWRITELN\",\n  138: \"FWRITE\",\n  139: \"FPOS\",\n  140: \"DATEVALUE\",\n  141: \"TIMEVALUE\",\n  142: \"SLN\",\n  143: \"SYD\",\n  144: \"DDB\",\n  145: \"GET.DEF\",\n  146: \"REFTEXT\",\n  147: \"TEXTREF\",\n  148: \"INDIRECT\",\n  149: \"REGISTER\",\n  150: \"CALL\",\n  151: \"ADD.BAR\",\n  152: \"ADD.MENU\",\n  153: \"ADD.COMMAND\",\n  154: \"ENABLE.COMMAND\",\n  155: \"CHECK.COMMAND\",\n  156: \"RENAME.COMMAND\",\n  157: \"SHOW.BAR\",\n  158: \"DELETE.MENU\",\n  159: \"DELETE.COMMAND\",\n  160: \"GET.CHART.ITEM\",\n  161: \"DIALOG.BOX\",\n  162: \"CLEAN\",\n  163: \"MDETERM\",\n  164: \"MINVERSE\",\n  165: \"MMULT\",\n  166: \"FILES\",\n  167: \"IPMT\",\n  168: \"PPMT\",\n  169: \"COUNTA\",\n  170: \"CANCEL.KEY\",\n  171: \"FOR\",\n  172: \"WHILE\",\n  173: \"BREAK\",\n  174: \"NEXT\",\n  175: \"INITIATE\",\n  176: \"REQUEST\",\n  177: \"POKE\",\n  178: \"EXECUTE\",\n  179: \"TERMINATE\",\n  180: \"RESTART\",\n  181: \"HELP\",\n  182: \"GET.BAR\",\n  183: \"PRODUCT\",\n  184: \"FACT\",\n  185: \"GET.CELL\",\n  186: \"GET.WORKSPACE\",\n  187: \"GET.WINDOW\",\n  188: \"GET.DOCUMENT\",\n  189: \"DPRODUCT\",\n  190: \"ISNONTEXT\",\n  191: \"GET.NOTE\",\n  192: \"NOTE\",\n  193: \"STDEVP\",\n  194: \"VARP\",\n  195: \"DSTDEVP\",\n  196: \"DVARP\",\n  197: \"TRUNC\",\n  198: \"ISLOGICAL\",\n  199: \"DCOUNTA\",\n  200: \"DELETE.BAR\",\n  201: \"UNREGISTER\",\n  204: \"USDOLLAR\",\n  205: \"FINDB\",\n  206: \"SEARCHB\",\n  207: \"REPLACEB\",\n  208: \"LEFTB\",\n  209: \"RIGHTB\",\n  210: \"MIDB\",\n  211: \"LENB\",\n  212: \"ROUNDUP\",\n  213: \"ROUNDDOWN\",\n  214: \"ASC\",\n  215: \"DBCS\",\n  216: \"RANK\",\n  219: \"ADDRESS\",\n  220: \"DAYS360\",\n  221: \"TODAY\",\n  222: \"VDB\",\n  223: \"ELSE\",\n  224: \"ELSE.IF\",\n  225: \"END.IF\",\n  226: \"FOR.CELL\",\n  227: \"MEDIAN\",\n  228: \"SUMPRODUCT\",\n  229: \"SINH\",\n  230: \"COSH\",\n  231: \"TANH\",\n  232: \"ASINH\",\n  233: \"ACOSH\",\n  234: \"ATANH\",\n  235: \"DGET\",\n  236: \"CREATE.OBJECT\",\n  237: \"VOLATILE\",\n  238: \"LAST.ERROR\",\n  239: \"CUSTOM.UNDO\",\n  240: \"CUSTOM.REPEAT\",\n  241: \"FORMULA.CONVERT\",\n  242: \"GET.LINK.INFO\",\n  243: \"TEXT.BOX\",\n  244: \"INFO\",\n  245: \"GROUP\",\n  246: \"GET.OBJECT\",\n  247: \"DB\",\n  248: \"PAUSE\",\n  251: \"RESUME\",\n  252: \"FREQUENCY\",\n  253: \"ADD.TOOLBAR\",\n  254: \"DELETE.TOOLBAR\",\n  255: \"User\",\n  256: \"RESET.TOOLBAR\",\n  257: \"EVALUATE\",\n  258: \"GET.TOOLBAR\",\n  259: \"GET.TOOL\",\n  260: \"SPELLING.CHECK\",\n  261: \"ERROR.TYPE\",\n  262: \"APP.TITLE\",\n  263: \"WINDOW.TITLE\",\n  264: \"SAVE.TOOLBAR\",\n  265: \"ENABLE.TOOL\",\n  266: \"PRESS.TOOL\",\n  267: \"REGISTER.ID\",\n  268: \"GET.WORKBOOK\",\n  269: \"AVEDEV\",\n  270: \"BETADIST\",\n  271: \"GAMMALN\",\n  272: \"BETAINV\",\n  273: \"BINOMDIST\",\n  274: \"CHIDIST\",\n  275: \"CHIINV\",\n  276: \"COMBIN\",\n  277: \"CONFIDENCE\",\n  278: \"CRITBINOM\",\n  279: \"EVEN\",\n  280: \"EXPONDIST\",\n  281: \"FDIST\",\n  282: \"FINV\",\n  283: \"FISHER\",\n  284: \"FISHERINV\",\n  285: \"FLOOR\",\n  286: \"GAMMADIST\",\n  287: \"GAMMAINV\",\n  288: \"CEILING\",\n  289: \"HYPGEOMDIST\",\n  290: \"LOGNORMDIST\",\n  291: \"LOGINV\",\n  292: \"NEGBINOMDIST\",\n  293: \"NORMDIST\",\n  294: \"NORMSDIST\",\n  295: \"NORMINV\",\n  296: \"NORMSINV\",\n  297: \"STANDARDIZE\",\n  298: \"ODD\",\n  299: \"PERMUT\",\n  300: \"POISSON\",\n  301: \"TDIST\",\n  302: \"WEIBULL\",\n  303: \"SUMXMY2\",\n  304: \"SUMX2MY2\",\n  305: \"SUMX2PY2\",\n  306: \"CHITEST\",\n  307: \"CORREL\",\n  308: \"COVAR\",\n  309: \"FORECAST\",\n  310: \"FTEST\",\n  311: \"INTERCEPT\",\n  312: \"PEARSON\",\n  313: \"RSQ\",\n  314: \"STEYX\",\n  315: \"SLOPE\",\n  316: \"TTEST\",\n  317: \"PROB\",\n  318: \"DEVSQ\",\n  319: \"GEOMEAN\",\n  320: \"HARMEAN\",\n  321: \"SUMSQ\",\n  322: \"KURT\",\n  323: \"SKEW\",\n  324: \"ZTEST\",\n  325: \"LARGE\",\n  326: \"SMALL\",\n  327: \"QUARTILE\",\n  328: \"PERCENTILE\",\n  329: \"PERCENTRANK\",\n  330: \"MODE\",\n  331: \"TRIMMEAN\",\n  332: \"TINV\",\n  334: \"MOVIE.COMMAND\",\n  335: \"GET.MOVIE\",\n  336: \"CONCATENATE\",\n  337: \"POWER\",\n  338: \"PIVOT.ADD.DATA\",\n  339: \"GET.PIVOT.TABLE\",\n  340: \"GET.PIVOT.FIELD\",\n  341: \"GET.PIVOT.ITEM\",\n  342: \"RADIANS\",\n  343: \"DEGREES\",\n  344: \"SUBTOTAL\",\n  345: \"SUMIF\",\n  346: \"COUNTIF\",\n  347: \"COUNTBLANK\",\n  348: \"SCENARIO.GET\",\n  349: \"OPTIONS.LISTS.GET\",\n  350: \"ISPMT\",\n  351: \"DATEDIF\",\n  352: \"DATESTRING\",\n  353: \"NUMBERSTRING\",\n  354: \"ROMAN\",\n  355: \"OPEN.DIALOG\",\n  356: \"SAVE.DIALOG\",\n  357: \"VIEW.GET\",\n  358: \"GETPIVOTDATA\",\n  359: \"HYPERLINK\",\n  360: \"PHONETIC\",\n  361: \"AVERAGEA\",\n  362: \"MAXA\",\n  363: \"MINA\",\n  364: \"STDEVPA\",\n  365: \"VARPA\",\n  366: \"STDEVA\",\n  367: \"VARA\",\n  368: \"BAHTTEXT\",\n  369: \"THAIDAYOFWEEK\",\n  370: \"THAIDIGIT\",\n  371: \"THAIMONTHOFYEAR\",\n  372: \"THAINUMSOUND\",\n  373: \"THAINUMSTRING\",\n  374: \"THAISTRINGLENGTH\",\n  375: \"ISTHAIDIGIT\",\n  376: \"ROUNDBAHTDOWN\",\n  377: \"ROUNDBAHTUP\",\n  378: \"THAIYEAR\",\n  379: \"RTD\",\n  380: \"CUBEVALUE\",\n  381: \"CUBEMEMBER\",\n  382: \"CUBEMEMBERPROPERTY\",\n  383: \"CUBERANKEDMEMBER\",\n  384: \"HEX2BIN\",\n  385: \"HEX2DEC\",\n  386: \"HEX2OCT\",\n  387: \"DEC2BIN\",\n  388: \"DEC2HEX\",\n  389: \"DEC2OCT\",\n  390: \"OCT2BIN\",\n  391: \"OCT2HEX\",\n  392: \"OCT2DEC\",\n  393: \"BIN2DEC\",\n  394: \"BIN2OCT\",\n  395: \"BIN2HEX\",\n  396: \"IMSUB\",\n  397: \"IMDIV\",\n  398: \"IMPOWER\",\n  399: \"IMABS\",\n  400: \"IMSQRT\",\n  401: \"IMLN\",\n  402: \"IMLOG2\",\n  403: \"IMLOG10\",\n  404: \"IMSIN\",\n  405: \"IMCOS\",\n  406: \"IMEXP\",\n  407: \"IMARGUMENT\",\n  408: \"IMCONJUGATE\",\n  409: \"IMAGINARY\",\n  410: \"IMREAL\",\n  411: \"COMPLEX\",\n  412: \"IMSUM\",\n  413: \"IMPRODUCT\",\n  414: \"SERIESSUM\",\n  415: \"FACTDOUBLE\",\n  416: \"SQRTPI\",\n  417: \"QUOTIENT\",\n  418: \"DELTA\",\n  419: \"GESTEP\",\n  420: \"ISEVEN\",\n  421: \"ISODD\",\n  422: \"MROUND\",\n  423: \"ERF\",\n  424: \"ERFC\",\n  425: \"BESSELJ\",\n  426: \"BESSELK\",\n  427: \"BESSELY\",\n  428: \"BESSELI\",\n  429: \"XIRR\",\n  430: \"XNPV\",\n  431: \"PRICEMAT\",\n  432: \"YIELDMAT\",\n  433: \"INTRATE\",\n  434: \"RECEIVED\",\n  435: \"DISC\",\n  436: \"PRICEDISC\",\n  437: \"YIELDDISC\",\n  438: \"TBILLEQ\",\n  439: \"TBILLPRICE\",\n  440: \"TBILLYIELD\",\n  441: \"PRICE\",\n  442: \"YIELD\",\n  443: \"DOLLARDE\",\n  444: \"DOLLARFR\",\n  445: \"NOMINAL\",\n  446: \"EFFECT\",\n  447: \"CUMPRINC\",\n  448: \"CUMIPMT\",\n  449: \"EDATE\",\n  450: \"EOMONTH\",\n  451: \"YEARFRAC\",\n  452: \"COUPDAYBS\",\n  453: \"COUPDAYS\",\n  454: \"COUPDAYSNC\",\n  455: \"COUPNCD\",\n  456: \"COUPNUM\",\n  457: \"COUPPCD\",\n  458: \"DURATION\",\n  459: \"MDURATION\",\n  460: \"ODDLPRICE\",\n  461: \"ODDLYIELD\",\n  462: \"ODDFPRICE\",\n  463: \"ODDFYIELD\",\n  464: \"RANDBETWEEN\",\n  465: \"WEEKNUM\",\n  466: \"AMORDEGRC\",\n  467: \"AMORLINC\",\n  468: \"CONVERT\",\n  724: \"SHEETJS\",\n  469: \"ACCRINT\",\n  470: \"ACCRINTM\",\n  471: \"WORKDAY\",\n  472: \"NETWORKDAYS\",\n  473: \"GCD\",\n  474: \"MULTINOMIAL\",\n  475: \"LCM\",\n  476: \"FVSCHEDULE\",\n  477: \"CUBEKPIMEMBER\",\n  478: \"CUBESET\",\n  479: \"CUBESETCOUNT\",\n  480: \"IFERROR\",\n  481: \"COUNTIFS\",\n  482: \"SUMIFS\",\n  483: \"AVERAGEIF\",\n  484: \"AVERAGEIFS\"\n};\nvar FtabArgc = {\n  2: 1,\n  3: 1,\n  10: 0,\n  15: 1,\n  16: 1,\n  17: 1,\n  18: 1,\n  19: 0,\n  20: 1,\n  21: 1,\n  22: 1,\n  23: 1,\n  24: 1,\n  25: 1,\n  26: 1,\n  27: 2,\n  30: 2,\n  31: 3,\n  32: 1,\n  33: 1,\n  34: 0,\n  35: 0,\n  38: 1,\n  39: 2,\n  40: 3,\n  41: 3,\n  42: 3,\n  43: 3,\n  44: 3,\n  45: 3,\n  47: 3,\n  48: 2,\n  53: 1,\n  61: 3,\n  63: 0,\n  65: 3,\n  66: 3,\n  67: 1,\n  68: 1,\n  69: 1,\n  70: 1,\n  71: 1,\n  72: 1,\n  73: 1,\n  74: 0,\n  75: 1,\n  76: 1,\n  77: 1,\n  79: 2,\n  80: 2,\n  83: 1,\n  85: 0,\n  86: 1,\n  89: 0,\n  90: 1,\n  94: 0,\n  95: 0,\n  97: 2,\n  98: 1,\n  99: 1,\n  101: 3,\n  102: 3,\n  105: 1,\n  106: 1,\n  108: 2,\n  111: 1,\n  112: 1,\n  113: 1,\n  114: 1,\n  117: 2,\n  118: 1,\n  119: 4,\n  121: 1,\n  126: 1,\n  127: 1,\n  128: 1,\n  129: 1,\n  130: 1,\n  131: 1,\n  133: 1,\n  134: 1,\n  135: 1,\n  136: 2,\n  137: 2,\n  138: 2,\n  140: 1,\n  141: 1,\n  142: 3,\n  143: 4,\n  144: 4,\n  161: 1,\n  162: 1,\n  163: 1,\n  164: 1,\n  165: 2,\n  172: 1,\n  175: 2,\n  176: 2,\n  177: 3,\n  178: 2,\n  179: 1,\n  184: 1,\n  186: 1,\n  189: 3,\n  190: 1,\n  195: 3,\n  196: 3,\n  197: 1,\n  198: 1,\n  199: 3,\n  201: 1,\n  207: 4,\n  210: 3,\n  211: 1,\n  212: 2,\n  213: 2,\n  214: 1,\n  215: 1,\n  225: 0,\n  229: 1,\n  230: 1,\n  231: 1,\n  232: 1,\n  233: 1,\n  234: 1,\n  235: 3,\n  244: 1,\n  247: 4,\n  252: 2,\n  257: 1,\n  261: 1,\n  271: 1,\n  273: 4,\n  274: 2,\n  275: 2,\n  276: 2,\n  277: 3,\n  278: 3,\n  279: 1,\n  280: 3,\n  281: 3,\n  282: 3,\n  283: 1,\n  284: 1,\n  285: 2,\n  286: 4,\n  287: 3,\n  288: 2,\n  289: 4,\n  290: 3,\n  291: 3,\n  292: 3,\n  293: 4,\n  294: 1,\n  295: 3,\n  296: 1,\n  297: 3,\n  298: 1,\n  299: 2,\n  300: 3,\n  301: 3,\n  302: 4,\n  303: 2,\n  304: 2,\n  305: 2,\n  306: 2,\n  307: 2,\n  308: 2,\n  309: 3,\n  310: 2,\n  311: 2,\n  312: 2,\n  313: 2,\n  314: 2,\n  315: 2,\n  316: 4,\n  325: 2,\n  326: 2,\n  327: 2,\n  328: 2,\n  331: 2,\n  332: 2,\n  337: 2,\n  342: 1,\n  343: 1,\n  346: 2,\n  347: 1,\n  350: 4,\n  351: 3,\n  352: 1,\n  353: 2,\n  360: 1,\n  368: 1,\n  369: 1,\n  370: 1,\n  371: 1,\n  372: 1,\n  373: 1,\n  374: 1,\n  375: 1,\n  376: 1,\n  377: 1,\n  378: 1,\n  382: 3,\n  385: 1,\n  392: 1,\n  393: 1,\n  396: 2,\n  397: 2,\n  398: 2,\n  399: 1,\n  400: 1,\n  401: 1,\n  402: 1,\n  403: 1,\n  404: 1,\n  405: 1,\n  406: 1,\n  407: 1,\n  408: 1,\n  409: 1,\n  410: 1,\n  414: 4,\n  415: 1,\n  416: 1,\n  417: 2,\n  420: 1,\n  421: 1,\n  422: 2,\n  424: 1,\n  425: 2,\n  426: 2,\n  427: 2,\n  428: 2,\n  430: 3,\n  438: 3,\n  439: 3,\n  440: 3,\n  443: 2,\n  444: 2,\n  445: 2,\n  446: 2,\n  447: 6,\n  448: 6,\n  449: 2,\n  450: 2,\n  464: 2,\n  468: 3,\n  476: 2,\n  479: 1,\n  480: 2,\n  65535: 0\n};\n/* Part 3 TODO: actually parse formulae */\nfunction ods_to_csf_formula(f/*:string*/)/*:string*/ {\n\tif(f.slice(0,3) == \"of:\") f = f.slice(3);\n\t/* 5.2 Basic Expressions */\n\tif(f.charCodeAt(0) == 61) {\n\t\tf = f.slice(1);\n\t\tif(f.charCodeAt(0) == 61) f = f.slice(1);\n\t}\n\tf = f.replace(/COM\\.MICROSOFT\\./g, \"\");\n\t/* Part 3 Section 5.8 References */\n\tf = f.replace(/\\[((?:\\.[A-Z]+[0-9]+)(?::\\.[A-Z]+[0-9]+)?)\\]/g, function($$, $1) { return $1.replace(/\\./g,\"\"); });\n\tf = f.replace(/\\$'([^']|'')+'/g, function($$) { return $$.slice(1); });\n\tf = f.replace(/\\$([^\\]\\. #$]+)/g, function($$, $1) { return ($1).match(/^([A-Z]{1,2}|[A-W][A-Z]{2}|X[A-E][A-Z]|XF[A-D])?(10[0-3]\\d{4}|104[0-7]\\d{3}|1048[0-4]\\d{2}|10485[0-6]\\d|104857[0-6]|[1-9]\\d{0,5})?$/) ? $$ : $1; });\n\t/* TODO: something other than this */\n\tf = f.replace(/\\[.(#[A-Z]*[?!])\\]/g, \"$1\");\n\treturn f.replace(/[;~]/g,\",\").replace(/\\|/g,\";\");\n}\n\nfunction csf_to_ods_formula(f/*:string*/)/*:string*/ {\n\tvar o = \"of:=\" + f.replace(crefregex, \"$1[.$2$3$4$5]\").replace(/\\]:\\[/g,\":\");\n\t/* TODO: something other than this */\n\treturn o.replace(/;/g, \"|\").replace(/,/g,\";\");\n}\n\nfunction ods_to_csf_3D(r/*:string*/)/*:[string, string]*/ {\n\tr = r.replace(/\\$'([^']|'')+'/g, function($$) { return $$.slice(1); });\n\tr = r.replace(/\\$([^\\]\\. #$]+)/g, function($$, $1) { return ($1).match(/^([A-Z]{1,2}|[A-W][A-Z]{2}|X[A-E][A-Z]|XF[A-D])?(10[0-3]\\d{4}|104[0-7]\\d{3}|1048[0-4]\\d{2}|10485[0-6]\\d|104857[0-6]|[1-9]\\d{0,5})?$/) ? $$ : $1; });\n\tvar a = r.split(\":\");\n\tvar s = a[0].split(\".\")[0];\n\treturn [s, a[0].split(\".\")[1] + (a.length > 1 ? (\":\" + (a[1].split(\".\")[1] || a[1].split(\".\")[0])) : \"\")];\n}\n\nfunction csf_to_ods_3D(r/*:string*/)/*:string*/ {\n\treturn r.replace(/!/,\".\");\n}\n\nvar strs = {}; // shared strings\nvar _ssfopts = {}; // spreadsheet formatting options\n\n\n/*global Map */\nvar browser_has_Map = typeof Map !== 'undefined';\n\nfunction get_sst_id(sst/*:SST*/, str/*:string*/, rev)/*:number*/ {\n\tvar i = 0, len = sst.length;\n\tif(rev) {\n\t\tif(browser_has_Map ? rev.has(str) : Object.prototype.hasOwnProperty.call(rev, str)) {\n\t\t\tvar revarr = browser_has_Map ? rev.get(str) : rev[str];\n\t\t\tfor(; i < revarr.length; ++i) {\n\t\t\t\tif(sst[revarr[i]].t === str) { sst.Count ++; return revarr[i]; }\n\t\t\t}\n\t\t}\n\t} else for(; i < len; ++i) {\n\t\tif(sst[i].t === str) { sst.Count ++; return i; }\n\t}\n\tsst[len] = ({t:str}/*:any*/); sst.Count ++; sst.Unique ++;\n\tif(rev) {\n\t\tif(browser_has_Map) {\n\t\t\tif(!rev.has(str)) rev.set(str, []);\n\t\t\trev.get(str).push(len);\n\t\t} else {\n\t\t\tif(!Object.prototype.hasOwnProperty.call(rev, str)) rev[str] = [];\n\t\t\trev[str].push(len);\n\t\t}\n\t}\n\treturn len;\n}\n\nfunction col_obj_w(C/*:number*/, col) {\n\tvar p = ({min:C+1,max:C+1}/*:any*/);\n\t/* wch (chars), wpx (pixels) */\n\tvar wch = -1;\n\tif(col.MDW) MDW = col.MDW;\n\tif(col.width != null) p.customWidth = 1;\n\telse if(col.wpx != null) wch = px2char(col.wpx);\n\telse if(col.wch != null) wch = col.wch;\n\tif(wch > -1) { p.width = char2width(wch); p.customWidth = 1; }\n\telse if(col.width != null) p.width = col.width;\n\tif(col.hidden) p.hidden = true;\n\tif(col.level != null) { p.outlineLevel = p.level = col.level; }\n\treturn p;\n}\n\nfunction default_margins(margins/*:Margins*/, mode/*:?string*/) {\n\tif(!margins) return;\n\tvar defs = [0.7, 0.7, 0.75, 0.75, 0.3, 0.3];\n\tif(mode == 'xlml') defs = [1, 1, 1, 1, 0.5, 0.5];\n\tif(margins.left   == null) margins.left   = defs[0];\n\tif(margins.right  == null) margins.right  = defs[1];\n\tif(margins.top    == null) margins.top    = defs[2];\n\tif(margins.bottom == null) margins.bottom = defs[3];\n\tif(margins.header == null) margins.header = defs[4];\n\tif(margins.footer == null) margins.footer = defs[5];\n}\n\nfunction get_cell_style(styles/*:Array<any>*/, cell/*:Cell*/, opts) {\n\tvar z = opts.revssf[cell.z != null ? cell.z : \"General\"];\n\tvar i = 0x3c, len = styles.length;\n\tif(z == null && opts.ssf) {\n\t\tfor(; i < 0x188; ++i) if(opts.ssf[i] == null) {\n\t\t\tSSF__load(cell.z, i);\n\t\t\t// $FlowIgnore\n\t\t\topts.ssf[i] = cell.z;\n\t\t\topts.revssf[cell.z] = z = i;\n\t\t\tbreak;\n\t\t}\n\t}\n\tfor(i = 0; i != len; ++i) if(styles[i].numFmtId === z) return i;\n\tstyles[len] = {\n\t\tnumFmtId:z,\n\t\tfontId:0,\n\t\tfillId:0,\n\t\tborderId:0,\n\t\txfId:0,\n\t\tapplyNumberFormat:1\n\t};\n\treturn len;\n}\n\nfunction safe_format(p/*:Cell*/, fmtid/*:number*/, fillid/*:?number*/, opts, themes, styles) {\n\ttry {\n\t\tif(opts.cellNF) p.z = table_fmt[fmtid];\n\t} catch(e) { if(opts.WTF) throw e; }\n\tif(p.t === 'z' && !opts.cellStyles) return;\n\tif(p.t === 'd' && typeof p.v === 'string') p.v = parseDate(p.v);\n\tif((!opts || opts.cellText !== false) && p.t !== 'z') try {\n\t\tif(table_fmt[fmtid] == null) SSF__load(SSFImplicit[fmtid] || \"General\", fmtid);\n\t\tif(p.t === 'e') p.w = p.w || BErr[p.v];\n\t\telse if(fmtid === 0) {\n\t\t\tif(p.t === 'n') {\n\t\t\t\tif((p.v|0) === p.v) p.w = p.v.toString(10);\n\t\t\t\telse p.w = SSF_general_num(p.v);\n\t\t\t}\n\t\t\telse if(p.t === 'd') {\n\t\t\t\tvar dd = datenum(p.v);\n\t\t\t\tif((dd|0) === dd) p.w = dd.toString(10);\n\t\t\t\telse p.w = SSF_general_num(dd);\n\t\t\t}\n\t\t\telse if(p.v === undefined) return \"\";\n\t\t\telse p.w = SSF_general(p.v,_ssfopts);\n\t\t}\n\t\telse if(p.t === 'd') p.w = SSF_format(fmtid,datenum(p.v),_ssfopts);\n\t\telse p.w = SSF_format(fmtid,p.v,_ssfopts);\n\t} catch(e) { if(opts.WTF) throw e; }\n\tif(!opts.cellStyles) return;\n\tif(fillid != null) try {\n\t\tp.s = styles.Fills[fillid];\n\t\tif (p.s.fgColor && p.s.fgColor.theme && !p.s.fgColor.rgb) {\n\t\t\tp.s.fgColor.rgb = rgb_tint(themes.themeElements.clrScheme[p.s.fgColor.theme].rgb, p.s.fgColor.tint || 0);\n\t\t\tif(opts.WTF) p.s.fgColor.raw_rgb = themes.themeElements.clrScheme[p.s.fgColor.theme].rgb;\n\t\t}\n\t\tif (p.s.bgColor && p.s.bgColor.theme) {\n\t\t\tp.s.bgColor.rgb = rgb_tint(themes.themeElements.clrScheme[p.s.bgColor.theme].rgb, p.s.bgColor.tint || 0);\n\t\t\tif(opts.WTF) p.s.bgColor.raw_rgb = themes.themeElements.clrScheme[p.s.bgColor.theme].rgb;\n\t\t}\n\t} catch(e) { if(opts.WTF && styles.Fills) throw e; }\n}\n\nfunction check_ws(ws/*:Worksheet*/, sname/*:string*/, i/*:number*/) {\n\tif(ws && ws['!ref']) {\n\t\tvar range = safe_decode_range(ws['!ref']);\n\t\tif(range.e.c < range.s.c || range.e.r < range.s.r) throw new Error(\"Bad range (\" + i + \"): \" + ws['!ref']);\n\t}\n}\nfunction parse_ws_xml_dim(ws/*:Worksheet*/, s/*:string*/) {\n\tvar d = safe_decode_range(s);\n\tif(d.s.r<=d.e.r && d.s.c<=d.e.c && d.s.r>=0 && d.s.c>=0) ws[\"!ref\"] = encode_range(d);\n}\nvar mergecregex = /<(?:\\w:)?mergeCell ref=\"[A-Z0-9:]+\"\\s*[\\/]?>/g;\nvar sheetdataregex = /<(?:\\w+:)?sheetData[^>]*>([\\s\\S]*)<\\/(?:\\w+:)?sheetData>/;\nvar hlinkregex = /<(?:\\w:)?hyperlink [^>]*>/mg;\nvar dimregex = /\"(\\w*:\\w*)\"/;\nvar colregex = /<(?:\\w:)?col\\b[^>]*[\\/]?>/g;\nvar afregex = /<(?:\\w:)?autoFilter[^>]*([\\/]|>([\\s\\S]*)<\\/(?:\\w:)?autoFilter)>/g;\nvar marginregex= /<(?:\\w:)?pageMargins[^>]*\\/>/g;\nvar sheetprregex = /<(?:\\w:)?sheetPr\\b(?:[^>a-z][^>]*)?\\/>/;\nvar sheetprregex2= /<(?:\\w:)?sheetPr[^>]*(?:[\\/]|>([\\s\\S]*)<\\/(?:\\w:)?sheetPr)>/;\nvar svsregex = /<(?:\\w:)?sheetViews[^>]*(?:[\\/]|>([\\s\\S]*)<\\/(?:\\w:)?sheetViews)>/;\n\n/* 18.3 Worksheets */\nfunction parse_ws_xml(data/*:?string*/, opts, idx/*:number*/, rels, wb/*:WBWBProps*/, themes, styles)/*:Worksheet*/ {\n\tif(!data) return data;\n\tif(!rels) rels = {'!id':{}};\n\tif(DENSE != null && opts.dense == null) opts.dense = DENSE;\n\n\t/* 18.3.1.99 worksheet CT_Worksheet */\n\tvar s = ({}/*:any*/); if(opts.dense) s[\"!data\"] = [];\n\tvar refguess/*:Range*/ = ({s: {r:2000000, c:2000000}, e: {r:0, c:0} }/*:any*/);\n\n\tvar data1 = \"\", data2 = \"\";\n\tvar mtch/*:?any*/ = data.match(sheetdataregex);\n\tif(mtch) {\n\t\tdata1 = data.slice(0, mtch.index);\n\t\tdata2 = data.slice(mtch.index + mtch[0].length);\n\t} else data1 = data2 = data;\n\n\t/* 18.3.1.82 sheetPr CT_SheetPr */\n\tvar sheetPr = data1.match(sheetprregex);\n\tif(sheetPr) parse_ws_xml_sheetpr(sheetPr[0], s, wb, idx);\n\telse if((sheetPr = data1.match(sheetprregex2))) parse_ws_xml_sheetpr2(sheetPr[0], sheetPr[1]||\"\", s, wb, idx, styles, themes);\n\n\t/* 18.3.1.35 dimension CT_SheetDimension */\n\tvar ridx = (data1.match(/<(?:\\w*:)?dimension/)||{index:-1}).index;\n\tif(ridx > 0) {\n\t\tvar ref = data1.slice(ridx,ridx+50).match(dimregex);\n\t\tif(ref && !(opts && opts.nodim)) parse_ws_xml_dim(s, ref[1]);\n\t}\n\n\t/* 18.3.1.88 sheetViews CT_SheetViews */\n\tvar svs = data1.match(svsregex);\n\tif(svs && svs[1]) parse_ws_xml_sheetviews(svs[1], wb);\n\n\t/* 18.3.1.17 cols CT_Cols */\n\tvar columns/*:Array<ColInfo>*/ = [];\n\tif(opts.cellStyles) {\n\t\t/* 18.3.1.13 col CT_Col */\n\t\tvar cols = data1.match(colregex);\n\t\tif(cols) parse_ws_xml_cols(columns, cols);\n\t}\n\n\t/* 18.3.1.80 sheetData CT_SheetData ? */\n\tif(mtch) parse_ws_xml_data(mtch[1], s, opts, refguess, themes, styles);\n\n\t/* 18.3.1.2  autoFilter CT_AutoFilter */\n\tvar afilter = data2.match(afregex);\n\tif(afilter) s['!autofilter'] = parse_ws_xml_autofilter(afilter[0]);\n\n\t/* 18.3.1.55 mergeCells CT_MergeCells */\n\tvar merges/*:Array<Range>*/ = [];\n\tvar _merge = data2.match(mergecregex);\n\tif(_merge) for(ridx = 0; ridx != _merge.length; ++ridx)\n\t\tmerges[ridx] = safe_decode_range(_merge[ridx].slice(_merge[ridx].indexOf(\"\\\"\")+1));\n\n\t/* 18.3.1.48 hyperlinks CT_Hyperlinks */\n\tvar hlink = data2.match(hlinkregex);\n\tif(hlink) parse_ws_xml_hlinks(s, hlink, rels);\n\n\t/* 18.3.1.62 pageMargins CT_PageMargins */\n\tvar margins = data2.match(marginregex);\n\tif(margins) s['!margins'] = parse_ws_xml_margins(parsexmltag(margins[0]));\n\n\tif(opts && opts.nodim) refguess.s.c = refguess.s.r = 0;\n\tif(!s[\"!ref\"] && refguess.e.c >= refguess.s.c && refguess.e.r >= refguess.s.r) s[\"!ref\"] = encode_range(refguess);\n\tif(opts.sheetRows > 0 && s[\"!ref\"]) {\n\t\tvar tmpref = safe_decode_range(s[\"!ref\"]);\n\t\tif(opts.sheetRows <= +tmpref.e.r) {\n\t\t\ttmpref.e.r = opts.sheetRows - 1;\n\t\t\tif(tmpref.e.r > refguess.e.r) tmpref.e.r = refguess.e.r;\n\t\t\tif(tmpref.e.r < tmpref.s.r) tmpref.s.r = tmpref.e.r;\n\t\t\tif(tmpref.e.c > refguess.e.c) tmpref.e.c = refguess.e.c;\n\t\t\tif(tmpref.e.c < tmpref.s.c) tmpref.s.c = tmpref.e.c;\n\t\t\ts[\"!fullref\"] = s[\"!ref\"];\n\t\t\ts[\"!ref\"] = encode_range(tmpref);\n\t\t}\n\t}\n\tif(columns.length > 0) s[\"!cols\"] = columns;\n\tif(merges.length > 0) s[\"!merges\"] = merges;\n\treturn s;\n}\n\nfunction write_ws_xml_merges(merges/*:Array<Range>*/)/*:string*/ {\n\tif(merges.length === 0) return \"\";\n\tvar o = '<mergeCells count=\"' + merges.length + '\">';\n\tfor(var i = 0; i != merges.length; ++i) o += '<mergeCell ref=\"' + encode_range(merges[i]) + '\"/>';\n\treturn o + '</mergeCells>';\n}\n\n/* 18.3.1.82-3 sheetPr CT_ChartsheetPr / CT_SheetPr */\nfunction parse_ws_xml_sheetpr(sheetPr/*:string*/, s, wb/*:WBWBProps*/, idx/*:number*/) {\n\tvar data = parsexmltag(sheetPr);\n\tif(!wb.Sheets[idx]) wb.Sheets[idx] = {};\n\tif(data.codeName) wb.Sheets[idx].CodeName = unescapexml(utf8read(data.codeName));\n}\nfunction parse_ws_xml_sheetpr2(sheetPr/*:string*/, body/*:string*/, s, wb/*:WBWBProps*/, idx/*:number*/) {\n\tparse_ws_xml_sheetpr(sheetPr.slice(0, sheetPr.indexOf(\">\")), s, wb, idx);\n}\nfunction write_ws_xml_sheetpr(ws, wb, idx, opts, o) {\n\tvar needed = false;\n\tvar props = {}, payload = null;\n\tif(opts.bookType !== 'xlsx' && wb.vbaraw) {\n\t\tvar cname = wb.SheetNames[idx];\n\t\ttry { if(wb.Workbook) cname = wb.Workbook.Sheets[idx].CodeName || cname; } catch(e) {}\n\t\tneeded = true;\n\t\tprops.codeName = utf8write(escapexml(cname));\n\t}\n\n\tif(ws && ws[\"!outline\"]) {\n\t\tvar outlineprops = {summaryBelow:1, summaryRight:1};\n\t\tif(ws[\"!outline\"].above) outlineprops.summaryBelow = 0;\n\t\tif(ws[\"!outline\"].left) outlineprops.summaryRight = 0;\n\t\tpayload = (payload||\"\") + writextag('outlinePr', null, outlineprops);\n\t}\n\n\tif(!needed && !payload) return;\n\to[o.length] = (writextag('sheetPr', payload, props));\n}\n\n/* 18.3.1.85 sheetProtection CT_SheetProtection */\nvar sheetprot_deffalse = [\"objects\", \"scenarios\", \"selectLockedCells\", \"selectUnlockedCells\"];\nvar sheetprot_deftrue = [\n\t\"formatColumns\", \"formatRows\", \"formatCells\",\n\t\"insertColumns\", \"insertRows\", \"insertHyperlinks\",\n\t\"deleteColumns\", \"deleteRows\",\n\t\"sort\", \"autoFilter\", \"pivotTables\"\n];\nfunction write_ws_xml_protection(sp)/*:string*/ {\n\t// algorithmName, hashValue, saltValue, spinCount\n\tvar o = ({sheet:1}/*:any*/);\n\tsheetprot_deffalse.forEach(function(n) { if(sp[n] != null && sp[n]) o[n] = \"1\"; });\n\tsheetprot_deftrue.forEach(function(n) { if(sp[n] != null && !sp[n]) o[n] = \"0\"; });\n\t/* TODO: algorithm */\n\tif(sp.password) o.password = crypto_CreatePasswordVerifier_Method1(sp.password).toString(16).toUpperCase();\n\treturn writextag('sheetProtection', null, o);\n}\n\nfunction parse_ws_xml_hlinks(s, data/*:Array<string>*/, rels) {\n\tvar dense = s[\"!data\"] != null;\n\tfor(var i = 0; i != data.length; ++i) {\n\t\tvar val = parsexmltag(utf8read(data[i]), true);\n\t\tif(!val.ref) return;\n\t\tvar rel = ((rels || {})['!id']||[])[val.id];\n\t\tif(rel) {\n\t\t\tval.Target = rel.Target;\n\t\t\tif(val.location) val.Target += \"#\"+unescapexml(val.location);\n\t\t} else {\n\t\t\tval.Target = \"#\" + unescapexml(val.location);\n\t\t\trel = {Target: val.Target, TargetMode: 'Internal'};\n\t\t}\n\t\tval.Rel = rel;\n\t\tif(val.tooltip) { val.Tooltip = val.tooltip; delete val.tooltip; }\n\t\tvar rng = safe_decode_range(val.ref);\n\t\tfor(var R=rng.s.r;R<=rng.e.r;++R) for(var C=rng.s.c;C<=rng.e.c;++C) {\n\t\t\tvar addr = encode_col(C) + encode_row(R);\n\t\t\tif(dense) {\n\t\t\t\tif(!s[\"!data\"][R]) s[\"!data\"][R] = [];\n\t\t\t\tif(!s[\"!data\"][R][C]) s[\"!data\"][R][C] = {t:\"z\",v:undefined};\n\t\t\t\ts[\"!data\"][R][C].l = val;\n\t\t\t} else {\n\t\t\t\tif(!s[addr]) s[addr] = {t:\"z\",v:undefined};\n\t\t\t\ts[addr].l = val;\n\t\t\t}\n\t\t}\n\t}\n}\n\nfunction parse_ws_xml_margins(margin) {\n\tvar o = {};\n\t[\"left\", \"right\", \"top\", \"bottom\", \"header\", \"footer\"].forEach(function(k) {\n\t\tif(margin[k]) o[k] = parseFloat(margin[k]);\n\t});\n\treturn o;\n}\nfunction write_ws_xml_margins(margin)/*:string*/ {\n\tdefault_margins(margin);\n\treturn writextag('pageMargins', null, margin);\n}\n\nfunction parse_ws_xml_cols(columns, cols) {\n\tvar seencol = false;\n\tfor(var coli = 0; coli != cols.length; ++coli) {\n\t\tvar coll = parsexmltag(cols[coli], true);\n\t\tif(coll.hidden) coll.hidden = parsexmlbool(coll.hidden);\n\t\tvar colm=parseInt(coll.min, 10)-1, colM=parseInt(coll.max,10)-1;\n\t\tif(coll.outlineLevel) coll.level = (+coll.outlineLevel || 0);\n\t\tdelete coll.min; delete coll.max; coll.width = +coll.width;\n\t\tif(!seencol && coll.width) { seencol = true; find_mdw_colw(coll.width); }\n\t\tprocess_col(coll);\n\t\twhile(colm <= colM) columns[colm++] = dup(coll);\n\t}\n}\nfunction write_ws_xml_cols(ws, cols)/*:string*/ {\n\tvar o = [\"<cols>\"], col;\n\tfor(var i = 0; i != cols.length; ++i) {\n\t\tif(!(col = cols[i])) continue;\n\t\to[o.length] = (writextag('col', null, col_obj_w(i, col)));\n\t}\n\to[o.length] = \"</cols>\";\n\treturn o.join(\"\");\n}\n\nfunction parse_ws_xml_autofilter(data/*:string*/) {\n\tvar o = { ref: (data.match(/ref=\"([^\"]*)\"/)||[])[1]};\n\treturn o;\n}\nfunction write_ws_xml_autofilter(data, ws, wb, idx)/*:string*/ {\n\tvar ref = typeof data.ref == \"string\" ? data.ref : encode_range(data.ref);\n\tif(!wb.Workbook) wb.Workbook = ({Sheets:[]}/*:any*/);\n\tif(!wb.Workbook.Names) wb.Workbook.Names = [];\n\tvar names/*: Array<any> */ = wb.Workbook.Names;\n\tvar range = decode_range(ref);\n\tif(range.s.r == range.e.r) { range.e.r = decode_range(ws[\"!ref\"]).e.r; ref = encode_range(range); }\n\tfor(var i = 0; i < names.length; ++i) {\n\t\tvar name = names[i];\n\t\tif(name.Name != '_xlnm._FilterDatabase') continue;\n\t\tif(name.Sheet != idx) continue;\n\t\tname.Ref = formula_quote_sheet_name(wb.SheetNames[idx]) + \"!\" + fix_range(ref); break;\n\t}\n\tif(i == names.length) names.push({ Name: '_xlnm._FilterDatabase', Sheet: idx, Ref: \"'\" + wb.SheetNames[idx] + \"'!\" + ref  });\n\treturn writextag(\"autoFilter\", null, {ref:ref});\n}\n\n/* 18.3.1.88 sheetViews CT_SheetViews */\n/* 18.3.1.87 sheetView CT_SheetView */\nvar sviewregex = /<(?:\\w:)?sheetView(?:[^>a-z][^>]*)?\\/?>/g;\nfunction parse_ws_xml_sheetviews(data, wb/*:WBWBProps*/) {\n\tif(!wb.Views) wb.Views = [{}];\n\t(data.match(sviewregex)||[]).forEach(function(r/*:string*/, i/*:number*/) {\n\t\tvar tag = parsexmltag(r);\n\t\t// $FlowIgnore\n\t\tif(!wb.Views[i]) wb.Views[i] = {};\n\t\t// $FlowIgnore\n\t\tif(+tag.zoomScale) wb.Views[i].zoom = +tag.zoomScale;\n\t\t// $FlowIgnore\n\t\tif(tag.rightToLeft && parsexmlbool(tag.rightToLeft)) wb.Views[i].RTL = true;\n\t});\n}\nfunction write_ws_xml_sheetviews(ws, opts, idx, wb)/*:string*/ {\n\tvar sview = ({workbookViewId:\"0\"}/*:any*/);\n\t// $FlowIgnore\n\tif((((wb||{}).Workbook||{}).Views||[])[0]) sview.rightToLeft = wb.Workbook.Views[0].RTL ? \"1\" : \"0\";\n\treturn writextag(\"sheetViews\", writextag(\"sheetView\", null, sview), {});\n}\n\nfunction write_ws_xml_cell(cell/*:Cell*/, ref, ws, opts/*::, idx, wb*/)/*:string*/ {\n\tif(cell.c) ws['!comments'].push([ref, cell.c]);\n\tif((cell.v === undefined || cell.t === \"z\" && !(opts||{}).sheetStubs) && typeof cell.f !== \"string\" && typeof cell.z == \"undefined\") return \"\";\n\tvar vv = \"\";\n\tvar oldt = cell.t, oldv = cell.v;\n\tif(cell.t !== \"z\") switch(cell.t) {\n\t\tcase 'b': vv = cell.v ? \"1\" : \"0\"; break;\n\t\tcase 'n': vv = ''+cell.v; break;\n\t\tcase 'e': vv = BErr[cell.v]; break;\n\t\tcase 'd':\n\t\t\tif(opts && opts.cellDates) vv = parseDate(cell.v, -1).toISOString();\n\t\t\telse {\n\t\t\t\tcell = dup(cell);\n\t\t\t\tcell.t = 'n';\n\t\t\t\tvv = ''+(cell.v = datenum(parseDate(cell.v)));\n\t\t\t}\n\t\t\tif(typeof cell.z === 'undefined') cell.z = table_fmt[14];\n\t\t\tbreak;\n\t\tdefault: vv = cell.v; break;\n\t}\n\tvar v = (cell.t == \"z\" || cell.v == null)? \"\" : writetag('v', escapexml(vv)), o = ({r:ref}/*:any*/);\n\t/* TODO: cell style */\n\tvar os = get_cell_style(opts.cellXfs, cell, opts);\n\tif(os !== 0) o.s = os;\n\tswitch(cell.t) {\n\t\tcase 'n': break;\n\t\tcase 'd': o.t = \"d\"; break;\n\t\tcase 'b': o.t = \"b\"; break;\n\t\tcase 'e': o.t = \"e\"; break;\n\t\tcase 'z': break;\n\t\tdefault: if(cell.v == null) { delete cell.t; break; }\n\t\t\tif(cell.v.length > 32767) throw new Error(\"Text length must not exceed 32767 characters\");\n\t\t\tif(opts && opts.bookSST) {\n\t\t\t\tv = writetag('v', ''+get_sst_id(opts.Strings, cell.v, opts.revStrings));\n\t\t\t\to.t = \"s\"; break;\n\t\t\t}\n\t\t\telse o.t = \"str\"; break;\n\t}\n\tif(cell.t != oldt) { cell.t = oldt; cell.v = oldv; }\n\tif(typeof cell.f == \"string\" && cell.f) {\n\t\tvar ff = cell.F && cell.F.slice(0, ref.length) == ref ? {t:\"array\", ref:cell.F} : null;\n\t\tv = writextag('f', escapexml(cell.f), ff) + (cell.v != null ? v : \"\");\n\t}\n\tif(cell.l) {\n\t\tcell.l.display = escapexml(vv);\n\t\tws['!links'].push([ref, cell.l]);\n\t}\n\tif(cell.D) o.cm = 1;\n\treturn writextag('c', v, o);\n}\n\nvar parse_ws_xml_data = /*#__PURE__*/(function() {\n\tvar cellregex = /<(?:\\w+:)?c[ \\/>]/, rowregex = /<\\/(?:\\w+:)?row>/;\n\tvar rregex = /r=[\"']([^\"']*)[\"']/, isregex = /<(?:\\w+:)?is>([\\S\\s]*?)<\\/(?:\\w+:)?is>/;\n\tvar refregex = /ref=[\"']([^\"']*)[\"']/;\n\tvar match_v = matchtag(\"v\"), match_f = matchtag(\"f\");\n\nreturn function parse_ws_xml_data(sdata/*:string*/, s, opts, guess/*:Range*/, themes, styles) {\n\tvar ri = 0, x = \"\", cells/*:Array<string>*/ = [], cref/*:?Array<string>*/ = [], idx=0, i=0, cc=0, d=\"\", p/*:any*/;\n\tvar tag, tagr = 0, tagc = 0;\n\tvar sstr, ftag;\n\tvar fmtid = 0, fillid = 0;\n\tvar do_format = Array.isArray(styles.CellXf), cf;\n\tvar arrayf/*:Array<[Range, string]>*/ = [];\n\tvar sharedf = [];\n\tvar dense = s[\"!data\"] != null;\n\tvar rows/*:Array<RowInfo>*/ = [], rowobj = {}, rowrite = false;\n\tvar sheetStubs = !!opts.sheetStubs;\n\tfor(var marr = sdata.split(rowregex), mt = 0, marrlen = marr.length; mt != marrlen; ++mt) {\n\t\tx = marr[mt].trim();\n\t\tvar xlen = x.length;\n\t\tif(xlen === 0) continue;\n\n\t\t/* 18.3.1.73 row CT_Row */\n\t\tvar rstarti = 0;\n\t\touta: for(ri = 0; ri < xlen; ++ri) switch(/*x.charCodeAt(ri)*/x[ri]) {\n\t\t\tcase \">\" /*62*/:\n\t\t\t\tif(/*x.charCodeAt(ri-1) != 47*/x[ri-1] != \"/\") { ++ri; break outa; }\n\t\t\t\tif(opts && opts.cellStyles) {\n\t\t\t\t\t// TODO: avoid duplication\n\t\t\t\t\ttag = parsexmltag(x.slice(rstarti,ri), true);\n\t\t\t\t\ttagr = tag.r != null ? parseInt(tag.r, 10) : tagr+1; tagc = -1;\n\t\t\t\t\tif(opts.sheetRows && opts.sheetRows < tagr) continue;\n\t\t\t\t\trowobj = {}; rowrite = false;\n\t\t\t\t\tif(tag.ht) { rowrite = true; rowobj.hpt = parseFloat(tag.ht); rowobj.hpx = pt2px(rowobj.hpt); }\n\t\t\t\t\tif(tag.hidden && parsexmlbool(tag.hidden)) { rowrite = true; rowobj.hidden = true; }\n\t\t\t\t\tif(tag.outlineLevel != null) { rowrite = true; rowobj.level = +tag.outlineLevel; }\n\t\t\t\t\tif(rowrite) rows[tagr-1] = rowobj;\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase \"<\" /*60*/: rstarti = ri; break;\n\t\t}\n\t\tif(rstarti >= ri) break;\n\t\ttag = parsexmltag(x.slice(rstarti,ri), true);\n\t\ttagr = tag.r != null ? parseInt(tag.r, 10) : tagr+1; tagc = -1;\n\t\tif(opts.sheetRows && opts.sheetRows < tagr) continue;\n\t\tif(!opts.nodim) {\n\t\t\tif(guess.s.r > tagr - 1) guess.s.r = tagr - 1;\n\t\t\tif(guess.e.r < tagr - 1) guess.e.r = tagr - 1;\n\t\t}\n\n\t\tif(opts && opts.cellStyles) {\n\t\t\trowobj = {}; rowrite = false;\n\t\t\tif(tag.ht) { rowrite = true; rowobj.hpt = parseFloat(tag.ht); rowobj.hpx = pt2px(rowobj.hpt); }\n\t\t\tif(tag.hidden && parsexmlbool(tag.hidden)) { rowrite = true; rowobj.hidden = true; }\n\t\t\tif(tag.outlineLevel != null) { rowrite = true; rowobj.level = +tag.outlineLevel; }\n\t\t\tif(rowrite) rows[tagr-1] = rowobj;\n\t\t}\n\n\t\t/* 18.3.1.4 c CT_Cell */\n\t\tcells = x.slice(ri).split(cellregex);\n\t\tfor(var rslice = 0; rslice != cells.length; ++rslice) if(cells[rslice].trim().charAt(0) != \"<\") break;\n\t\tcells = cells.slice(rslice);\n\t\tfor(ri = 0; ri != cells.length; ++ri) {\n\t\t\tx = cells[ri].trim();\n\t\t\tif(x.length === 0) continue;\n\t\t\tcref = x.match(rregex); idx = ri; i=0; cc=0;\n\t\t\tx = \"<c \" + (x.slice(0,1)==\"<\"?\">\":\"\") + x;\n\t\t\tif(cref != null && cref.length === 2) {\n\t\t\t\tidx = 0; d=cref[1];\n\t\t\t\tfor(i=0; i != d.length; ++i) {\n\t\t\t\t\tif((cc=d.charCodeAt(i)-64) < 1 || cc > 26) break;\n\t\t\t\t\tidx = 26*idx + cc;\n\t\t\t\t}\n\t\t\t\t--idx;\n\t\t\t\ttagc = idx;\n\t\t\t} else ++tagc;\n\t\t\tfor(i = 0; i != x.length; ++i) if(x.charCodeAt(i) === 62) break; ++i;\n\t\t\ttag = parsexmltag(x.slice(0,i), true);\n\t\t\tif(!tag.r) tag.r = encode_cell({r:tagr-1, c:tagc});\n\t\t\td = x.slice(i);\n\t\t\tp = ({t:\"\"}/*:any*/);\n\n\t\t\tif((cref=d.match(match_v))!= null && /*::cref != null && */cref[1] !== '') p.v=unescapexml(cref[1]);\n\t\t\tif(opts.cellFormula) {\n\t\t\t\tif((cref=d.match(match_f))!= null && /*::cref != null && */cref[1] !== '') {\n\t\t\t\t\t/* TODO: match against XLSXFutureFunctions */\n\t\t\t\t\tp.f=unescapexml(utf8read(cref[1]), true);\n\t\t\t\t\tif(!opts.xlfn) p.f = _xlfn(p.f);\n\t\t\t\t\tif(/*::cref != null && cref[0] != null && */cref[0].indexOf('t=\"array\"') > -1) {\n\t\t\t\t\t\tp.F = (d.match(refregex)||[])[1];\n\t\t\t\t\t\tif(p.F.indexOf(\":\") > -1) arrayf.push([safe_decode_range(p.F), p.F]);\n\t\t\t\t\t} else if(/*::cref != null && cref[0] != null && */cref[0].indexOf('t=\"shared\"') > -1) {\n\t\t\t\t\t\t// TODO: parse formula\n\t\t\t\t\t\tftag = parsexmltag(cref[0]);\n\t\t\t\t\t\tvar ___f = unescapexml(utf8read(cref[1]));\n\t\t\t\t\t\tif(!opts.xlfn) ___f = _xlfn(___f);\n\t\t\t\t\t\tsharedf[parseInt(ftag.si, 10)] = [ftag, ___f, tag.r];\n\t\t\t\t\t}\n\t\t\t\t} else if((cref=d.match(/<f[^>]*\\/>/))) {\n\t\t\t\t\tftag = parsexmltag(cref[0]);\n\t\t\t\t\tif(sharedf[ftag.si]) p.f = shift_formula_xlsx(sharedf[ftag.si][1], sharedf[ftag.si][2]/*[0].ref*/, tag.r);\n\t\t\t\t}\n\t\t\t\t/* TODO: factor out contains logic */\n\t\t\t\tvar _tag = decode_cell(tag.r);\n\t\t\t\tfor(i = 0; i < arrayf.length; ++i)\n\t\t\t\t\tif(_tag.r >= arrayf[i][0].s.r && _tag.r <= arrayf[i][0].e.r)\n\t\t\t\t\t\tif(_tag.c >= arrayf[i][0].s.c && _tag.c <= arrayf[i][0].e.c)\n\t\t\t\t\t\t\tp.F = arrayf[i][1];\n\t\t\t}\n\n\t\t\tif(tag.t == null && p.v === undefined) {\n\t\t\t\tif(p.f || p.F) {\n\t\t\t\t\tp.v = 0; p.t = \"n\";\n\t\t\t\t} else if(!sheetStubs) continue;\n\t\t\t\telse p.t = \"z\";\n\t\t\t}\n\t\t\telse p.t = tag.t || \"n\";\n\t\t\tif(guess.s.c > tagc) guess.s.c = tagc;\n\t\t\tif(guess.e.c < tagc) guess.e.c = tagc;\n\t\t\t/* 18.18.11 t ST_CellType */\n\t\t\tswitch(p.t) {\n\t\t\t\tcase 'n':\n\t\t\t\t\tif(p.v == \"\" || p.v == null) {\n\t\t\t\t\t\tif(!sheetStubs) continue;\n\t\t\t\t\t\tp.t = 'z';\n\t\t\t\t\t} else p.v = parseFloat(p.v);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 's':\n\t\t\t\t\tif(typeof p.v == 'undefined') {\n\t\t\t\t\t\tif(!sheetStubs) continue;\n\t\t\t\t\t\tp.t = 'z';\n\t\t\t\t\t} else {\n\t\t\t\t\t\tsstr = strs[parseInt(p.v, 10)];\n\t\t\t\t\t\tp.v = sstr.t;\n\t\t\t\t\t\tp.r = sstr.r;\n\t\t\t\t\t\tif(opts.cellHTML) p.h = sstr.h;\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'str':\n\t\t\t\t\tp.t = \"s\";\n\t\t\t\t\tp.v = (p.v!=null) ? unescapexml(utf8read(p.v), true) : '';\n\t\t\t\t\tif(opts.cellHTML) p.h = escapehtml(p.v);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'inlineStr':\n\t\t\t\t\tcref = d.match(isregex);\n\t\t\t\t\tp.t = 's';\n\t\t\t\t\tif(cref != null && (sstr = parse_si(cref[1]))) {\n\t\t\t\t\t\tp.v = sstr.t;\n\t\t\t\t\t\tif(opts.cellHTML) p.h = sstr.h;\n\t\t\t\t\t} else p.v = \"\";\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'b': p.v = parsexmlbool(p.v); break;\n\t\t\t\tcase 'd':\n\t\t\t\t\tif(opts.cellDates) p.v = parseDate(p.v, 1);\n\t\t\t\t\telse { p.v = datenum(parseDate(p.v, 1)); p.t = 'n'; }\n\t\t\t\t\tbreak;\n\t\t\t\t/* error string in .w, number in .v */\n\t\t\t\tcase 'e':\n\t\t\t\t\tif(!opts || opts.cellText !== false) p.w = p.v;\n\t\t\t\t\tp.v = RBErr[p.v]; break;\n\t\t\t}\n\t\t\t/* formatting */\n\t\t\tfmtid = fillid = 0;\n\t\t\tcf = null;\n\t\t\tif(do_format && tag.s !== undefined) {\n\t\t\t\tcf = styles.CellXf[tag.s];\n\t\t\t\tif(cf != null) {\n\t\t\t\t\tif(cf.numFmtId != null) fmtid = cf.numFmtId;\n\t\t\t\t\tif(opts.cellStyles) {\n\t\t\t\t\t\tif(cf.fillId != null) fillid = cf.fillId;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tsafe_format(p, fmtid, fillid, opts, themes, styles);\n\t\t\tif(opts.cellDates && do_format && p.t == 'n' && fmt_is_date(table_fmt[fmtid])) { p.t = 'd'; p.v = numdate(p.v); }\n\t\t\tif(tag.cm && opts.xlmeta) {\n\t\t\t\tvar cm = (opts.xlmeta.Cell||[])[+tag.cm-1];\n\t\t\t\tif(cm && cm.type == 'XLDAPR') p.D = true;\n\t\t\t}\n\t\t\tvar _r;\n\t\t\tif(opts.nodim) {\n\t\t\t\t_r = decode_cell(tag.r);\n\t\t\t\tif(guess.s.r > _r.r) guess.s.r = _r.r;\n\t\t\t\tif(guess.e.r < _r.r) guess.e.r = _r.r;\n\t\t\t}\n\t\t\tif(dense) {\n\t\t\t\t_r = decode_cell(tag.r);\n\t\t\t\tif(!s[\"!data\"][_r.r]) s[\"!data\"][_r.r] = [];\n\t\t\t\ts[\"!data\"][_r.r][_r.c] = p;\n\t\t\t} else s[tag.r] = p;\n\t\t}\n\t}\n\tif(rows.length > 0) s['!rows'] = rows;\n}; })();\n\nfunction write_ws_xml_data(ws/*:Worksheet*/, opts, idx/*:number*/, wb/*:Workbook*//*::, rels*/)/*:string*/ {\n\tvar o/*:Array<string>*/ = [], r/*:Array<string>*/ = [], range = safe_decode_range(ws['!ref']), cell=\"\", ref, rr = \"\", cols/*:Array<string>*/ = [], R=0, C=0, rows = ws['!rows'];\n\tvar dense = ws[\"!data\"] != null;\n\tvar params = ({r:rr}/*:any*/), row/*:RowInfo*/, height = -1;\n\tfor(C = range.s.c; C <= range.e.c; ++C) cols[C] = encode_col(C);\n\tfor(R = range.s.r; R <= range.e.r; ++R) {\n\t\tr = [];\n\t\trr = encode_row(R);\n\t\tfor(C = range.s.c; C <= range.e.c; ++C) {\n\t\t\tref = cols[C] + rr;\n\t\t\tvar _cell = dense ? (ws[\"!data\"][R]||[])[C]: ws[ref];\n\t\t\tif(_cell === undefined) continue;\n\t\t\tif((cell = write_ws_xml_cell(_cell, ref, ws, opts, idx, wb)) != null) r.push(cell);\n\t\t}\n\t\tif(r.length > 0 || (rows && rows[R])) {\n\t\t\tparams = ({r:rr}/*:any*/);\n\t\t\tif(rows && rows[R]) {\n\t\t\t\trow = rows[R];\n\t\t\t\tif(row.hidden) params.hidden = 1;\n\t\t\t\theight = -1;\n\t\t\t\tif(row.hpx) height = px2pt(row.hpx);\n\t\t\t\telse if(row.hpt) height = row.hpt;\n\t\t\t\tif(height > -1) { params.ht = height; params.customHeight = 1; }\n\t\t\t\tif(row.level) { params.outlineLevel = row.level; }\n\t\t\t}\n\t\t\to[o.length] = (writextag('row', r.join(\"\"), params));\n\t\t}\n\t}\n\tif(rows) for(; R < rows.length; ++R) {\n\t\tif(rows && rows[R]) {\n\t\t\tparams = ({r:R+1}/*:any*/);\n\t\t\trow = rows[R];\n\t\t\tif(row.hidden) params.hidden = 1;\n\t\t\theight = -1;\n\t\t\tif (row.hpx) height = px2pt(row.hpx);\n\t\t\telse if (row.hpt) height = row.hpt;\n\t\t\tif (height > -1) { params.ht = height; params.customHeight = 1; }\n\t\t\tif (row.level) { params.outlineLevel = row.level; }\n\t\t\to[o.length] = (writextag('row', \"\", params));\n\t\t}\n\t}\n\treturn o.join(\"\");\n}\n\nfunction write_ws_xml(idx/*:number*/, opts, wb/*:Workbook*/, rels)/*:string*/ {\n\tvar o = [XML_HEADER, writextag('worksheet', null, {\n\t\t'xmlns': XMLNS_main[0],\n\t\t'xmlns:r': XMLNS.r\n\t})];\n\tvar s = wb.SheetNames[idx], sidx = 0, rdata = \"\";\n\tvar ws = wb.Sheets[s];\n\tif(ws == null) ws = {};\n\tvar ref = ws['!ref'] || 'A1';\n\tvar range = safe_decode_range(ref);\n\tif(range.e.c > 0x3FFF || range.e.r > 0xFFFFF) {\n\t\tif(opts.WTF) throw new Error(\"Range \" + ref + \" exceeds format limit A1:XFD1048576\");\n\t\trange.e.c = Math.min(range.e.c, 0x3FFF);\n\t\trange.e.r = Math.min(range.e.c, 0xFFFFF);\n\t\tref = encode_range(range);\n\t}\n\tif(!rels) rels = {};\n\tws['!comments'] = [];\n\tvar _drawing = [];\n\n\twrite_ws_xml_sheetpr(ws, wb, idx, opts, o);\n\n\to[o.length] = (writextag('dimension', null, {'ref': ref}));\n\n\to[o.length] = write_ws_xml_sheetviews(ws, opts, idx, wb);\n\n\t/* TODO: store in WB, process styles */\n\tif(opts.sheetFormat) o[o.length] = (writextag('sheetFormatPr', null, {\n\t\tdefaultRowHeight:opts.sheetFormat.defaultRowHeight||'16',\n\t\tbaseColWidth:opts.sheetFormat.baseColWidth||'10',\n\t\toutlineLevelRow:opts.sheetFormat.outlineLevelRow||'7'\n\t}));\n\n\tif(ws['!cols'] != null && ws['!cols'].length > 0) o[o.length] = (write_ws_xml_cols(ws, ws['!cols']));\n\n\to[sidx = o.length] = '<sheetData/>';\n\tws['!links'] = [];\n\tif(ws['!ref'] != null) {\n\t\trdata = write_ws_xml_data(ws, opts, idx, wb, rels);\n\t\tif(rdata.length > 0) o[o.length] = (rdata);\n\t}\n\tif(o.length>sidx+1) { o[o.length] = ('</sheetData>'); o[sidx]=o[sidx].replace(\"/>\",\">\"); }\n\n\t/* sheetCalcPr */\n\n\tif(ws['!protect']) o[o.length] = write_ws_xml_protection(ws['!protect']);\n\n\t/* protectedRanges */\n\t/* scenarios */\n\n\tif(ws['!autofilter'] != null) o[o.length] = write_ws_xml_autofilter(ws['!autofilter'], ws, wb, idx);\n\n\t/* sortState */\n\t/* dataConsolidate */\n\t/* customSheetViews */\n\n\tif(ws['!merges'] != null && ws['!merges'].length > 0) o[o.length] = (write_ws_xml_merges(ws['!merges']));\n\n\t/* phoneticPr */\n\t/* conditionalFormatting */\n\t/* dataValidations */\n\n\tvar relc = -1, rel, rId = -1;\n\tif(/*::(*/ws['!links']/*::||[])*/.length > 0) {\n\t\to[o.length] = \"<hyperlinks>\";\n\t\t/*::(*/ws['!links']/*::||[])*/.forEach(function(l) {\n\t\t\tif(!l[1].Target) return;\n\t\t\trel = ({\"ref\":l[0]}/*:any*/);\n\t\t\tif(l[1].Target.charAt(0) != \"#\") {\n\t\t\t\trId = add_rels(rels, -1, escapexml(l[1].Target).replace(/#.*$/, \"\"), RELS.HLINK);\n\t\t\t\trel[\"r:id\"] = \"rId\"+rId;\n\t\t\t}\n\t\t\tif((relc = l[1].Target.indexOf(\"#\")) > -1) rel.location = escapexml(l[1].Target.slice(relc+1));\n\t\t\tif(l[1].Tooltip) rel.tooltip = escapexml(l[1].Tooltip);\n\t\t\trel.display = l[1].display;\n\t\t\to[o.length] = writextag(\"hyperlink\",null,rel);\n\t\t});\n\t\to[o.length] = \"</hyperlinks>\";\n\t}\n\tdelete ws['!links'];\n\n\t/* printOptions */\n\n\tif(ws['!margins'] != null) o[o.length] =  write_ws_xml_margins(ws['!margins']);\n\n\t/* pageSetup */\n\t/* headerFooter */\n\t/* rowBreaks */\n\t/* colBreaks */\n\t/* customProperties */\n\t/* cellWatches */\n\n\tif(!opts || opts.ignoreEC || (opts.ignoreEC == (void 0))) o[o.length] = writetag(\"ignoredErrors\", writextag(\"ignoredError\", null, {numberStoredAsText:1, sqref:ref}));\n\n\t/* smartTags */\n\n\tif(_drawing.length > 0) {\n\t\trId = add_rels(rels, -1, \"../drawings/drawing\" + (idx+1) + \".xml\", RELS.DRAW);\n\t\to[o.length] = writextag(\"drawing\", null, {\"r:id\":\"rId\" + rId});\n\t\tws['!drawing'] = _drawing;\n\t}\n\n\tif(ws['!comments'].length > 0) {\n\t\trId = add_rels(rels, -1, \"../drawings/vmlDrawing\" + (idx+1) + \".vml\", RELS.VML);\n\t\to[o.length] = writextag(\"legacyDrawing\", null, {\"r:id\":\"rId\" + rId});\n\t\tws['!legacy'] = rId;\n\t}\n\n\t/* legacyDrawingHF */\n\t/* picture */\n\t/* oleObjects */\n\t/* controls */\n\t/* webPublishItems */\n\t/* tableParts */\n\t/* extLst */\n\n\tif(o.length>1) { o[o.length] = ('</worksheet>'); o[1]=o[1].replace(\"/>\",\">\"); }\n\treturn o.join(\"\");\n}\n\n/* [MS-XLSB] 2.4.726 BrtRowHdr */\nfunction parse_BrtRowHdr(data, length) {\n\tvar z = ({}/*:any*/);\n\tvar tgt = data.l + length;\n\tz.r = data.read_shift(4);\n\tdata.l += 4; // TODO: ixfe\n\tvar miyRw = data.read_shift(2);\n\tdata.l += 1; // TODO: top/bot padding\n\tvar flags = data.read_shift(1);\n\tdata.l = tgt;\n\tif(flags & 0x07) z.level = flags & 0x07;\n\tif(flags & 0x10) z.hidden = true;\n\tif(flags & 0x20) z.hpt = miyRw / 20;\n\treturn z;\n}\nfunction write_BrtRowHdr(R/*:number*/, range, ws) {\n\tvar o = new_buf(17+8*16);\n\tvar row = (ws['!rows']||[])[R]||{};\n\to.write_shift(4, R);\n\n\to.write_shift(4, 0); /* TODO: ixfe */\n\n\tvar miyRw = 0x0140;\n\tif(row.hpx) miyRw = px2pt(row.hpx) * 20;\n\telse if(row.hpt) miyRw = row.hpt * 20;\n\to.write_shift(2, miyRw);\n\n\to.write_shift(1, 0); /* top/bot padding */\n\n\tvar flags = 0x0;\n\tif(row.level) flags |= row.level;\n\tif(row.hidden) flags |= 0x10;\n\tif(row.hpx || row.hpt) flags |= 0x20;\n\to.write_shift(1, flags);\n\n\to.write_shift(1, 0); /* phonetic guide */\n\n\t/* [MS-XLSB] 2.5.8 BrtColSpan explains the mechanism */\n\tvar ncolspan = 0, lcs = o.l;\n\to.l += 4;\n\n\tvar caddr = {r:R, c:0};\n\tvar dense = ws[\"!data\"] != null;\n\tfor(var i = 0; i < 16; ++i) {\n\t\tif((range.s.c > ((i+1) << 10)) || (range.e.c < (i << 10))) continue;\n\t\tvar first = -1, last = -1;\n\t\tfor(var j = (i<<10); j < ((i+1)<<10); ++j) {\n\t\t\tcaddr.c = j;\n\t\t\tvar cell = dense ? (ws[\"!data\"][caddr.r]||[])[caddr.c] : ws[encode_cell(caddr)];\n\t\t\tif(cell) { if(first < 0) first = j; last = j; }\n\t\t}\n\t\tif(first < 0) continue;\n\t\t++ncolspan;\n\t\to.write_shift(4, first);\n\t\to.write_shift(4, last);\n\t}\n\n\tvar l = o.l;\n\to.l = lcs;\n\to.write_shift(4, ncolspan);\n\to.l = l;\n\n\treturn o.length > o.l ? o.slice(0, o.l) : o;\n}\nfunction write_row_header(ba, ws, range, R) {\n\tvar o = write_BrtRowHdr(R, range, ws);\n\tif((o.length > 17) || (ws['!rows']||[])[R]) write_record(ba, 0x0000 /* BrtRowHdr */, o);\n}\n\n/* [MS-XLSB] 2.4.820 BrtWsDim */\nvar parse_BrtWsDim = parse_UncheckedRfX;\nvar write_BrtWsDim = write_UncheckedRfX;\n\n/* [MS-XLSB] 2.4.821 BrtWsFmtInfo */\nfunction parse_BrtWsFmtInfo(/*::data, length*/) {\n}\n//function write_BrtWsFmtInfo(ws, o) { }\n\n/* [MS-XLSB] 2.4.823 BrtWsProp */\nfunction parse_BrtWsProp(data, length) {\n\tvar z = {};\n\tvar f = data[data.l]; ++data.l;\n\tz.above = !(f & 0x40);\n\tz.left  = !(f & 0x80);\n\t/* TODO: pull flags */\n\tdata.l += 18;\n\tz.name = parse_XLSBCodeName(data, length - 19);\n\treturn z;\n}\nfunction write_BrtWsProp(str, outl, o) {\n\tif(o == null) o = new_buf(84+4*str.length);\n\tvar f = 0xC0;\n\tif(outl) {\n\t\tif(outl.above) f &= ~0x40;\n\t\tif(outl.left)  f &= ~0x80;\n\t}\n\to.write_shift(1, f);\n\tfor(var i = 1; i < 3; ++i) o.write_shift(1,0);\n\twrite_BrtColor({auto:1}, o);\n\to.write_shift(-4,-1);\n\to.write_shift(-4,-1);\n\twrite_XLSBCodeName(str, o);\n\treturn o.slice(0, o.l);\n}\n\n/* [MS-XLSB] 2.4.306 BrtCellBlank */\nfunction parse_BrtCellBlank(data) {\n\tvar cell = parse_XLSBCell(data);\n\treturn [cell];\n}\nfunction write_BrtCellBlank(cell, ncell, o) {\n\tif(o == null) o = new_buf(8);\n\treturn write_XLSBCell(ncell, o);\n}\nfunction parse_BrtShortBlank(data) {\n\tvar cell = parse_XLSBShortCell(data);\n\treturn [cell];\n}\nfunction write_BrtShortBlank(cell, ncell, o) {\n\tif(o == null) o = new_buf(4);\n\treturn write_XLSBShortCell(ncell, o);\n}\n\n/* [MS-XLSB] 2.4.307 BrtCellBool */\nfunction parse_BrtCellBool(data) {\n\tvar cell = parse_XLSBCell(data);\n\tvar fBool = data.read_shift(1);\n\treturn [cell, fBool, 'b'];\n}\nfunction write_BrtCellBool(cell, ncell, o) {\n\tif(o == null) o = new_buf(9);\n\twrite_XLSBCell(ncell, o);\n\to.write_shift(1, cell.v ? 1 : 0);\n\treturn o;\n}\nfunction parse_BrtShortBool(data) {\n\tvar cell = parse_XLSBShortCell(data);\n\tvar fBool = data.read_shift(1);\n\treturn [cell, fBool, 'b'];\n}\nfunction write_BrtShortBool(cell, ncell, o) {\n\tif(o == null) o = new_buf(5);\n\twrite_XLSBShortCell(ncell, o);\n\to.write_shift(1, cell.v ? 1 : 0);\n\treturn o;\n}\n\n/* [MS-XLSB] 2.4.308 BrtCellError */\nfunction parse_BrtCellError(data) {\n\tvar cell = parse_XLSBCell(data);\n\tvar bError = data.read_shift(1);\n\treturn [cell, bError, 'e'];\n}\nfunction write_BrtCellError(cell, ncell, o) {\n\tif(o == null) o = new_buf(9);\n\twrite_XLSBCell(ncell, o);\n\to.write_shift(1, cell.v);\n\treturn o;\n}\nfunction parse_BrtShortError(data) {\n\tvar cell = parse_XLSBShortCell(data);\n\tvar bError = data.read_shift(1);\n\treturn [cell, bError, 'e'];\n}\nfunction write_BrtShortError(cell, ncell, o) {\n\tif(o == null) o = new_buf(8);\n\twrite_XLSBShortCell(ncell, o);\n\to.write_shift(1, cell.v);\n\to.write_shift(2, 0);\n\to.write_shift(1, 0);\n\treturn o;\n}\n\n\n/* [MS-XLSB] 2.4.311 BrtCellIsst */\nfunction parse_BrtCellIsst(data) {\n\tvar cell = parse_XLSBCell(data);\n\tvar isst = data.read_shift(4);\n\treturn [cell, isst, 's'];\n}\nfunction write_BrtCellIsst(cell, ncell, o) {\n\tif(o == null) o = new_buf(12);\n\twrite_XLSBCell(ncell, o);\n\to.write_shift(4, ncell.v);\n\treturn o;\n}\nfunction parse_BrtShortIsst(data) {\n\tvar cell = parse_XLSBShortCell(data);\n\tvar isst = data.read_shift(4);\n\treturn [cell, isst, 's'];\n}\nfunction write_BrtShortIsst(cell, ncell, o) {\n\tif(o == null) o = new_buf(8);\n\twrite_XLSBShortCell(ncell, o);\n\to.write_shift(4, ncell.v);\n\treturn o;\n}\n\n/* [MS-XLSB] 2.4.313 BrtCellReal */\nfunction parse_BrtCellReal(data) {\n\tvar cell = parse_XLSBCell(data);\n\tvar value = parse_Xnum(data);\n\treturn [cell, value, 'n'];\n}\nfunction write_BrtCellReal(cell, ncell, o) {\n\tif(o == null) o = new_buf(16);\n\twrite_XLSBCell(ncell, o);\n\twrite_Xnum(cell.v, o);\n\treturn o;\n}\nfunction parse_BrtShortReal(data) {\n\tvar cell = parse_XLSBShortCell(data);\n\tvar value = parse_Xnum(data);\n\treturn [cell, value, 'n'];\n}\nfunction write_BrtShortReal(cell, ncell, o) {\n\tif(o == null) o = new_buf(12);\n\twrite_XLSBShortCell(ncell, o);\n\twrite_Xnum(cell.v, o);\n\treturn o;\n}\n\n/* [MS-XLSB] 2.4.314 BrtCellRk */\nfunction parse_BrtCellRk(data) {\n\tvar cell = parse_XLSBCell(data);\n\tvar value = parse_RkNumber(data);\n\treturn [cell, value, 'n'];\n}\nfunction write_BrtCellRk(cell, ncell, o) {\n\tif(o == null) o = new_buf(12);\n\twrite_XLSBCell(ncell, o);\n\twrite_RkNumber(cell.v, o);\n\treturn o;\n}\nfunction parse_BrtShortRk(data) {\n\tvar cell = parse_XLSBShortCell(data);\n\tvar value = parse_RkNumber(data);\n\treturn [cell, value, 'n'];\n}\nfunction write_BrtShortRk(cell, ncell, o) {\n\tif(o == null) o = new_buf(8);\n\twrite_XLSBShortCell(ncell, o);\n\twrite_RkNumber(cell.v, o);\n\treturn o;\n}\n\n/* [MS-XLSB] 2.4.323 BrtCellRString */\nfunction parse_BrtCellRString(data) {\n\tvar cell = parse_XLSBCell(data);\n\tvar value = parse_RichStr(data);\n\treturn [cell, value, 'is'];\n}\n\n/* [MS-XLSB] 2.4.317 BrtCellSt */\nfunction parse_BrtCellSt(data) {\n\tvar cell = parse_XLSBCell(data);\n\tvar value = parse_XLWideString(data);\n\treturn [cell, value, 'str'];\n}\nfunction write_BrtCellSt(cell, ncell, o) {\n\tvar data = cell.v == null ? \"\" : String(cell.v);\n\tif(o == null) o = new_buf(12 + 4 * cell.v.length);\n\twrite_XLSBCell(ncell, o);\n\twrite_XLWideString(data, o);\n\treturn o.length > o.l ? o.slice(0, o.l) : o;\n}\nfunction parse_BrtShortSt(data) {\n\tvar cell = parse_XLSBShortCell(data);\n\tvar value = parse_XLWideString(data);\n\treturn [cell, value, 'str'];\n}\nfunction write_BrtShortSt(cell, ncell, o) {\n\tvar data = cell.v == null ? \"\" : String(cell.v);\n\tif(o == null) o = new_buf(8 + 4 * data.length);\n\twrite_XLSBShortCell(ncell, o);\n\twrite_XLWideString(data, o);\n\treturn o.length > o.l ? o.slice(0, o.l) : o;\n}\n\n/* [MS-XLSB] 2.4.653 BrtFmlaBool */\nfunction parse_BrtFmlaBool(data, length, opts) {\n\tvar end = data.l + length;\n\tvar cell = parse_XLSBCell(data);\n\tcell.r = opts['!row'];\n\tvar value = data.read_shift(1);\n\tvar o = [cell, value, 'b'];\n\tif(opts.cellFormula) {\n\t\tdata.l += 2;\n\t\tvar formula = parse_XLSBCellParsedFormula(data, end - data.l, opts);\n\t\to[3] = stringify_formula(formula, null/*range*/, cell, opts.supbooks, opts);/* TODO */\n\t}\n\telse data.l = end;\n\treturn o;\n}\n\n/* [MS-XLSB] 2.4.654 BrtFmlaError */\nfunction parse_BrtFmlaError(data, length, opts) {\n\tvar end = data.l + length;\n\tvar cell = parse_XLSBCell(data);\n\tcell.r = opts['!row'];\n\tvar value = data.read_shift(1);\n\tvar o = [cell, value, 'e'];\n\tif(opts.cellFormula) {\n\t\tdata.l += 2;\n\t\tvar formula = parse_XLSBCellParsedFormula(data, end - data.l, opts);\n\t\to[3] = stringify_formula(formula, null/*range*/, cell, opts.supbooks, opts);/* TODO */\n\t}\n\telse data.l = end;\n\treturn o;\n}\n\n/* [MS-XLSB] 2.4.655 BrtFmlaNum */\nfunction parse_BrtFmlaNum(data, length, opts) {\n\tvar end = data.l + length;\n\tvar cell = parse_XLSBCell(data);\n\tcell.r = opts['!row'];\n\tvar value = parse_Xnum(data);\n\tvar o = [cell, value, 'n'];\n\tif(opts.cellFormula) {\n\t\tdata.l += 2;\n\t\tvar formula = parse_XLSBCellParsedFormula(data, end - data.l, opts);\n\t\to[3] = stringify_formula(formula, null/*range*/, cell, opts.supbooks, opts);/* TODO */\n\t}\n\telse data.l = end;\n\treturn o;\n}\n\n/* [MS-XLSB] 2.4.656 BrtFmlaString */\nfunction parse_BrtFmlaString(data, length, opts) {\n\tvar end = data.l + length;\n\tvar cell = parse_XLSBCell(data);\n\tcell.r = opts['!row'];\n\tvar value = parse_XLWideString(data);\n\tvar o = [cell, value, 'str'];\n\tif(opts.cellFormula) {\n\t\tdata.l += 2;\n\t\tvar formula = parse_XLSBCellParsedFormula(data, end - data.l, opts);\n\t\to[3] = stringify_formula(formula, null/*range*/, cell, opts.supbooks, opts);/* TODO */\n\t}\n\telse data.l = end;\n\treturn o;\n}\n\n/* [MS-XLSB] 2.4.682 BrtMergeCell */\nvar parse_BrtMergeCell = parse_UncheckedRfX;\nvar write_BrtMergeCell = write_UncheckedRfX;\n/* [MS-XLSB] 2.4.107 BrtBeginMergeCells */\nfunction write_BrtBeginMergeCells(cnt, o) {\n\tif(o == null) o = new_buf(4);\n\to.write_shift(4, cnt);\n\treturn o;\n}\n\n/* [MS-XLSB] 2.4.662 BrtHLink */\nfunction parse_BrtHLink(data, length/*::, opts*/) {\n\tvar end = data.l + length;\n\tvar rfx = parse_UncheckedRfX(data, 16);\n\tvar relId = parse_XLNullableWideString(data);\n\tvar loc = parse_XLWideString(data);\n\tvar tooltip = parse_XLWideString(data);\n\tvar display = parse_XLWideString(data);\n\tdata.l = end;\n\tvar o = ({rfx:rfx, relId:relId, loc:loc, display:display}/*:any*/);\n\tif(tooltip) o.Tooltip = tooltip;\n\treturn o;\n}\nfunction write_BrtHLink(l, rId) {\n\tvar o = new_buf(50+4*(l[1].Target.length + (l[1].Tooltip || \"\").length));\n\twrite_UncheckedRfX({s:decode_cell(l[0]), e:decode_cell(l[0])}, o);\n\twrite_RelID(\"rId\" + rId, o);\n\tvar locidx = l[1].Target.indexOf(\"#\");\n\tvar loc = locidx == -1 ? \"\" : l[1].Target.slice(locidx+1);\n\twrite_XLWideString(loc || \"\", o);\n\twrite_XLWideString(l[1].Tooltip || \"\", o);\n\twrite_XLWideString(\"\", o);\n\treturn o.slice(0, o.l);\n}\n\n/* [MS-XLSB] 2.4.692 BrtPane */\nfunction parse_BrtPane(/*data, length, opts*/) {\n}\n\n/* [MS-XLSB] 2.4.6 BrtArrFmla */\nfunction parse_BrtArrFmla(data, length, opts) {\n\tvar end = data.l + length;\n\tvar rfx = parse_RfX(data, 16);\n\tvar fAlwaysCalc = data.read_shift(1);\n\tvar o = [rfx]; o[2] = fAlwaysCalc;\n\tif(opts.cellFormula) {\n\t\tvar formula = parse_XLSBArrayParsedFormula(data, end - data.l, opts);\n\t\to[1] = formula;\n\t} else data.l = end;\n\treturn o;\n}\n\n/* [MS-XLSB] 2.4.750 BrtShrFmla */\nfunction parse_BrtShrFmla(data, length, opts) {\n\tvar end = data.l + length;\n\tvar rfx = parse_UncheckedRfX(data, 16);\n\tvar o = [rfx];\n\tif(opts.cellFormula) {\n\t\tvar formula = parse_XLSBSharedParsedFormula(data, end - data.l, opts);\n\t\to[1] = formula;\n\t\tdata.l = end;\n\t} else data.l = end;\n\treturn o;\n}\n\n/* [MS-XLSB] 2.4.323 BrtColInfo */\n/* TODO: once XLS ColInfo is set, combine the functions */\nfunction write_BrtColInfo(C/*:number*/, col, o) {\n\tif(o == null) o = new_buf(18);\n\tvar p = col_obj_w(C, col);\n\to.write_shift(-4, C);\n\to.write_shift(-4, C);\n\to.write_shift(4, (p.width || 10) * 256);\n\to.write_shift(4, 0/*ixfe*/); // style\n\tvar flags = 0;\n\tif(col.hidden) flags |= 0x01;\n\tif(typeof p.width == 'number') flags |= 0x02;\n\tif(col.level) flags |= (col.level << 8);\n\to.write_shift(2, flags); // bit flag\n\treturn o;\n}\n\n/* [MS-XLSB] 2.4.678 BrtMargins */\nvar BrtMarginKeys = [\"left\",\"right\",\"top\",\"bottom\",\"header\",\"footer\"];\nfunction parse_BrtMargins(data/*::, length, opts*/)/*:Margins*/ {\n\tvar margins = ({}/*:any*/);\n\tBrtMarginKeys.forEach(function(k) { margins[k] = parse_Xnum(data, 8); });\n\treturn margins;\n}\nfunction write_BrtMargins(margins/*:Margins*/, o) {\n\tif(o == null) o = new_buf(6*8);\n\tdefault_margins(margins);\n\tBrtMarginKeys.forEach(function(k) { write_Xnum((margins/*:any*/)[k], o); });\n\treturn o;\n}\n\n/* [MS-XLSB] 2.4.299 BrtBeginWsView */\nfunction parse_BrtBeginWsView(data/*::, length, opts*/) {\n\tvar f = data.read_shift(2);\n\tdata.l += 28;\n\treturn { RTL: f & 0x20 };\n}\nfunction write_BrtBeginWsView(ws, Workbook, o) {\n\tif(o == null) o = new_buf(30);\n\tvar f = 0x39c;\n\tif((((Workbook||{}).Views||[])[0]||{}).RTL) f |= 0x20;\n\to.write_shift(2, f); // bit flag\n\to.write_shift(4, 0);\n\to.write_shift(4, 0); // view first row\n\to.write_shift(4, 0); // view first col\n\to.write_shift(1, 0); // gridline color ICV\n\to.write_shift(1, 0);\n\to.write_shift(2, 0);\n\to.write_shift(2, 100); // zoom scale\n\to.write_shift(2, 0);\n\to.write_shift(2, 0);\n\to.write_shift(2, 0);\n\to.write_shift(4, 0); // workbook view id\n\treturn o;\n}\n\n/* [MS-XLSB] 2.4.309 BrtCellIgnoreEC */\nfunction write_BrtCellIgnoreEC(ref) {\n\tvar o = new_buf(24);\n\to.write_shift(4, 4);\n\to.write_shift(4, 1);\n\twrite_UncheckedRfX(ref, o);\n\treturn o;\n}\n\n/* [MS-XLSB] 2.4.748 BrtSheetProtection */\nfunction write_BrtSheetProtection(sp, o) {\n\tif(o == null) o = new_buf(16*4+2);\n\to.write_shift(2, sp.password ? crypto_CreatePasswordVerifier_Method1(sp.password) : 0);\n\to.write_shift(4, 1); // this record should not be written if no protection\n\t[\n\t\t[\"objects\",             false], // fObjects\n\t\t[\"scenarios\",           false], // fScenarios\n\t\t[\"formatCells\",          true], // fFormatCells\n\t\t[\"formatColumns\",        true], // fFormatColumns\n\t\t[\"formatRows\",           true], // fFormatRows\n\t\t[\"insertColumns\",        true], // fInsertColumns\n\t\t[\"insertRows\",           true], // fInsertRows\n\t\t[\"insertHyperlinks\",     true], // fInsertHyperlinks\n\t\t[\"deleteColumns\",        true], // fDeleteColumns\n\t\t[\"deleteRows\",           true], // fDeleteRows\n\t\t[\"selectLockedCells\",   false], // fSelLockedCells\n\t\t[\"sort\",                 true], // fSort\n\t\t[\"autoFilter\",           true], // fAutoFilter\n\t\t[\"pivotTables\",          true], // fPivotTables\n\t\t[\"selectUnlockedCells\", false]  // fSelUnlockedCells\n\t].forEach(function(n) {\n\t\t/*:: if(o == null) throw \"unreachable\"; */\n\t\tif(n[1]) o.write_shift(4, sp[n[0]] != null && !sp[n[0]] ? 1 : 0);\n\t\telse      o.write_shift(4, sp[n[0]] != null && sp[n[0]] ? 0 : 1);\n\t});\n\treturn o;\n}\n\nfunction parse_BrtDVal(/*data, length, opts*/) {\n}\nfunction parse_BrtDVal14(/*data, length, opts*/) {\n}\n/* [MS-XLSB] 2.1.7.61 Worksheet */\nfunction parse_ws_bin(data, _opts, idx, rels, wb/*:WBWBProps*/, themes, styles)/*:Worksheet*/ {\n\tif(!data) return data;\n\tvar opts = _opts || {};\n\tif(!rels) rels = {'!id':{}};\n\tif(DENSE != null && opts.dense == null) opts.dense = DENSE;\n\tvar s/*:Worksheet*/ = ({}); if(opts.dense) s[\"!data\"] = [];\n\n\tvar ref;\n\tvar refguess = {s: {r:2000000, c:2000000}, e: {r:0, c:0} };\n\n\tvar state/*:Array<string>*/ = [];\n\tvar pass = false, end = false;\n\tvar row, p, cf, R, C, addr, sstr, rr, cell/*:Cell*/;\n\tvar merges/*:Array<Range>*/ = [];\n\topts.biff = 12;\n\topts['!row'] = 0;\n\n\tvar ai = 0, af = false;\n\n\tvar arrayf/*:Array<[Range, string]>*/ = [];\n\tvar sharedf = {};\n\tvar supbooks = opts.supbooks || /*::(*/wb/*:: :any)*/.supbooks || ([[]]/*:any*/);\n\tsupbooks.sharedf = sharedf;\n\tsupbooks.arrayf = arrayf;\n\tsupbooks.SheetNames = wb.SheetNames || wb.Sheets.map(function(x) { return x.name; });\n\tif(!opts.supbooks) {\n\t\topts.supbooks = supbooks;\n\t\tif(wb.Names) for(var i = 0; i < wb.Names.length; ++i) supbooks[0][i+1] = wb.Names[i];\n\t}\n\n\tvar colinfo/*:Array<ColInfo>*/ = [], rowinfo/*:Array<RowInfo>*/ = [];\n\tvar seencol = false;\n\n\tXLSBRecordEnum[0x0010] = { n:\"BrtShortReal\", f:parse_BrtShortReal };\n\n\tvar cm, vm;\n\n\trecordhopper(data, function ws_parse(val, RR, RT) {\n\t\tif(end) return;\n\t\tswitch(RT) {\n\t\t\tcase 0x0094: /* 'BrtWsDim' */\n\t\t\t\tref = val; break;\n\t\t\tcase 0x0000: /* 'BrtRowHdr' */\n\t\t\t\trow = val;\n\t\t\t\tif(opts.sheetRows && opts.sheetRows <= row.r) end=true;\n\t\t\t\trr = encode_row(R = row.r);\n\t\t\t\topts['!row'] = row.r;\n\t\t\t\tif(val.hidden || val.hpt || val.level != null) {\n\t\t\t\t\tif(val.hpt) val.hpx = pt2px(val.hpt);\n\t\t\t\t\trowinfo[val.r] = val;\n\t\t\t\t}\n\t\t\t\tbreak;\n\n\t\t\tcase 0x0002: /* 'BrtCellRk' */\n\t\t\tcase 0x0003: /* 'BrtCellError' */\n\t\t\tcase 0x0004: /* 'BrtCellBool' */\n\t\t\tcase 0x0005: /* 'BrtCellReal' */\n\t\t\tcase 0x0006: /* 'BrtCellSt' */\n\t\t\tcase 0x0007: /* 'BrtCellIsst' */\n\t\t\tcase 0x0008: /* 'BrtFmlaString' */\n\t\t\tcase 0x0009: /* 'BrtFmlaNum' */\n\t\t\tcase 0x000A: /* 'BrtFmlaBool' */\n\t\t\tcase 0x000B: /* 'BrtFmlaError' */\n\t\t\tcase 0x000D: /* 'BrtShortRk' */\n\t\t\tcase 0x000E: /* 'BrtShortError' */\n\t\t\tcase 0x000F: /* 'BrtShortBool' */\n\t\t\tcase 0x0010: /* 'BrtShortReal' */\n\t\t\tcase 0x0011: /* 'BrtShortSt' */\n\t\t\tcase 0x0012: /* 'BrtShortIsst' */\n\t\t\tcase 0x003E: /* 'BrtCellRString' */\n\t\t\t\tp = ({t:val[2]}/*:any*/);\n\t\t\t\tswitch(val[2]) {\n\t\t\t\t\tcase 'n': p.v = val[1]; break;\n\t\t\t\t\tcase 's': sstr = strs[val[1]]; p.v = sstr.t; p.r = sstr.r; break;\n\t\t\t\t\tcase 'b': p.v = val[1] ? true : false; break;\n\t\t\t\t\tcase 'e': p.v = val[1]; if(opts.cellText !== false) p.w = BErr[p.v]; break;\n\t\t\t\t\tcase 'str': p.t = 's'; p.v = val[1]; break;\n\t\t\t\t\tcase 'is': p.t = 's'; p.v = val[1].t; break;\n\t\t\t\t}\n\t\t\t\tif((cf = styles.CellXf[val[0].iStyleRef])) safe_format(p,cf.numFmtId,null,opts, themes, styles);\n\t\t\t\tC = val[0].c == -1 ? C + 1 : val[0].c;\n\t\t\t\tif(opts.dense) { if(!s[\"!data\"][R]) s[\"!data\"][R] = []; s[\"!data\"][R][C] = p; }\n\t\t\t\telse s[encode_col(C) + rr] = p;\n\t\t\t\tif(opts.cellFormula) {\n\t\t\t\t\taf = false;\n\t\t\t\t\tfor(ai = 0; ai < arrayf.length; ++ai) {\n\t\t\t\t\t\tvar aii = arrayf[ai];\n\t\t\t\t\t\tif(row.r >= aii[0].s.r && row.r <= aii[0].e.r)\n\t\t\t\t\t\t\tif(C >= aii[0].s.c && C <= aii[0].e.c) {\n\t\t\t\t\t\t\t\tp.F = encode_range(aii[0]); af = true;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif(!af && val.length > 3) p.f = val[3];\n\t\t\t\t}\n\n\t\t\t\tif(refguess.s.r > row.r) refguess.s.r = row.r;\n\t\t\t\tif(refguess.s.c > C) refguess.s.c = C;\n\t\t\t\tif(refguess.e.r < row.r) refguess.e.r = row.r;\n\t\t\t\tif(refguess.e.c < C) refguess.e.c = C;\n\t\t\t\tif(opts.cellDates && cf && p.t == 'n' && fmt_is_date(table_fmt[cf.numFmtId])) {\n\t\t\t\t\tvar _d = SSF_parse_date_code(p.v); if(_d) { p.t = 'd'; p.v = new Date(_d.y, _d.m-1,_d.d,_d.H,_d.M,_d.S,_d.u); }\n\t\t\t\t}\n\t\t\t\tif(cm) {\n\t\t\t\t\tif(cm.type == 'XLDAPR') p.D = true;\n\t\t\t\t\tcm = void 0;\n\t\t\t\t}\n\t\t\t\tif(vm) vm = void 0;\n\t\t\t\tbreak;\n\n\t\t\tcase 0x0001: /* 'BrtCellBlank' */\n\t\t\tcase 0x000C: /* 'BrtShortBlank' */\n\t\t\t\tif(!opts.sheetStubs || pass) break;\n\t\t\t\tp = ({t:'z',v:void 0}/*:any*/);\n\t\t\t\tC = val[0].c == -1 ? C + 1 : val[0].c;\n\t\t\t\tif(opts.dense) { if(!s[\"!data\"][R]) s[\"!data\"][R] = []; s[\"!data\"][R][C] = p; }\n\t\t\t\telse s[encode_col(C) + rr] = p;\n\t\t\t\tif(refguess.s.r > row.r) refguess.s.r = row.r;\n\t\t\t\tif(refguess.s.c > C) refguess.s.c = C;\n\t\t\t\tif(refguess.e.r < row.r) refguess.e.r = row.r;\n\t\t\t\tif(refguess.e.c < C) refguess.e.c = C;\n\t\t\t\tif(cm) {\n\t\t\t\t\tif(cm.type == 'XLDAPR') p.D = true;\n\t\t\t\t\tcm = void 0;\n\t\t\t\t}\n\t\t\t\tif(vm) vm = void 0;\n\t\t\t\tbreak;\n\n\t\t\tcase 0x00B0: /* 'BrtMergeCell' */\n\t\t\t\tmerges.push(val); break;\n\n\t\t\tcase 0x0031: { /* 'BrtCellMeta' */\n\t\t\t\tcm = ((opts.xlmeta||{}).Cell||[])[val-1];\n\t\t\t} break;\n\n\t\t\tcase 0x01EE: /* 'BrtHLink' */\n\t\t\t\tvar rel = rels['!id'][val.relId];\n\t\t\t\tif(rel) {\n\t\t\t\t\tval.Target = rel.Target;\n\t\t\t\t\tif(val.loc) val.Target += \"#\"+val.loc;\n\t\t\t\t\tval.Rel = rel;\n\t\t\t\t} else if(val.relId == '') {\n\t\t\t\t\tval.Target = \"#\" + val.loc;\n\t\t\t\t}\n\t\t\t\tfor(R=val.rfx.s.r;R<=val.rfx.e.r;++R) for(C=val.rfx.s.c;C<=val.rfx.e.c;++C) {\n\t\t\t\t\tif(opts.dense) {\n\t\t\t\t\t\tif(!s[\"!data\"][R]) s[\"!data\"][R] = [];\n\t\t\t\t\t\tif(!s[\"!data\"][R][C]) s[\"!data\"][R][C] = {t:'z',v:undefined};\n\t\t\t\t\t\ts[\"!data\"][R][C].l = val;\n\t\t\t\t\t} else {\n\t\t\t\t\t\taddr = encode_col(C) + encode_row(R);\n\t\t\t\t\t\tif(!s[addr]) s[addr] = {t:'z',v:undefined};\n\t\t\t\t\t\ts[addr].l = val;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tbreak;\n\n\t\t\tcase 0x01AA: /* 'BrtArrFmla' */\n\t\t\t\tif(!opts.cellFormula) break;\n\t\t\t\tarrayf.push(val);\n\t\t\t\tcell = ((opts.dense ? s[\"!data\"][R][C] : s[encode_col(C) + rr])/*:any*/);\n\t\t\t\tcell.f = stringify_formula(val[1], refguess, {r:row.r, c:C}, supbooks, opts);\n\t\t\t\tcell.F = encode_range(val[0]);\n\t\t\t\tbreak;\n\t\t\tcase 0x01AB: /* 'BrtShrFmla' */\n\t\t\t\tif(!opts.cellFormula) break;\n\t\t\t\tsharedf[encode_cell(val[0].s)] = val[1];\n\t\t\t\tcell = (opts.dense ? s[\"!data\"][R][C] : s[encode_col(C) + rr]);\n\t\t\t\tcell.f = stringify_formula(val[1], refguess, {r:row.r, c:C}, supbooks, opts);\n\t\t\t\tbreak;\n\n\t\t\t/* identical to 'ColInfo' in XLS */\n\t\t\tcase 0x003C: /* 'BrtColInfo' */\n\t\t\t\tif(!opts.cellStyles) break;\n\t\t\t\twhile(val.e >= val.s) {\n\t\t\t\t\tcolinfo[val.e--] = { width: val.w/256, hidden: !!(val.flags & 0x01), level: val.level };\n\t\t\t\t\tif(!seencol) { seencol = true; find_mdw_colw(val.w/256); }\n\t\t\t\t\tprocess_col(colinfo[val.e+1]);\n\t\t\t\t}\n\t\t\t\tbreak;\n\n\t\t\tcase 0x00A1: /* 'BrtBeginAFilter' */\n\t\t\t\ts['!autofilter'] = { ref:encode_range(val) };\n\t\t\t\tbreak;\n\n\t\t\tcase 0x01DC: /* 'BrtMargins' */\n\t\t\t\ts['!margins'] = val;\n\t\t\t\tbreak;\n\n\t\t\tcase 0x0093: /* 'BrtWsProp' */\n\t\t\t\tif(!wb.Sheets[idx]) wb.Sheets[idx] = {};\n\t\t\t\tif(val.name) wb.Sheets[idx].CodeName = val.name;\n\t\t\t\tif(val.above || val.left) s['!outline'] = { above: val.above, left: val.left };\n\t\t\t\tbreak;\n\n\t\t\tcase 0x0089: /* 'BrtBeginWsView' */\n\t\t\t\tif(!wb.Views) wb.Views = [{}];\n\t\t\t\tif(!wb.Views[0]) wb.Views[0] = {};\n\t\t\t\tif(val.RTL) wb.Views[0].RTL = true;\n\t\t\t\tbreak;\n\n\t\t\tcase 0x01E5: /* 'BrtWsFmtInfo' */\n\t\t\t\tbreak;\n\n\t\t\tcase 0x0040: /* 'BrtDVal' */\n\t\t\tcase 0x041D: /* 'BrtDVal14' */\n\t\t\t\tbreak;\n\n\t\t\tcase 0x0097: /* 'BrtPane' */\n\t\t\t\tbreak;\n\t\t\tcase 0x0098: /* 'BrtSel' */\n\t\t\tcase 0x00AF: /* 'BrtAFilterDateGroupItem' */\n\t\t\tcase 0x0284: /* 'BrtActiveX' */\n\t\t\tcase 0x0271: /* 'BrtBigName' */\n\t\t\tcase 0x0232: /* 'BrtBkHim' */\n\t\t\tcase 0x018C: /* 'BrtBrk' */\n\t\t\tcase 0x0458: /* 'BrtCFIcon' */\n\t\t\tcase 0x047A: /* 'BrtCFRuleExt' */\n\t\t\tcase 0x01D7: /* 'BrtCFVO' */\n\t\t\tcase 0x041A: /* 'BrtCFVO14' */\n\t\t\tcase 0x0289: /* 'BrtCellIgnoreEC' */\n\t\t\tcase 0x0451: /* 'BrtCellIgnoreEC14' */\n\t\t\tcase 0x024D: /* 'BrtCellSmartTagProperty' */\n\t\t\tcase 0x025F: /* 'BrtCellWatch' */\n\t\t\tcase 0x0234: /* 'BrtColor' */\n\t\t\tcase 0x041F: /* 'BrtColor14' */\n\t\t\tcase 0x00A8: /* 'BrtColorFilter' */\n\t\t\tcase 0x00AE: /* 'BrtCustomFilter' */\n\t\t\tcase 0x049C: /* 'BrtCustomFilter14' */\n\t\t\tcase 0x01F3: /* 'BrtDRef' */\n\t\t\tcase 0x01FB: /* 'BrtDXF' */\n\t\t\tcase 0x0226: /* 'BrtDrawing' */\n\t\t\tcase 0x00AB: /* 'BrtDynamicFilter' */\n\t\t\tcase 0x00A7: /* 'BrtFilter' */\n\t\t\tcase 0x0499: /* 'BrtFilter14' */\n\t\t\tcase 0x00A9: /* 'BrtIconFilter' */\n\t\t\tcase 0x049D: /* 'BrtIconFilter14' */\n\t\t\tcase 0x0227: /* 'BrtLegacyDrawing' */\n\t\t\tcase 0x0228: /* 'BrtLegacyDrawingHF' */\n\t\t\tcase 0x0295: /* 'BrtListPart' */\n\t\t\tcase 0x027F: /* 'BrtOleObject' */\n\t\t\tcase 0x01DE: /* 'BrtPageSetup' */\n\t\t\tcase 0x0219: /* 'BrtPhoneticInfo' */\n\t\t\tcase 0x01DD: /* 'BrtPrintOptions' */\n\t\t\tcase 0x0218: /* 'BrtRangeProtection' */\n\t\t\tcase 0x044F: /* 'BrtRangeProtection14' */\n\t\t\tcase 0x02A8: /* 'BrtRangeProtectionIso' */\n\t\t\tcase 0x0450: /* 'BrtRangeProtectionIso14' */\n\t\t\tcase 0x0400: /* 'BrtRwDescent' */\n\t\t\tcase 0x0297: /* 'BrtSheetCalcProp' */\n\t\t\tcase 0x0217: /* 'BrtSheetProtection' */\n\t\t\tcase 0x02A6: /* 'BrtSheetProtectionIso' */\n\t\t\tcase 0x01F8: /* 'BrtSlc' */\n\t\t\tcase 0x0413: /* 'BrtSparkline' */\n\t\t\tcase 0x01AC: /* 'BrtTable' */\n\t\t\tcase 0x00AA: /* 'BrtTop10Filter' */\n\t\t\tcase 0x0C00: /* 'BrtUid' */\n\t\t\tcase 0x0032: /* 'BrtValueMeta' */\n\t\t\tcase 0x0816: /* 'BrtWebExtension' */\n\t\t\tcase 0x0415: /* 'BrtWsFmtInfoEx14' */\n\t\t\t\tbreak;\n\n\t\t\tcase 0x0023: /* 'BrtFRTBegin' */\n\t\t\t\tpass = true; break;\n\t\t\tcase 0x0024: /* 'BrtFRTEnd' */\n\t\t\t\tpass = false; break;\n\t\t\tcase 0x0025: /* 'BrtACBegin' */\n\t\t\t\tstate.push(RT); pass = true; break;\n\t\t\tcase 0x0026: /* 'BrtACEnd' */\n\t\t\t\tstate.pop(); pass = false; break;\n\n\t\t\tdefault:\n\t\t\t\tif(RR.T){/* empty */}\n\t\t\t\telse if(!pass || opts.WTF) throw new Error(\"Unexpected record 0x\" + RT.toString(16));\n\t\t}\n\t}, opts);\n\n\tdelete opts.supbooks;\n\tdelete opts['!row'];\n\n\tif(!s[\"!ref\"] && (refguess.s.r < 2000000 || ref && (ref.e.r > 0 || ref.e.c > 0 || ref.s.r > 0 || ref.s.c > 0))) s[\"!ref\"] = encode_range(ref || refguess);\n\tif(opts.sheetRows && s[\"!ref\"]) {\n\t\tvar tmpref = safe_decode_range(s[\"!ref\"]);\n\t\tif(opts.sheetRows <= +tmpref.e.r) {\n\t\t\ttmpref.e.r = opts.sheetRows - 1;\n\t\t\tif(tmpref.e.r > refguess.e.r) tmpref.e.r = refguess.e.r;\n\t\t\tif(tmpref.e.r < tmpref.s.r) tmpref.s.r = tmpref.e.r;\n\t\t\tif(tmpref.e.c > refguess.e.c) tmpref.e.c = refguess.e.c;\n\t\t\tif(tmpref.e.c < tmpref.s.c) tmpref.s.c = tmpref.e.c;\n\t\t\ts[\"!fullref\"] = s[\"!ref\"];\n\t\t\ts[\"!ref\"] = encode_range(tmpref);\n\t\t}\n\t}\n\tif(merges.length > 0) s[\"!merges\"] = merges;\n\tif(colinfo.length > 0) s[\"!cols\"] = colinfo;\n\tif(rowinfo.length > 0) s[\"!rows\"] = rowinfo;\n\treturn s;\n}\n\n/* TODO: something useful -- this is a stub */\nfunction write_ws_bin_cell(ba/*:BufArray*/, cell/*:Cell*/, R/*:number*/, C/*:number*/, opts, ws/*:Worksheet*/, last_seen/*:boolean*/)/*:boolean*/ {\n\tvar o/*:any*/ = ({r:R, c:C}/*:any*/);\n\tif(cell.c) ws['!comments'].push([encode_cell(o), cell.c]);\n\tif(cell.v === undefined) return false;\n\tvar vv = \"\";\n\tswitch(cell.t) {\n\t\tcase 'b': vv = cell.v ? \"1\" : \"0\"; break;\n\t\tcase 'd': // no BrtCellDate :(\n\t\t\tcell = dup(cell);\n\t\t\tcell.z = cell.z || table_fmt[14];\n\t\t\tcell.v = datenum(parseDate(cell.v)); cell.t = 'n';\n\t\t\tbreak;\n\t\t/* falls through */\n\t\tcase 'n': case 'e': vv = ''+cell.v; break;\n\t\tdefault: vv = cell.v; break;\n\t}\n\t/* TODO: cell style */\n\to.s = get_cell_style(opts.cellXfs, cell, opts);\n\tif(cell.l) ws['!links'].push([encode_cell(o), cell.l]);\n\tswitch(cell.t) {\n\t\tcase 's': case 'str':\n\t\t\tif(opts.bookSST) {\n\t\t\t\tvv = get_sst_id(opts.Strings, (cell.v == null ? \"\" : String(cell.v)/*:any*/), opts.revStrings);\n\t\t\t\to.t = \"s\"; o.v = vv;\n\t\t\t\tif(last_seen) write_record(ba, 0x0012 /* BrtShortIsst */, write_BrtShortIsst(cell, o));\n\t\t\t\telse write_record(ba, 0x0007 /* BrtCellIsst */, write_BrtCellIsst(cell, o));\n\t\t\t} else {\n\t\t\t\to.t = \"str\";\n\t\t\t\tif(last_seen) write_record(ba, 0x0011 /* BrtShortSt */, write_BrtShortSt(cell, o));\n\t\t\t\telse write_record(ba, 0x0006 /* BrtCellSt */, write_BrtCellSt(cell, o));\n\t\t\t}\n\t\t\treturn true;\n\t\tcase 'n':\n\t\t\t/* TODO: determine threshold for Real vs RK */\n\t\t\tif(cell.v == (cell.v | 0) && cell.v > -1000 && cell.v < 1000) {\n\t\t\t\tif(last_seen) write_record(ba, 0x000D /* BrtShortRk */, write_BrtShortRk(cell, o));\n\t\t\t\telse write_record(ba, 0x0002 /* BrtCellRk */, write_BrtCellRk(cell, o));\n\t\t\t} else {\n\t\t\t\tif(last_seen) write_record(ba, 0x0010 /* BrtShortReal */, write_BrtShortReal(cell, o));\n\t\t\t\telse write_record(ba, 0x0005 /* BrtCellReal */, write_BrtCellReal(cell, o));\n\t\t\t} return true;\n\t\tcase 'b':\n\t\t\to.t = \"b\";\n\t\t\tif(last_seen) write_record(ba, 0x000F /* BrtShortBool */, write_BrtShortBool(cell, o));\n\t\t\telse write_record(ba, 0x0004 /* BrtCellBool */, write_BrtCellBool(cell, o));\n\t\t\treturn true;\n\t\tcase 'e':\n\t\t\to.t = \"e\";\n\t\t\tif(last_seen) write_record(ba, 0x000E /* BrtShortError */, write_BrtShortError(cell, o));\n\t\t\telse write_record(ba, 0x0003 /* BrtCellError */, write_BrtCellError(cell, o));\n\t\t\treturn true;\n\t}\n\tif(last_seen) write_record(ba, 0x000C /* BrtShortBlank */, write_BrtShortBlank(cell, o));\n\telse write_record(ba, 0x0001 /* BrtCellBlank */, write_BrtCellBlank(cell, o));\n\treturn true;\n}\n\nfunction write_CELLTABLE(ba, ws/*:Worksheet*/, idx/*:number*/, opts/*::, wb:Workbook*/) {\n\tvar range = safe_decode_range(ws['!ref'] || \"A1\"), ref, rr = \"\", cols/*:Array<string>*/ = [];\n\twrite_record(ba, 0x0091 /* BrtBeginSheetData */);\n\tvar dense = ws[\"!data\"] != null;\n\tvar cap = range.e.r;\n\tif(ws['!rows']) cap = Math.max(range.e.r, ws['!rows'].length - 1);\n\tfor(var R = range.s.r; R <= cap; ++R) {\n\t\trr = encode_row(R);\n\t\t/* [ACCELLTABLE] */\n\t\t/* BrtRowHdr */\n\t\twrite_row_header(ba, ws, range, R);\n\t\tvar last_seen = false;\n\t\tif(R <= range.e.r) for(var C = range.s.c; C <= range.e.c; ++C) {\n\t\t\t/* *16384CELL */\n\t\t\tif(R === range.s.r) cols[C] = encode_col(C);\n\t\t\tref = cols[C] + rr;\n\t\t\tvar cell = dense ? (ws[\"!data\"][R]||[])[C] : ws[ref];\n\t\t\tif(!cell) { last_seen = false; continue; }\n\t\t\t/* write cell */\n\t\t\tlast_seen = write_ws_bin_cell(ba, cell, R, C, opts, ws, last_seen);\n\t\t}\n\t}\n\twrite_record(ba, 0x0092 /* BrtEndSheetData */);\n}\n\nfunction write_MERGECELLS(ba, ws/*:Worksheet*/) {\n\tif(!ws || !ws['!merges']) return;\n\twrite_record(ba, 0x00B1 /* BrtBeginMergeCells */, write_BrtBeginMergeCells(ws['!merges'].length));\n\tws['!merges'].forEach(function(m) { write_record(ba, 0x00B0 /* BrtMergeCell */, write_BrtMergeCell(m)); });\n\twrite_record(ba, 0x00B2 /* BrtEndMergeCells */);\n}\n\nfunction write_COLINFOS(ba, ws/*:Worksheet*//*::, idx:number, opts, wb:Workbook*/) {\n\tif(!ws || !ws['!cols']) return;\n\twrite_record(ba, 0x0186 /* BrtBeginColInfos */);\n\tws['!cols'].forEach(function(m, i) { if(m) write_record(ba, 0x003C /* 'BrtColInfo' */, write_BrtColInfo(i, m)); });\n\twrite_record(ba, 0x0187 /* BrtEndColInfos */);\n}\n\nfunction write_IGNOREECS(ba, ws/*:Worksheet*/) {\n\tif(!ws || !ws['!ref']) return;\n\twrite_record(ba, 0x0288 /* BrtBeginCellIgnoreECs */);\n\twrite_record(ba, 0x0289 /* BrtCellIgnoreEC */, write_BrtCellIgnoreEC(safe_decode_range(ws['!ref'])));\n\twrite_record(ba, 0x028A /* BrtEndCellIgnoreECs */);\n}\n\nfunction write_HLINKS(ba, ws/*:Worksheet*/, rels) {\n\t/* *BrtHLink */\n\tws['!links'].forEach(function(l) {\n\t\tif(!l[1].Target) return;\n\t\tvar rId = add_rels(rels, -1, l[1].Target.replace(/#.*$/, \"\"), RELS.HLINK);\n\t\twrite_record(ba, 0x01EE /* BrtHLink */, write_BrtHLink(l, rId));\n\t});\n\tdelete ws['!links'];\n}\nfunction write_LEGACYDRAWING(ba, ws/*:Worksheet*/, idx/*:number*/, rels) {\n\t/* [BrtLegacyDrawing] */\n\tif(ws['!comments'].length > 0) {\n\t\tvar rId = add_rels(rels, -1, \"../drawings/vmlDrawing\" + (idx+1) + \".vml\", RELS.VML);\n\t\twrite_record(ba, 0x0227 /* BrtLegacyDrawing */, write_RelID(\"rId\" + rId));\n\t\tws['!legacy'] = rId;\n\t}\n}\n\nfunction write_AUTOFILTER(ba, ws, wb, idx) {\n\tif(!ws['!autofilter']) return;\n\tvar data = ws['!autofilter'];\n\tvar ref = typeof data.ref === \"string\" ? data.ref : encode_range(data.ref);\n\n\t/* Update FilterDatabase defined name for the worksheet */\n\tif(!wb.Workbook) wb.Workbook = ({Sheets:[]}/*:any*/);\n\tif(!wb.Workbook.Names) wb.Workbook.Names = [];\n\tvar names/*: Array<any> */ = wb.Workbook.Names;\n\tvar range = decode_range(ref);\n\tif(range.s.r == range.e.r) { range.e.r = decode_range(ws[\"!ref\"]).e.r; ref = encode_range(range); }\n\tfor(var i = 0; i < names.length; ++i) {\n\t\tvar name = names[i];\n\t\tif(name.Name != '_xlnm._FilterDatabase') continue;\n\t\tif(name.Sheet != idx) continue;\n\t\tname.Ref = formula_quote_sheet_name(wb.SheetNames[idx]) + \"!\" + fix_range(ref); break;\n\t}\n\tif(i == names.length) names.push({ Name: '_xlnm._FilterDatabase', Sheet: idx, Ref: formula_quote_sheet_name(wb.SheetNames[idx]) + \"!\" + fix_range(ref)  });\n\n\twrite_record(ba, 0x00A1 /* BrtBeginAFilter */, write_UncheckedRfX(safe_decode_range(ref)));\n\t/* *FILTERCOLUMN */\n\t/* [SORTSTATE] */\n\t/* BrtEndAFilter */\n\twrite_record(ba, 0x00A2 /* BrtEndAFilter */);\n}\n\nfunction write_WSVIEWS2(ba, ws, Workbook) {\n\twrite_record(ba, 0x0085 /* BrtBeginWsViews */);\n\t{ /* 1*WSVIEW2 */\n\t\t/* [ACUID] */\n\t\twrite_record(ba, 0x0089 /* BrtBeginWsView */, write_BrtBeginWsView(ws, Workbook));\n\t\t/* [BrtPane] */\n\t\t/* *4BrtSel */\n\t\t/* *4SXSELECT */\n\t\t/* *FRT */\n\t\twrite_record(ba, 0x008A /* BrtEndWsView */);\n\t}\n\t/* *FRT */\n\twrite_record(ba, 0x0086 /* BrtEndWsViews */);\n}\n\nfunction write_WSFMTINFO(/*::ba, ws*/) {\n\t/* [ACWSFMTINFO] */\n\t// write_record(ba, 0x01E5 /* BrtWsFmtInfo */, write_BrtWsFmtInfo(ws));\n}\n\nfunction write_SHEETPROTECT(ba, ws) {\n\tif(!ws['!protect']) return;\n\t/* [BrtSheetProtectionIso] */\n\twrite_record(ba, 0x0217 /* BrtSheetProtection */, write_BrtSheetProtection(ws['!protect']));\n}\n\nfunction write_ws_bin(idx/*:number*/, opts, wb/*:Workbook*/, rels) {\n\tvar ba = buf_array();\n\tvar s = wb.SheetNames[idx], ws = wb.Sheets[s] || {};\n\tvar c/*:string*/ = s; try { if(wb && wb.Workbook) c = wb.Workbook.Sheets[idx].CodeName || c; } catch(e) {}\n\tvar r = safe_decode_range(ws['!ref'] || \"A1\");\n\tif(r.e.c > 0x3FFF || r.e.r > 0xFFFFF) {\n\t\tif(opts.WTF) throw new Error(\"Range \" + (ws['!ref'] || \"A1\") + \" exceeds format limit A1:XFD1048576\");\n\t\tr.e.c = Math.min(r.e.c, 0x3FFF);\n\t\tr.e.r = Math.min(r.e.c, 0xFFFFF);\n\t}\n\tws['!links'] = [];\n\t/* passed back to write_zip and removed there */\n\tws['!comments'] = [];\n\twrite_record(ba, 0x0081 /* BrtBeginSheet */);\n\tif(wb.vbaraw || ws['!outline']) write_record(ba, 0x0093 /* BrtWsProp */, write_BrtWsProp(c, ws['!outline']));\n\twrite_record(ba, 0x0094 /* BrtWsDim */, write_BrtWsDim(r));\n\twrite_WSVIEWS2(ba, ws, wb.Workbook);\n\twrite_WSFMTINFO(ba, ws);\n\twrite_COLINFOS(ba, ws, idx, opts, wb);\n\twrite_CELLTABLE(ba, ws, idx, opts, wb);\n\t/* [BrtSheetCalcProp] */\n\twrite_SHEETPROTECT(ba, ws);\n\t/* *([BrtRangeProtectionIso] BrtRangeProtection) */\n\t/* [SCENMAN] */\n\twrite_AUTOFILTER(ba, ws, wb, idx);\n\t/* [SORTSTATE] */\n\t/* [DCON] */\n\t/* [USERSHVIEWS] */\n\twrite_MERGECELLS(ba, ws);\n\t/* [BrtPhoneticInfo] */\n\t/* *CONDITIONALFORMATTING */\n\t/* [DVALS] */\n\twrite_HLINKS(ba, ws, rels);\n\t/* [BrtPrintOptions] */\n\tif(ws['!margins']) write_record(ba, 0x01DC /* BrtMargins */, write_BrtMargins(ws['!margins']));\n\t/* [BrtPageSetup] */\n\t/* [HEADERFOOTER] */\n\t/* [RWBRK] */\n\t/* [COLBRK] */\n\t/* *BrtBigName */\n\t/* [CELLWATCHES] */\n\tif(!opts || opts.ignoreEC || (opts.ignoreEC == (void 0))) write_IGNOREECS(ba, ws);\n\t/* [SMARTTAGS] */\n\t/* [BrtDrawing] */\n\twrite_LEGACYDRAWING(ba, ws, idx, rels);\n\t/* [BrtLegacyDrawingHF] */\n\t/* [BrtBkHim] */\n\t/* [OLEOBJECTS] */\n\t/* [ACTIVEXCONTROLS] */\n\t/* [WEBPUBITEMS] */\n\t/* [LISTPARTS] */\n\t/* FRTWORKSHEET */\n\twrite_record(ba, 0x0082 /* BrtEndSheet */);\n\treturn ba.end();\n}\nfunction parse_Cache(data/*:string*/)/*:[Array<number|string>, string, ?string]*/ {\n\tvar col/*:Array<number|string>*/ = [];\n\tvar num = data.match(/^<c:numCache>/);\n\tvar f;\n\n\t/* 21.2.2.150 pt CT_NumVal */\n\t(data.match(/<c:pt idx=\"(\\d*)\">(.*?)<\\/c:pt>/mg)||[]).forEach(function(pt) {\n\t\tvar q = pt.match(/<c:pt idx=\"(\\d*?)\"><c:v>(.*)<\\/c:v><\\/c:pt>/);\n\t\tif(!q) return;\n\t\tcol[+q[1]] = num ? +q[2] : q[2];\n\t});\n\n\t/* 21.2.2.71 formatCode CT_Xstring */\n\tvar nf = unescapexml((data.match(/<c:formatCode>([\\s\\S]*?)<\\/c:formatCode>/) || [\"\",\"General\"])[1]);\n\n\t(data.match(/<c:f>(.*?)<\\/c:f>/mg)||[]).forEach(function(F) { f = F.replace(/<.*?>/g,\"\"); });\n\n\treturn [col, nf, f];\n}\n\n/* 21.2 DrawingML - Charts */\nfunction parse_chart(data/*:?string*/, name/*:string*/, opts, rels, wb, csheet) {\n\tvar cs/*:Worksheet*/ = ((csheet || {\"!type\":\"chart\"})/*:any*/);\n\tif(!data) return csheet;\n\t/* 21.2.2.27 chart CT_Chart */\n\n\tvar C = 0, R = 0, col = \"A\";\n\tvar refguess = {s: {r:2000000, c:2000000}, e: {r:0, c:0} };\n\n\t/* 21.2.2.120 numCache CT_NumData */\n\t(data.match(/<c:numCache>[\\s\\S]*?<\\/c:numCache>/gm)||[]).forEach(function(nc) {\n\t\tvar cache = parse_Cache(nc);\n\t\trefguess.s.r = refguess.s.c = 0;\n\t\trefguess.e.c = C;\n\t\tcol = encode_col(C);\n\t\tcache[0].forEach(function(n,i) {\n\t\t\tif(cs[\"!data\"]) {\n\t\t\t\tif(!cs[\"!data\"][i]) cs[\"!data\"][i] = [];\n\t\t\t\tcs[\"!data\"][i][C] = {t:'n', v:n, z:cache[1] };\n\t\t\t} else cs[col + encode_row(i)] = {t:'n', v:n, z:cache[1] };\n\t\t\tR = i;\n\t\t});\n\t\tif(refguess.e.r < R) refguess.e.r = R;\n\t\t++C;\n\t});\n\tif(C > 0) cs[\"!ref\"] = encode_range(refguess);\n\treturn cs;\n}\n/* 18.3 Worksheets also covers Chartsheets */\nfunction parse_cs_xml(data/*:?string*/, opts, idx/*:number*/, rels, wb/*::, themes, styles*/)/*:Worksheet*/ {\n\tif(!data) return data;\n\t/* 18.3.1.12 chartsheet CT_ChartSheet */\n\tif(!rels) rels = {'!id':{}};\n\tvar s = ({'!type':\"chart\", '!drawel':null, '!rel':\"\"}/*:any*/);\n\tvar m;\n\n\t/* 18.3.1.83 sheetPr CT_ChartsheetPr */\n\tvar sheetPr = data.match(sheetprregex);\n\tif(sheetPr) parse_ws_xml_sheetpr(sheetPr[0], s, wb, idx);\n\n\t/* 18.3.1.36 drawing CT_Drawing */\n\tif((m = data.match(/drawing r:id=\"(.*?)\"/))) s['!rel'] = m[1];\n\n\tif(rels['!id'][s['!rel']]) s['!drawel'] = rels['!id'][s['!rel']];\n\treturn s;\n}\n//function write_cs_xml(idx/*:number*/, opts, wb/*:Workbook*/, rels)/*:string*/ {\n//\tvar o = [XML_HEADER, writextag('chartsheet', null, {\n//\t\t'xmlns': XMLNS_main[0],\n//\t\t'xmlns:r': XMLNS.r\n//\t})];\n//\to[o.length] = writextag(\"drawing\", null, {\"r:id\": \"rId1\"});\n//\tadd_rels(rels, -1, \"../drawings/drawing\" + (idx+1) + \".xml\", RELS.DRAW);\n//\tif(o.length>2) { o[o.length] = ('</chartsheet>'); o[1]=o[1].replace(\"/>\",\">\"); }\n//\treturn o.join(\"\");\n//}\n\n/* [MS-XLSB] 2.4.331 BrtCsProp */\nfunction parse_BrtCsProp(data, length/*:number*/) {\n\tdata.l += 10;\n\tvar name = parse_XLWideString(data, length - 10);\n\treturn { name: name };\n}\n\n/* [MS-XLSB] 2.1.7.7 Chart Sheet */\nfunction parse_cs_bin(data, opts, idx/*:number*/, rels, wb/*::, themes, styles*/)/*:Worksheet*/ {\n\tif(!data) return data;\n\tif(!rels) rels = {'!id':{}};\n\tvar s = {'!type':\"chart\", '!drawel':null, '!rel':\"\"};\n\tvar state/*:Array<string>*/ = [];\n\tvar pass = false;\n\trecordhopper(data, function cs_parse(val, R, RT) {\n\t\tswitch(RT) {\n\n\t\t\tcase 0x0226: /* 'BrtDrawing' */\n\t\t\t\ts['!rel'] = val; break;\n\n\t\t\tcase 0x028B: /* 'BrtCsProp' */\n\t\t\t\tif(!wb.Sheets[idx]) wb.Sheets[idx] = {};\n\t\t\t\tif(val.name) wb.Sheets[idx].CodeName = val.name;\n\t\t\t\tbreak;\n\n\t\t\tcase 0x0232: /* 'BrtBkHim' */\n\t\t\tcase 0x028C: /* 'BrtCsPageSetup' */\n\t\t\tcase 0x029D: /* 'BrtCsProtection' */\n\t\t\tcase 0x02A7: /* 'BrtCsProtectionIso' */\n\t\t\tcase 0x0227: /* 'BrtLegacyDrawing' */\n\t\t\tcase 0x0228: /* 'BrtLegacyDrawingHF' */\n\t\t\tcase 0x01DC: /* 'BrtMargins' */\n\t\t\tcase 0x0C00: /* 'BrtUid' */\n\t\t\t\tbreak;\n\n\t\t\tcase 0x0023: /* 'BrtFRTBegin' */\n\t\t\t\tpass = true; break;\n\t\t\tcase 0x0024: /* 'BrtFRTEnd' */\n\t\t\t\tpass = false; break;\n\t\t\tcase 0x0025: /* 'BrtACBegin' */\n\t\t\t\tstate.push(RT); break;\n\t\t\tcase 0x0026: /* 'BrtACEnd' */\n\t\t\t\tstate.pop(); break;\n\n\t\t\tdefault:\n\t\t\t\tif(R.T > 0) state.push(RT);\n\t\t\t\telse if(R.T < 0) state.pop();\n\t\t\t\telse if(!pass || opts.WTF) throw new Error(\"Unexpected record 0x\" + RT.toString(16));\n\t\t}\n\t}, opts);\n\n\tif(rels['!id'][s['!rel']]) s['!drawel'] = rels['!id'][s['!rel']];\n\treturn s;\n}\n//function write_cs_bin(/*::idx:number, opts, wb:Workbook, rels*/) {\n//\tvar ba = buf_array();\n//\twrite_record(ba, 0x0081 /* BrtBeginSheet */);\n//\t/* [BrtCsProp] */\n//\t/* CSVIEWS */\n//\t/* [[BrtCsProtectionIso] BrtCsProtection] */\n//\t/* [USERCSVIEWS] */\n//\t/* [BrtMargins] */\n//\t/* [BrtCsPageSetup] */\n//\t/* [HEADERFOOTER] */\n//\t/* BrtDrawing */\n//\t/* [BrtLegacyDrawing] */\n//\t/* [BrtLegacyDrawingHF] */\n//\t/* [BrtBkHim] */\n//\t/* [WEBPUBITEMS] */\n//\t/* FRTCHARTSHEET */\n//\twrite_record(ba, 0x0082 /* BrtEndSheet */);\n//\treturn ba.end();\n//}\n/* 18.2.28 (CT_WorkbookProtection) Defaults */\nvar WBPropsDef = [\n\t['allowRefreshQuery',           false, \"bool\"],\n\t['autoCompressPictures',        true,  \"bool\"],\n\t['backupFile',                  false, \"bool\"],\n\t['checkCompatibility',          false, \"bool\"],\n\t['CodeName',                    ''],\n\t['date1904',                    false, \"bool\"],\n\t['defaultThemeVersion',         0,      \"int\"],\n\t['filterPrivacy',               false, \"bool\"],\n\t['hidePivotFieldList',          false, \"bool\"],\n\t['promptedSolutions',           false, \"bool\"],\n\t['publishItems',                false, \"bool\"],\n\t['refreshAllConnections',       false, \"bool\"],\n\t['saveExternalLinkValues',      true,  \"bool\"],\n\t['showBorderUnselectedTables',  true,  \"bool\"],\n\t['showInkAnnotation',           true,  \"bool\"],\n\t['showObjects',                 'all'],\n\t['showPivotChartFilter',        false, \"bool\"],\n\t['updateLinks', 'userSet']\n];\n\n/* 18.2.30 (CT_BookView) Defaults */\nvar WBViewDef = [\n\t['activeTab',                   0,      \"int\"],\n\t['autoFilterDateGrouping',      true,  \"bool\"],\n\t['firstSheet',                  0,      \"int\"],\n\t['minimized',                   false, \"bool\"],\n\t['showHorizontalScroll',        true,  \"bool\"],\n\t['showSheetTabs',               true,  \"bool\"],\n\t['showVerticalScroll',          true,  \"bool\"],\n\t['tabRatio',                    600,    \"int\"],\n\t['visibility',                  'visible']\n\t//window{Height,Width}, {x,y}Window\n];\n\n/* 18.2.19 (CT_Sheet) Defaults */\nvar SheetDef = [\n\t//['state', 'visible']\n];\n\n/* 18.2.2  (CT_CalcPr) Defaults */\nvar CalcPrDef = [\n\t['calcCompleted', 'true'],\n\t['calcMode', 'auto'],\n\t['calcOnSave', 'true'],\n\t['concurrentCalc', 'true'],\n\t['fullCalcOnLoad', 'false'],\n\t['fullPrecision', 'true'],\n\t['iterate', 'false'],\n\t['iterateCount', '100'],\n\t['iterateDelta', '0.001'],\n\t['refMode', 'A1']\n];\n\n/* 18.2.3 (CT_CustomWorkbookView) Defaults */\n/*var CustomWBViewDef = [\n\t['autoUpdate', 'false'],\n\t['changesSavedWin', 'false'],\n\t['includeHiddenRowCol', 'true'],\n\t['includePrintSettings', 'true'],\n\t['maximized', 'false'],\n\t['minimized', 'false'],\n\t['onlySync', 'false'],\n\t['personalView', 'false'],\n\t['showComments', 'commIndicator'],\n\t['showFormulaBar', 'true'],\n\t['showHorizontalScroll', 'true'],\n\t['showObjects', 'all'],\n\t['showSheetTabs', 'true'],\n\t['showStatusbar', 'true'],\n\t['showVerticalScroll', 'true'],\n\t['tabRatio', '600'],\n\t['xWindow', '0'],\n\t['yWindow', '0']\n];*/\n\nfunction push_defaults_array(target, defaults) {\n\tfor(var j = 0; j != target.length; ++j) { var w = target[j];\n\t\tfor(var i=0; i != defaults.length; ++i) { var z = defaults[i];\n\t\t\tif(w[z[0]] == null) w[z[0]] = z[1];\n\t\t\telse switch(z[2]) {\n\t\t\tcase \"bool\": if(typeof w[z[0]] == \"string\") w[z[0]] = parsexmlbool(w[z[0]]); break;\n\t\t\tcase \"int\": if(typeof w[z[0]] == \"string\") w[z[0]] = parseInt(w[z[0]], 10); break;\n\t\t\t}\n\t\t}\n\t}\n}\nfunction push_defaults(target, defaults) {\n\tfor(var i = 0; i != defaults.length; ++i) { var z = defaults[i];\n\t\tif(target[z[0]] == null) target[z[0]] = z[1];\n\t\telse switch(z[2]) {\n\t\t\tcase \"bool\": if(typeof target[z[0]] == \"string\") target[z[0]] = parsexmlbool(target[z[0]]); break;\n\t\t\tcase \"int\": if(typeof target[z[0]] == \"string\") target[z[0]] = parseInt(target[z[0]], 10); break;\n\t\t}\n\t}\n}\n\nfunction parse_wb_defaults(wb) {\n\tpush_defaults(wb.WBProps, WBPropsDef);\n\tpush_defaults(wb.CalcPr, CalcPrDef);\n\n\tpush_defaults_array(wb.WBView, WBViewDef);\n\tpush_defaults_array(wb.Sheets, SheetDef);\n\n\t_ssfopts.date1904 = parsexmlbool(wb.WBProps.date1904);\n}\n\nfunction safe1904(wb/*:Workbook*/)/*:string*/ {\n\t/* TODO: store date1904 somewhere else */\n\tif(!wb.Workbook) return \"false\";\n\tif(!wb.Workbook.WBProps) return \"false\";\n\treturn parsexmlbool(wb.Workbook.WBProps.date1904) ? \"true\" : \"false\";\n}\n\nvar badchars = /*#__PURE__*/\":][*?\\/\\\\\".split(\"\");\nfunction check_ws_name(n/*:string*/, safe/*:?boolean*/)/*:boolean*/ {\n\ttry {\n\t\tif(n == \"\") throw new Error(\"Sheet name cannot be blank\");\n\t\tif(n.length > 31) throw new Error(\"Sheet name cannot exceed 31 chars\");\n\t\tif(n.charCodeAt(0) == 0x27 || n.charCodeAt(n.length - 1) == 0x27) throw new Error(\"Sheet name cannot start or end with apostrophe (')\");\n\t\tif(n.toLowerCase() == \"history\") throw new Error(\"Sheet name cannot be 'History'\");\n\t\tbadchars.forEach(function(c) {\n\t\t\tif(n.indexOf(c) == -1) return;\n\t\t\tthrow new Error(\"Sheet name cannot contain : \\\\ / ? * [ ]\");\n\t\t});\n\t} catch(e) { if(safe) return false; throw e; }\n\treturn true;\n}\nfunction check_wb_names(N, S, codes) {\n\tN.forEach(function(n,i) {\n\t\tcheck_ws_name(n);\n\t\tfor(var j = 0; j < i; ++j) if(n == N[j]) throw new Error(\"Duplicate Sheet Name: \" + n);\n\t\tif(codes) {\n\t\t\tvar cn = (S && S[i] && S[i].CodeName) || n;\n\t\t\tif(cn.charCodeAt(0) == 95 && cn.length > 22) throw new Error(\"Bad Code Name: Worksheet\" + cn);\n\t\t}\n\t});\n}\nfunction check_wb(wb) {\n\tif(!wb || !wb.SheetNames || !wb.Sheets) throw new Error(\"Invalid Workbook\");\n\tif(!wb.SheetNames.length) throw new Error(\"Workbook is empty\");\n\tvar Sheets = (wb.Workbook && wb.Workbook.Sheets) || [];\n\tcheck_wb_names(wb.SheetNames, Sheets, !!wb.vbaraw);\n\tfor(var i = 0; i < wb.SheetNames.length; ++i) check_ws(wb.Sheets[wb.SheetNames[i]], wb.SheetNames[i], i);\n\twb.SheetNames.forEach(function(n, i) {\n\t\tvar ws = wb.Sheets[n];\n\t\tif(!ws || !ws[\"!autofilter\"]) return;\n\t\tvar DN;\n\t\tif(!wb.Workbook) wb.Workbook = {};\n\t\tif(!wb.Workbook.Names) wb.Workbook.Names = [];\n\t\twb.Workbook.Names.forEach(function(dn) { if(dn.Name == \"_xlnm._FilterDatabase\" && dn.Sheet == i) DN = dn; });\n\t\tvar nn = formula_quote_sheet_name(n) + \"!\" + fix_range(ws[\"!autofilter\"].ref);\n\t\tif(DN) DN.Ref = nn;\n\t\telse wb.Workbook.Names.push({Name: \"_xlnm._FilterDatabase\", Sheet: i, Ref: nn});\n\t});\n\t/* TODO: validate workbook */\n}\n/* 18.2 Workbook */\nvar wbnsregex = /<\\w+:workbook/;\nfunction parse_wb_xml(data, opts)/*:WorkbookFile*/ {\n\tif(!data) throw new Error(\"Could not find file\");\n\tvar wb = /*::(*/{ AppVersion:{}, WBProps:{}, WBView:[], Sheets:[], CalcPr:{}, Names:[], xmlns: \"\" }/*::)*/;\n\tvar pass = false, xmlns = \"xmlns\";\n\tvar dname = {}, dnstart = 0;\n\tdata.replace(tagregex, function xml_wb(x, idx) {\n\t\tvar y/*:any*/ = parsexmltag(x);\n\t\tswitch(strip_ns(y[0])) {\n\t\t\tcase '<?xml': break;\n\n\t\t\t/* 18.2.27 workbook CT_Workbook 1 */\n\t\t\tcase '<workbook':\n\t\t\t\tif(x.match(wbnsregex)) xmlns = \"xmlns\" + x.match(/<(\\w+):/)[1];\n\t\t\t\twb.xmlns = y[xmlns];\n\t\t\t\tbreak;\n\t\t\tcase '</workbook>': break;\n\n\t\t\t/* 18.2.13 fileVersion CT_FileVersion ? */\n\t\t\tcase '<fileVersion': delete y[0]; wb.AppVersion = y; break;\n\t\t\tcase '<fileVersion/>': case '</fileVersion>': break;\n\n\t\t\t/* 18.2.12 fileSharing CT_FileSharing ? */\n\t\t\tcase '<fileSharing':\n\t\t\t\tbreak;\n\t\t\tcase '<fileSharing/>': break;\n\n\t\t\t/* 18.2.28 workbookPr CT_WorkbookPr ? */\n\t\t\tcase '<workbookPr':\n\t\t\tcase '<workbookPr/>':\n\t\t\t\tWBPropsDef.forEach(function(w) {\n\t\t\t\t\tif(y[w[0]] == null) return;\n\t\t\t\t\tswitch(w[2]) {\n\t\t\t\t\t\tcase \"bool\": wb.WBProps[w[0]] = parsexmlbool(y[w[0]]); break;\n\t\t\t\t\t\tcase \"int\": wb.WBProps[w[0]] = parseInt(y[w[0]], 10); break;\n\t\t\t\t\t\tdefault: wb.WBProps[w[0]] = y[w[0]];\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\tif(y.codeName) wb.WBProps.CodeName = utf8read(y.codeName);\n\t\t\t\tbreak;\n\t\t\tcase '</workbookPr>': break;\n\n\t\t\t/* 18.2.29 workbookProtection CT_WorkbookProtection ? */\n\t\t\tcase '<workbookProtection':\n\t\t\t\tbreak;\n\t\t\tcase '<workbookProtection/>': break;\n\n\t\t\t/* 18.2.1  bookViews CT_BookViews ? */\n\t\t\tcase '<bookViews': case '<bookViews>': case '</bookViews>': break;\n\t\t\t/* 18.2.30   workbookView CT_BookView + */\n\t\t\tcase '<workbookView': case '<workbookView/>': delete y[0]; wb.WBView.push(y); break;\n\t\t\tcase '</workbookView>': break;\n\n\t\t\t/* 18.2.20 sheets CT_Sheets 1 */\n\t\t\tcase '<sheets': case '<sheets>': case '</sheets>': break; // aggregate sheet\n\t\t\t/* 18.2.19   sheet CT_Sheet + */\n\t\t\tcase '<sheet':\n\t\t\t\tswitch(y.state) {\n\t\t\t\t\tcase \"hidden\": y.Hidden = 1; break;\n\t\t\t\t\tcase \"veryHidden\": y.Hidden = 2; break;\n\t\t\t\t\tdefault: y.Hidden = 0;\n\t\t\t\t}\n\t\t\t\tdelete y.state;\n\t\t\t\ty.name = unescapexml(utf8read(y.name));\n\t\t\t\tdelete y[0]; wb.Sheets.push(y); break;\n\t\t\tcase '</sheet>': break;\n\n\t\t\t/* 18.2.15 functionGroups CT_FunctionGroups ? */\n\t\t\tcase '<functionGroups': case '<functionGroups/>': break;\n\t\t\t/* 18.2.14   functionGroup CT_FunctionGroup + */\n\t\t\tcase '<functionGroup': break;\n\n\t\t\t/* 18.2.9  externalReferences CT_ExternalReferences ? */\n\t\t\tcase '<externalReferences': case '</externalReferences>': case '<externalReferences>': break;\n\t\t\t/* 18.2.8    externalReference CT_ExternalReference + */\n\t\t\tcase '<externalReference': break;\n\n\t\t\t/* 18.2.6  definedNames CT_DefinedNames ? */\n\t\t\tcase '<definedNames/>': break;\n\t\t\tcase '<definedNames>': case '<definedNames': pass=true; break;\n\t\t\tcase '</definedNames>': pass=false; break;\n\t\t\t/* 18.2.5    definedName CT_DefinedName + */\n\t\t\tcase '<definedName': {\n\t\t\t\tdname = {};\n\t\t\t\tdname.Name = utf8read(y.name);\n\t\t\t\tif(y.comment) dname.Comment = y.comment;\n\t\t\t\tif(y.localSheetId) dname.Sheet = +y.localSheetId;\n\t\t\t\tif(parsexmlbool(y.hidden||\"0\")) dname.Hidden = true;\n\t\t\t\tdnstart = idx + x.length;\n\t\t\t}\tbreak;\n\t\t\tcase '</definedName>': {\n\t\t\t\tdname.Ref = unescapexml(utf8read(data.slice(dnstart, idx)));\n\t\t\t\twb.Names.push(dname);\n\t\t\t} break;\n\t\t\tcase '<definedName/>': break;\n\n\t\t\t/* 18.2.2  calcPr CT_CalcPr ? */\n\t\t\tcase '<calcPr': delete y[0]; wb.CalcPr = y; break;\n\t\t\tcase '<calcPr/>': delete y[0]; wb.CalcPr = y; break;\n\t\t\tcase '</calcPr>': break;\n\n\t\t\t/* 18.2.16 oleSize CT_OleSize ? (ref required) */\n\t\t\tcase '<oleSize': break;\n\n\t\t\t/* 18.2.4  customWorkbookViews CT_CustomWorkbookViews ? */\n\t\t\tcase '<customWorkbookViews>': case '</customWorkbookViews>': case '<customWorkbookViews': break;\n\t\t\t/* 18.2.3  customWorkbookView CT_CustomWorkbookView + */\n\t\t\tcase '<customWorkbookView': case '</customWorkbookView>': break;\n\n\t\t\t/* 18.2.18 pivotCaches CT_PivotCaches ? */\n\t\t\tcase '<pivotCaches>': case '</pivotCaches>': case '<pivotCaches': break;\n\t\t\t/* 18.2.17 pivotCache CT_PivotCache ? */\n\t\t\tcase '<pivotCache': break;\n\n\t\t\t/* 18.2.21 smartTagPr CT_SmartTagPr ? */\n\t\t\tcase '<smartTagPr': case '<smartTagPr/>': break;\n\n\t\t\t/* 18.2.23 smartTagTypes CT_SmartTagTypes ? */\n\t\t\tcase '<smartTagTypes': case '<smartTagTypes>': case '</smartTagTypes>': break;\n\t\t\t/* 18.2.22 smartTagType CT_SmartTagType ? */\n\t\t\tcase '<smartTagType': break;\n\n\t\t\t/* 18.2.24 webPublishing CT_WebPublishing ? */\n\t\t\tcase '<webPublishing': case '<webPublishing/>': break;\n\n\t\t\t/* 18.2.11 fileRecoveryPr CT_FileRecoveryPr ? */\n\t\t\tcase '<fileRecoveryPr': case '<fileRecoveryPr/>': break;\n\n\t\t\t/* 18.2.26 webPublishObjects CT_WebPublishObjects ? */\n\t\t\tcase '<webPublishObjects>': case '<webPublishObjects': case '</webPublishObjects>': break;\n\t\t\t/* 18.2.25 webPublishObject CT_WebPublishObject ? */\n\t\t\tcase '<webPublishObject': break;\n\n\t\t\t/* 18.2.10 extLst CT_ExtensionList ? */\n\t\t\tcase '<extLst': case '<extLst>': case '</extLst>': case '<extLst/>': break;\n\t\t\t/* 18.2.7  ext CT_Extension + */\n\t\t\tcase '<ext': pass=true; break; //TODO: check with versions of excel\n\t\t\tcase '</ext>': pass=false; break;\n\n\t\t\t/* Others */\n\t\t\tcase '<ArchID': break;\n\t\t\tcase '<AlternateContent':\n\t\t\tcase '<AlternateContent>': pass=true; break;\n\t\t\tcase '</AlternateContent>': pass=false; break;\n\n\t\t\t/* TODO */\n\t\t\tcase '<revisionPtr': break;\n\n\t\t\tdefault: if(!pass && opts.WTF) throw new Error('unrecognized ' + y[0] + ' in workbook');\n\t\t}\n\t\treturn x;\n\t});\n\tif(XMLNS_main.indexOf(wb.xmlns) === -1) throw new Error(\"Unknown Namespace: \" + wb.xmlns);\n\n\tparse_wb_defaults(wb);\n\n\treturn wb;\n}\n\nfunction write_wb_xml(wb/*:Workbook*//*::, opts:?WriteOpts*/)/*:string*/ {\n\tvar o = [XML_HEADER];\n\to[o.length] = writextag('workbook', null, {\n\t\t'xmlns': XMLNS_main[0],\n\t\t//'xmlns:mx': XMLNS.mx,\n\t\t//'xmlns:s': XMLNS_main[0],\n\t\t'xmlns:r': XMLNS.r\n\t});\n\n\tvar write_names = (wb.Workbook && (wb.Workbook.Names||[]).length > 0);\n\n\t/* fileVersion */\n\t/* fileSharing */\n\n\tvar workbookPr/*:any*/ = ({codeName:\"ThisWorkbook\"}/*:any*/);\n\tif(wb.Workbook && wb.Workbook.WBProps) {\n\t\tWBPropsDef.forEach(function(x) {\n\t\t\t/*:: if(!wb.Workbook || !wb.Workbook.WBProps) throw \"unreachable\"; */\n\t\t\tif((wb.Workbook.WBProps[x[0]]/*:any*/) == null) return;\n\t\t\tif((wb.Workbook.WBProps[x[0]]/*:any*/) == x[1]) return;\n\t\t\tworkbookPr[x[0]] = (wb.Workbook.WBProps[x[0]]/*:any*/);\n\t\t});\n\t\t/*:: if(!wb.Workbook || !wb.Workbook.WBProps) throw \"unreachable\"; */\n\t\tif(wb.Workbook.WBProps.CodeName) { workbookPr.codeName = wb.Workbook.WBProps.CodeName; delete workbookPr.CodeName; }\n\t}\n\to[o.length] = (writextag('workbookPr', null, workbookPr));\n\n\t/* workbookProtection */\n\n\tvar sheets = wb.Workbook && wb.Workbook.Sheets || [];\n\tvar i = 0;\n\n\t/* bookViews only written if first worksheet is hidden */\n\tif(sheets && sheets[0] && !!sheets[0].Hidden) {\n\t\to[o.length] = \"<bookViews>\";\n\t\tfor(i = 0; i != wb.SheetNames.length; ++i) {\n\t\t\tif(!sheets[i]) break;\n\t\t\tif(!sheets[i].Hidden) break;\n\t\t}\n\t\tif(i == wb.SheetNames.length) i = 0;\n\t\to[o.length] = '<workbookView firstSheet=\"' + i + '\" activeTab=\"' + i + '\"/>';\n\t\to[o.length] = \"</bookViews>\";\n\t}\n\n\to[o.length] = \"<sheets>\";\n\tfor(i = 0; i != wb.SheetNames.length; ++i) {\n\t\tvar sht = ({name:escapexml(wb.SheetNames[i].slice(0,31))}/*:any*/);\n\t\tsht.sheetId = \"\"+(i+1);\n\t\tsht[\"r:id\"] = \"rId\"+(i+1);\n\t\tif(sheets[i]) switch(sheets[i].Hidden) {\n\t\t\tcase 1: sht.state = \"hidden\"; break;\n\t\t\tcase 2: sht.state = \"veryHidden\"; break;\n\t\t}\n\t\to[o.length] = (writextag('sheet',null,sht));\n\t}\n\to[o.length] = \"</sheets>\";\n\n\t/* functionGroups */\n\t/* externalReferences */\n\n\tif(write_names) {\n\t\to[o.length] = \"<definedNames>\";\n\t\tif(wb.Workbook && wb.Workbook.Names) wb.Workbook.Names.forEach(function(n) {\n\t\t\tvar d/*:any*/ = {name:n.Name};\n\t\t\tif(n.Comment) d.comment = n.Comment;\n\t\t\tif(n.Sheet != null) d.localSheetId = \"\"+n.Sheet;\n\t\t\tif(n.Hidden) d.hidden = \"1\";\n\t\t\tif(!n.Ref) return;\n\t\t\to[o.length] = writextag('definedName', escapexml(n.Ref), d);\n\t\t});\n\t\to[o.length] = \"</definedNames>\";\n\t}\n\n\t/* calcPr */\n\t/* oleSize */\n\t/* customWorkbookViews */\n\t/* pivotCaches */\n\t/* smartTagPr */\n\t/* smartTagTypes */\n\t/* webPublishing */\n\t/* fileRecoveryPr */\n\t/* webPublishObjects */\n\t/* extLst */\n\n\tif(o.length>2){ o[o.length] = '</workbook>'; o[1]=o[1].replace(\"/>\",\">\"); }\n\treturn o.join(\"\");\n}\n/* [MS-XLSB] 2.4.304 BrtBundleSh */\nfunction parse_BrtBundleSh(data, length/*:number*/) {\n\tvar z = {};\n\tz.Hidden = data.read_shift(4); //hsState ST_SheetState\n\tz.iTabID = data.read_shift(4);\n\tz.strRelID = parse_RelID(data,length-8);\n\tz.name = parse_XLWideString(data);\n\treturn z;\n}\nfunction write_BrtBundleSh(data, o) {\n\tif(!o) o = new_buf(127);\n\to.write_shift(4, data.Hidden);\n\to.write_shift(4, data.iTabID);\n\twrite_RelID(data.strRelID, o);\n\twrite_XLWideString(data.name.slice(0,31), o);\n\treturn o.length > o.l ? o.slice(0, o.l) : o;\n}\n\n/* [MS-XLSB] 2.4.815 BrtWbProp */\nfunction parse_BrtWbProp(data, length)/*:WBProps*/ {\n\tvar o/*:WBProps*/ = ({}/*:any*/);\n\tvar flags = data.read_shift(4);\n\to.defaultThemeVersion = data.read_shift(4);\n\tvar strName = (length > 8) ? parse_XLWideString(data) : \"\";\n\tif(strName.length > 0) o.CodeName = strName;\n\to.autoCompressPictures = !!(flags & 0x10000);\n\to.backupFile = !!(flags & 0x40);\n\to.checkCompatibility = !!(flags & 0x1000);\n\to.date1904 = !!(flags & 0x01);\n\to.filterPrivacy = !!(flags & 0x08);\n\to.hidePivotFieldList = !!(flags & 0x400);\n\to.promptedSolutions = !!(flags & 0x10);\n\to.publishItems = !!(flags & 0x800);\n\to.refreshAllConnections = !!(flags & 0x40000);\n\to.saveExternalLinkValues = !!(flags & 0x80);\n\to.showBorderUnselectedTables = !!(flags & 0x04);\n\to.showInkAnnotation = !!(flags & 0x20);\n\to.showObjects = [\"all\", \"placeholders\", \"none\"][(flags >> 13) & 0x03];\n\to.showPivotChartFilter = !!(flags & 0x8000);\n\to.updateLinks = [\"userSet\", \"never\", \"always\"][(flags >> 8) & 0x03];\n\treturn o;\n}\nfunction write_BrtWbProp(data/*:?WBProps*/, o) {\n\tif(!o) o = new_buf(72);\n\tvar flags = 0;\n\tif(data) {\n\t\t/* TODO: mirror parse_BrtWbProp fields */\n\t\tif(data.date1904) flags |= 0x01;\n\t\tif(data.filterPrivacy) flags |= 0x08;\n\t}\n\to.write_shift(4, flags);\n\to.write_shift(4, 0);\n\twrite_XLSBCodeName(data && data.CodeName || \"ThisWorkbook\", o);\n\treturn o.slice(0, o.l);\n}\n\nfunction parse_BrtFRTArchID$(data, length) {\n\tvar o = {};\n\tdata.read_shift(4);\n\to.ArchID = data.read_shift(4);\n\tdata.l += length - 8;\n\treturn o;\n}\n\n/* [MS-XLSB] 2.4.687 BrtName */\nfunction parse_BrtName(data, length, opts) {\n\tvar end = data.l + length;\n\tvar flags = data.read_shift(4);\n\tdata.l += 1; //var chKey = data.read_shift(1);\n\tvar itab = data.read_shift(4);\n\tvar name = parse_XLNameWideString(data);\n\tvar formula = parse_XLSBNameParsedFormula(data, 0, opts);\n\tvar comment = parse_XLNullableWideString(data);\n\tif(flags & 0x20) name = \"_xlnm.\" + name;\n\t//if(0 /* fProc */) {\n\t\t// unusedstring1: XLNullableWideString\n\t\t// description: XLNullableWideString\n\t\t// helpTopic: XLNullableWideString\n\t\t// unusedstring2: XLNullableWideString\n\t//}\n\tdata.l = end;\n\tvar out = ({Name:name, Ptg:formula, Flags: flags}/*:any*/);\n\tif(itab < 0xFFFFFFF) out.Sheet = itab;\n\tif(comment) out.Comment = comment;\n\treturn out;\n}\nfunction write_BrtName(name, wb) {\n\tvar o = new_buf(9);\n\tvar flags = 0;\n\tvar dname = name.Name;\n\tif(XLSLblBuiltIn.indexOf(dname) > -1) { flags |= 0x20; dname = dname.slice(6); }\n\to.write_shift(4, flags); // flags\n\to.write_shift(1, 0); // chKey\n\to.write_shift(4, name.Sheet == null ? 0xFFFFFFFF : name.Sheet);\n\n\tvar arr = [\n\t\to,\n\t\twrite_XLWideString(dname),\n\t\twrite_XLSBNameParsedFormula(name.Ref, wb)\n\t];\n\tif(name.Comment) arr.push(write_XLNullableWideString(name.Comment));\n\telse {\n\t\tvar x = new_buf(4);\n\t\tx.write_shift(4, 0xFFFFFFFF);\n\t\tarr.push(x);\n\t}\n\n\t// if macro (flags & 0x0F):\n\t// write_shift(4, 0xFFFFFFFF);\n\t// write_XLNullableWideString(description)\n\t// write_XLNullableWideString(helpTopic)\n\t// write_shift(4, 0xFFFFFFFF);\n\n\treturn bconcat(arr);\n}\n\n/* [MS-XLSB] 2.1.7.61 Workbook */\nfunction parse_wb_bin(data, opts)/*:WorkbookFile*/ {\n\tvar wb = { AppVersion:{}, WBProps:{}, WBView:[], Sheets:[], CalcPr:{}, xmlns: \"\" };\n\tvar state/*:Array<string>*/ = [];\n\tvar pass = false;\n\n\tif(!opts) opts = {};\n\topts.biff = 12;\n\n\tvar Names = [];\n\tvar supbooks = ([[]]/*:any*/);\n\tsupbooks.SheetNames = [];\n\tsupbooks.XTI = [];\n\n\tXLSBRecordEnum[0x0010] = { n:\"BrtFRTArchID$\", f:parse_BrtFRTArchID$ };\n\n\trecordhopper(data, function hopper_wb(val, R, RT) {\n\t\tswitch(RT) {\n\t\t\tcase 0x009C: /* 'BrtBundleSh' */\n\t\t\t\tsupbooks.SheetNames.push(val.name);\n\t\t\t\twb.Sheets.push(val); break;\n\n\t\t\tcase 0x0099: /* 'BrtWbProp' */\n\t\t\t\twb.WBProps = val; break;\n\n\t\t\tcase 0x0027: /* 'BrtName' */\n\t\t\t\tif(val.Sheet != null) opts.SID = val.Sheet;\n\t\t\t\tval.Ref = stringify_formula(val.Ptg, null, null, supbooks, opts);\n\t\t\t\tdelete opts.SID;\n\t\t\t\tdelete val.Ptg;\n\t\t\t\tNames.push(val);\n\t\t\t\tbreak;\n\t\t\tcase 0x040C: /* 'BrtNameExt' */ break;\n\n\t\t\tcase 0x0165: /* 'BrtSupSelf' */\n\t\t\tcase 0x0166: /* 'BrtSupSame' */\n\t\t\tcase 0x0163: /* 'BrtSupBookSrc' */\n\t\t\tcase 0x029B: /* 'BrtSupAddin' */\n\t\t\t\tif(!supbooks[0].length) supbooks[0] = [RT, val];\n\t\t\t\telse supbooks.push([RT, val]);\n\t\t\t\tsupbooks[supbooks.length - 1].XTI = [];\n\t\t\t\tbreak;\n\t\t\tcase 0x016A: /* 'BrtExternSheet' */\n\t\t\t\tif(supbooks.length === 0) { supbooks[0] = []; supbooks[0].XTI = []; }\n\t\t\t\tsupbooks[supbooks.length - 1].XTI = supbooks[supbooks.length - 1].XTI.concat(val);\n\t\t\t\tsupbooks.XTI = supbooks.XTI.concat(val);\n\t\t\t\tbreak;\n\t\t\tcase 0x0169: /* 'BrtPlaceholderName' */\n\t\t\t\tbreak;\n\n\t\t\tcase 0x0817: /* 'BrtAbsPath15' */\n\t\t\tcase 0x009E: /* 'BrtBookView' */\n\t\t\tcase 0x008F: /* 'BrtBeginBundleShs' */\n\t\t\tcase 0x0298: /* 'BrtBeginFnGroup' */\n\t\t\tcase 0x0161: /* 'BrtBeginExternals' */\n\t\t\t\tbreak;\n\n\t\t\t/* case 'BrtModelTimeGroupingCalcCol' */\n\t\t\tcase 0x0C00: /* 'BrtUid' */\n\t\t\tcase 0x0C01: /* 'BrtRevisionPtr' */\n\t\t\tcase 0x0216: /* 'BrtBookProtection' */\n\t\t\tcase 0x02A5: /* 'BrtBookProtectionIso' */\n\t\t\tcase 0x009D: /* 'BrtCalcProp' */\n\t\t\tcase 0x0262: /* 'BrtCrashRecErr' */\n\t\t\tcase 0x0802: /* 'BrtDecoupledPivotCacheID' */\n\t\t\tcase 0x009B: /* 'BrtFileRecover' */\n\t\t\tcase 0x0224: /* 'BrtFileSharing' */\n\t\t\tcase 0x02A4: /* 'BrtFileSharingIso' */\n\t\t\tcase 0x0080: /* 'BrtFileVersion' */\n\t\t\tcase 0x0299: /* 'BrtFnGroup' */\n\t\t\tcase 0x0850: /* 'BrtModelRelationship' */\n\t\t\tcase 0x084D: /* 'BrtModelTable' */\n\t\t\tcase 0x0225: /* 'BrtOleSize' */\n\t\t\tcase 0x0805: /* 'BrtPivotTableRef' */\n\t\t\tcase 0x0254: /* 'BrtSmartTagType' */\n\t\t\tcase 0x081C: /* 'BrtTableSlicerCacheID' */\n\t\t\tcase 0x081B: /* 'BrtTableSlicerCacheIDs' */\n\t\t\tcase 0x0822: /* 'BrtTimelineCachePivotCacheID' */\n\t\t\tcase 0x018D: /* 'BrtUserBookView' */\n\t\t\tcase 0x009A: /* 'BrtWbFactoid' */\n\t\t\tcase 0x045D: /* 'BrtWbProp14' */\n\t\t\tcase 0x0229: /* 'BrtWebOpt' */\n\t\t\tcase 0x082B: /* 'BrtWorkBookPr15' */\n\t\t\t\tbreak;\n\n\t\t\tcase 0x0023: /* 'BrtFRTBegin' */\n\t\t\t\tstate.push(RT); pass = true; break;\n\t\t\tcase 0x0024: /* 'BrtFRTEnd' */\n\t\t\t\tstate.pop(); pass = false; break;\n\t\t\tcase 0x0025: /* 'BrtACBegin' */\n\t\t\t\tstate.push(RT); pass = true; break;\n\t\t\tcase 0x0026: /* 'BrtACEnd' */\n\t\t\t\tstate.pop(); pass = false; break;\n\n\t\t\tcase 0x0010: /* 'BrtFRTArchID$' */ break;\n\n\t\t\tdefault:\n\t\t\t\tif(R.T){/* empty */}\n\t\t\t\telse if(!pass || (opts.WTF && state[state.length-1] != 0x0025 /* BrtACBegin */ && state[state.length-1] != 0x0023 /* BrtFRTBegin */)) throw new Error(\"Unexpected record 0x\" + RT.toString(16));\n\t\t}\n\t}, opts);\n\n\tparse_wb_defaults(wb);\n\n\t// $FlowIgnore\n\twb.Names = Names;\n\n\t(wb/*:any*/).supbooks = supbooks;\n\treturn wb;\n}\n\nfunction write_BUNDLESHS(ba, wb/*::, opts*/) {\n\twrite_record(ba, 0x008F /* BrtBeginBundleShs */);\n\tfor(var idx = 0; idx != wb.SheetNames.length; ++idx) {\n\t\tvar viz = wb.Workbook && wb.Workbook.Sheets && wb.Workbook.Sheets[idx] && wb.Workbook.Sheets[idx].Hidden || 0;\n\t\tvar d = { Hidden: viz, iTabID: idx+1, strRelID: 'rId' + (idx+1), name: wb.SheetNames[idx] };\n\t\twrite_record(ba, 0x009C /* BrtBundleSh */, write_BrtBundleSh(d));\n\t}\n\twrite_record(ba, 0x0090 /* BrtEndBundleShs */);\n}\n\n/* [MS-XLSB] 2.4.649 BrtFileVersion */\nfunction write_BrtFileVersion(data, o) {\n\tif(!o) o = new_buf(127);\n\tfor(var i = 0; i != 4; ++i) o.write_shift(4, 0);\n\twrite_XLWideString(\"SheetJS\", o);\n\twrite_XLWideString(XLSX.version, o);\n\twrite_XLWideString(XLSX.version, o);\n\twrite_XLWideString(\"7262\", o);\n\treturn o.length > o.l ? o.slice(0, o.l) : o;\n}\n\n/* [MS-XLSB] 2.4.301 BrtBookView */\nfunction write_BrtBookView(idx, o) {\n\tif(!o) o = new_buf(29);\n\to.write_shift(-4, 0);\n\to.write_shift(-4, 460);\n\to.write_shift(4,  28800);\n\to.write_shift(4,  17600);\n\to.write_shift(4,  500);\n\to.write_shift(4,  idx);\n\to.write_shift(4,  idx);\n\tvar flags = 0x78;\n\to.write_shift(1,  flags);\n\treturn o.length > o.l ? o.slice(0, o.l) : o;\n}\n\nfunction write_BOOKVIEWS(ba, wb/*::, opts*/) {\n\t/* required if hidden tab appears before visible tab */\n\tif(!wb.Workbook || !wb.Workbook.Sheets) return;\n\tvar sheets = wb.Workbook.Sheets;\n\tvar i = 0, vistab = -1, hidden = -1;\n\tfor(; i < sheets.length; ++i) {\n\t\tif(!sheets[i] || !sheets[i].Hidden && vistab == -1) vistab = i;\n\t\telse if(sheets[i].Hidden == 1 && hidden == -1) hidden = i;\n\t}\n\tif(hidden > vistab) return;\n\twrite_record(ba, 0x0087 /* BrtBeginBookViews */);\n\twrite_record(ba, 0x009E /* BrtBookView */, write_BrtBookView(vistab));\n\t/* 1*(BrtBookView *FRT) */\n\twrite_record(ba, 0x0088 /* BrtEndBookViews */);\n}\n\nfunction write_BRTNAMES(ba, wb) {\n\tif(!wb.Workbook || !wb.Workbook.Names) return;\n\twb.Workbook.Names.forEach(function(name) { try {\n\t\tif(name.Flags & 0x0e) return; // TODO: macro name write\n\t\twrite_record(ba, 0x0027 /* BrtName */, write_BrtName(name, wb));\n\t} catch(e) {\n\t\tconsole.error(\"Could not serialize defined name \" + JSON.stringify(name));\n\t} });\n}\n\nfunction write_SELF_EXTERNS_xlsb(wb) {\n\tvar L = wb.SheetNames.length;\n\tvar o = new_buf(12 * L + 28);\n\to.write_shift(4, L + 2);\n\to.write_shift(4, 0); o.write_shift(4, -2); o.write_shift(4, -2); // workbook-level reference\n\to.write_shift(4, 0); o.write_shift(4, -1); o.write_shift(4, -1); // #REF!...\n\tfor(var i = 0; i < L; ++i) {\n\t\to.write_shift(4, 0); o.write_shift(4, i); o.write_shift(4, i);\n\t}\n\treturn o;\n}\nfunction write_EXTERNALS_xlsb(ba, wb) {\n\twrite_record(ba, 0x0161 /* BrtBeginExternals */);\n\twrite_record(ba, 0x0165 /* BrtSupSelf */);\n\twrite_record(ba, 0x016A /* BrtExternSheet */, write_SELF_EXTERNS_xlsb(wb, 0));\n\twrite_record(ba, 0x0162 /* BrtEndExternals */);\n}\n\n/* [MS-XLSB] 2.4.305 BrtCalcProp */\n/*function write_BrtCalcProp(data, o) {\n\tif(!o) o = new_buf(26);\n\to.write_shift(4,0); // force recalc\n\to.write_shift(4,1);\n\to.write_shift(4,0);\n\twrite_Xnum(0, o);\n\to.write_shift(-4, 1023);\n\to.write_shift(1, 0x33);\n\to.write_shift(1, 0x00);\n\treturn o;\n}*/\n\n/* [MS-XLSB] 2.4.646 BrtFileRecover */\n/*function write_BrtFileRecover(data, o) {\n\tif(!o) o = new_buf(1);\n\to.write_shift(1,0);\n\treturn o;\n}*/\n\n/* [MS-XLSB] 2.1.7.61 Workbook */\nfunction write_wb_bin(wb, opts) {\n\tvar ba = buf_array();\n\twrite_record(ba, 0x0083 /* BrtBeginBook */);\n\twrite_record(ba, 0x0080 /* BrtFileVersion */, write_BrtFileVersion());\n\t/* [[BrtFileSharingIso] BrtFileSharing] */\n\twrite_record(ba, 0x0099 /* BrtWbProp */, write_BrtWbProp(wb.Workbook && wb.Workbook.WBProps || null));\n\t/* [ACABSPATH] */\n\t/* [[BrtBookProtectionIso] BrtBookProtection] */\n\twrite_BOOKVIEWS(ba, wb, opts);\n\twrite_BUNDLESHS(ba, wb, opts);\n\t/* [FNGROUP] */\n\twrite_EXTERNALS_xlsb(ba, wb);\n\tif((wb.Workbook||{}).Names) write_BRTNAMES(ba, wb);\n\t/* write_record(ba, 0x009D BrtCalcProp, write_BrtCalcProp()); */\n\t/* [BrtOleSize] */\n\t/* *(BrtUserBookView *FRT) */\n\t/* [PIVOTCACHEIDS] */\n\t/* [BrtWbFactoid] */\n\t/* [SMARTTAGTYPES] */\n\t/* [BrtWebOpt] */\n\t/* write_record(ba, 0x009B BrtFileRecover, write_BrtFileRecover()); */\n\t/* [WEBPUBITEMS] */\n\t/* [CRERRS] */\n\t/* FRTWORKBOOK */\n\twrite_record(ba, 0x0084 /* BrtEndBook */);\n\n\treturn ba.end();\n}\nfunction parse_wb(data, name/*:string*/, opts)/*:WorkbookFile*/ {\n\tif(name.slice(-4)===\".bin\") return parse_wb_bin((data/*:any*/), opts);\n\treturn parse_wb_xml((data/*:any*/), opts);\n}\n\nfunction parse_ws(data, name/*:string*/, idx/*:number*/, opts, rels, wb, themes, styles)/*:Worksheet*/ {\n\tif(name.slice(-4)===\".bin\") return parse_ws_bin((data/*:any*/), opts, idx, rels, wb, themes, styles);\n\treturn parse_ws_xml((data/*:any*/), opts, idx, rels, wb, themes, styles);\n}\n\nfunction parse_cs(data, name/*:string*/, idx/*:number*/, opts, rels, wb, themes, styles)/*:Worksheet*/ {\n\tif(name.slice(-4)===\".bin\") return parse_cs_bin((data/*:any*/), opts, idx, rels, wb, themes, styles);\n\treturn parse_cs_xml((data/*:any*/), opts, idx, rels, wb, themes, styles);\n}\n\nfunction parse_ms(data, name/*:string*/, idx/*:number*/, opts, rels, wb, themes, styles)/*:Worksheet*/ {\n\tif(name.slice(-4)===\".bin\") return parse_ms_bin((data/*:any*/), opts, idx, rels, wb, themes, styles);\n\treturn parse_ms_xml((data/*:any*/), opts, idx, rels, wb, themes, styles);\n}\n\nfunction parse_ds(data, name/*:string*/, idx/*:number*/, opts, rels, wb, themes, styles)/*:Worksheet*/ {\n\tif(name.slice(-4)===\".bin\") return parse_ds_bin((data/*:any*/), opts, idx, rels, wb, themes, styles);\n\treturn parse_ds_xml((data/*:any*/), opts, idx, rels, wb, themes, styles);\n}\n\nfunction parse_sty(data, name/*:string*/, themes, opts) {\n\tif(name.slice(-4)===\".bin\") return parse_sty_bin((data/*:any*/), themes, opts);\n\treturn parse_sty_xml((data/*:any*/), themes, opts);\n}\n\nfunction parse_sst(data, name/*:string*/, opts)/*:SST*/ {\n\tif(name.slice(-4)===\".bin\") return parse_sst_bin((data/*:any*/), opts);\n\treturn parse_sst_xml((data/*:any*/), opts);\n}\n\nfunction parse_cmnt(data, name/*:string*/, opts)/*:Array<RawComment>*/ {\n\tif(name.slice(-4)===\".bin\") return parse_comments_bin((data/*:any*/), opts);\n\treturn parse_comments_xml((data/*:any*/), opts);\n}\n\nfunction parse_cc(data, name/*:string*/, opts) {\n\tif(name.slice(-4)===\".bin\") return parse_cc_bin((data/*:any*/), name, opts);\n\treturn parse_cc_xml((data/*:any*/), name, opts);\n}\n\nfunction parse_xlink(data, rel, name/*:string*/, opts) {\n\tif(name.slice(-4)===\".bin\") return parse_xlink_bin((data/*:any*/), rel, name, opts);\n\treturn parse_xlink_xml((data/*:any*/), rel, name, opts);\n}\n\nfunction parse_xlmeta(data, name/*:string*/, opts) {\n\tif(name.slice(-4)===\".bin\") return parse_xlmeta_bin((data/*:any*/), name, opts);\n\treturn parse_xlmeta_xml((data/*:any*/), name, opts);\n}\nvar attregexg2=/([\\w:]+)=((?:\")([^\"]*)(?:\")|(?:')([^']*)(?:'))/g;\nvar attregex2=/([\\w:]+)=((?:\")(?:[^\"]*)(?:\")|(?:')(?:[^']*)(?:'))/;\nfunction xlml_parsexmltag(tag/*:string*/, skip_root/*:?boolean*/) {\n\tvar words = tag.split(/\\s+/);\n\tvar z/*:any*/ = ([]/*:any*/); if(!skip_root) z[0] = words[0];\n\tif(words.length === 1) return z;\n\tvar m = tag.match(attregexg2), y, j, w, i;\n\tif(m) for(i = 0; i != m.length; ++i) {\n\t\ty = m[i].match(attregex2);\n/*:: if(!y || !y[2]) continue; */\n\t\tif((j=y[1].indexOf(\":\")) === -1) z[y[1]] = y[2].slice(1,y[2].length-1);\n\t\telse {\n\t\t\tif(y[1].slice(0,6) === \"xmlns:\") w = \"xmlns\"+y[1].slice(6);\n\t\t\telse w = y[1].slice(j+1);\n\t\t\tz[w] = y[2].slice(1,y[2].length-1);\n\t\t}\n\t}\n\treturn z;\n}\nfunction xlml_parsexmltagobj(tag/*:string*/) {\n\tvar words = tag.split(/\\s+/);\n\tvar z = {};\n\tif(words.length === 1) return z;\n\tvar m = tag.match(attregexg2), y, j, w, i;\n\tif(m) for(i = 0; i != m.length; ++i) {\n\t\ty = m[i].match(attregex2);\n/*:: if(!y || !y[2]) continue; */\n\t\tif((j=y[1].indexOf(\":\")) === -1) z[y[1]] = y[2].slice(1,y[2].length-1);\n\t\telse {\n\t\t\tif(y[1].slice(0,6) === \"xmlns:\") w = \"xmlns\"+y[1].slice(6);\n\t\t\telse w = y[1].slice(j+1);\n\t\t\tz[w] = y[2].slice(1,y[2].length-1);\n\t\t}\n\t}\n\treturn z;\n}\n\n// ----\n\n/* map from xlml named formats to SSF TODO: localize */\nvar XLMLFormatMap/*: {[string]:string}*/;\n\nfunction xlml_format(format, value)/*:string*/ {\n\tvar fmt = XLMLFormatMap[format] || unescapexml(format);\n\tif(fmt === \"General\") return SSF_general(value);\n\treturn SSF_format(fmt, value);\n}\n\nfunction xlml_set_custprop(Custprops, key, cp, val/*:string*/) {\n\tvar oval/*:any*/ = val;\n\tswitch((cp[0].match(/dt:dt=\"([\\w.]+)\"/)||[\"\",\"\"])[1]) {\n\t\tcase \"boolean\": oval = parsexmlbool(val); break;\n\t\tcase \"i2\": case \"int\": oval = parseInt(val, 10); break;\n\t\tcase \"r4\": case \"float\": oval = parseFloat(val); break;\n\t\tcase \"date\": case \"dateTime.tz\": oval = parseDate(val); break;\n\t\tcase \"i8\": case \"string\": case \"fixed\": case \"uuid\": case \"bin.base64\": break;\n\t\tdefault: throw new Error(\"bad custprop:\" + cp[0]);\n\t}\n\tCustprops[unescapexml(key)] = oval;\n}\n\nfunction safe_format_xlml(cell/*:Cell*/, nf, o) {\n\tif(cell.t === 'z') return;\n\tif(!o || o.cellText !== false) try {\n\t\tif(cell.t === 'e') { cell.w = cell.w || BErr[cell.v]; }\n\t\telse if(nf === \"General\") {\n\t\t\tif(cell.t === 'n') {\n\t\t\t\tif((cell.v|0) === cell.v) cell.w = cell.v.toString(10);\n\t\t\t\telse cell.w = SSF_general_num(cell.v);\n\t\t\t}\n\t\t\telse cell.w = SSF_general(cell.v);\n\t\t}\n\t\telse cell.w = xlml_format(nf||\"General\", cell.v);\n\t} catch(e) { if(o.WTF) throw e; }\n\ttry {\n\t\tvar z = XLMLFormatMap[nf]||nf||\"General\";\n\t\tif(o.cellNF) cell.z = z;\n\t\tif(o.cellDates && cell.t == 'n' && fmt_is_date(z)) {\n\t\t\tvar _d = SSF_parse_date_code(cell.v); if(_d) { cell.t = 'd'; cell.v = new Date(_d.y, _d.m-1,_d.d,_d.H,_d.M,_d.S,_d.u); }\n\t\t}\n\t} catch(e) { if(o.WTF) throw e; }\n}\n\nfunction process_style_xlml(styles, stag, opts) {\n\tif(opts.cellStyles) {\n\t\tif(stag.Interior) {\n\t\t\tvar I = stag.Interior;\n\t\t\tif(I.Pattern) I.patternType = XLMLPatternTypeMap[I.Pattern] || I.Pattern;\n\t\t}\n\t}\n\tstyles[stag.ID] = stag;\n}\n\n/* TODO: there must exist some form of OSP-blessed spec */\nfunction parse_xlml_data(xml, ss, data, cell/*:any*/, base, styles, csty, row, arrayf, o) {\n\tvar nf = \"General\", sid = cell.StyleID, S = {}; o = o || {};\n\tvar interiors = [];\n\tvar i = 0;\n\tif(sid === undefined && row) sid = row.StyleID;\n\tif(sid === undefined && csty) sid = csty.StyleID;\n\twhile(styles[sid] !== undefined) {\n\t\tif(styles[sid].nf) nf = styles[sid].nf;\n\t\tif(styles[sid].Interior) interiors.push(styles[sid].Interior);\n\t\tif(!styles[sid].Parent) break;\n\t\tsid = styles[sid].Parent;\n\t}\n\tswitch(data.Type) {\n\t\tcase 'Boolean':\n\t\t\tcell.t = 'b';\n\t\t\tcell.v = parsexmlbool(xml);\n\t\t\tbreak;\n\t\tcase 'String':\n\t\t\tcell.t = 's'; cell.r = xlml_fixstr(unescapexml(xml));\n\t\t\tcell.v = (xml.indexOf(\"<\") > -1 ? unescapexml(ss||xml).replace(/<.*?>/g, \"\") : cell.r); // todo: BR etc\n\t\t\tbreak;\n\t\tcase 'DateTime':\n\t\t\tif(xml.slice(-1) != \"Z\") xml += \"Z\";\n\t\t\tcell.v = (parseDate(xml) - new Date(Date.UTC(1899, 11, 30))) / (24 * 60 * 60 * 1000);\n\t\t\tif(cell.v !== cell.v) cell.v = unescapexml(xml);\n\t\t\telse if(cell.v<60) cell.v = cell.v -1;\n\t\t\tif(!nf || nf == \"General\") nf = \"yyyy-mm-dd\";\n\t\t\t/* falls through */\n\t\tcase 'Number':\n\t\t\tif(cell.v === undefined) cell.v=+xml;\n\t\t\tif(!cell.t) cell.t = 'n';\n\t\t\tbreak;\n\t\tcase 'Error': cell.t = 'e'; cell.v = RBErr[xml]; if(o.cellText !== false) cell.w = xml; break;\n\t\tdefault:\n\t\t\tif(xml == \"\" && ss == \"\") { cell.t = 'z'; }\n\t\t\telse { cell.t = 's'; cell.v = xlml_fixstr(ss||xml); }\n\t\t\tbreak;\n\t}\n\tsafe_format_xlml(cell, nf, o);\n\tif(o.cellFormula !== false) {\n\t\tif(cell.Formula) {\n\t\t\tvar fstr = unescapexml(cell.Formula);\n\t\t\t/* strictly speaking, the leading = is required but some writers omit */\n\t\t\tif(fstr.charCodeAt(0) == 61 /* = */) fstr = fstr.slice(1);\n\t\t\tcell.f = rc_to_a1(fstr, base);\n\t\t\tdelete cell.Formula;\n\t\t\tif(cell.ArrayRange == \"RC\") cell.F = rc_to_a1(\"RC:RC\", base);\n\t\t\telse if(cell.ArrayRange) {\n\t\t\t\tcell.F = rc_to_a1(cell.ArrayRange, base);\n\t\t\t\tarrayf.push([safe_decode_range(cell.F), cell.F]);\n\t\t\t}\n\t\t} else {\n\t\t\tfor(i = 0; i < arrayf.length; ++i)\n\t\t\t\tif(base.r >= arrayf[i][0].s.r && base.r <= arrayf[i][0].e.r)\n\t\t\t\t\tif(base.c >= arrayf[i][0].s.c && base.c <= arrayf[i][0].e.c)\n\t\t\t\t\t\tcell.F = arrayf[i][1];\n\t\t}\n\t}\n\tif(o.cellStyles) {\n\t\tinteriors.forEach(function(x) {\n\t\t\tif(!S.patternType && x.patternType) S.patternType = x.patternType;\n\t\t});\n\t\tcell.s = S;\n\t}\n\tif(cell.StyleID !== undefined) cell.ixfe = cell.StyleID;\n}\n\nfunction xlml_prefix_dname(dname) {\n\treturn XLSLblBuiltIn.indexOf(\"_xlnm.\" + dname) > -1 ? \"_xlnm.\" + dname : dname;\n}\n\nfunction xlml_clean_comment(comment/*:any*/) {\n\tcomment.t = comment.v || \"\";\n\tcomment.t = comment.t.replace(/\\r\\n/g,\"\\n\").replace(/\\r/g,\"\\n\");\n\tcomment.v = comment.w = comment.ixfe = undefined;\n}\n\n/* TODO: Everything */\nfunction parse_xlml_xml(d, _opts)/*:Workbook*/ {\n\tvar opts = _opts || {};\n\tmake_ssf();\n\tvar str = debom(xlml_normalize(d));\n\tif(opts.type == 'binary' || opts.type == 'array' || opts.type == 'base64') {\n\t\tif(typeof $cptable !== 'undefined') str = $cptable.utils.decode(65001, char_codes(str));\n\t\telse str = utf8read(str);\n\t}\n\tvar opening = str.slice(0, 1024).toLowerCase(), ishtml = false;\n\topening = opening.replace(/\".*?\"/g, \"\");\n\tif((opening.indexOf(\">\") & 1023) > Math.min((opening.indexOf(\",\") & 1023), (opening.indexOf(\";\")&1023))) { var _o = dup(opts); _o.type = \"string\"; return PRN.to_workbook(str, _o); }\n\tif(opening.indexOf(\"<?xml\") == -1) [\"html\", \"table\", \"head\", \"meta\", \"script\", \"style\", \"div\"].forEach(function(tag) { if(opening.indexOf(\"<\" + tag) >= 0) ishtml = true; });\n\tif(ishtml) return html_to_workbook(str, opts);\n\n\tXLMLFormatMap = ({\n\t\t\"General Number\": \"General\",\n\t\t\"General Date\": table_fmt[22],\n\t\t\"Long Date\": \"dddd, mmmm dd, yyyy\",\n\t\t\"Medium Date\": table_fmt[15],\n\t\t\"Short Date\": table_fmt[14],\n\t\t\"Long Time\": table_fmt[19],\n\t\t\"Medium Time\": table_fmt[18],\n\t\t\"Short Time\": table_fmt[20],\n\t\t\"Currency\": '\"$\"#,##0.00_);[Red]\\\\(\"$\"#,##0.00\\\\)',\n\t\t\"Fixed\": table_fmt[2],\n\t\t\"Standard\": table_fmt[4],\n\t\t\"Percent\": table_fmt[10],\n\t\t\"Scientific\": table_fmt[11],\n\t\t\"Yes/No\": '\"Yes\";\"Yes\";\"No\";@',\n\t\t\"True/False\": '\"True\";\"True\";\"False\";@',\n\t\t\"On/Off\": '\"Yes\";\"Yes\";\"No\";@'\n\t}/*:any*/);\n\n\n\tvar Rn;\n\tvar state = [], tmp;\n\tif(DENSE != null && opts.dense == null) opts.dense = DENSE;\n\tvar sheets = {}, sheetnames/*:Array<string>*/ = [], cursheet/*:Worksheet*/ = ({}), sheetname = \"\"; if(opts.dense) cursheet[\"!data\"] = [];\n\tvar cell = ({}/*:any*/), row = {};// eslint-disable-line no-unused-vars\n\tvar dtag = xlml_parsexmltag('<Data ss:Type=\"String\">'), didx = 0;\n\tvar c = 0, r = 0;\n\tvar refguess/*:Range*/ = {s: {r:2000000, c:2000000}, e: {r:0, c:0} };\n\tvar styles = {}, stag = {};\n\tvar ss = \"\", fidx = 0;\n\tvar merges/*:Array<Range>*/ = [];\n\tvar Props = {}, Custprops = {}, pidx = 0, cp = [];\n\tvar comments/*:Array<Comment>*/ = [], comment/*:Comment*/ = ({}/*:any*/);\n\tvar cstys = [], csty, seencol = false;\n\tvar arrayf/*:Array<[Range, string]>*/ = [];\n\tvar rowinfo/*:Array<RowInfo>*/ = [], rowobj = {}, cc = 0, rr = 0;\n\tvar Workbook/*:WBWBProps*/ = ({ Sheets:[], WBProps:{date1904:false} }/*:any*/), wsprops = {};\n\txlmlregex.lastIndex = 0;\n\tstr = str.replace(/<!--([\\s\\S]*?)-->/mg,\"\");\n\tvar raw_Rn3 = \"\";\n\twhile((Rn = xlmlregex.exec(str))) switch((Rn[3] = (raw_Rn3 = Rn[3]).toLowerCase())) {\n\t\tcase 'data' /*case 'Data'*/:\n\t\t\tif(raw_Rn3 == \"data\") {\n\t\t\t\tif(Rn[1]==='/'){if((tmp=state.pop())[0]!==Rn[3]) throw new Error(\"Bad state: \"+tmp.join(\"|\"));}\n\t\t\t\telse if(Rn[0].charAt(Rn[0].length-2) !== '/') state.push([Rn[3], true]);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif(state[state.length-1][1]) break;\n\t\t\tif(Rn[1]==='/') parse_xlml_data(str.slice(didx, Rn.index), ss, dtag, state[state.length-1][0]==/*\"Comment\"*/\"comment\"?comment:cell, {c:c,r:r}, styles, cstys[c], row, arrayf, opts);\n\t\t\telse { ss = \"\"; dtag = xlml_parsexmltag(Rn[0]); didx = Rn.index + Rn[0].length; }\n\t\t\tbreak;\n\t\tcase 'cell' /*case 'Cell'*/:\n\t\t\tif(Rn[1]==='/'){\n\t\t\t\tif(comments.length > 0) cell.c = comments;\n\t\t\t\tif((!opts.sheetRows || opts.sheetRows > r) && cell.v !== void 0) {\n\t\t\t\t\tif(opts.dense) {\n\t\t\t\t\t\tif(!cursheet[\"!data\"][r]) cursheet[\"!data\"][r] = [];\n\t\t\t\t\t\tcursheet[\"!data\"][r][c] = cell;\n\t\t\t\t\t} else cursheet[encode_col(c) + encode_row(r)] = cell;\n\t\t\t\t}\n\t\t\t\tif(cell.HRef) {\n\t\t\t\t\tcell.l = ({Target:unescapexml(cell.HRef)}/*:any*/);\n\t\t\t\t\tif(cell.HRefScreenTip) cell.l.Tooltip = cell.HRefScreenTip;\n\t\t\t\t\tdelete cell.HRef; delete cell.HRefScreenTip;\n\t\t\t\t}\n\t\t\t\tif(cell.MergeAcross || cell.MergeDown) {\n\t\t\t\t\tcc = c + (parseInt(cell.MergeAcross,10)|0);\n\t\t\t\t\trr = r + (parseInt(cell.MergeDown,10)|0);\n\t\t\t\t\tif(cc > c || rr > r) merges.push({s:{c:c,r:r},e:{c:cc,r:rr}});\n\t\t\t\t}\n\t\t\t\tif(!opts.sheetStubs) { if(cell.MergeAcross) c = cc + 1; else ++c; }\n\t\t\t\telse if(cell.MergeAcross || cell.MergeDown) {\n\t\t\t\t\t/*:: if(!cc) cc = 0; if(!rr) rr = 0; */\n\t\t\t\t\tfor(var cma = c; cma <= cc; ++cma) {\n\t\t\t\t\t\tfor(var cmd = r; cmd <= rr; ++cmd) {\n\t\t\t\t\t\t\tif(cma > c || cmd > r) {\n\t\t\t\t\t\t\t\tif(opts.dense) {\n\t\t\t\t\t\t\t\t\tif(!cursheet[\"!data\"][cmd]) cursheet[\"!data\"][cmd] = [];\n\t\t\t\t\t\t\t\t\tcursheet[\"!data\"][cmd][cma] = {t:'z'};\n\t\t\t\t\t\t\t\t} else cursheet[encode_col(cma) + encode_row(cmd)] = {t:'z'};\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tc = cc + 1;\n\t\t\t\t}\n\t\t\t\telse ++c;\n\t\t\t} else {\n\t\t\t\tcell = xlml_parsexmltagobj(Rn[0]);\n\t\t\t\tif(cell.Index) c = +cell.Index - 1;\n\t\t\t\tif(c < refguess.s.c) refguess.s.c = c;\n\t\t\t\tif(c > refguess.e.c) refguess.e.c = c;\n\t\t\t\tif(Rn[0].slice(-2) === \"/>\") ++c;\n\t\t\t\tcomments = [];\n\t\t\t}\n\t\t\tbreak;\n\t\tcase 'row' /*case 'Row'*/:\n\t\t\tif(Rn[1]==='/' || Rn[0].slice(-2) === \"/>\") {\n\t\t\t\tif(r < refguess.s.r) refguess.s.r = r;\n\t\t\t\tif(r > refguess.e.r) refguess.e.r = r;\n\t\t\t\tif(Rn[0].slice(-2) === \"/>\") {\n\t\t\t\t\trow = xlml_parsexmltag(Rn[0]);\n\t\t\t\t\tif(row.Index) r = +row.Index - 1;\n\t\t\t\t}\n\t\t\t\tc = 0; ++r;\n\t\t\t} else {\n\t\t\t\trow = xlml_parsexmltag(Rn[0]);\n\t\t\t\tif(row.Index) r = +row.Index - 1;\n\t\t\t\trowobj = {};\n\t\t\t\tif(row.AutoFitHeight == \"0\" || row.Height) {\n\t\t\t\t\trowobj.hpx = parseInt(row.Height, 10); rowobj.hpt = px2pt(rowobj.hpx);\n\t\t\t\t\trowinfo[r] = rowobj;\n\t\t\t\t}\n\t\t\t\tif(row.Hidden == \"1\") { rowobj.hidden = true; rowinfo[r] = rowobj; }\n\t\t\t}\n\t\t\tbreak;\n\t\tcase 'worksheet' /*case 'Worksheet'*/: /* TODO: read range from FullRows/FullColumns */\n\t\t\tif(Rn[1]==='/'){\n\t\t\t\tif((tmp=state.pop())[0]!==Rn[3]) throw new Error(\"Bad state: \"+tmp.join(\"|\"));\n\t\t\t\tsheetnames.push(sheetname);\n\t\t\t\tif(refguess.s.r <= refguess.e.r && refguess.s.c <= refguess.e.c) {\n\t\t\t\t\tcursheet[\"!ref\"] = encode_range(refguess);\n\t\t\t\t\tif(opts.sheetRows && opts.sheetRows <= refguess.e.r) {\n\t\t\t\t\t\tcursheet[\"!fullref\"] = cursheet[\"!ref\"];\n\t\t\t\t\t\trefguess.e.r = opts.sheetRows - 1;\n\t\t\t\t\t\tcursheet[\"!ref\"] = encode_range(refguess);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif(merges.length) cursheet[\"!merges\"] = merges;\n\t\t\t\tif(cstys.length > 0) cursheet[\"!cols\"] = cstys;\n\t\t\t\tif(rowinfo.length > 0) cursheet[\"!rows\"] = rowinfo;\n\t\t\t\tsheets[sheetname] = cursheet;\n\t\t\t} else {\n\t\t\t\trefguess = {s: {r:2000000, c:2000000}, e: {r:0, c:0} };\n\t\t\t\tr = c = 0;\n\t\t\t\tstate.push([Rn[3], false]);\n\t\t\t\ttmp = xlml_parsexmltag(Rn[0]);\n\t\t\t\tsheetname = unescapexml(tmp.Name);\n\t\t\t\tcursheet = ({}); if(opts.dense) cursheet[\"!data\"] = [];\n\t\t\t\tmerges = [];\n\t\t\t\tarrayf = [];\n\t\t\t\trowinfo = [];\n\t\t\t\twsprops = {name:sheetname, Hidden:0};\n\t\t\t\tWorkbook.Sheets.push(wsprops);\n\t\t\t}\n\t\t\tbreak;\n\t\tcase 'table' /*case 'Table'*/:\n\t\t\tif(Rn[1]==='/'){if((tmp=state.pop())[0]!==Rn[3]) throw new Error(\"Bad state: \"+tmp.join(\"|\"));}\n\t\t\telse if(Rn[0].slice(-2) == \"/>\") break;\n\t\t\telse {\n\t\t\t\tstate.push([Rn[3], false]);\n\t\t\t\tcstys = []; seencol = false;\n\t\t\t}\n\t\t\tbreak;\n\n\t\tcase 'style' /*case 'Style'*/:\n\t\t\tif(Rn[1]==='/') process_style_xlml(styles, stag, opts);\n\t\t\telse stag = xlml_parsexmltag(Rn[0]);\n\t\t\tbreak;\n\n\t\tcase 'numberformat' /*case 'NumberFormat'*/:\n\t\t\tstag.nf = unescapexml(xlml_parsexmltag(Rn[0]).Format || \"General\");\n\t\t\tif(XLMLFormatMap[stag.nf]) stag.nf = XLMLFormatMap[stag.nf];\n\t\t\tfor(var ssfidx = 0; ssfidx != 0x188; ++ssfidx) if(table_fmt[ssfidx] == stag.nf) break;\n\t\t\tif(ssfidx == 0x188) for(ssfidx = 0x39; ssfidx != 0x188; ++ssfidx) if(table_fmt[ssfidx] == null) { SSF__load(stag.nf, ssfidx); break; }\n\t\t\tbreak;\n\n\t\tcase 'column' /*case 'Column'*/:\n\t\t\tif(state[state.length-1][0] !== /*'Table'*/'table') break;\n\t\t\tif(Rn[1]==='/') break;\n\t\t\tcsty = xlml_parsexmltag(Rn[0]);\n\t\t\tif(csty.Hidden) { csty.hidden = true; delete csty.Hidden; }\n\t\t\tif(csty.Width) csty.wpx = parseInt(csty.Width, 10);\n\t\t\tif(!seencol && csty.wpx > 10) {\n\t\t\t\tseencol = true; MDW = DEF_MDW; //find_mdw_wpx(csty.wpx);\n\t\t\t\tfor(var _col = 0; _col < cstys.length; ++_col) if(cstys[_col]) process_col(cstys[_col]);\n\t\t\t}\n\t\t\tif(seencol) process_col(csty);\n\t\t\tcstys[(csty.Index-1||cstys.length)] = csty;\n\t\t\tfor(var i = 0; i < +csty.Span; ++i) cstys[cstys.length] = dup(csty);\n\t\t\tbreak;\n\n\t\tcase 'namedrange' /*case 'NamedRange'*/:\n\t\t\tif(Rn[1]==='/') break;\n\t\t\tif(!Workbook.Names) Workbook.Names = [];\n\t\t\tvar _NamedRange = parsexmltag(Rn[0]);\n\t\t\tvar _DefinedName/*:DefinedName*/ = ({\n\t\t\t\tName: xlml_prefix_dname(_NamedRange.Name),\n\t\t\t\tRef: rc_to_a1(_NamedRange.RefersTo.slice(1), {r:0, c:0})\n\t\t\t}/*:any*/);\n\t\t\tif(Workbook.Sheets.length>0) _DefinedName.Sheet=Workbook.Sheets.length-1;\n\t\t\t/*:: if(Workbook.Names) */Workbook.Names.push(_DefinedName);\n\t\t\tbreak;\n\n\t\tcase 'namedcell' /*case 'NamedCell'*/: break;\n\t\tcase 'b' /*case 'B'*/: break;\n\t\tcase 'i' /*case 'I'*/: break;\n\t\tcase 'u' /*case 'U'*/: break;\n\t\tcase 's' /*case 'S'*/: break;\n\t\tcase 'em' /*case 'EM'*/: break;\n\t\tcase 'h2' /*case 'H2'*/: break;\n\t\tcase 'h3' /*case 'H3'*/: break;\n\t\tcase 'sub' /*case 'Sub'*/: break;\n\t\tcase 'sup' /*case 'Sup'*/: break;\n\t\tcase 'span' /*case 'Span'*/: break;\n\t\tcase 'alignment' /*case 'Alignment'*/:\n\t\t\tbreak;\n\t\tcase 'borders' /*case 'Borders'*/: break;\n\t\tcase 'border' /*case 'Border'*/: break;\n\t\tcase 'font' /*case 'Font'*/:\n\t\t\tif(Rn[0].slice(-2) === \"/>\") break;\n\t\t\telse if(Rn[1]===\"/\") ss += str.slice(fidx, Rn.index);\n\t\t\telse fidx = Rn.index + Rn[0].length;\n\t\t\tbreak;\n\t\tcase 'interior' /*case 'Interior'*/:\n\t\t\tif(!opts.cellStyles) break;\n\t\t\tstag.Interior = xlml_parsexmltag(Rn[0]);\n\t\t\tbreak;\n\t\tcase 'protection' /*case 'Protection'*/: break;\n\n\t\tcase 'author' /*case 'Author'*/:\n\t\tcase 'title' /*case 'Title'*/:\n\t\tcase 'description' /*case 'Description'*/:\n\t\tcase 'created' /*case 'Created'*/:\n\t\tcase 'keywords' /*case 'Keywords'*/:\n\t\tcase 'subject' /*case 'Subject'*/:\n\t\tcase 'category' /*case 'Category'*/:\n\t\tcase 'company' /*case 'Company'*/:\n\t\tcase 'lastauthor' /*case 'LastAuthor'*/:\n\t\tcase 'lastsaved' /*case 'LastSaved'*/:\n\t\tcase 'lastprinted' /*case 'LastPrinted'*/:\n\t\tcase 'version' /*case 'Version'*/:\n\t\tcase 'revision' /*case 'Revision'*/:\n\t\tcase 'totaltime' /*case 'TotalTime'*/:\n\t\tcase 'hyperlinkbase' /*case 'HyperlinkBase'*/:\n\t\tcase 'manager' /*case 'Manager'*/:\n\t\tcase 'contentstatus' /*case 'ContentStatus'*/:\n\t\tcase 'identifier' /*case 'Identifier'*/:\n\t\tcase 'language' /*case 'Language'*/:\n\t\tcase 'appname' /*case 'AppName'*/:\n\t\t\tif(Rn[0].slice(-2) === \"/>\") break;\n\t\t\telse if(Rn[1]===\"/\") xlml_set_prop(Props, raw_Rn3, str.slice(pidx, Rn.index));\n\t\t\telse pidx = Rn.index + Rn[0].length;\n\t\t\tbreak;\n\t\tcase 'paragraphs' /*case 'Paragraphs'*/: break;\n\n\t\tcase 'styles' /*case 'Styles'*/:\n\t\tcase 'workbook' /*case 'Workbook'*/:\n\t\t\tif(Rn[1]==='/'){if((tmp=state.pop())[0]!==Rn[3]) throw new Error(\"Bad state: \"+tmp.join(\"|\"));}\n\t\t\telse state.push([Rn[3], false]);\n\t\t\tbreak;\n\n\t\tcase 'comment' /*case 'Comment'*/:\n\t\t\tif(Rn[1]==='/'){\n\t\t\t\tif((tmp=state.pop())[0]!==Rn[3]) throw new Error(\"Bad state: \"+tmp.join(\"|\"));\n\t\t\t\txlml_clean_comment(comment);\n\t\t\t\tcomments.push(comment);\n\t\t\t} else {\n\t\t\t\tstate.push([Rn[3], false]);\n\t\t\t\ttmp = xlml_parsexmltag(Rn[0]);\n\t\t\t\tcomment = ({a:tmp.Author}/*:any*/);\n\t\t\t}\n\t\t\tbreak;\n\n\t\tcase 'autofilter' /*case 'AutoFilter'*/:\n\t\t\tif(Rn[1]==='/'){if((tmp=state.pop())[0]!==Rn[3]) throw new Error(\"Bad state: \"+tmp.join(\"|\"));}\n\t\t\telse if(Rn[0].charAt(Rn[0].length-2) !== '/') {\n\t\t\t\tvar AutoFilter = xlml_parsexmltag(Rn[0]);\n\t\t\t\tcursheet['!autofilter'] = { ref:rc_to_a1(AutoFilter.Range).replace(/\\$/g,\"\") };\n\t\t\t\tstate.push([Rn[3], true]);\n\t\t\t}\n\t\t\tbreak;\n\n\t\tcase 'name' /*case 'Name'*/: break;\n\n\t\tcase 'datavalidation' /*case 'DataValidation'*/:\n\t\t\tif(Rn[1]==='/'){\n\t\t\t\tif((tmp=state.pop())[0]!==Rn[3]) throw new Error(\"Bad state: \"+tmp.join(\"|\"));\n\t\t\t} else {\n\t\t\t\tif(Rn[0].charAt(Rn[0].length-2) !== '/') state.push([Rn[3], true]);\n\t\t\t}\n\t\t\tbreak;\n\n\t\tcase 'pixelsperinch' /*case 'PixelsPerInch'*/:\n\t\t\tbreak;\n\t\tcase 'componentoptions' /*case 'ComponentOptions'*/:\n\t\tcase 'documentproperties' /*case 'DocumentProperties'*/:\n\t\tcase 'customdocumentproperties' /*case 'CustomDocumentProperties'*/:\n\t\tcase 'officedocumentsettings' /*case 'OfficeDocumentSettings'*/:\n\t\tcase 'pivottable' /*case 'PivotTable'*/:\n\t\tcase 'pivotcache' /*case 'PivotCache'*/:\n\t\tcase 'names' /*case 'Names'*/:\n\t\tcase 'mapinfo' /*case 'MapInfo'*/:\n\t\tcase 'pagebreaks' /*case 'PageBreaks'*/:\n\t\tcase 'querytable' /*case 'QueryTable'*/:\n\t\tcase 'sorting' /*case 'Sorting'*/:\n\t\tcase 'schema' /*case 'Schema'*/: //case 'data' /*case 'data'*/:\n\t\tcase 'conditionalformatting' /*case 'ConditionalFormatting'*/:\n\t\tcase 'smarttagtype' /*case 'SmartTagType'*/:\n\t\tcase 'smarttags' /*case 'SmartTags'*/:\n\t\tcase 'excelworkbook' /*case 'ExcelWorkbook'*/:\n\t\tcase 'workbookoptions' /*case 'WorkbookOptions'*/:\n\t\tcase 'worksheetoptions' /*case 'WorksheetOptions'*/:\n\t\t\tif(Rn[1]==='/'){if((tmp=state.pop())[0]!==Rn[3]) throw new Error(\"Bad state: \"+tmp.join(\"|\"));}\n\t\t\telse if(Rn[0].charAt(Rn[0].length-2) !== '/') state.push([Rn[3], true]);\n\t\t\tbreak;\n\n\t\tcase 'null' /*case 'Null'*/: break;\n\n\t\tdefault:\n\t\t\t/* FODS file root is <office:document> */\n\t\t\tif(state.length == 0 && Rn[3] == \"document\") return parse_fods(str, opts);\n\t\t\t/* UOS file root is <uof:UOF> */\n\t\t\tif(state.length == 0 && Rn[3] == \"uof\"/*\"UOF\"*/) return parse_fods(str, opts);\n\n\t\t\tvar seen = true;\n\t\t\tswitch(state[state.length-1][0]) {\n\t\t\t\t/* OfficeDocumentSettings */\n\t\t\t\tcase 'officedocumentsettings' /*case 'OfficeDocumentSettings'*/: switch(Rn[3]) {\n\t\t\t\t\tcase 'allowpng' /*case 'AllowPNG'*/: break;\n\t\t\t\t\tcase 'removepersonalinformation' /*case 'RemovePersonalInformation'*/: break;\n\t\t\t\t\tcase 'downloadcomponents' /*case 'DownloadComponents'*/: break;\n\t\t\t\t\tcase 'locationofcomponents' /*case 'LocationOfComponents'*/: break;\n\t\t\t\t\tcase 'colors' /*case 'Colors'*/: break;\n\t\t\t\t\tcase 'color' /*case 'Color'*/: break;\n\t\t\t\t\tcase 'index' /*case 'Index'*/: break;\n\t\t\t\t\tcase 'rgb' /*case 'RGB'*/: break;\n\t\t\t\t\tcase 'targetscreensize' /*case 'TargetScreenSize'*/: break;\n\t\t\t\t\tcase 'readonlyrecommended' /*case 'ReadOnlyRecommended'*/: break;\n\t\t\t\t\tdefault: seen = false;\n\t\t\t\t} break;\n\n\t\t\t\t/* ComponentOptions */\n\t\t\t\tcase 'componentoptions' /*case 'ComponentOptions'*/: switch(Rn[3]) {\n\t\t\t\t\tcase 'toolbar' /*case 'Toolbar'*/: break;\n\t\t\t\t\tcase 'hideofficelogo' /*case 'HideOfficeLogo'*/: break;\n\t\t\t\t\tcase 'spreadsheetautofit' /*case 'SpreadsheetAutoFit'*/: break;\n\t\t\t\t\tcase 'label' /*case 'Label'*/: break;\n\t\t\t\t\tcase 'caption' /*case 'Caption'*/: break;\n\t\t\t\t\tcase 'maxheight' /*case 'MaxHeight'*/: break;\n\t\t\t\t\tcase 'maxwidth' /*case 'MaxWidth'*/: break;\n\t\t\t\t\tcase 'nextsheetnumber' /*case 'NextSheetNumber'*/: break;\n\t\t\t\t\tdefault: seen = false;\n\t\t\t\t} break;\n\n\t\t\t\t/* ExcelWorkbook */\n\t\t\t\tcase 'excelworkbook' /*case 'ExcelWorkbook'*/: switch(Rn[3]) {\n\t\t\t\t\tcase 'date1904' /*case 'Date1904'*/:\n\t\t\t\t\t\t/*:: if(!Workbook.WBProps) Workbook.WBProps = {}; */\n\t\t\t\t\t\tWorkbook.WBProps.date1904 = true;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'windowheight' /*case 'WindowHeight'*/: break;\n\t\t\t\t\tcase 'windowwidth' /*case 'WindowWidth'*/: break;\n\t\t\t\t\tcase 'windowtopx' /*case 'WindowTopX'*/: break;\n\t\t\t\t\tcase 'windowtopy' /*case 'WindowTopY'*/: break;\n\t\t\t\t\tcase 'tabratio' /*case 'TabRatio'*/: break;\n\t\t\t\t\tcase 'protectstructure' /*case 'ProtectStructure'*/: break;\n\t\t\t\t\tcase 'protectwindow' /*case 'ProtectWindow'*/: break;\n\t\t\t\t\tcase 'protectwindows' /*case 'ProtectWindows'*/: break;\n\t\t\t\t\tcase 'activesheet' /*case 'ActiveSheet'*/: break;\n\t\t\t\t\tcase 'displayinknotes' /*case 'DisplayInkNotes'*/: break;\n\t\t\t\t\tcase 'firstvisiblesheet' /*case 'FirstVisibleSheet'*/: break;\n\t\t\t\t\tcase 'supbook' /*case 'SupBook'*/: break;\n\t\t\t\t\tcase 'sheetname' /*case 'SheetName'*/: break;\n\t\t\t\t\tcase 'sheetindex' /*case 'SheetIndex'*/: break;\n\t\t\t\t\tcase 'sheetindexfirst' /*case 'SheetIndexFirst'*/: break;\n\t\t\t\t\tcase 'sheetindexlast' /*case 'SheetIndexLast'*/: break;\n\t\t\t\t\tcase 'dll' /*case 'Dll'*/: break;\n\t\t\t\t\tcase 'acceptlabelsinformulas' /*case 'AcceptLabelsInFormulas'*/: break;\n\t\t\t\t\tcase 'donotsavelinkvalues' /*case 'DoNotSaveLinkValues'*/: break;\n\t\t\t\t\tcase 'iteration' /*case 'Iteration'*/: break;\n\t\t\t\t\tcase 'maxiterations' /*case 'MaxIterations'*/: break;\n\t\t\t\t\tcase 'maxchange' /*case 'MaxChange'*/: break;\n\t\t\t\t\tcase 'path' /*case 'Path'*/: break;\n\t\t\t\t\tcase 'xct' /*case 'Xct'*/: break;\n\t\t\t\t\tcase 'count' /*case 'Count'*/: break;\n\t\t\t\t\tcase 'selectedsheets' /*case 'SelectedSheets'*/: break;\n\t\t\t\t\tcase 'calculation' /*case 'Calculation'*/: break;\n\t\t\t\t\tcase 'uncalced' /*case 'Uncalced'*/: break;\n\t\t\t\t\tcase 'startupprompt' /*case 'StartupPrompt'*/: break;\n\t\t\t\t\tcase 'crn' /*case 'Crn'*/: break;\n\t\t\t\t\tcase 'externname' /*case 'ExternName'*/: break;\n\t\t\t\t\tcase 'formula' /*case 'Formula'*/: break;\n\t\t\t\t\tcase 'colfirst' /*case 'ColFirst'*/: break;\n\t\t\t\t\tcase 'collast' /*case 'ColLast'*/: break;\n\t\t\t\t\tcase 'wantadvise' /*case 'WantAdvise'*/: break;\n\t\t\t\t\tcase 'boolean' /*case 'Boolean'*/: break;\n\t\t\t\t\tcase 'error' /*case 'Error'*/: break;\n\t\t\t\t\tcase 'text' /*case 'Text'*/: break;\n\t\t\t\t\tcase 'ole' /*case 'OLE'*/: break;\n\t\t\t\t\tcase 'noautorecover' /*case 'NoAutoRecover'*/: break;\n\t\t\t\t\tcase 'publishobjects' /*case 'PublishObjects'*/: break;\n\t\t\t\t\tcase 'donotcalculatebeforesave' /*case 'DoNotCalculateBeforeSave'*/: break;\n\t\t\t\t\tcase 'number' /*case 'Number'*/: break;\n\t\t\t\t\tcase 'refmoder1c1' /*case 'RefModeR1C1'*/: break;\n\t\t\t\t\tcase 'embedsavesmarttags' /*case 'EmbedSaveSmartTags'*/: break;\n\t\t\t\t\tdefault: seen = false;\n\t\t\t\t} break;\n\n\t\t\t\t/* WorkbookOptions */\n\t\t\t\tcase 'workbookoptions' /*case 'WorkbookOptions'*/: switch(Rn[3]) {\n\t\t\t\t\tcase 'owcversion' /*case 'OWCVersion'*/: break;\n\t\t\t\t\tcase 'height' /*case 'Height'*/: break;\n\t\t\t\t\tcase 'width' /*case 'Width'*/: break;\n\t\t\t\t\tdefault: seen = false;\n\t\t\t\t} break;\n\n\t\t\t\t/* WorksheetOptions */\n\t\t\t\tcase 'worksheetoptions' /*case 'WorksheetOptions'*/: switch(Rn[3]) {\n\t\t\t\t\tcase 'visible' /*case 'Visible'*/:\n\t\t\t\t\t\tif(Rn[0].slice(-2) === \"/>\"){/* empty */}\n\t\t\t\t\t\telse if(Rn[1]===\"/\") switch(str.slice(pidx, Rn.index)) {\n\t\t\t\t\t\t\tcase \"SheetHidden\": wsprops.Hidden = 1; break;\n\t\t\t\t\t\t\tcase \"SheetVeryHidden\": wsprops.Hidden = 2; break;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse pidx = Rn.index + Rn[0].length;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'header' /*case 'Header'*/:\n\t\t\t\t\t\tif(!cursheet['!margins']) default_margins(cursheet['!margins']={}, 'xlml');\n\t\t\t\t\t\tif(!isNaN(+parsexmltag(Rn[0]).Margin)) cursheet['!margins'].header = +parsexmltag(Rn[0]).Margin;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'footer' /*case 'Footer'*/:\n\t\t\t\t\t\tif(!cursheet['!margins']) default_margins(cursheet['!margins']={}, 'xlml');\n\t\t\t\t\t\tif(!isNaN(+parsexmltag(Rn[0]).Margin)) cursheet['!margins'].footer = +parsexmltag(Rn[0]).Margin;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'pagemargins' /*case 'PageMargins'*/:\n\t\t\t\t\t\tvar pagemargins = parsexmltag(Rn[0]);\n\t\t\t\t\t\tif(!cursheet['!margins']) default_margins(cursheet['!margins']={},'xlml');\n\t\t\t\t\t\tif(!isNaN(+pagemargins.Top)) cursheet['!margins'].top = +pagemargins.Top;\n\t\t\t\t\t\tif(!isNaN(+pagemargins.Left)) cursheet['!margins'].left = +pagemargins.Left;\n\t\t\t\t\t\tif(!isNaN(+pagemargins.Right)) cursheet['!margins'].right = +pagemargins.Right;\n\t\t\t\t\t\tif(!isNaN(+pagemargins.Bottom)) cursheet['!margins'].bottom = +pagemargins.Bottom;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'displayrighttoleft' /*case 'DisplayRightToLeft'*/:\n\t\t\t\t\t\tif(!Workbook.Views) Workbook.Views = [];\n\t\t\t\t\t\tif(!Workbook.Views[0]) Workbook.Views[0] = {};\n\t\t\t\t\t\tWorkbook.Views[0].RTL = true;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'freezepanes' /*case 'FreezePanes'*/: break;\n\t\t\t\t\tcase 'frozennosplit' /*case 'FrozenNoSplit'*/: break;\n\n\t\t\t\t\tcase 'splithorizontal' /*case 'SplitHorizontal'*/:\n\t\t\t\t\tcase 'splitvertical' /*case 'SplitVertical'*/:\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'donotdisplaygridlines' /*case 'DoNotDisplayGridlines'*/:\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'activerow' /*case 'ActiveRow'*/: break;\n\t\t\t\t\tcase 'activecol' /*case 'ActiveCol'*/: break;\n\t\t\t\t\tcase 'toprowbottompane' /*case 'TopRowBottomPane'*/: break;\n\t\t\t\t\tcase 'leftcolumnrightpane' /*case 'LeftColumnRightPane'*/: break;\n\n\t\t\t\t\tcase 'unsynced' /*case 'Unsynced'*/: break;\n\t\t\t\t\tcase 'print' /*case 'Print'*/: break;\n\t\t\t\t\tcase 'printerrors' /*case 'PrintErrors'*/: break;\n\t\t\t\t\tcase 'panes' /*case 'Panes'*/: break;\n\t\t\t\t\tcase 'scale' /*case 'Scale'*/: break;\n\t\t\t\t\tcase 'pane' /*case 'Pane'*/: break;\n\t\t\t\t\tcase 'number' /*case 'Number'*/: break;\n\t\t\t\t\tcase 'layout' /*case 'Layout'*/: break;\n\t\t\t\t\tcase 'pagesetup' /*case 'PageSetup'*/: break;\n\t\t\t\t\tcase 'selected' /*case 'Selected'*/: break;\n\t\t\t\t\tcase 'protectobjects' /*case 'ProtectObjects'*/: break;\n\t\t\t\t\tcase 'enableselection' /*case 'EnableSelection'*/: break;\n\t\t\t\t\tcase 'protectscenarios' /*case 'ProtectScenarios'*/: break;\n\t\t\t\t\tcase 'validprinterinfo' /*case 'ValidPrinterInfo'*/: break;\n\t\t\t\t\tcase 'horizontalresolution' /*case 'HorizontalResolution'*/: break;\n\t\t\t\t\tcase 'verticalresolution' /*case 'VerticalResolution'*/: break;\n\t\t\t\t\tcase 'numberofcopies' /*case 'NumberofCopies'*/: break;\n\t\t\t\t\tcase 'activepane' /*case 'ActivePane'*/: break;\n\t\t\t\t\tcase 'toprowvisible' /*case 'TopRowVisible'*/: break;\n\t\t\t\t\tcase 'leftcolumnvisible' /*case 'LeftColumnVisible'*/: break;\n\t\t\t\t\tcase 'fittopage' /*case 'FitToPage'*/: break;\n\t\t\t\t\tcase 'rangeselection' /*case 'RangeSelection'*/: break;\n\t\t\t\t\tcase 'papersizeindex' /*case 'PaperSizeIndex'*/: break;\n\t\t\t\t\tcase 'pagelayoutzoom' /*case 'PageLayoutZoom'*/: break;\n\t\t\t\t\tcase 'pagebreakzoom' /*case 'PageBreakZoom'*/: break;\n\t\t\t\t\tcase 'filteron' /*case 'FilterOn'*/: break;\n\t\t\t\t\tcase 'fitwidth' /*case 'FitWidth'*/: break;\n\t\t\t\t\tcase 'fitheight' /*case 'FitHeight'*/: break;\n\t\t\t\t\tcase 'commentslayout' /*case 'CommentsLayout'*/: break;\n\t\t\t\t\tcase 'zoom' /*case 'Zoom'*/: break;\n\t\t\t\t\tcase 'lefttoright' /*case 'LeftToRight'*/: break;\n\t\t\t\t\tcase 'gridlines' /*case 'Gridlines'*/: break;\n\t\t\t\t\tcase 'allowsort' /*case 'AllowSort'*/: break;\n\t\t\t\t\tcase 'allowfilter' /*case 'AllowFilter'*/: break;\n\t\t\t\t\tcase 'allowinsertrows' /*case 'AllowInsertRows'*/: break;\n\t\t\t\t\tcase 'allowdeleterows' /*case 'AllowDeleteRows'*/: break;\n\t\t\t\t\tcase 'allowinsertcols' /*case 'AllowInsertCols'*/: break;\n\t\t\t\t\tcase 'allowdeletecols' /*case 'AllowDeleteCols'*/: break;\n\t\t\t\t\tcase 'allowinserthyperlinks' /*case 'AllowInsertHyperlinks'*/: break;\n\t\t\t\t\tcase 'allowformatcells' /*case 'AllowFormatCells'*/: break;\n\t\t\t\t\tcase 'allowsizecols' /*case 'AllowSizeCols'*/: break;\n\t\t\t\t\tcase 'allowsizerows' /*case 'AllowSizeRows'*/: break;\n\t\t\t\t\tcase 'nosummaryrowsbelowdetail' /*case 'NoSummaryRowsBelowDetail'*/:\n\t\t\t\t\t\tif(!cursheet[\"!outline\"]) cursheet[\"!outline\"] = {};\n\t\t\t\t\t\tcursheet[\"!outline\"].above = true;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'tabcolorindex' /*case 'TabColorIndex'*/: break;\n\t\t\t\t\tcase 'donotdisplayheadings' /*case 'DoNotDisplayHeadings'*/: break;\n\t\t\t\t\tcase 'showpagelayoutzoom' /*case 'ShowPageLayoutZoom'*/: break;\n\t\t\t\t\tcase 'nosummarycolumnsrightdetail' /*case 'NoSummaryColumnsRightDetail'*/:\n\t\t\t\t\t\tif(!cursheet[\"!outline\"]) cursheet[\"!outline\"] = {};\n\t\t\t\t\t\tcursheet[\"!outline\"].left = true;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'blackandwhite' /*case 'BlackAndWhite'*/: break;\n\t\t\t\t\tcase 'donotdisplayzeros' /*case 'DoNotDisplayZeros'*/: break;\n\t\t\t\t\tcase 'displaypagebreak' /*case 'DisplayPageBreak'*/: break;\n\t\t\t\t\tcase 'rowcolheadings' /*case 'RowColHeadings'*/: break;\n\t\t\t\t\tcase 'donotdisplayoutline' /*case 'DoNotDisplayOutline'*/: break;\n\t\t\t\t\tcase 'noorientation' /*case 'NoOrientation'*/: break;\n\t\t\t\t\tcase 'allowusepivottables' /*case 'AllowUsePivotTables'*/: break;\n\t\t\t\t\tcase 'zeroheight' /*case 'ZeroHeight'*/: break;\n\t\t\t\t\tcase 'viewablerange' /*case 'ViewableRange'*/: break;\n\t\t\t\t\tcase 'selection' /*case 'Selection'*/: break;\n\t\t\t\t\tcase 'protectcontents' /*case 'ProtectContents'*/: break;\n\t\t\t\t\tdefault: seen = false;\n\t\t\t\t} break;\n\n\t\t\t\t/* PivotTable */\n\t\t\t\tcase 'pivottable' /*case 'PivotTable'*/: case 'pivotcache' /*case 'PivotCache'*/: switch(Rn[3]) {\n\t\t\t\t\tcase 'immediateitemsondrop' /*case 'ImmediateItemsOnDrop'*/: break;\n\t\t\t\t\tcase 'showpagemultipleitemlabel' /*case 'ShowPageMultipleItemLabel'*/: break;\n\t\t\t\t\tcase 'compactrowindent' /*case 'CompactRowIndent'*/: break;\n\t\t\t\t\tcase 'location' /*case 'Location'*/: break;\n\t\t\t\t\tcase 'pivotfield' /*case 'PivotField'*/: break;\n\t\t\t\t\tcase 'orientation' /*case 'Orientation'*/: break;\n\t\t\t\t\tcase 'layoutform' /*case 'LayoutForm'*/: break;\n\t\t\t\t\tcase 'layoutsubtotallocation' /*case 'LayoutSubtotalLocation'*/: break;\n\t\t\t\t\tcase 'layoutcompactrow' /*case 'LayoutCompactRow'*/: break;\n\t\t\t\t\tcase 'position' /*case 'Position'*/: break;\n\t\t\t\t\tcase 'pivotitem' /*case 'PivotItem'*/: break;\n\t\t\t\t\tcase 'datatype' /*case 'DataType'*/: break;\n\t\t\t\t\tcase 'datafield' /*case 'DataField'*/: break;\n\t\t\t\t\tcase 'sourcename' /*case 'SourceName'*/: break;\n\t\t\t\t\tcase 'parentfield' /*case 'ParentField'*/: break;\n\t\t\t\t\tcase 'ptlineitems' /*case 'PTLineItems'*/: break;\n\t\t\t\t\tcase 'ptlineitem' /*case 'PTLineItem'*/: break;\n\t\t\t\t\tcase 'countofsameitems' /*case 'CountOfSameItems'*/: break;\n\t\t\t\t\tcase 'item' /*case 'Item'*/: break;\n\t\t\t\t\tcase 'itemtype' /*case 'ItemType'*/: break;\n\t\t\t\t\tcase 'ptsource' /*case 'PTSource'*/: break;\n\t\t\t\t\tcase 'cacheindex' /*case 'CacheIndex'*/: break;\n\t\t\t\t\tcase 'consolidationreference' /*case 'ConsolidationReference'*/: break;\n\t\t\t\t\tcase 'filename' /*case 'FileName'*/: break;\n\t\t\t\t\tcase 'reference' /*case 'Reference'*/: break;\n\t\t\t\t\tcase 'nocolumngrand' /*case 'NoColumnGrand'*/: break;\n\t\t\t\t\tcase 'norowgrand' /*case 'NoRowGrand'*/: break;\n\t\t\t\t\tcase 'blanklineafteritems' /*case 'BlankLineAfterItems'*/: break;\n\t\t\t\t\tcase 'hidden' /*case 'Hidden'*/: break;\n\t\t\t\t\tcase 'subtotal' /*case 'Subtotal'*/: break;\n\t\t\t\t\tcase 'basefield' /*case 'BaseField'*/: break;\n\t\t\t\t\tcase 'mapchilditems' /*case 'MapChildItems'*/: break;\n\t\t\t\t\tcase 'function' /*case 'Function'*/: break;\n\t\t\t\t\tcase 'refreshonfileopen' /*case 'RefreshOnFileOpen'*/: break;\n\t\t\t\t\tcase 'printsettitles' /*case 'PrintSetTitles'*/: break;\n\t\t\t\t\tcase 'mergelabels' /*case 'MergeLabels'*/: break;\n\t\t\t\t\tcase 'defaultversion' /*case 'DefaultVersion'*/: break;\n\t\t\t\t\tcase 'refreshname' /*case 'RefreshName'*/: break;\n\t\t\t\t\tcase 'refreshdate' /*case 'RefreshDate'*/: break;\n\t\t\t\t\tcase 'refreshdatecopy' /*case 'RefreshDateCopy'*/: break;\n\t\t\t\t\tcase 'versionlastrefresh' /*case 'VersionLastRefresh'*/: break;\n\t\t\t\t\tcase 'versionlastupdate' /*case 'VersionLastUpdate'*/: break;\n\t\t\t\t\tcase 'versionupdateablemin' /*case 'VersionUpdateableMin'*/: break;\n\t\t\t\t\tcase 'versionrefreshablemin' /*case 'VersionRefreshableMin'*/: break;\n\t\t\t\t\tcase 'calculation' /*case 'Calculation'*/: break;\n\t\t\t\t\tdefault: seen = false;\n\t\t\t\t} break;\n\n\t\t\t\t/* PageBreaks */\n\t\t\t\tcase 'pagebreaks' /*case 'PageBreaks'*/: switch(Rn[3]) {\n\t\t\t\t\tcase 'colbreaks' /*case 'ColBreaks'*/: break;\n\t\t\t\t\tcase 'colbreak' /*case 'ColBreak'*/: break;\n\t\t\t\t\tcase 'rowbreaks' /*case 'RowBreaks'*/: break;\n\t\t\t\t\tcase 'rowbreak' /*case 'RowBreak'*/: break;\n\t\t\t\t\tcase 'colstart' /*case 'ColStart'*/: break;\n\t\t\t\t\tcase 'colend' /*case 'ColEnd'*/: break;\n\t\t\t\t\tcase 'rowend' /*case 'RowEnd'*/: break;\n\t\t\t\t\tdefault: seen = false;\n\t\t\t\t} break;\n\n\t\t\t\t/* AutoFilter */\n\t\t\t\tcase 'autofilter' /*case 'AutoFilter'*/: switch(Rn[3]) {\n\t\t\t\t\tcase 'autofiltercolumn' /*case 'AutoFilterColumn'*/: break;\n\t\t\t\t\tcase 'autofiltercondition' /*case 'AutoFilterCondition'*/: break;\n\t\t\t\t\tcase 'autofilterand' /*case 'AutoFilterAnd'*/: break;\n\t\t\t\t\tcase 'autofilteror' /*case 'AutoFilterOr'*/: break;\n\t\t\t\t\tdefault: seen = false;\n\t\t\t\t} break;\n\n\t\t\t\t/* QueryTable */\n\t\t\t\tcase 'querytable' /*case 'QueryTable'*/: switch(Rn[3]) {\n\t\t\t\t\tcase 'id' /*case 'Id'*/: break;\n\t\t\t\t\tcase 'autoformatfont' /*case 'AutoFormatFont'*/: break;\n\t\t\t\t\tcase 'autoformatpattern' /*case 'AutoFormatPattern'*/: break;\n\t\t\t\t\tcase 'querysource' /*case 'QuerySource'*/: break;\n\t\t\t\t\tcase 'querytype' /*case 'QueryType'*/: break;\n\t\t\t\t\tcase 'enableredirections' /*case 'EnableRedirections'*/: break;\n\t\t\t\t\tcase 'refreshedinxl9' /*case 'RefreshedInXl9'*/: break;\n\t\t\t\t\tcase 'urlstring' /*case 'URLString'*/: break;\n\t\t\t\t\tcase 'htmltables' /*case 'HTMLTables'*/: break;\n\t\t\t\t\tcase 'connection' /*case 'Connection'*/: break;\n\t\t\t\t\tcase 'commandtext' /*case 'CommandText'*/: break;\n\t\t\t\t\tcase 'refreshinfo' /*case 'RefreshInfo'*/: break;\n\t\t\t\t\tcase 'notitles' /*case 'NoTitles'*/: break;\n\t\t\t\t\tcase 'nextid' /*case 'NextId'*/: break;\n\t\t\t\t\tcase 'columninfo' /*case 'ColumnInfo'*/: break;\n\t\t\t\t\tcase 'overwritecells' /*case 'OverwriteCells'*/: break;\n\t\t\t\t\tcase 'donotpromptforfile' /*case 'DoNotPromptForFile'*/: break;\n\t\t\t\t\tcase 'textwizardsettings' /*case 'TextWizardSettings'*/: break;\n\t\t\t\t\tcase 'source' /*case 'Source'*/: break;\n\t\t\t\t\tcase 'number' /*case 'Number'*/: break;\n\t\t\t\t\tcase 'decimal' /*case 'Decimal'*/: break;\n\t\t\t\t\tcase 'thousandseparator' /*case 'ThousandSeparator'*/: break;\n\t\t\t\t\tcase 'trailingminusnumbers' /*case 'TrailingMinusNumbers'*/: break;\n\t\t\t\t\tcase 'formatsettings' /*case 'FormatSettings'*/: break;\n\t\t\t\t\tcase 'fieldtype' /*case 'FieldType'*/: break;\n\t\t\t\t\tcase 'delimiters' /*case 'Delimiters'*/: break;\n\t\t\t\t\tcase 'tab' /*case 'Tab'*/: break;\n\t\t\t\t\tcase 'comma' /*case 'Comma'*/: break;\n\t\t\t\t\tcase 'autoformatname' /*case 'AutoFormatName'*/: break;\n\t\t\t\t\tcase 'versionlastedit' /*case 'VersionLastEdit'*/: break;\n\t\t\t\t\tcase 'versionlastrefresh' /*case 'VersionLastRefresh'*/: break;\n\t\t\t\t\tdefault: seen = false;\n\t\t\t\t} break;\n\n\t\t\t\tcase 'datavalidation' /*case 'DataValidation'*/:\n\t\t\t\tswitch(Rn[3]) {\n\t\t\t\t\tcase 'range' /*case 'Range'*/: break;\n\n\t\t\t\t\tcase 'type' /*case 'Type'*/: break;\n\t\t\t\t\tcase 'min' /*case 'Min'*/: break;\n\t\t\t\t\tcase 'max' /*case 'Max'*/: break;\n\t\t\t\t\tcase 'sort' /*case 'Sort'*/: break;\n\t\t\t\t\tcase 'descending' /*case 'Descending'*/: break;\n\t\t\t\t\tcase 'order' /*case 'Order'*/: break;\n\t\t\t\t\tcase 'casesensitive' /*case 'CaseSensitive'*/: break;\n\t\t\t\t\tcase 'value' /*case 'Value'*/: break;\n\t\t\t\t\tcase 'errorstyle' /*case 'ErrorStyle'*/: break;\n\t\t\t\t\tcase 'errormessage' /*case 'ErrorMessage'*/: break;\n\t\t\t\t\tcase 'errortitle' /*case 'ErrorTitle'*/: break;\n\t\t\t\t\tcase 'inputmessage' /*case 'InputMessage'*/: break;\n\t\t\t\t\tcase 'inputtitle' /*case 'InputTitle'*/: break;\n\t\t\t\t\tcase 'combohide' /*case 'ComboHide'*/: break;\n\t\t\t\t\tcase 'inputhide' /*case 'InputHide'*/: break;\n\t\t\t\t\tcase 'condition' /*case 'Condition'*/: break;\n\t\t\t\t\tcase 'qualifier' /*case 'Qualifier'*/: break;\n\t\t\t\t\tcase 'useblank' /*case 'UseBlank'*/: break;\n\t\t\t\t\tcase 'value1' /*case 'Value1'*/: break;\n\t\t\t\t\tcase 'value2' /*case 'Value2'*/: break;\n\t\t\t\t\tcase 'format' /*case 'Format'*/: break;\n\n\t\t\t\t\tcase 'cellrangelist' /*case 'CellRangeList'*/: break;\n\t\t\t\t\tdefault: seen = false;\n\t\t\t\t} break;\n\n\t\t\t\tcase 'sorting' /*case 'Sorting'*/:\n\t\t\t\tcase 'conditionalformatting' /*case 'ConditionalFormatting'*/:\n\t\t\t\tswitch(Rn[3]) {\n\t\t\t\t\tcase 'range' /*case 'Range'*/: break;\n\t\t\t\t\tcase 'type' /*case 'Type'*/: break;\n\t\t\t\t\tcase 'min' /*case 'Min'*/: break;\n\t\t\t\t\tcase 'max' /*case 'Max'*/: break;\n\t\t\t\t\tcase 'sort' /*case 'Sort'*/: break;\n\t\t\t\t\tcase 'descending' /*case 'Descending'*/: break;\n\t\t\t\t\tcase 'order' /*case 'Order'*/: break;\n\t\t\t\t\tcase 'casesensitive' /*case 'CaseSensitive'*/: break;\n\t\t\t\t\tcase 'value' /*case 'Value'*/: break;\n\t\t\t\t\tcase 'errorstyle' /*case 'ErrorStyle'*/: break;\n\t\t\t\t\tcase 'errormessage' /*case 'ErrorMessage'*/: break;\n\t\t\t\t\tcase 'errortitle' /*case 'ErrorTitle'*/: break;\n\t\t\t\t\tcase 'cellrangelist' /*case 'CellRangeList'*/: break;\n\t\t\t\t\tcase 'inputmessage' /*case 'InputMessage'*/: break;\n\t\t\t\t\tcase 'inputtitle' /*case 'InputTitle'*/: break;\n\t\t\t\t\tcase 'combohide' /*case 'ComboHide'*/: break;\n\t\t\t\t\tcase 'inputhide' /*case 'InputHide'*/: break;\n\t\t\t\t\tcase 'condition' /*case 'Condition'*/: break;\n\t\t\t\t\tcase 'qualifier' /*case 'Qualifier'*/: break;\n\t\t\t\t\tcase 'useblank' /*case 'UseBlank'*/: break;\n\t\t\t\t\tcase 'value1' /*case 'Value1'*/: break;\n\t\t\t\t\tcase 'value2' /*case 'Value2'*/: break;\n\t\t\t\t\tcase 'format' /*case 'Format'*/: break;\n\t\t\t\t\tdefault: seen = false;\n\t\t\t\t} break;\n\n\t\t\t\t/* MapInfo (schema) */\n\t\t\t\tcase 'mapinfo' /*case 'MapInfo'*/: case 'schema' /*case 'Schema'*/: case 'data' /*case 'data'*/: switch(Rn[3]) {\n\t\t\t\t\tcase 'map' /*case 'Map'*/: break;\n\t\t\t\t\tcase 'entry' /*case 'Entry'*/: break;\n\t\t\t\t\tcase 'range' /*case 'Range'*/: break;\n\t\t\t\t\tcase 'xpath' /*case 'XPath'*/: break;\n\t\t\t\t\tcase 'field' /*case 'Field'*/: break;\n\t\t\t\t\tcase 'xsdtype' /*case 'XSDType'*/: break;\n\t\t\t\t\tcase 'filteron' /*case 'FilterOn'*/: break;\n\t\t\t\t\tcase 'aggregate' /*case 'Aggregate'*/: break;\n\t\t\t\t\tcase 'elementtype' /*case 'ElementType'*/: break;\n\t\t\t\t\tcase 'attributetype' /*case 'AttributeType'*/: break;\n\t\t\t\t/* These are from xsd (XML Schema Definition) */\n\t\t\t\t\tcase 'schema' /*case 'schema'*/:\n\t\t\t\t\tcase 'element' /*case 'element'*/:\n\t\t\t\t\tcase 'complextype' /*case 'complexType'*/:\n\t\t\t\t\tcase 'datatype' /*case 'datatype'*/:\n\t\t\t\t\tcase 'all' /*case 'all'*/:\n\t\t\t\t\tcase 'attribute' /*case 'attribute'*/:\n\t\t\t\t\tcase 'extends' /*case 'extends'*/: break;\n\n\t\t\t\t\tcase 'row' /*case 'row'*/: break;\n\t\t\t\t\tdefault: seen = false;\n\t\t\t\t} break;\n\n\t\t\t\t/* SmartTags (can be anything) */\n\t\t\t\tcase 'smarttags' /*case 'SmartTags'*/: break;\n\n\t\t\t\tdefault: seen = false; break;\n\t\t\t}\n\t\t\tif(seen) break;\n\t\t\t/* CustomDocumentProperties */\n\t\t\tif(Rn[3].match(/!\\[CDATA/)) break;\n\t\t\tif(!state[state.length-1][1]) throw 'Unrecognized tag: ' + Rn[3] + \"|\" + state.join(\"|\");\n\t\t\tif(state[state.length-1][0]===/*'CustomDocumentProperties'*/'customdocumentproperties') {\n\t\t\t\tif(Rn[0].slice(-2) === \"/>\") break;\n\t\t\t\telse if(Rn[1]===\"/\") xlml_set_custprop(Custprops, raw_Rn3, cp, str.slice(pidx, Rn.index));\n\t\t\t\telse { cp = Rn; pidx = Rn.index + Rn[0].length; }\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif(opts.WTF) throw 'Unrecognized tag: ' + Rn[3] + \"|\" + state.join(\"|\");\n\t}\n\tvar out = ({}/*:any*/);\n\tif(!opts.bookSheets && !opts.bookProps) out.Sheets = sheets;\n\tout.SheetNames = sheetnames;\n\tout.Workbook = Workbook;\n\tout.SSF = dup(table_fmt);\n\tout.Props = Props;\n\tout.Custprops = Custprops;\n\tout.bookType = \"xlml\";\n\treturn out;\n}\n\nfunction parse_xlml(data/*:RawBytes|string*/, opts)/*:Workbook*/ {\n\tfix_read_opts(opts=opts||{});\n\tswitch(opts.type||\"base64\") {\n\t\tcase \"base64\": return parse_xlml_xml(Base64_decode(data), opts);\n\t\tcase \"binary\": case \"buffer\": case \"file\": return parse_xlml_xml(data, opts);\n\t\tcase \"array\": return parse_xlml_xml(a2s(data), opts);\n\t}\n\t/*:: throw new Error(\"unsupported type \" + opts.type); */\n}\n\n/* TODO */\nfunction write_props_xlml(wb/*:Workbook*/, opts)/*:string*/ {\n\tvar o/*:Array<string>*/ = [];\n\t/* DocumentProperties */\n\tif(wb.Props) o.push(xlml_write_docprops(wb.Props, opts));\n\t/* CustomDocumentProperties */\n\tif(wb.Custprops) o.push(xlml_write_custprops(wb.Props, wb.Custprops, opts));\n\treturn o.join(\"\");\n}\n/* TODO */\nfunction write_wb_xlml(wb/*::, opts*/)/*:string*/ {\n\t/* OfficeDocumentSettings */\n\t/* ExcelWorkbook */\n\tif((((wb||{}).Workbook||{}).WBProps||{}).date1904) return '<ExcelWorkbook xmlns=\"urn:schemas-microsoft-com:office:excel\"><Date1904/></ExcelWorkbook>';\n\treturn \"\";\n}\n/* TODO */\nfunction write_sty_xlml(wb, opts)/*:string*/ {\n\t/* Styles */\n\tvar styles/*:Array<string>*/ = ['<Style ss:ID=\"Default\" ss:Name=\"Normal\"><NumberFormat/></Style>'];\n\topts.cellXfs.forEach(function(xf, id) {\n\t\tvar payload/*:Array<string>*/ = [];\n\t\tpayload.push(writextag('NumberFormat', null, {\"ss:Format\": escapexml(table_fmt[xf.numFmtId])}));\n\n\t\tvar o = /*::(*/{\"ss:ID\": \"s\" + (21+id)}/*:: :any)*/;\n\t\tstyles.push(writextag('Style', payload.join(\"\"), o));\n\t});\n\treturn writextag(\"Styles\", styles.join(\"\"));\n}\nfunction write_name_xlml(n) { return writextag(\"NamedRange\", null, {\"ss:Name\": n.Name.slice(0,6) == \"_xlnm.\" ? n.Name.slice(6) : n.Name, \"ss:RefersTo\":\"=\" + a1_to_rc(n.Ref, {r:0,c:0})}); }\nfunction write_names_xlml(wb/*::, opts*/)/*:string*/ {\n\tif(!((wb||{}).Workbook||{}).Names) return \"\";\n\t/*:: if(!wb || !wb.Workbook || !wb.Workbook.Names) throw new Error(\"unreachable\"); */\n\tvar names/*:Array<any>*/ = wb.Workbook.Names;\n\tvar out/*:Array<string>*/ = [];\n\tfor(var i = 0; i < names.length; ++i) {\n\t\tvar n = names[i];\n\t\tif(n.Sheet != null) continue;\n\t\tif(n.Name.match(/^_xlfn\\./)) continue;\n\t\tout.push(write_name_xlml(n));\n\t}\n\treturn writextag(\"Names\", out.join(\"\"));\n}\nfunction write_ws_xlml_names(ws/*:Worksheet*/, opts, idx/*:number*/, wb/*:Workbook*/)/*:string*/ {\n\tif(!ws) return \"\";\n\tif(!((wb||{}).Workbook||{}).Names) return \"\";\n\t/*:: if(!wb || !wb.Workbook || !wb.Workbook.Names) throw new Error(\"unreachable\"); */\n\tvar names/*:Array<any>*/ = wb.Workbook.Names;\n\tvar out/*:Array<string>*/ = [];\n\tfor(var i = 0; i < names.length; ++i) {\n\t\tvar n = names[i];\n\t\tif(n.Sheet != idx) continue;\n\t\t/*switch(n.Name) {\n\t\t\tcase \"_\": continue;\n\t\t}*/\n\t\tif(n.Name.match(/^_xlfn\\./)) continue;\n\t\tout.push(write_name_xlml(n));\n\t}\n\treturn out.join(\"\");\n}\n/* WorksheetOptions */\nfunction write_ws_xlml_wsopts(ws/*:Worksheet*/, opts, idx/*:number*/, wb/*:Workbook*/)/*:string*/ {\n\tif(!ws) return \"\";\n\tvar o/*:Array<string>*/ = [];\n\t/* NOTE: spec technically allows any order, but stick with implied order */\n\n\t/* FitToPage */\n\t/* DoNotDisplayColHeaders */\n\t/* DoNotDisplayRowHeaders */\n\t/* ViewableRange */\n\t/* Selection */\n\t/* GridlineColor */\n\t/* Name */\n\t/* ExcelWorksheetType */\n\t/* IntlMacro */\n\t/* Unsynced */\n\t/* Selected */\n\t/* CodeName */\n\n\tif(ws['!margins']) {\n\t\to.push(\"<PageSetup>\");\n\t\tif(ws['!margins'].header) o.push(writextag(\"Header\", null, {'x:Margin':ws['!margins'].header}));\n\t\tif(ws['!margins'].footer) o.push(writextag(\"Footer\", null, {'x:Margin':ws['!margins'].footer}));\n\t\to.push(writextag(\"PageMargins\", null, {\n\t\t\t'x:Bottom': ws['!margins'].bottom || \"0.75\",\n\t\t\t'x:Left': ws['!margins'].left || \"0.7\",\n\t\t\t'x:Right': ws['!margins'].right || \"0.7\",\n\t\t\t'x:Top': ws['!margins'].top || \"0.75\"\n\t\t}));\n\t\to.push(\"</PageSetup>\");\n\t}\n\n\t/* PageSetup */\n\t/* DisplayPageBreak */\n\t/* TransitionExpressionEvaluation */\n\t/* TransitionFormulaEntry */\n\t/* Print */\n\t/* Zoom */\n\t/* PageLayoutZoom */\n\t/* PageBreakZoom */\n\t/* ShowPageBreakZoom */\n\t/* DefaultRowHeight */\n\t/* DefaultColumnWidth */\n\t/* StandardWidth */\n\n\tif(wb && wb.Workbook && wb.Workbook.Sheets && wb.Workbook.Sheets[idx]) {\n\t\t/* Visible */\n\t\tif(wb.Workbook.Sheets[idx].Hidden) o.push(writextag(\"Visible\", (wb.Workbook.Sheets[idx].Hidden == 1 ? \"SheetHidden\" : \"SheetVeryHidden\"), {}));\n\t\telse {\n\t\t\t/* Selected */\n\t\t\tfor(var i = 0; i < idx; ++i) if(wb.Workbook.Sheets[i] && !wb.Workbook.Sheets[i].Hidden) break;\n\t\t\tif(i == idx) o.push(\"<Selected/>\");\n\t\t}\n\t}\n\n\t/* LeftColumnVisible */\n\n\tif(((((wb||{}).Workbook||{}).Views||[])[0]||{}).RTL) o.push(\"<DisplayRightToLeft/>\");\n\n\t/* GridlineColorIndex */\n\t/* DisplayFormulas */\n\t/* DoNotDisplayGridlines */\n\t/* DoNotDisplayHeadings */\n\t/* DoNotDisplayOutline */\n\t/* ApplyAutomaticOutlineStyles */\n\t/* NoSummaryRowsBelowDetail */\n\t/* NoSummaryColumnsRightDetail */\n\t/* DoNotDisplayZeros */\n\t/* ActiveRow */\n\t/* ActiveColumn */\n\t/* FilterOn */\n\t/* RangeSelection */\n\t/* TopRowVisible */\n\t/* TopRowBottomPane */\n\t/* LeftColumnRightPane */\n\t/* ActivePane */\n\t/* SplitHorizontal */\n\t/* SplitVertical */\n\t/* FreezePanes */\n\t/* FrozenNoSplit */\n\t/* TabColorIndex */\n\t/* Panes */\n\n\t/* NOTE: Password not supported in XLML Format */\n\tif(ws['!protect']) {\n\t\to.push(writetag(\"ProtectContents\", \"True\"));\n\t\tif(ws['!protect'].objects) o.push(writetag(\"ProtectObjects\", \"True\"));\n\t\tif(ws['!protect'].scenarios) o.push(writetag(\"ProtectScenarios\", \"True\"));\n\t\tif(ws['!protect'].selectLockedCells != null && !ws['!protect'].selectLockedCells) o.push(writetag(\"EnableSelection\", \"NoSelection\"));\n\t\telse if(ws['!protect'].selectUnlockedCells != null && !ws['!protect'].selectUnlockedCells) o.push(writetag(\"EnableSelection\", \"UnlockedCells\"));\n\t[\n\t\t[ \"formatCells\", \"AllowFormatCells\" ],\n\t\t[ \"formatColumns\", \"AllowSizeCols\" ],\n\t\t[ \"formatRows\", \"AllowSizeRows\" ],\n\t\t[ \"insertColumns\", \"AllowInsertCols\" ],\n\t\t[ \"insertRows\", \"AllowInsertRows\" ],\n\t\t[ \"insertHyperlinks\", \"AllowInsertHyperlinks\" ],\n\t\t[ \"deleteColumns\", \"AllowDeleteCols\" ],\n\t\t[ \"deleteRows\", \"AllowDeleteRows\" ],\n\t\t[ \"sort\", \"AllowSort\" ],\n\t\t[ \"autoFilter\", \"AllowFilter\" ],\n\t\t[ \"pivotTables\", \"AllowUsePivotTables\" ]\n\t].forEach(function(x) { if(ws['!protect'][x[0]]) o.push(\"<\"+x[1]+\"/>\"); });\n\t}\n\n\tif(o.length == 0) return \"\";\n\treturn writextag(\"WorksheetOptions\", o.join(\"\"), {xmlns:XLMLNS.x});\n}\nfunction write_ws_xlml_comment(comments/*:Array<any>*/)/*:string*/ {\n\treturn comments.map(function(c) {\n\t\t// TODO: formatted text\n\t\tvar t = xlml_unfixstr(c.t||\"\");\n\t\tvar d =writextag(\"ss:Data\", t, {\"xmlns\":\"http://www.w3.org/TR/REC-html40\"});\n\t\treturn writextag(\"Comment\", d, {\"ss:Author\":c.a});\n\t}).join(\"\");\n}\nfunction write_ws_xlml_cell(cell, ref/*:string*/, ws, opts, idx/*:number*/, wb, addr)/*:string*/{\n\tif(!cell || (cell.v == undefined && cell.f == undefined)) return \"\";\n\n\tvar attr = {};\n\tif(cell.f) attr[\"ss:Formula\"] = \"=\" + escapexml(a1_to_rc(cell.f, addr));\n\tif(cell.F && cell.F.slice(0, ref.length) == ref) {\n\t\tvar end = decode_cell(cell.F.slice(ref.length + 1));\n\t\tattr[\"ss:ArrayRange\"] = \"RC:R\" + (end.r == addr.r ? \"\" : \"[\" + (end.r - addr.r) + \"]\") + \"C\" + (end.c == addr.c ? \"\" : \"[\" + (end.c - addr.c) + \"]\");\n\t}\n\n\tif(cell.l && cell.l.Target) {\n\t\tattr[\"ss:HRef\"] = escapexml(cell.l.Target);\n\t\tif(cell.l.Tooltip) attr[\"x:HRefScreenTip\"] = escapexml(cell.l.Tooltip);\n\t}\n\n\tif(ws['!merges']) {\n\t\tvar marr = ws['!merges'];\n\t\tfor(var mi = 0; mi != marr.length; ++mi) {\n\t\t\tif(marr[mi].s.c != addr.c || marr[mi].s.r != addr.r) continue;\n\t\t\tif(marr[mi].e.c > marr[mi].s.c) attr['ss:MergeAcross'] = marr[mi].e.c - marr[mi].s.c;\n\t\t\tif(marr[mi].e.r > marr[mi].s.r) attr['ss:MergeDown'] = marr[mi].e.r - marr[mi].s.r;\n\t\t}\n\t}\n\n\tvar t = \"\", p = \"\";\n\tswitch(cell.t) {\n\t\tcase 'z': if(!opts.sheetStubs) return \"\"; break;\n\t\tcase 'n': t = 'Number'; p = String(cell.v); break;\n\t\tcase 'b': t = 'Boolean'; p = (cell.v ? \"1\" : \"0\"); break;\n\t\tcase 'e': t = 'Error'; p = BErr[cell.v]; break;\n\t\tcase 'd': t = 'DateTime'; p = new Date(cell.v).toISOString(); if(cell.z == null) cell.z = cell.z || table_fmt[14]; break;\n\t\tcase 's': t = 'String'; p = escapexlml(cell.v||\"\"); break;\n\t}\n\t/* TODO: cell style */\n\tvar os = get_cell_style(opts.cellXfs, cell, opts);\n\tattr[\"ss:StyleID\"] = \"s\" + (21+os);\n\tattr[\"ss:Index\"] = addr.c + 1;\n\tvar _v = (cell.v != null ? p : \"\");\n\tvar m = cell.t == 'z' ? \"\" : ('<Data ss:Type=\"' + t + '\">' + _v + '</Data>');\n\n\tif((cell.c||[]).length > 0) m += write_ws_xlml_comment(cell.c);\n\n\treturn writextag(\"Cell\", m, attr);\n}\nfunction write_ws_xlml_row(R/*:number*/, row)/*:string*/ {\n\tvar o = '<Row ss:Index=\"' + (R+1) + '\"';\n\tif(row) {\n\t\tif(row.hpt && !row.hpx) row.hpx = pt2px(row.hpt);\n\t\tif(row.hpx) o += ' ss:AutoFitHeight=\"0\" ss:Height=\"' + row.hpx + '\"';\n\t\tif(row.hidden) o += ' ss:Hidden=\"1\"';\n\t}\n\treturn o + '>';\n}\n/* TODO */\nfunction write_ws_xlml_table(ws/*:Worksheet*/, opts, idx/*:number*/, wb/*:Workbook*/)/*:string*/ {\n\tif(!ws['!ref']) return \"\";\n\tvar range/*:Range*/ = safe_decode_range(ws['!ref']);\n\tvar marr/*:Array<Range>*/ = ws['!merges'] || [], mi = 0;\n\tvar o/*:Array<string>*/ = [];\n\tif(ws['!cols']) ws['!cols'].forEach(function(n, i) {\n\t\tprocess_col(n);\n\t\tvar w = !!n.width;\n\t\tvar p = col_obj_w(i, n);\n\t\tvar k/*:any*/ = {\"ss:Index\":i+1};\n\t\tif(w) k['ss:Width'] = width2px(p.width);\n\t\tif(n.hidden) k['ss:Hidden']=\"1\";\n\t\to.push(writextag(\"Column\",null,k));\n\t});\n\tvar dense = ws[\"!data\"] != null;\n\tfor(var R = range.s.r; R <= range.e.r; ++R) {\n\t\tvar row = [write_ws_xlml_row(R, (ws['!rows']||[])[R])];\n\t\tfor(var C = range.s.c; C <= range.e.c; ++C) {\n\t\t\tvar skip = false;\n\t\t\tfor(mi = 0; mi != marr.length; ++mi) {\n\t\t\t\tif(marr[mi].s.c > C) continue;\n\t\t\t\tif(marr[mi].s.r > R) continue;\n\t\t\t\tif(marr[mi].e.c < C) continue;\n\t\t\t\tif(marr[mi].e.r < R) continue;\n\t\t\t\tif(marr[mi].s.c != C || marr[mi].s.r != R) skip = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif(skip) continue;\n\t\t\tvar addr = {r:R,c:C};\n\t\t\tvar ref = encode_col(C) + encode_row(R), cell = dense ? (ws[\"!data\"][R]||[])[C] : ws[ref];\n\t\t\trow.push(write_ws_xlml_cell(cell, ref, ws, opts, idx, wb, addr));\n\t\t}\n\t\trow.push(\"</Row>\");\n\t\tif(row.length > 2) o.push(row.join(\"\"));\n\t}\n\treturn o.join(\"\");\n}\nfunction write_ws_xlml(idx/*:number*/, opts, wb/*:Workbook*/)/*:string*/ {\n\tvar o/*:Array<string>*/ = [];\n\tvar s = wb.SheetNames[idx];\n\tvar ws = wb.Sheets[s];\n\n\tvar t/*:string*/ = ws ? write_ws_xlml_names(ws, opts, idx, wb) : \"\";\n\tif(t.length > 0) o.push(\"<Names>\" + t + \"</Names>\");\n\n\t/* Table */\n\tt = ws ? write_ws_xlml_table(ws, opts, idx, wb) : \"\";\n\tif(t.length > 0) o.push(\"<Table>\" + t + \"</Table>\");\n\n\t/* WorksheetOptions */\n\to.push(write_ws_xlml_wsopts(ws, opts, idx, wb));\n\n\tif(ws[\"!autofilter\"]) o.push('<AutoFilter x:Range=\"' + a1_to_rc(fix_range(ws[\"!autofilter\"].ref), {r:0,c:0}) + '\" xmlns=\"urn:schemas-microsoft-com:office:excel\"></AutoFilter>');\n\n\treturn o.join(\"\");\n}\nfunction write_xlml(wb, opts)/*:string*/ {\n\tif(!opts) opts = {};\n\tif(!wb.SSF) wb.SSF = dup(table_fmt);\n\tif(wb.SSF) {\n\t\tmake_ssf(); SSF_load_table(wb.SSF);\n\t\t// $FlowIgnore\n\t\topts.revssf = evert_num(wb.SSF); opts.revssf[wb.SSF[65535]] = 0;\n\t\topts.ssf = wb.SSF;\n\t\topts.cellXfs = [];\n\t\tget_cell_style(opts.cellXfs, {}, {revssf:{\"General\":0}});\n\t}\n\tvar d/*:Array<string>*/ = [];\n\td.push(write_props_xlml(wb, opts));\n\td.push(write_wb_xlml(wb, opts));\n\td.push(\"\");\n\td.push(\"\");\n\tfor(var i = 0; i < wb.SheetNames.length; ++i)\n\t\td.push(writextag(\"Worksheet\", write_ws_xlml(i, opts, wb), {\"ss:Name\":escapexml(wb.SheetNames[i])}));\n\td[2] = write_sty_xlml(wb, opts);\n\td[3] = write_names_xlml(wb, opts);\n\treturn XML_HEADER + writextag(\"Workbook\", d.join(\"\"), {\n\t\t'xmlns':      XLMLNS.ss,\n\t\t'xmlns:o':    XLMLNS.o,\n\t\t'xmlns:x':    XLMLNS.x,\n\t\t'xmlns:ss':   XLMLNS.ss,\n\t\t'xmlns:dt':   XLMLNS.dt,\n\t\t'xmlns:html': XLMLNS.html\n\t});\n}\n/* [MS-OLEDS] 2.3.8 CompObjStream */\nfunction parse_compobj(obj/*:CFBEntry*/) {\n\tvar v = {};\n\tvar o = obj.content;\n\t/*:: if(o == null) return; */\n\n\t/* [MS-OLEDS] 2.3.7 CompObjHeader -- All fields MUST be ignored */\n\to.l = 28;\n\n\tv.AnsiUserType = o.read_shift(0, \"lpstr-ansi\");\n\tv.AnsiClipboardFormat = parse_ClipboardFormatOrAnsiString(o);\n\n\tif(o.length - o.l <= 4) return v;\n\n\tvar m/*:number*/ = o.read_shift(4);\n\tif(m == 0 || m > 40) return v;\n\to.l-=4; v.Reserved1 = o.read_shift(0, \"lpstr-ansi\");\n\n\tif(o.length - o.l <= 4) return v;\n\tm = o.read_shift(4);\n\tif(m !== 0x71b239f4) return v;\n\tv.UnicodeClipboardFormat = parse_ClipboardFormatOrUnicodeString(o);\n\n\tm = o.read_shift(4);\n\tif(m == 0 || m > 40) return v;\n\to.l-=4; v.Reserved2 = o.read_shift(0, \"lpwstr\");\n}\n\n/*\n\tContinue logic for:\n\t- 2.4.58 Continue          0x003c\n\t- 2.4.59 ContinueBigName   0x043c\n\t- 2.4.60 ContinueFrt       0x0812\n\t- 2.4.61 ContinueFrt11     0x0875\n\t- 2.4.62 ContinueFrt12     0x087f\n*/\nvar CONTINUE_RT = [ 0x003c, 0x043c, 0x0812, 0x0875, 0x087f ];\nfunction slurp(RecordType, R, blob, length/*:number*/, opts)/*:any*/ {\n\tvar l = length;\n\tvar bufs = [];\n\tvar d = blob.slice(blob.l,blob.l+l);\n\tif(opts && opts.enc && opts.enc.insitu && d.length > 0) switch(RecordType) {\n\tcase 0x0009: case 0x0209: case 0x0409: case 0x0809/* BOF */: case 0x002F /* FilePass */: case 0x0195 /* FileLock */: case 0x00E1 /* InterfaceHdr */: case 0x0196 /* RRDInfo */: case 0x0138 /* RRDHead */: case 0x0194 /* UsrExcl */: case 0x000a /* EOF */:\n\t\tbreak;\n\tcase 0x0085 /* BoundSheet8 */:\n\t\tbreak;\n\tdefault:\n\t\topts.enc.insitu(d);\n\t}\n\tbufs.push(d);\n\tblob.l += l;\n\tvar nextrt = __readUInt16LE(blob,blob.l), next = XLSRecordEnum[nextrt];\n\tvar start = 0;\n\twhile(next != null && CONTINUE_RT.indexOf(nextrt) > -1) {\n\t\tl = __readUInt16LE(blob,blob.l+2);\n\t\tstart = blob.l + 4;\n\t\tif(nextrt == 0x0812 /* ContinueFrt */) start += 4;\n\t\telse if(nextrt == 0x0875 || nextrt == 0x087f) {\n\t\t\tstart += 12;\n\t\t}\n\t\td = blob.slice(start,blob.l+4+l);\n\t\tbufs.push(d);\n\t\tblob.l += 4+l;\n\t\tnext = (XLSRecordEnum[nextrt = __readUInt16LE(blob, blob.l)]);\n\t}\n\tvar b = (bconcat(bufs)/*:any*/);\n\tprep_blob(b, 0);\n\tvar ll = 0; b.lens = [];\n\tfor(var j = 0; j < bufs.length; ++j) { b.lens.push(ll); ll += bufs[j].length; }\n\tif(b.length < length) throw \"XLS Record 0x\" + RecordType.toString(16) + \" Truncated: \" + b.length + \" < \" + length;\n\treturn R.f(b, b.length, opts);\n}\n\nfunction safe_format_xf(p/*:any*/, opts/*:ParseOpts*/, date1904/*:?boolean*/) {\n\tif(p.t === 'z') return;\n\tif(!p.XF) return;\n\tvar fmtid = 0;\n\ttry {\n\t\tfmtid = p.z || p.XF.numFmtId || 0;\n\t\tif(opts.cellNF) p.z = table_fmt[fmtid];\n\t} catch(e) { if(opts.WTF) throw e; }\n\tif(!opts || opts.cellText !== false) try {\n\t\tif(p.t === 'e') { p.w = p.w || BErr[p.v]; }\n\t\telse if(fmtid === 0 || fmtid == \"General\") {\n\t\t\tif(p.t === 'n') {\n\t\t\t\tif((p.v|0) === p.v) p.w = p.v.toString(10);\n\t\t\t\telse p.w = SSF_general_num(p.v);\n\t\t\t}\n\t\t\telse p.w = SSF_general(p.v);\n\t\t}\n\t\telse p.w = SSF_format(fmtid,p.v, {date1904:!!date1904, dateNF: opts && opts.dateNF});\n\t} catch(e) { if(opts.WTF) throw e; }\n\tif(opts.cellDates && fmtid && p.t == 'n' && fmt_is_date(table_fmt[fmtid] || String(fmtid))) {\n\t\tvar _d = SSF_parse_date_code(p.v); if(_d) { p.t = 'd'; p.v = new Date(_d.y, _d.m-1,_d.d,_d.H,_d.M,_d.S,_d.u); }\n\t}\n}\n\nfunction make_cell(val, ixfe, t)/*:Cell*/ {\n\treturn ({v:val, ixfe:ixfe, t:t}/*:any*/);\n}\n\n// 2.3.2\nfunction parse_workbook(blob, options/*:ParseOpts*/)/*:Workbook*/ {\n\tvar wb = ({opts:{}}/*:any*/);\n\tvar Sheets = {};\n\tif(DENSE != null && options.dense == null) options.dense = DENSE;\n\tvar out/*:Worksheet*/ = ({}/*:any*/); if(options.dense) out[\"!data\"] = [];\n\tvar Directory = {};\n\tvar range/*:Range*/ = ({}/*:any*/);\n\tvar last_formula = null;\n\tvar sst/*:SST*/ = ([]/*:any*/);\n\tvar cur_sheet = \"\";\n\tvar Preamble = {};\n\tvar lastcell, last_cell = \"\", cc/*:Cell*/, cmnt, rngC, rngR;\n\tvar sharedf = {};\n\tvar arrayf/*:Array<[Range, string]>*/ = [];\n\tvar temp_val/*:Cell*/;\n\tvar country;\n\tvar XFs = []; /* XF records */\n\tvar palette/*:Array<[number, number, number]>*/ = [];\n\tvar Workbook/*:WBWBProps*/ = ({ Sheets:[], WBProps:{date1904:false}, Views:[{}] }/*:any*/), wsprops = {};\n\tvar get_rgb = function getrgb(icv/*:number*/)/*:[number, number, number]*/ {\n\t\tif(icv < 8) return XLSIcv[icv];\n\t\tif(icv < 64) return palette[icv-8] || XLSIcv[icv];\n\t\treturn XLSIcv[icv];\n\t};\n\tvar process_cell_style = function pcs(cell, line/*:any*/, options) {\n\t\tvar xfd = line.XF.data;\n\t\tif(!xfd || !xfd.patternType || !options || !options.cellStyles) return;\n\t\tline.s = ({}/*:any*/);\n\t\tline.s.patternType = xfd.patternType;\n\t\tvar t;\n\t\tif((t = rgb2Hex(get_rgb(xfd.icvFore)))) { line.s.fgColor = {rgb:t}; }\n\t\tif((t = rgb2Hex(get_rgb(xfd.icvBack)))) { line.s.bgColor = {rgb:t}; }\n\t};\n\tvar addcell = function addcell(cell/*:any*/, line/*:any*/, options/*:any*/) {\n\t\tif(file_depth > 1) return;\n\t\tif(options.sheetRows && cell.r >= options.sheetRows) return;\n\t\tif(options.cellStyles && line.XF && line.XF.data) process_cell_style(cell, line, options);\n\t\tdelete line.ixfe; delete line.XF;\n\t\tlastcell = cell;\n\t\tlast_cell = encode_cell(cell);\n\t\tif(!range || !range.s || !range.e) range = {s:{r:0,c:0},e:{r:0,c:0}};\n\t\tif(cell.r < range.s.r) range.s.r = cell.r;\n\t\tif(cell.c < range.s.c) range.s.c = cell.c;\n\t\tif(cell.r + 1 > range.e.r) range.e.r = cell.r + 1;\n\t\tif(cell.c + 1 > range.e.c) range.e.c = cell.c + 1;\n\t\tif(options.cellFormula && line.f) {\n\t\t\tfor(var afi = 0; afi < arrayf.length; ++afi) {\n\t\t\t\tif(arrayf[afi][0].s.c > cell.c || arrayf[afi][0].s.r > cell.r) continue;\n\t\t\t\tif(arrayf[afi][0].e.c < cell.c || arrayf[afi][0].e.r < cell.r) continue;\n\t\t\t\tline.F = encode_range(arrayf[afi][0]);\n\t\t\t\tif(arrayf[afi][0].s.c != cell.c || arrayf[afi][0].s.r != cell.r) delete line.f;\n\t\t\t\tif(line.f) line.f = \"\" + stringify_formula(arrayf[afi][1], range, cell, supbooks, opts);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\t{\n\t\t\tif(options.dense) {\n\t\t\t\tif(!out[\"!data\"][cell.r]) out[\"!data\"][cell.r] = [];\n\t\t\t\tout[\"!data\"][cell.r][cell.c] = line;\n\t\t\t} else out[last_cell] = line;\n\t\t}\n\t};\n\tvar opts = ({\n\t\tenc: false, // encrypted\n\t\tsbcch: 0, // cch in the preceding SupBook\n\t\tsnames: [], // sheetnames\n\t\tsharedf: sharedf, // shared formulae by address\n\t\tarrayf: arrayf, // array formulae array\n\t\trrtabid: [], // RRTabId\n\t\tlastuser: \"\", // Last User from WriteAccess\n\t\tbiff: 8, // BIFF version\n\t\tcodepage: 0, // CP from CodePage record\n\t\twinlocked: 0, // fLockWn from WinProtect\n\t\tcellStyles: !!options && !!options.cellStyles,\n\t\tWTF: !!options && !!options.wtf\n\t}/*:any*/);\n\tif(options.password) opts.password = options.password;\n\tvar themes;\n\tvar merges/*:Array<Range>*/ = [];\n\tvar objects = [];\n\tvar colinfo/*:Array<ColInfo>*/ = [], rowinfo/*:Array<RowInfo>*/ = [];\n\tvar seencol = false;\n\tvar supbooks = ([]/*:any*/); // 1-indexed, will hold extern names\n\tsupbooks.SheetNames = opts.snames;\n\tsupbooks.sharedf = opts.sharedf;\n\tsupbooks.arrayf = opts.arrayf;\n\tsupbooks.names = [];\n\tsupbooks.XTI = [];\n\tvar last_RT = 0;\n\tvar file_depth = 0; /* TODO: make a real stack */\n\tvar BIFF2Fmt = 0, BIFF2FmtTable/*:Array<string>*/ = [];\n\tvar FilterDatabases = []; /* TODO: sort out supbooks and process elsewhere */\n\tvar last_lbl/*:?DefinedName*/;\n\n\t/* explicit override for some broken writers */\n\topts.codepage = 1200;\n\tset_cp(1200);\n\tvar seen_codepage = false;\n\twhile(blob.l < blob.length - 1) {\n\t\tvar s = blob.l;\n\t\tvar RecordType = blob.read_shift(2);\n\t\tif(RecordType === 0 && last_RT === 0x000a /* EOF */) break;\n\t\tvar length = (blob.l === blob.length ? 0 : blob.read_shift(2));\n\t\tvar R = XLSRecordEnum[RecordType];\n\t\tif(file_depth == 0 && [0x0009, 0x0209, 0x0409, 0x0809].indexOf(RecordType) == -1 /* BOF */) break;\n\t\t//console.log(RecordType.toString(16), RecordType, R, blob.l, length, blob.length);\n\t\t//if(!R) console.log(blob.slice(blob.l, blob.l + length));\n\t\tif(R && R.f) {\n\t\t\tif(options.bookSheets) {\n\t\t\t\tif(last_RT === 0x0085 /* BoundSheet8 */ && RecordType !== 0x0085 /* R.n !== 'BoundSheet8' */) break;\n\t\t\t}\n\t\t\tlast_RT = RecordType;\n\t\t\tif(R.r === 2 || R.r == 12) {\n\t\t\t\tvar rt = blob.read_shift(2); length -= 2;\n\t\t\t\tif(!opts.enc && rt !== RecordType && (((rt&0xFF)<<8)|(rt>>8)) !== RecordType) throw new Error(\"rt mismatch: \" + rt + \"!=\" + RecordType);\n\t\t\t\tif(R.r == 12){\n\t\t\t\t\tblob.l += 10; length -= 10;\n\t\t\t\t} // skip FRT\n\t\t\t}\n\t\t\t//console.error(R,blob.l,length,blob.length);\n\t\t\tvar val/*:any*/ = ({}/*:any*/);\n\t\t\tif(RecordType === 0x000a /* EOF */) val = /*::(*/R.f(blob, length, opts)/*:: :any)*/;\n\t\t\telse val = /*::(*/slurp(RecordType, R, blob, length, opts)/*:: :any)*/;\n\t\t\t/*:: val = (val:any); */\n\t\t\tif(file_depth == 0 && [0x0009, 0x0209, 0x0409, 0x0809].indexOf(last_RT) === -1 /* BOF */) continue;\n\t\t\tswitch(RecordType) {\n\t\t\t\tcase 0x0022 /* Date1904 */:\n\t\t\t\t\t/*:: if(!Workbook.WBProps) Workbook.WBProps = {}; */\n\t\t\t\t\twb.opts.Date1904 = Workbook.WBProps.date1904 = val; break;\n\t\t\t\tcase 0x0086 /* WriteProtect */: wb.opts.WriteProtect = true; break;\n\t\t\t\tcase 0x002f /* FilePass */:\n\t\t\t\t\tif(!opts.enc) blob.l = 0;\n\t\t\t\t\topts.enc = val;\n\t\t\t\t\tif(!options.password) throw new Error(\"File is password-protected\");\n\t\t\t\t\tif(val.valid == null) throw new Error(\"Encryption scheme unsupported\");\n\t\t\t\t\tif(!val.valid) throw new Error(\"Password is incorrect\");\n\t\t\t\t\tbreak;\n\t\t\t\tcase 0x005c /* WriteAccess */: opts.lastuser = val; break;\n\t\t\t\tcase 0x0042 /* CodePage */:\n\t\t\t\t\tvar cpval = Number(val);\n\t\t\t\t\t/* overrides based on test cases */\n\t\t\t\t\tswitch(cpval) {\n\t\t\t\t\t\tcase 0x5212: cpval =  1200; break;\n\t\t\t\t\t\tcase 0x8000: cpval = 10000; break;\n\t\t\t\t\t\tcase 0x8001: cpval =  1252; break;\n\t\t\t\t\t}\n\t\t\t\t\tset_cp(opts.codepage = cpval);\n\t\t\t\t\tseen_codepage = true;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 0x013d /* RRTabId */: opts.rrtabid = val; break;\n\t\t\t\tcase 0x0019 /* WinProtect */: opts.winlocked = val; break;\n\t\t\t\tcase 0x01b7 /* RefreshAll */: wb.opts[\"RefreshAll\"] = val; break;\n\t\t\t\tcase 0x000c /* CalcCount */: wb.opts[\"CalcCount\"] = val; break;\n\t\t\t\tcase 0x0010 /* CalcDelta */: wb.opts[\"CalcDelta\"] = val; break;\n\t\t\t\tcase 0x0011 /* CalcIter */: wb.opts[\"CalcIter\"] = val; break;\n\t\t\t\tcase 0x000d /* CalcMode */: wb.opts[\"CalcMode\"] = val; break;\n\t\t\t\tcase 0x000e /* CalcPrecision */: wb.opts[\"CalcPrecision\"] = val; break;\n\t\t\t\tcase 0x005f /* CalcSaveRecalc */: wb.opts[\"CalcSaveRecalc\"] = val; break;\n\t\t\t\tcase 0x000f /* CalcRefMode */: opts.CalcRefMode = val; break; // TODO: implement R1C1\n\t\t\t\tcase 0x08a3 /* ForceFullCalculation */: wb.opts.FullCalc = val; break;\n\t\t\t\tcase 0x0081 /* WsBool */:\n\t\t\t\t\tif(val.fDialog) out[\"!type\"] = \"dialog\";\n\t\t\t\t\tif(!val.fBelow) (out[\"!outline\"] || (out[\"!outline\"] = {})).above = true;\n\t\t\t\t\tif(!val.fRight) (out[\"!outline\"] || (out[\"!outline\"] = {})).left = true;\n\t\t\t\t\tbreak; // TODO\n\t\t\t\tcase 0x00e0 /* XF */:\n\t\t\t\t\tXFs.push(val); break;\n\t\t\t\tcase 0x01ae /* SupBook */:\n\t\t\t\t\tsupbooks.push([val]);\n\t\t\t\t\tsupbooks[supbooks.length-1].XTI = [];\n\t\t\t\t\tbreak;\n\t\t\t\tcase 0x0023: case 0x0223 /* ExternName */:\n\t\t\t\t\tsupbooks[supbooks.length-1].push(val);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 0x0018: case 0x0218 /* Lbl */:\n\t\t\t\t\tlast_lbl = ({\n\t\t\t\t\t\tName: val.Name,\n\t\t\t\t\t\tRef: stringify_formula(val.rgce,range,null,supbooks,opts)\n\t\t\t\t\t}/*:DefinedName*/);\n\t\t\t\t\tif(val.itab > 0) last_lbl.Sheet = val.itab - 1;\n\t\t\t\t\tsupbooks.names.push(last_lbl);\n\t\t\t\t\tif(!supbooks[0]) { supbooks[0] = []; supbooks[0].XTI = []; }\n\t\t\t\t\tsupbooks[supbooks.length-1].push(val);\n\t\t\t\t\tif(val.Name == \"_xlnm._FilterDatabase\" && val.itab > 0)\n\t\t\t\t\t\tif(val.rgce && val.rgce[0] && val.rgce[0][0] && val.rgce[0][0][0] == 'PtgArea3d')\n\t\t\t\t\t\t\tFilterDatabases[val.itab - 1] = { ref: encode_range(val.rgce[0][0][1][2]) };\n\t\t\t\t\tbreak;\n\t\t\t\tcase 0x0016 /* ExternCount */: opts.ExternCount = val; break;\n\t\t\t\tcase 0x0017 /* ExternSheet */:\n\t\t\t\t\tif(supbooks.length == 0) { supbooks[0] = []; supbooks[0].XTI = []; }\n\t\t\t\t\tsupbooks[supbooks.length - 1].XTI = supbooks[supbooks.length - 1].XTI.concat(val); supbooks.XTI = supbooks.XTI.concat(val); break;\n\t\t\t\tcase 0x0894 /* NameCmt */:\n\t\t\t\t\t/* TODO: search for correct name */\n\t\t\t\t\tif(opts.biff < 8) break;\n\t\t\t\t\tif(last_lbl != null) last_lbl.Comment = val[1];\n\t\t\t\t\tbreak;\n\t\t\t\tcase 0x0012 /* Protect */: out[\"!protect\"] = val; break; /* for sheet or book */\n\t\t\t\tcase 0x0013 /* Password */: if(val !== 0 && opts.WTF) console.error(\"Password verifier: \" + val); break;\n\t\t\t\tcase 0x0085 /* BoundSheet8 */: {\n\t\t\t\t\tDirectory[val.pos] = val;\n\t\t\t\t\topts.snames.push(val.name);\n\t\t\t\t} break;\n\t\t\t\tcase 0x000a /* EOF */: {\n\t\t\t\t\tif(--file_depth) break;\n\t\t\t\t\tif(range.e) {\n\t\t\t\t\t\tif(range.e.r > 0 && range.e.c > 0) {\n\t\t\t\t\t\t\trange.e.r--; range.e.c--;\n\t\t\t\t\t\t\tout[\"!ref\"] = encode_range(range);\n\t\t\t\t\t\t\tif(options.sheetRows && options.sheetRows <= range.e.r) {\n\t\t\t\t\t\t\t\tvar tmpri = range.e.r;\n\t\t\t\t\t\t\t\trange.e.r = options.sheetRows - 1;\n\t\t\t\t\t\t\t\tout[\"!fullref\"] = out[\"!ref\"];\n\t\t\t\t\t\t\t\tout[\"!ref\"] = encode_range(range);\n\t\t\t\t\t\t\t\trange.e.r = tmpri;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\trange.e.r++; range.e.c++;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif(merges.length > 0) out[\"!merges\"] = merges;\n\t\t\t\t\t\tif(objects.length > 0) out[\"!objects\"] = objects;\n\t\t\t\t\t\tif(colinfo.length > 0) out[\"!cols\"] = colinfo;\n\t\t\t\t\t\tif(rowinfo.length > 0) out[\"!rows\"] = rowinfo;\n\t\t\t\t\t\tWorkbook.Sheets.push(wsprops);\n\t\t\t\t\t}\n\t\t\t\t\tif(cur_sheet === \"\") Preamble = out; else Sheets[cur_sheet] = out;\n\t\t\t\t\tout = ({}/*:any*/); if(options.dense) out[\"!data\"] = [];\n\t\t\t\t} break;\n\t\t\t\tcase 0x0009: case 0x0209: case 0x0409: case 0x0809 /* BOF */: {\n\t\t\t\t\tif(opts.biff === 8) opts.biff = {\n\t\t\t\t\t\t/*::[*/0x0009/*::]*/:2,\n\t\t\t\t\t\t/*::[*/0x0209/*::]*/:3,\n\t\t\t\t\t\t/*::[*/0x0409/*::]*/:4\n\t\t\t\t\t}[RecordType] || {\n\t\t\t\t\t\t/*::[*/0x0200/*::]*/:2,\n\t\t\t\t\t\t/*::[*/0x0300/*::]*/:3,\n\t\t\t\t\t\t/*::[*/0x0400/*::]*/:4,\n\t\t\t\t\t\t/*::[*/0x0500/*::]*/:5,\n\t\t\t\t\t\t/*::[*/0x0600/*::]*/:8,\n\t\t\t\t\t\t/*::[*/0x0002/*::]*/:2,\n\t\t\t\t\t\t/*::[*/0x0007/*::]*/:2\n\t\t\t\t\t}[val.BIFFVer] || 8;\n\t\t\t\t\topts.biffguess = val.BIFFVer == 0;\n\t\t\t\t\tif(val.BIFFVer == 0 && val.dt == 0x1000) { opts.biff = 5; seen_codepage = true; set_cp(opts.codepage = 28591); }\n\t\t\t\t\tif(opts.biff == 8 && val.BIFFVer == 0 && val.dt == 16) opts.biff = 2;\n\t\t\t\t\tif(file_depth++) break;\n\t\t\t\t\tout = ({}/*:any*/); if(options.dense) out[\"!data\"] = [];\n\n\t\t\t\t\tif(opts.biff < 8 && !seen_codepage) { seen_codepage = true; set_cp(opts.codepage = options.codepage || 1252); }\n\n\t\t\t\t\tif(opts.biff < 5 || val.BIFFVer == 0 && val.dt == 0x1000) {\n\t\t\t\t\t\tif(cur_sheet === \"\") cur_sheet = \"Sheet1\";\n\t\t\t\t\t\trange = {s:{r:0,c:0},e:{r:0,c:0}};\n\t\t\t\t\t\t/* fake BoundSheet8 */\n\t\t\t\t\t\tvar fakebs8 = {pos: blob.l - length, name:cur_sheet};\n\t\t\t\t\t\tDirectory[fakebs8.pos] = fakebs8;\n\t\t\t\t\t\topts.snames.push(cur_sheet);\n\t\t\t\t\t}\n\t\t\t\t\telse cur_sheet = (Directory[s] || {name:\"\"}).name;\n\t\t\t\t\tif(val.dt == 0x20) out[\"!type\"] = \"chart\";\n\t\t\t\t\tif(val.dt == 0x40) out[\"!type\"] = \"macro\";\n\t\t\t\t\tmerges = [];\n\t\t\t\t\tobjects = [];\n\t\t\t\t\topts.arrayf = arrayf = [];\n\t\t\t\t\tcolinfo = []; rowinfo = [];\n\t\t\t\t\tseencol = false;\n\t\t\t\t\twsprops = {Hidden:(Directory[s]||{hs:0}).hs, name:cur_sheet };\n\t\t\t\t} break;\n\t\t\t\tcase 0x0203 /* Number */: case 0x0003 /* BIFF2NUM */: case 0x0002 /* BIFF2INT */: {\n\t\t\t\t\tif(out[\"!type\"] == \"chart\") if(options.dense ? (out[\"!data\"][val.r]||[])[val.c]: out[encode_col(val.c) + encode_row(val.r)]) ++val.c;\n\t\t\t\t\ttemp_val = ({ixfe: val.ixfe, XF: XFs[val.ixfe]||{}, v:val.val, t:'n'}/*:any*/);\n\t\t\t\t\tif(BIFF2Fmt > 0) temp_val.z = BIFF2FmtTable[(temp_val.ixfe>>8) & 0x3F];\n\t\t\t\t\tsafe_format_xf(temp_val, options, wb.opts.Date1904);\n\t\t\t\t\taddcell({c:val.c, r:val.r}, temp_val, options);\n\t\t\t\t} break;\n\t\t\t\tcase 0x0005: case 0x0205 /* BoolErr */: {\n\t\t\t\t\ttemp_val = ({ixfe: val.ixfe, XF: XFs[val.ixfe], v:val.val, t:val.t}/*:any*/);\n\t\t\t\t\tif(BIFF2Fmt > 0) temp_val.z = BIFF2FmtTable[(temp_val.ixfe>>8) & 0x3F];\n\t\t\t\t\tsafe_format_xf(temp_val, options, wb.opts.Date1904);\n\t\t\t\t\taddcell({c:val.c, r:val.r}, temp_val, options);\n\t\t\t\t} break;\n\t\t\t\tcase 0x027e /* RK */: {\n\t\t\t\t\ttemp_val = ({ixfe: val.ixfe, XF: XFs[val.ixfe], v:val.rknum, t:'n'}/*:any*/);\n\t\t\t\t\tif(BIFF2Fmt > 0) temp_val.z = BIFF2FmtTable[(temp_val.ixfe>>8) & 0x3F];\n\t\t\t\t\tsafe_format_xf(temp_val, options, wb.opts.Date1904);\n\t\t\t\t\taddcell({c:val.c, r:val.r}, temp_val, options);\n\t\t\t\t} break;\n\t\t\t\tcase 0x00bd /* MulRk */: {\n\t\t\t\t\tfor(var j = val.c; j <= val.C; ++j) {\n\t\t\t\t\t\tvar ixfe = val.rkrec[j-val.c][0];\n\t\t\t\t\t\ttemp_val= ({ixfe:ixfe, XF:XFs[ixfe], v:val.rkrec[j-val.c][1], t:'n'}/*:any*/);\n\t\t\t\t\t\tif(BIFF2Fmt > 0) temp_val.z = BIFF2FmtTable[(temp_val.ixfe>>8) & 0x3F];\n\t\t\t\t\t\tsafe_format_xf(temp_val, options, wb.opts.Date1904);\n\t\t\t\t\t\taddcell({c:j, r:val.r}, temp_val, options);\n\t\t\t\t\t}\n\t\t\t\t} break;\n\t\t\t\tcase 0x0006: case 0x0206: case 0x0406 /* Formula */: {\n\t\t\t\t\tif(val.val == 'String') { last_formula = val; break; }\n\t\t\t\t\ttemp_val = make_cell(val.val, val.cell.ixfe, val.tt);\n\t\t\t\t\ttemp_val.XF = XFs[temp_val.ixfe];\n\t\t\t\t\tif(options.cellFormula) {\n\t\t\t\t\t\tvar _f = val.formula;\n\t\t\t\t\t\tif(_f && _f[0] && _f[0][0] && _f[0][0][0] == 'PtgExp') {\n\t\t\t\t\t\t\tvar _fr = _f[0][0][1][0], _fc = _f[0][0][1][1];\n\t\t\t\t\t\t\tvar _fe = encode_cell({r:_fr, c:_fc});\n\t\t\t\t\t\t\tif(sharedf[_fe]) temp_val.f = \"\"+stringify_formula(val.formula,range,val.cell,supbooks, opts);\n\t\t\t\t\t\t\telse temp_val.F = ((options.dense ? (out[\"!data\"][_fr]||[])[_fc]: out[_fe]) || {}).F;\n\t\t\t\t\t\t} else temp_val.f = \"\"+stringify_formula(val.formula,range,val.cell,supbooks, opts);\n\t\t\t\t\t}\n\t\t\t\t\tif(BIFF2Fmt > 0) temp_val.z = BIFF2FmtTable[(temp_val.ixfe>>8) & 0x3F];\n\t\t\t\t\tsafe_format_xf(temp_val, options, wb.opts.Date1904);\n\t\t\t\t\taddcell(val.cell, temp_val, options);\n\t\t\t\t\tlast_formula = val;\n\t\t\t\t} break;\n\t\t\t\tcase 0x0007: case 0x0207 /* String */: {\n\t\t\t\t\tif(last_formula) { /* technically always true */\n\t\t\t\t\t\tlast_formula.val = val;\n\t\t\t\t\t\ttemp_val = make_cell(val, last_formula.cell.ixfe, 's');\n\t\t\t\t\t\ttemp_val.XF = XFs[temp_val.ixfe];\n\t\t\t\t\t\tif(options.cellFormula) {\n\t\t\t\t\t\t\ttemp_val.f = \"\"+stringify_formula(last_formula.formula, range, last_formula.cell, supbooks, opts);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif(BIFF2Fmt > 0) temp_val.z = BIFF2FmtTable[(temp_val.ixfe>>8) & 0x3F];\n\t\t\t\t\t\tsafe_format_xf(temp_val, options, wb.opts.Date1904);\n\t\t\t\t\t\taddcell(last_formula.cell, temp_val, options);\n\t\t\t\t\t\tlast_formula = null;\n\t\t\t\t\t} else throw new Error(\"String record expects Formula\");\n\t\t\t\t} break;\n\t\t\t\tcase 0x0021: case 0x0221 /* Array */: {\n\t\t\t\t\tarrayf.push(val);\n\t\t\t\t\tvar _arraystart = encode_cell(val[0].s);\n\t\t\t\t\tcc = options.dense ? (out[\"!data\"][val[0].s.r]||[])[val[0].s.c] : out[_arraystart];\n\t\t\t\t\tif(options.cellFormula && cc) {\n\t\t\t\t\t\tif(!last_formula) break; /* technically unreachable */\n\t\t\t\t\t\tif(!_arraystart || !cc) break;\n\t\t\t\t\t\tcc.f = \"\"+stringify_formula(val[1], range, val[0], supbooks, opts);\n\t\t\t\t\t\tcc.F = encode_range(val[0]);\n\t\t\t\t\t}\n\t\t\t\t} break;\n\t\t\t\tcase 0x04bc /* ShrFmla */: {\n\t\t\t\t\tif(!options.cellFormula) break;\n\t\t\t\t\tif(last_cell) {\n\t\t\t\t\t\t/* TODO: capture range */\n\t\t\t\t\t\tif(!last_formula) break; /* technically unreachable */\n\t\t\t\t\t\tsharedf[encode_cell(last_formula.cell)]= val[0];\n\t\t\t\t\t\tcc = options.dense ? (out[\"!data\"][last_formula.cell.r]||[])[last_formula.cell.c] : out[encode_cell(last_formula.cell)];\n\t\t\t\t\t\t(cc||{}).f = \"\"+stringify_formula(val[0], range, lastcell, supbooks, opts);\n\t\t\t\t\t}\n\t\t\t\t} break;\n\t\t\t\tcase 0x00fd /* LabelSst */:\n\t\t\t\t\ttemp_val=make_cell(sst[val.isst].t, val.ixfe, 's');\n\t\t\t\t\tif(sst[val.isst].h) temp_val.h = sst[val.isst].h;\n\t\t\t\t\ttemp_val.XF = XFs[temp_val.ixfe];\n\t\t\t\t\tif(BIFF2Fmt > 0) temp_val.z = BIFF2FmtTable[(temp_val.ixfe>>8) & 0x3F];\n\t\t\t\t\tsafe_format_xf(temp_val, options, wb.opts.Date1904);\n\t\t\t\t\taddcell({c:val.c, r:val.r}, temp_val, options);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 0x0201 /* Blank */: if(options.sheetStubs) {\n\t\t\t\t\ttemp_val = ({ixfe: val.ixfe, XF: XFs[val.ixfe], t:'z'}/*:any*/);\n\t\t\t\t\tif(BIFF2Fmt > 0) temp_val.z = BIFF2FmtTable[(temp_val.ixfe>>8) & 0x3F];\n\t\t\t\t\tsafe_format_xf(temp_val, options, wb.opts.Date1904);\n\t\t\t\t\taddcell({c:val.c, r:val.r}, temp_val, options);\n\t\t\t\t} break;\n\t\t\t\tcase 0x00be /* MulBlank */: if(options.sheetStubs) {\n\t\t\t\t\tfor(var _j = val.c; _j <= val.C; ++_j) {\n\t\t\t\t\t\tvar _ixfe = val.ixfe[_j-val.c];\n\t\t\t\t\t\ttemp_val= ({ixfe:_ixfe, XF:XFs[_ixfe], t:'z'}/*:any*/);\n\t\t\t\t\t\tif(BIFF2Fmt > 0) temp_val.z = BIFF2FmtTable[(temp_val.ixfe>>8) & 0x3F];\n\t\t\t\t\t\tsafe_format_xf(temp_val, options, wb.opts.Date1904);\n\t\t\t\t\t\taddcell({c:_j, r:val.r}, temp_val, options);\n\t\t\t\t\t}\n\t\t\t\t} break;\n\t\t\t\tcase 0x00d6 /* RString */:\n\t\t\t\tcase 0x0204 /* Label */: case 0x0004 /* BIFF2STR */:\n\t\t\t\t\ttemp_val=make_cell(val.val, val.ixfe, 's');\n\t\t\t\t\ttemp_val.XF = XFs[temp_val.ixfe];\n\t\t\t\t\tif(BIFF2Fmt > 0) temp_val.z = BIFF2FmtTable[(temp_val.ixfe>>8) & 0x3F];\n\t\t\t\t\tsafe_format_xf(temp_val, options, wb.opts.Date1904);\n\t\t\t\t\taddcell({c:val.c, r:val.r}, temp_val, options);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 0x0000: case 0x0200 /* Dimensions */: {\n\t\t\t\t\tif(file_depth === 1) range = val; /* TODO: stack */\n\t\t\t\t} break;\n\t\t\t\tcase 0x00fc /* SST */: {\n\t\t\t\t\tsst = val;\n\t\t\t\t} break;\n\t\t\t\tcase 0x041e /* Format */: { /* val = [id, fmt] */\n\t\t\t\t\tif(opts.biff == 4) {\n\t\t\t\t\t\tBIFF2FmtTable[BIFF2Fmt++] = val[1];\n\t\t\t\t\t\tfor(var b4idx = 0; b4idx < BIFF2Fmt + 163; ++b4idx) if(table_fmt[b4idx] == val[1]) break;\n\t\t\t\t\t\tif(b4idx >= 163) SSF__load(val[1], BIFF2Fmt + 163);\n\t\t\t\t\t}\n\t\t\t\t\telse SSF__load(val[1], val[0]);\n\t\t\t\t} break;\n\t\t\t\tcase 0x001e /* BIFF2FORMAT */: {\n\t\t\t\t\tBIFF2FmtTable[BIFF2Fmt++] = val;\n\t\t\t\t\tfor(var b2idx = 0; b2idx < BIFF2Fmt + 163; ++b2idx) if(table_fmt[b2idx] == val) break;\n\t\t\t\t\tif(b2idx >= 163) SSF__load(val, BIFF2Fmt + 163);\n\t\t\t\t} break;\n\n\t\t\t\tcase 0x00e5 /* MergeCells */: merges = merges.concat(val); break;\n\n\t\t\t\tcase 0x005d /* Obj */: objects[val.cmo[0]] = opts.lastobj = val; break;\n\t\t\t\tcase 0x01b6 /* TxO */: opts.lastobj.TxO = val; break;\n\t\t\t\tcase 0x007f /* ImData */: opts.lastobj.ImData = val; break;\n\n\t\t\t\tcase 0x01b8 /* HLink */: {\n\t\t\t\t\tfor(rngR = val[0].s.r; rngR <= val[0].e.r; ++rngR)\n\t\t\t\t\t\tfor(rngC = val[0].s.c; rngC <= val[0].e.c; ++rngC) {\n\t\t\t\t\t\t\tcc = options.dense ? (out[\"!data\"][rngR]||[])[rngC] : out[encode_cell({c:rngC,r:rngR})];\n\t\t\t\t\t\t\tif(cc) cc.l = val[1];\n\t\t\t\t\t\t}\n\t\t\t\t} break;\n\t\t\t\tcase 0x0800 /* HLinkTooltip */: {\n\t\t\t\t\tfor(rngR = val[0].s.r; rngR <= val[0].e.r; ++rngR)\n\t\t\t\t\t\tfor(rngC = val[0].s.c; rngC <= val[0].e.c; ++rngC) {\n\t\t\t\t\t\t\tcc = options.dense ? (out[\"!data\"][rngR]||[])[rngC] : out[encode_cell({c:rngC,r:rngR})];\n\t\t\t\t\t\t\tif(cc && cc.l) cc.l.Tooltip = val[1];\n\t\t\t\t\t\t\t}\n\t\t\t\t} break;\n\t\t\t\tcase 0x001c /* Note */: {\n\t\t\t\t\tif(opts.biff <= 5 && opts.biff >= 2) break; /* TODO: BIFF5 */\n\t\t\t\t\tcc = options.dense ? (out[\"!data\"][val[0].r]||[])[val[0].c] : out[encode_cell(val[0])];\n\t\t\t\t\tvar noteobj = objects[val[2]];\n\t\t\t\t\tif(!cc) {\n\t\t\t\t\t\tif(options.dense) {\n\t\t\t\t\t\t\tif(!out[\"!data\"][val[0].r]) out[\"!data\"][val[0].r] = [];\n\t\t\t\t\t\t\tcc = out[\"!data\"][val[0].r][val[0].c] = ({t:\"z\"}/*:any*/);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tcc = out[encode_cell(val[0])] = ({t:\"z\"}/*:any*/);\n\t\t\t\t\t\t}\n\t\t\t\t\t\trange.e.r = Math.max(range.e.r, val[0].r);\n\t\t\t\t\t\trange.s.r = Math.min(range.s.r, val[0].r);\n\t\t\t\t\t\trange.e.c = Math.max(range.e.c, val[0].c);\n\t\t\t\t\t\trange.s.c = Math.min(range.s.c, val[0].c);\n\t\t\t\t\t}\n\t\t\t\t\tif(!cc.c) cc.c = [];\n\t\t\t\t\tcmnt = {a:val[1],t:noteobj.TxO.t};\n\t\t\t\t\tcc.c.push(cmnt);\n\t\t\t\t} break;\n\t\t\t\tcase 0x087d /* XFExt */: update_xfext(XFs[val.ixfe], val.ext); break;\n\t\t\t\tcase 0x007d /* ColInfo */: {\n\t\t\t\t\tif(!opts.cellStyles) break;\n\t\t\t\t\twhile(val.e >= val.s) {\n\t\t\t\t\t\tcolinfo[val.e--] = { width: val.w/256, level: (val.level || 0), hidden: !!(val.flags & 1) };\n\t\t\t\t\t\tif(!seencol) { seencol = true; find_mdw_colw(val.w/256); }\n\t\t\t\t\t\tprocess_col(colinfo[val.e+1]);\n\t\t\t\t\t}\n\t\t\t\t} break;\n\t\t\t\tcase 0x0208 /* Row */: {\n\t\t\t\t\tvar rowobj = {};\n\t\t\t\t\tif(val.level != null) { rowinfo[val.r] = rowobj; rowobj.level = val.level; }\n\t\t\t\t\tif(val.hidden) { rowinfo[val.r] = rowobj; rowobj.hidden = true; }\n\t\t\t\t\tif(val.hpt) {\n\t\t\t\t\t\trowinfo[val.r] = rowobj;\n\t\t\t\t\t\trowobj.hpt = val.hpt; rowobj.hpx = pt2px(val.hpt);\n\t\t\t\t\t}\n\t\t\t\t} break;\n\t\t\t\tcase 0x0026 /* LeftMargin */:\n\t\t\t\tcase 0x0027 /* RightMargin */:\n\t\t\t\tcase 0x0028 /* TopMargin */:\n\t\t\t\tcase 0x0029 /* BottomMargin */:\n\t\t\t\t\tif(!out['!margins']) default_margins(out['!margins'] = {});\n\t\t\t\t\tout['!margins'][({0x26: \"left\", 0x27:\"right\", 0x28:\"top\", 0x29:\"bottom\"})[RecordType]] = val;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 0x00a1 /* Setup */: // TODO\n\t\t\t\t\tif(!out['!margins']) default_margins(out['!margins'] = {});\n\t\t\t\t\tout['!margins'].header = val.header;\n\t\t\t\t\tout['!margins'].footer = val.footer;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 0x023e /* Window2 */: // TODO\n\t\t\t\t\t// $FlowIgnore\n\t\t\t\t\tif(val.RTL) Workbook.Views[0].RTL = true;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 0x0092 /* Palette */: palette = val; break;\n\t\t\t\tcase 0x0896 /* Theme */: themes = val; break;\n\t\t\t\tcase 0x008c /* Country */: country = val; break;\n\t\t\t\tcase 0x01ba /* CodeName */: {\n\t\t\t\t\t/*:: if(!Workbook.WBProps) Workbook.WBProps = {}; */\n\t\t\t\t\tif(!cur_sheet) Workbook.WBProps.CodeName = val || \"ThisWorkbook\";\n\t\t\t\t\telse wsprops.CodeName = val || wsprops.name;\n\t\t\t\t} break;\n\t\t\t}\n\t\t} else {\n\t\t\tif(!R) console.error(\"Missing Info for XLS Record 0x\" + RecordType.toString(16));\n\t\t\tblob.l += length;\n\t\t}\n\t}\n\twb.SheetNames=keys(Directory).sort(function(a,b) { return Number(a) - Number(b); }).map(function(x){return Directory[x].name;});\n\tif(!options.bookSheets) wb.Sheets=Sheets;\n\tif(!wb.SheetNames.length && Preamble[\"!ref\"]) {\n\t\twb.SheetNames.push(\"Sheet1\");\n\t\t/*jshint -W069 */\n\t\tif(wb.Sheets) wb.Sheets[\"Sheet1\"] = Preamble;\n\t\t/*jshint +W069 */\n\t} else wb.Preamble=Preamble;\n\tif(wb.Sheets) FilterDatabases.forEach(function(r,i) { wb.Sheets[wb.SheetNames[i]]['!autofilter'] = r; });\n\twb.Strings = sst;\n\twb.SSF = dup(table_fmt);\n\tif(opts.enc) wb.Encryption = opts.enc;\n\tif(themes) wb.Themes = themes;\n\twb.Metadata = {};\n\tif(country !== undefined) wb.Metadata.Country = country;\n\tif(supbooks.names.length > 0) Workbook.Names = supbooks.names;\n\twb.Workbook = Workbook;\n\treturn wb;\n}\n\n/* TODO: split props*/\nvar PSCLSID = {\n\tSI: \"e0859ff2f94f6810ab9108002b27b3d9\",\n\tDSI: \"02d5cdd59c2e1b10939708002b2cf9ae\",\n\tUDI: \"05d5cdd59c2e1b10939708002b2cf9ae\"\n};\nfunction parse_xls_props(cfb/*:CFBContainer*/, props, o) {\n\t/* [MS-OSHARED] 2.3.3.2.2 Document Summary Information Property Set */\n\tvar DSI = CFB.find(cfb, '/!DocumentSummaryInformation');\n\tif(DSI && DSI.size > 0) try {\n\t\tvar DocSummary = parse_PropertySetStream(DSI, DocSummaryPIDDSI, PSCLSID.DSI);\n\t\tfor(var d in DocSummary) props[d] = DocSummary[d];\n\t} catch(e) {if(o.WTF) throw e;/* empty */}\n\n\t/* [MS-OSHARED] 2.3.3.2.1 Summary Information Property Set*/\n\tvar SI = CFB.find(cfb, '/!SummaryInformation');\n\tif(SI && SI.size > 0) try {\n\t\tvar Summary = parse_PropertySetStream(SI, SummaryPIDSI, PSCLSID.SI);\n\t\tfor(var s in Summary) if(props[s] == null) props[s] = Summary[s];\n\t} catch(e) {if(o.WTF) throw e;/* empty */}\n\n\tif(props.HeadingPairs && props.TitlesOfParts) {\n\t\tload_props_pairs(props.HeadingPairs, props.TitlesOfParts, props, o);\n\t\tdelete props.HeadingPairs; delete props.TitlesOfParts;\n\t}\n}\nfunction write_xls_props(wb/*:Workbook*/, cfb/*:CFBContainer*/) {\n\tvar DSEntries = [], SEntries = [], CEntries = [];\n\tvar i = 0, Keys;\n\tvar DocSummaryRE/*:{[key:string]:string}*/ = evert_key(DocSummaryPIDDSI, \"n\");\n\tvar SummaryRE/*:{[key:string]:string}*/ = evert_key(SummaryPIDSI, \"n\");\n\tif(wb.Props) {\n\t\tKeys = keys(wb.Props);\n\t\t// $FlowIgnore\n\t\tfor(i = 0; i < Keys.length; ++i) (Object.prototype.hasOwnProperty.call(DocSummaryRE, Keys[i]) ? DSEntries : Object.prototype.hasOwnProperty.call(SummaryRE, Keys[i]) ? SEntries : CEntries).push([Keys[i], wb.Props[Keys[i]]]);\n\t}\n\tif(wb.Custprops) {\n\t\tKeys = keys(wb.Custprops);\n\t\t// $FlowIgnore\n\t\tfor(i = 0; i < Keys.length; ++i) if(!Object.prototype.hasOwnProperty.call((wb.Props||{}), Keys[i])) (Object.prototype.hasOwnProperty.call(DocSummaryRE, Keys[i]) ? DSEntries : Object.prototype.hasOwnProperty.call(SummaryRE, Keys[i]) ? SEntries : CEntries).push([Keys[i], wb.Custprops[Keys[i]]]);\n\t}\n\tvar CEntries2 = [];\n\tfor(i = 0; i < CEntries.length; ++i) {\n\t\tif(XLSPSSkip.indexOf(CEntries[i][0]) > -1 || PseudoPropsPairs.indexOf(CEntries[i][0]) > -1) continue;\n\t\tif(CEntries[i][1] == null) continue;\n\t\tCEntries2.push(CEntries[i]);\n\t}\n\tif(SEntries.length) CFB.utils.cfb_add(cfb, \"/\\u0005SummaryInformation\", write_PropertySetStream(SEntries, PSCLSID.SI, SummaryRE, SummaryPIDSI));\n\tif(DSEntries.length || CEntries2.length) CFB.utils.cfb_add(cfb, \"/\\u0005DocumentSummaryInformation\", write_PropertySetStream(DSEntries, PSCLSID.DSI, DocSummaryRE, DocSummaryPIDDSI, CEntries2.length ? CEntries2 : null, PSCLSID.UDI));\n}\n\nfunction parse_xlscfb(cfb/*:any*/, options/*:?ParseOpts*/)/*:Workbook*/ {\nif(!options) options = {};\nfix_read_opts(options);\nreset_cp();\nif(options.codepage) set_ansi(options.codepage);\nvar CompObj/*:?CFBEntry*/, WB/*:?any*/;\nif(cfb.FullPaths) {\n\tif(CFB.find(cfb, '/encryption')) throw new Error(\"File is password-protected\");\n\tCompObj = CFB.find(cfb, '!CompObj');\n\tWB = CFB.find(cfb, '/Workbook') || CFB.find(cfb, '/Book');\n} else {\n\tswitch(options.type) {\n\t\tcase 'base64': cfb = s2a(Base64_decode(cfb)); break;\n\t\tcase 'binary': cfb = s2a(cfb); break;\n\t\tcase 'buffer': break;\n\t\tcase 'array': if(!Array.isArray(cfb)) cfb = Array.prototype.slice.call(cfb); break;\n\t}\n\tprep_blob(cfb, 0);\n\tWB = ({content: cfb}/*:any*/);\n}\nvar /*::CompObjP, */WorkbookP/*:: :Workbook = XLSX.utils.book_new(); */;\n\nvar _data/*:?any*/;\nif(CompObj) /*::CompObjP = */parse_compobj(CompObj);\nif(options.bookProps && !options.bookSheets) WorkbookP = ({}/*:any*/);\nelse/*:: if(cfb instanceof CFBContainer) */ {\n\tvar T = has_buf ? 'buffer' : 'array';\n\tif(WB && WB.content) WorkbookP = parse_workbook(WB.content, options);\n\t/* Quattro Pro 7-8 */\n\telse if((_data=CFB.find(cfb, 'PerfectOffice_MAIN')) && _data.content) WorkbookP = WK_.to_workbook(_data.content, (options.type = T, options));\n\t/* Quattro Pro 9 */\n\telse if((_data=CFB.find(cfb, 'NativeContent_MAIN')) && _data.content) WorkbookP = WK_.to_workbook(_data.content, (options.type = T, options));\n\t/* Works 4 for Mac */\n\telse if((_data=CFB.find(cfb, 'MN0')) && _data.content) throw new Error(\"Unsupported Works 4 for Mac file\");\n\telse throw new Error(\"Cannot find Workbook stream\");\n\tif(options.bookVBA && cfb.FullPaths && CFB.find(cfb, '/_VBA_PROJECT_CUR/VBA/dir')) WorkbookP.vbaraw = make_vba_xls(cfb);\n}\n\nvar props = {};\nif(cfb.FullPaths) parse_xls_props(/*::((*/cfb/*:: :any):CFBContainer)*/, props, options);\n\nWorkbookP.Props = WorkbookP.Custprops = props; /* TODO: split up properties */\nif(options.bookFiles) WorkbookP.cfb = cfb;\n/*WorkbookP.CompObjP = CompObjP; // TODO: storage? */\nreturn WorkbookP;\n}\n\n\nfunction write_xlscfb(wb/*:Workbook*/, opts/*:WriteOpts*/)/*:CFBContainer*/ {\n\tvar o = opts || {};\n\tvar cfb = CFB.utils.cfb_new({root:\"R\"});\n\tvar wbpath = \"/Workbook\";\n\tswitch(o.bookType || \"xls\") {\n\t\tcase \"xls\": o.bookType = \"biff8\";\n\t\t/* falls through */\n\t\tcase \"xla\": if(!o.bookType) o.bookType = \"xla\";\n\t\t/* falls through */\n\t\tcase \"biff8\": wbpath = \"/Workbook\"; o.biff = 8; break;\n\t\tcase \"biff5\": wbpath = \"/Book\"; o.biff = 5; break;\n\t\tdefault: throw new Error(\"invalid type \" + o.bookType + \" for XLS CFB\");\n\t}\n\tCFB.utils.cfb_add(cfb, wbpath, write_biff_buf(wb, o));\n\tif(o.biff == 8 && (wb.Props || wb.Custprops)) write_xls_props(wb, cfb);\n\t// TODO: SI, DSI, CO\n\tif(o.biff == 8 && wb.vbaraw) fill_vba_xls(cfb, CFB.read(wb.vbaraw, {type: typeof wb.vbaraw == \"string\" ? \"binary\" : \"buffer\"}));\n\treturn cfb;\n}\n/* [MS-XLSB] 2.3 Record Enumeration */\nvar XLSBRecordEnum = {\n\t/*::[*/0x0000/*::]*/: { /* n:\"BrtRowHdr\", */ f:parse_BrtRowHdr },\n\t/*::[*/0x0001/*::]*/: { /* n:\"BrtCellBlank\", */ f:parse_BrtCellBlank },\n\t/*::[*/0x0002/*::]*/: { /* n:\"BrtCellRk\", */ f:parse_BrtCellRk },\n\t/*::[*/0x0003/*::]*/: { /* n:\"BrtCellError\", */ f:parse_BrtCellError },\n\t/*::[*/0x0004/*::]*/: { /* n:\"BrtCellBool\", */ f:parse_BrtCellBool },\n\t/*::[*/0x0005/*::]*/: { /* n:\"BrtCellReal\", */ f:parse_BrtCellReal },\n\t/*::[*/0x0006/*::]*/: { /* n:\"BrtCellSt\", */ f:parse_BrtCellSt },\n\t/*::[*/0x0007/*::]*/: { /* n:\"BrtCellIsst\", */ f:parse_BrtCellIsst },\n\t/*::[*/0x0008/*::]*/: { /* n:\"BrtFmlaString\", */ f:parse_BrtFmlaString },\n\t/*::[*/0x0009/*::]*/: { /* n:\"BrtFmlaNum\", */ f:parse_BrtFmlaNum },\n\t/*::[*/0x000A/*::]*/: { /* n:\"BrtFmlaBool\", */ f:parse_BrtFmlaBool },\n\t/*::[*/0x000B/*::]*/: { /* n:\"BrtFmlaError\", */ f:parse_BrtFmlaError },\n\t/*::[*/0x000C/*::]*/: { /* n:\"BrtShortBlank\", */ f:parse_BrtShortBlank },\n\t/*::[*/0x000D/*::]*/: { /* n:\"BrtShortRk\", */ f:parse_BrtShortRk },\n\t/*::[*/0x000E/*::]*/: { /* n:\"BrtShortError\", */ f:parse_BrtShortError },\n\t/*::[*/0x000F/*::]*/: { /* n:\"BrtShortBool\", */ f:parse_BrtShortBool },\n\t/*::[*/0x0010/*::]*/: { /* n:\"BrtShortReal\", */ f:parse_BrtShortReal },\n\t/*::[*/0x0011/*::]*/: { /* n:\"BrtShortSt\", */ f:parse_BrtShortSt },\n\t/*::[*/0x0012/*::]*/: { /* n:\"BrtShortIsst\", */ f:parse_BrtShortIsst },\n\t/*::[*/0x0013/*::]*/: { /* n:\"BrtSSTItem\", */ f:parse_RichStr },\n\t/*::[*/0x0014/*::]*/: { /* n:\"BrtPCDIMissing\" */ },\n\t/*::[*/0x0015/*::]*/: { /* n:\"BrtPCDINumber\" */ },\n\t/*::[*/0x0016/*::]*/: { /* n:\"BrtPCDIBoolean\" */ },\n\t/*::[*/0x0017/*::]*/: { /* n:\"BrtPCDIError\" */ },\n\t/*::[*/0x0018/*::]*/: { /* n:\"BrtPCDIString\" */ },\n\t/*::[*/0x0019/*::]*/: { /* n:\"BrtPCDIDatetime\" */ },\n\t/*::[*/0x001A/*::]*/: { /* n:\"BrtPCDIIndex\" */ },\n\t/*::[*/0x001B/*::]*/: { /* n:\"BrtPCDIAMissing\" */ },\n\t/*::[*/0x001C/*::]*/: { /* n:\"BrtPCDIANumber\" */ },\n\t/*::[*/0x001D/*::]*/: { /* n:\"BrtPCDIABoolean\" */ },\n\t/*::[*/0x001E/*::]*/: { /* n:\"BrtPCDIAError\" */ },\n\t/*::[*/0x001F/*::]*/: { /* n:\"BrtPCDIAString\" */ },\n\t/*::[*/0x0020/*::]*/: { /* n:\"BrtPCDIADatetime\" */ },\n\t/*::[*/0x0021/*::]*/: { /* n:\"BrtPCRRecord\" */ },\n\t/*::[*/0x0022/*::]*/: { /* n:\"BrtPCRRecordDt\" */ },\n\t/*::[*/0x0023/*::]*/: { /* n:\"BrtFRTBegin\", */ T:1 },\n\t/*::[*/0x0024/*::]*/: { /* n:\"BrtFRTEnd\", */ T:-1 },\n\t/*::[*/0x0025/*::]*/: { /* n:\"BrtACBegin\", */ T:1 },\n\t/*::[*/0x0026/*::]*/: { /* n:\"BrtACEnd\", */ T:-1 },\n\t/*::[*/0x0027/*::]*/: { /* n:\"BrtName\", */ f:parse_BrtName },\n\t/*::[*/0x0028/*::]*/: { /* n:\"BrtIndexRowBlock\" */ },\n\t/*::[*/0x002A/*::]*/: { /* n:\"BrtIndexBlock\" */ },\n\t/*::[*/0x002B/*::]*/: { /* n:\"BrtFont\", */ f:parse_BrtFont },\n\t/*::[*/0x002C/*::]*/: { /* n:\"BrtFmt\", */ f:parse_BrtFmt },\n\t/*::[*/0x002D/*::]*/: { /* n:\"BrtFill\", */ f:parse_BrtFill },\n\t/*::[*/0x002E/*::]*/: { /* n:\"BrtBorder\", */ f:parse_BrtBorder },\n\t/*::[*/0x002F/*::]*/: { /* n:\"BrtXF\", */ f:parse_BrtXF },\n\t/*::[*/0x0030/*::]*/: { /* n:\"BrtStyle\" */ },\n\t/*::[*/0x0031/*::]*/: { /* n:\"BrtCellMeta\", */ f:parse_Int32LE },\n\t/*::[*/0x0032/*::]*/: { /* n:\"BrtValueMeta\" */ },\n\t/*::[*/0x0033/*::]*/: { /* n:\"BrtMdb\" */ f:parse_BrtMdb },\n\t/*::[*/0x0034/*::]*/: { /* n:\"BrtBeginFmd\", */ T:1 },\n\t/*::[*/0x0035/*::]*/: { /* n:\"BrtEndFmd\", */ T:-1 },\n\t/*::[*/0x0036/*::]*/: { /* n:\"BrtBeginMdx\", */ T:1 },\n\t/*::[*/0x0037/*::]*/: { /* n:\"BrtEndMdx\", */ T:-1 },\n\t/*::[*/0x0038/*::]*/: { /* n:\"BrtBeginMdxTuple\", */ T:1 },\n\t/*::[*/0x0039/*::]*/: { /* n:\"BrtEndMdxTuple\", */ T:-1 },\n\t/*::[*/0x003A/*::]*/: { /* n:\"BrtMdxMbrIstr\" */ },\n\t/*::[*/0x003B/*::]*/: { /* n:\"BrtStr\" */ },\n\t/*::[*/0x003C/*::]*/: { /* n:\"BrtColInfo\", */ f:parse_ColInfo },\n\t/*::[*/0x003E/*::]*/: { /* n:\"BrtCellRString\", */ f:parse_BrtCellRString },\n\t/*::[*/0x003F/*::]*/: { /* n:\"BrtCalcChainItem$\", */ f:parse_BrtCalcChainItem$ },\n\t/*::[*/0x0040/*::]*/: { /* n:\"BrtDVal\", */ f:parse_BrtDVal },\n\t/*::[*/0x0041/*::]*/: { /* n:\"BrtSxvcellNum\" */ },\n\t/*::[*/0x0042/*::]*/: { /* n:\"BrtSxvcellStr\" */ },\n\t/*::[*/0x0043/*::]*/: { /* n:\"BrtSxvcellBool\" */ },\n\t/*::[*/0x0044/*::]*/: { /* n:\"BrtSxvcellErr\" */ },\n\t/*::[*/0x0045/*::]*/: { /* n:\"BrtSxvcellDate\" */ },\n\t/*::[*/0x0046/*::]*/: { /* n:\"BrtSxvcellNil\" */ },\n\t/*::[*/0x0080/*::]*/: { /* n:\"BrtFileVersion\" */ },\n\t/*::[*/0x0081/*::]*/: { /* n:\"BrtBeginSheet\", */ T:1 },\n\t/*::[*/0x0082/*::]*/: { /* n:\"BrtEndSheet\", */ T:-1 },\n\t/*::[*/0x0083/*::]*/: { /* n:\"BrtBeginBook\", */ T:1, f:parsenoop, p:0 },\n\t/*::[*/0x0084/*::]*/: { /* n:\"BrtEndBook\", */ T:-1 },\n\t/*::[*/0x0085/*::]*/: { /* n:\"BrtBeginWsViews\", */ T:1 },\n\t/*::[*/0x0086/*::]*/: { /* n:\"BrtEndWsViews\", */ T:-1 },\n\t/*::[*/0x0087/*::]*/: { /* n:\"BrtBeginBookViews\", */ T:1 },\n\t/*::[*/0x0088/*::]*/: { /* n:\"BrtEndBookViews\", */ T:-1 },\n\t/*::[*/0x0089/*::]*/: { /* n:\"BrtBeginWsView\", */ T:1, f:parse_BrtBeginWsView },\n\t/*::[*/0x008A/*::]*/: { /* n:\"BrtEndWsView\", */ T:-1 },\n\t/*::[*/0x008B/*::]*/: { /* n:\"BrtBeginCsViews\", */ T:1 },\n\t/*::[*/0x008C/*::]*/: { /* n:\"BrtEndCsViews\", */ T:-1 },\n\t/*::[*/0x008D/*::]*/: { /* n:\"BrtBeginCsView\", */ T:1 },\n\t/*::[*/0x008E/*::]*/: { /* n:\"BrtEndCsView\", */ T:-1 },\n\t/*::[*/0x008F/*::]*/: { /* n:\"BrtBeginBundleShs\", */ T:1 },\n\t/*::[*/0x0090/*::]*/: { /* n:\"BrtEndBundleShs\", */ T:-1 },\n\t/*::[*/0x0091/*::]*/: { /* n:\"BrtBeginSheetData\", */ T:1 },\n\t/*::[*/0x0092/*::]*/: { /* n:\"BrtEndSheetData\", */ T:-1 },\n\t/*::[*/0x0093/*::]*/: { /* n:\"BrtWsProp\", */ f:parse_BrtWsProp },\n\t/*::[*/0x0094/*::]*/: { /* n:\"BrtWsDim\", */ f:parse_BrtWsDim, p:16 },\n\t/*::[*/0x0097/*::]*/: { /* n:\"BrtPane\", */ f:parse_BrtPane },\n\t/*::[*/0x0098/*::]*/: { /* n:\"BrtSel\" */ },\n\t/*::[*/0x0099/*::]*/: { /* n:\"BrtWbProp\", */ f:parse_BrtWbProp },\n\t/*::[*/0x009A/*::]*/: { /* n:\"BrtWbFactoid\" */ },\n\t/*::[*/0x009B/*::]*/: { /* n:\"BrtFileRecover\" */ },\n\t/*::[*/0x009C/*::]*/: { /* n:\"BrtBundleSh\", */ f:parse_BrtBundleSh },\n\t/*::[*/0x009D/*::]*/: { /* n:\"BrtCalcProp\" */ },\n\t/*::[*/0x009E/*::]*/: { /* n:\"BrtBookView\" */ },\n\t/*::[*/0x009F/*::]*/: { /* n:\"BrtBeginSst\", */ T:1, f:parse_BrtBeginSst },\n\t/*::[*/0x00A0/*::]*/: { /* n:\"BrtEndSst\", */ T:-1 },\n\t/*::[*/0x00A1/*::]*/: { /* n:\"BrtBeginAFilter\", */ T:1, f:parse_UncheckedRfX },\n\t/*::[*/0x00A2/*::]*/: { /* n:\"BrtEndAFilter\", */ T:-1 },\n\t/*::[*/0x00A3/*::]*/: { /* n:\"BrtBeginFilterColumn\", */ T:1 },\n\t/*::[*/0x00A4/*::]*/: { /* n:\"BrtEndFilterColumn\", */ T:-1 },\n\t/*::[*/0x00A5/*::]*/: { /* n:\"BrtBeginFilters\", */ T:1 },\n\t/*::[*/0x00A6/*::]*/: { /* n:\"BrtEndFilters\", */ T:-1 },\n\t/*::[*/0x00A7/*::]*/: { /* n:\"BrtFilter\" */ },\n\t/*::[*/0x00A8/*::]*/: { /* n:\"BrtColorFilter\" */ },\n\t/*::[*/0x00A9/*::]*/: { /* n:\"BrtIconFilter\" */ },\n\t/*::[*/0x00AA/*::]*/: { /* n:\"BrtTop10Filter\" */ },\n\t/*::[*/0x00AB/*::]*/: { /* n:\"BrtDynamicFilter\" */ },\n\t/*::[*/0x00AC/*::]*/: { /* n:\"BrtBeginCustomFilters\", */ T:1 },\n\t/*::[*/0x00AD/*::]*/: { /* n:\"BrtEndCustomFilters\", */ T:-1 },\n\t/*::[*/0x00AE/*::]*/: { /* n:\"BrtCustomFilter\" */ },\n\t/*::[*/0x00AF/*::]*/: { /* n:\"BrtAFilterDateGroupItem\" */ },\n\t/*::[*/0x00B0/*::]*/: { /* n:\"BrtMergeCell\", */ f:parse_BrtMergeCell },\n\t/*::[*/0x00B1/*::]*/: { /* n:\"BrtBeginMergeCells\", */ T:1 },\n\t/*::[*/0x00B2/*::]*/: { /* n:\"BrtEndMergeCells\", */ T:-1 },\n\t/*::[*/0x00B3/*::]*/: { /* n:\"BrtBeginPivotCacheDef\", */ T:1 },\n\t/*::[*/0x00B4/*::]*/: { /* n:\"BrtEndPivotCacheDef\", */ T:-1 },\n\t/*::[*/0x00B5/*::]*/: { /* n:\"BrtBeginPCDFields\", */ T:1 },\n\t/*::[*/0x00B6/*::]*/: { /* n:\"BrtEndPCDFields\", */ T:-1 },\n\t/*::[*/0x00B7/*::]*/: { /* n:\"BrtBeginPCDField\", */ T:1 },\n\t/*::[*/0x00B8/*::]*/: { /* n:\"BrtEndPCDField\", */ T:-1 },\n\t/*::[*/0x00B9/*::]*/: { /* n:\"BrtBeginPCDSource\", */ T:1 },\n\t/*::[*/0x00BA/*::]*/: { /* n:\"BrtEndPCDSource\", */ T:-1 },\n\t/*::[*/0x00BB/*::]*/: { /* n:\"BrtBeginPCDSRange\", */ T:1 },\n\t/*::[*/0x00BC/*::]*/: { /* n:\"BrtEndPCDSRange\", */ T:-1 },\n\t/*::[*/0x00BD/*::]*/: { /* n:\"BrtBeginPCDFAtbl\", */ T:1 },\n\t/*::[*/0x00BE/*::]*/: { /* n:\"BrtEndPCDFAtbl\", */ T:-1 },\n\t/*::[*/0x00BF/*::]*/: { /* n:\"BrtBeginPCDIRun\", */ T:1 },\n\t/*::[*/0x00C0/*::]*/: { /* n:\"BrtEndPCDIRun\", */ T:-1 },\n\t/*::[*/0x00C1/*::]*/: { /* n:\"BrtBeginPivotCacheRecords\", */ T:1 },\n\t/*::[*/0x00C2/*::]*/: { /* n:\"BrtEndPivotCacheRecords\", */ T:-1 },\n\t/*::[*/0x00C3/*::]*/: { /* n:\"BrtBeginPCDHierarchies\", */ T:1 },\n\t/*::[*/0x00C4/*::]*/: { /* n:\"BrtEndPCDHierarchies\", */ T:-1 },\n\t/*::[*/0x00C5/*::]*/: { /* n:\"BrtBeginPCDHierarchy\", */ T:1 },\n\t/*::[*/0x00C6/*::]*/: { /* n:\"BrtEndPCDHierarchy\", */ T:-1 },\n\t/*::[*/0x00C7/*::]*/: { /* n:\"BrtBeginPCDHFieldsUsage\", */ T:1 },\n\t/*::[*/0x00C8/*::]*/: { /* n:\"BrtEndPCDHFieldsUsage\", */ T:-1 },\n\t/*::[*/0x00C9/*::]*/: { /* n:\"BrtBeginExtConnection\", */ T:1 },\n\t/*::[*/0x00CA/*::]*/: { /* n:\"BrtEndExtConnection\", */ T:-1 },\n\t/*::[*/0x00CB/*::]*/: { /* n:\"BrtBeginECDbProps\", */ T:1 },\n\t/*::[*/0x00CC/*::]*/: { /* n:\"BrtEndECDbProps\", */ T:-1 },\n\t/*::[*/0x00CD/*::]*/: { /* n:\"BrtBeginECOlapProps\", */ T:1 },\n\t/*::[*/0x00CE/*::]*/: { /* n:\"BrtEndECOlapProps\", */ T:-1 },\n\t/*::[*/0x00CF/*::]*/: { /* n:\"BrtBeginPCDSConsol\", */ T:1 },\n\t/*::[*/0x00D0/*::]*/: { /* n:\"BrtEndPCDSConsol\", */ T:-1 },\n\t/*::[*/0x00D1/*::]*/: { /* n:\"BrtBeginPCDSCPages\", */ T:1 },\n\t/*::[*/0x00D2/*::]*/: { /* n:\"BrtEndPCDSCPages\", */ T:-1 },\n\t/*::[*/0x00D3/*::]*/: { /* n:\"BrtBeginPCDSCPage\", */ T:1 },\n\t/*::[*/0x00D4/*::]*/: { /* n:\"BrtEndPCDSCPage\", */ T:-1 },\n\t/*::[*/0x00D5/*::]*/: { /* n:\"BrtBeginPCDSCPItem\", */ T:1 },\n\t/*::[*/0x00D6/*::]*/: { /* n:\"BrtEndPCDSCPItem\", */ T:-1 },\n\t/*::[*/0x00D7/*::]*/: { /* n:\"BrtBeginPCDSCSets\", */ T:1 },\n\t/*::[*/0x00D8/*::]*/: { /* n:\"BrtEndPCDSCSets\", */ T:-1 },\n\t/*::[*/0x00D9/*::]*/: { /* n:\"BrtBeginPCDSCSet\", */ T:1 },\n\t/*::[*/0x00DA/*::]*/: { /* n:\"BrtEndPCDSCSet\", */ T:-1 },\n\t/*::[*/0x00DB/*::]*/: { /* n:\"BrtBeginPCDFGroup\", */ T:1 },\n\t/*::[*/0x00DC/*::]*/: { /* n:\"BrtEndPCDFGroup\", */ T:-1 },\n\t/*::[*/0x00DD/*::]*/: { /* n:\"BrtBeginPCDFGItems\", */ T:1 },\n\t/*::[*/0x00DE/*::]*/: { /* n:\"BrtEndPCDFGItems\", */ T:-1 },\n\t/*::[*/0x00DF/*::]*/: { /* n:\"BrtBeginPCDFGRange\", */ T:1 },\n\t/*::[*/0x00E0/*::]*/: { /* n:\"BrtEndPCDFGRange\", */ T:-1 },\n\t/*::[*/0x00E1/*::]*/: { /* n:\"BrtBeginPCDFGDiscrete\", */ T:1 },\n\t/*::[*/0x00E2/*::]*/: { /* n:\"BrtEndPCDFGDiscrete\", */ T:-1 },\n\t/*::[*/0x00E3/*::]*/: { /* n:\"BrtBeginPCDSDTupleCache\", */ T:1 },\n\t/*::[*/0x00E4/*::]*/: { /* n:\"BrtEndPCDSDTupleCache\", */ T:-1 },\n\t/*::[*/0x00E5/*::]*/: { /* n:\"BrtBeginPCDSDTCEntries\", */ T:1 },\n\t/*::[*/0x00E6/*::]*/: { /* n:\"BrtEndPCDSDTCEntries\", */ T:-1 },\n\t/*::[*/0x00E7/*::]*/: { /* n:\"BrtBeginPCDSDTCEMembers\", */ T:1 },\n\t/*::[*/0x00E8/*::]*/: { /* n:\"BrtEndPCDSDTCEMembers\", */ T:-1 },\n\t/*::[*/0x00E9/*::]*/: { /* n:\"BrtBeginPCDSDTCEMember\", */ T:1 },\n\t/*::[*/0x00EA/*::]*/: { /* n:\"BrtEndPCDSDTCEMember\", */ T:-1 },\n\t/*::[*/0x00EB/*::]*/: { /* n:\"BrtBeginPCDSDTCQueries\", */ T:1 },\n\t/*::[*/0x00EC/*::]*/: { /* n:\"BrtEndPCDSDTCQueries\", */ T:-1 },\n\t/*::[*/0x00ED/*::]*/: { /* n:\"BrtBeginPCDSDTCQuery\", */ T:1 },\n\t/*::[*/0x00EE/*::]*/: { /* n:\"BrtEndPCDSDTCQuery\", */ T:-1 },\n\t/*::[*/0x00EF/*::]*/: { /* n:\"BrtBeginPCDSDTCSets\", */ T:1 },\n\t/*::[*/0x00F0/*::]*/: { /* n:\"BrtEndPCDSDTCSets\", */ T:-1 },\n\t/*::[*/0x00F1/*::]*/: { /* n:\"BrtBeginPCDSDTCSet\", */ T:1 },\n\t/*::[*/0x00F2/*::]*/: { /* n:\"BrtEndPCDSDTCSet\", */ T:-1 },\n\t/*::[*/0x00F3/*::]*/: { /* n:\"BrtBeginPCDCalcItems\", */ T:1 },\n\t/*::[*/0x00F4/*::]*/: { /* n:\"BrtEndPCDCalcItems\", */ T:-1 },\n\t/*::[*/0x00F5/*::]*/: { /* n:\"BrtBeginPCDCalcItem\", */ T:1 },\n\t/*::[*/0x00F6/*::]*/: { /* n:\"BrtEndPCDCalcItem\", */ T:-1 },\n\t/*::[*/0x00F7/*::]*/: { /* n:\"BrtBeginPRule\", */ T:1 },\n\t/*::[*/0x00F8/*::]*/: { /* n:\"BrtEndPRule\", */ T:-1 },\n\t/*::[*/0x00F9/*::]*/: { /* n:\"BrtBeginPRFilters\", */ T:1 },\n\t/*::[*/0x00FA/*::]*/: { /* n:\"BrtEndPRFilters\", */ T:-1 },\n\t/*::[*/0x00FB/*::]*/: { /* n:\"BrtBeginPRFilter\", */ T:1 },\n\t/*::[*/0x00FC/*::]*/: { /* n:\"BrtEndPRFilter\", */ T:-1 },\n\t/*::[*/0x00FD/*::]*/: { /* n:\"BrtBeginPNames\", */ T:1 },\n\t/*::[*/0x00FE/*::]*/: { /* n:\"BrtEndPNames\", */ T:-1 },\n\t/*::[*/0x00FF/*::]*/: { /* n:\"BrtBeginPName\", */ T:1 },\n\t/*::[*/0x0100/*::]*/: { /* n:\"BrtEndPName\", */ T:-1 },\n\t/*::[*/0x0101/*::]*/: { /* n:\"BrtBeginPNPairs\", */ T:1 },\n\t/*::[*/0x0102/*::]*/: { /* n:\"BrtEndPNPairs\", */ T:-1 },\n\t/*::[*/0x0103/*::]*/: { /* n:\"BrtBeginPNPair\", */ T:1 },\n\t/*::[*/0x0104/*::]*/: { /* n:\"BrtEndPNPair\", */ T:-1 },\n\t/*::[*/0x0105/*::]*/: { /* n:\"BrtBeginECWebProps\", */ T:1 },\n\t/*::[*/0x0106/*::]*/: { /* n:\"BrtEndECWebProps\", */ T:-1 },\n\t/*::[*/0x0107/*::]*/: { /* n:\"BrtBeginEcWpTables\", */ T:1 },\n\t/*::[*/0x0108/*::]*/: { /* n:\"BrtEndECWPTables\", */ T:-1 },\n\t/*::[*/0x0109/*::]*/: { /* n:\"BrtBeginECParams\", */ T:1 },\n\t/*::[*/0x010A/*::]*/: { /* n:\"BrtEndECParams\", */ T:-1 },\n\t/*::[*/0x010B/*::]*/: { /* n:\"BrtBeginECParam\", */ T:1 },\n\t/*::[*/0x010C/*::]*/: { /* n:\"BrtEndECParam\", */ T:-1 },\n\t/*::[*/0x010D/*::]*/: { /* n:\"BrtBeginPCDKPIs\", */ T:1 },\n\t/*::[*/0x010E/*::]*/: { /* n:\"BrtEndPCDKPIs\", */ T:-1 },\n\t/*::[*/0x010F/*::]*/: { /* n:\"BrtBeginPCDKPI\", */ T:1 },\n\t/*::[*/0x0110/*::]*/: { /* n:\"BrtEndPCDKPI\", */ T:-1 },\n\t/*::[*/0x0111/*::]*/: { /* n:\"BrtBeginDims\", */ T:1 },\n\t/*::[*/0x0112/*::]*/: { /* n:\"BrtEndDims\", */ T:-1 },\n\t/*::[*/0x0113/*::]*/: { /* n:\"BrtBeginDim\", */ T:1 },\n\t/*::[*/0x0114/*::]*/: { /* n:\"BrtEndDim\", */ T:-1 },\n\t/*::[*/0x0115/*::]*/: { /* n:\"BrtIndexPartEnd\" */ },\n\t/*::[*/0x0116/*::]*/: { /* n:\"BrtBeginStyleSheet\", */ T:1 },\n\t/*::[*/0x0117/*::]*/: { /* n:\"BrtEndStyleSheet\", */ T:-1 },\n\t/*::[*/0x0118/*::]*/: { /* n:\"BrtBeginSXView\", */ T:1 },\n\t/*::[*/0x0119/*::]*/: { /* n:\"BrtEndSXVI\", */ T:-1 },\n\t/*::[*/0x011A/*::]*/: { /* n:\"BrtBeginSXVI\", */ T:1 },\n\t/*::[*/0x011B/*::]*/: { /* n:\"BrtBeginSXVIs\", */ T:1 },\n\t/*::[*/0x011C/*::]*/: { /* n:\"BrtEndSXVIs\", */ T:-1 },\n\t/*::[*/0x011D/*::]*/: { /* n:\"BrtBeginSXVD\", */ T:1 },\n\t/*::[*/0x011E/*::]*/: { /* n:\"BrtEndSXVD\", */ T:-1 },\n\t/*::[*/0x011F/*::]*/: { /* n:\"BrtBeginSXVDs\", */ T:1 },\n\t/*::[*/0x0120/*::]*/: { /* n:\"BrtEndSXVDs\", */ T:-1 },\n\t/*::[*/0x0121/*::]*/: { /* n:\"BrtBeginSXPI\", */ T:1 },\n\t/*::[*/0x0122/*::]*/: { /* n:\"BrtEndSXPI\", */ T:-1 },\n\t/*::[*/0x0123/*::]*/: { /* n:\"BrtBeginSXPIs\", */ T:1 },\n\t/*::[*/0x0124/*::]*/: { /* n:\"BrtEndSXPIs\", */ T:-1 },\n\t/*::[*/0x0125/*::]*/: { /* n:\"BrtBeginSXDI\", */ T:1 },\n\t/*::[*/0x0126/*::]*/: { /* n:\"BrtEndSXDI\", */ T:-1 },\n\t/*::[*/0x0127/*::]*/: { /* n:\"BrtBeginSXDIs\", */ T:1 },\n\t/*::[*/0x0128/*::]*/: { /* n:\"BrtEndSXDIs\", */ T:-1 },\n\t/*::[*/0x0129/*::]*/: { /* n:\"BrtBeginSXLI\", */ T:1 },\n\t/*::[*/0x012A/*::]*/: { /* n:\"BrtEndSXLI\", */ T:-1 },\n\t/*::[*/0x012B/*::]*/: { /* n:\"BrtBeginSXLIRws\", */ T:1 },\n\t/*::[*/0x012C/*::]*/: { /* n:\"BrtEndSXLIRws\", */ T:-1 },\n\t/*::[*/0x012D/*::]*/: { /* n:\"BrtBeginSXLICols\", */ T:1 },\n\t/*::[*/0x012E/*::]*/: { /* n:\"BrtEndSXLICols\", */ T:-1 },\n\t/*::[*/0x012F/*::]*/: { /* n:\"BrtBeginSXFormat\", */ T:1 },\n\t/*::[*/0x0130/*::]*/: { /* n:\"BrtEndSXFormat\", */ T:-1 },\n\t/*::[*/0x0131/*::]*/: { /* n:\"BrtBeginSXFormats\", */ T:1 },\n\t/*::[*/0x0132/*::]*/: { /* n:\"BrtEndSxFormats\", */ T:-1 },\n\t/*::[*/0x0133/*::]*/: { /* n:\"BrtBeginSxSelect\", */ T:1 },\n\t/*::[*/0x0134/*::]*/: { /* n:\"BrtEndSxSelect\", */ T:-1 },\n\t/*::[*/0x0135/*::]*/: { /* n:\"BrtBeginISXVDRws\", */ T:1 },\n\t/*::[*/0x0136/*::]*/: { /* n:\"BrtEndISXVDRws\", */ T:-1 },\n\t/*::[*/0x0137/*::]*/: { /* n:\"BrtBeginISXVDCols\", */ T:1 },\n\t/*::[*/0x0138/*::]*/: { /* n:\"BrtEndISXVDCols\", */ T:-1 },\n\t/*::[*/0x0139/*::]*/: { /* n:\"BrtEndSXLocation\", */ T:-1 },\n\t/*::[*/0x013A/*::]*/: { /* n:\"BrtBeginSXLocation\", */ T:1 },\n\t/*::[*/0x013B/*::]*/: { /* n:\"BrtEndSXView\", */ T:-1 },\n\t/*::[*/0x013C/*::]*/: { /* n:\"BrtBeginSXTHs\", */ T:1 },\n\t/*::[*/0x013D/*::]*/: { /* n:\"BrtEndSXTHs\", */ T:-1 },\n\t/*::[*/0x013E/*::]*/: { /* n:\"BrtBeginSXTH\", */ T:1 },\n\t/*::[*/0x013F/*::]*/: { /* n:\"BrtEndSXTH\", */ T:-1 },\n\t/*::[*/0x0140/*::]*/: { /* n:\"BrtBeginISXTHRws\", */ T:1 },\n\t/*::[*/0x0141/*::]*/: { /* n:\"BrtEndISXTHRws\", */ T:-1 },\n\t/*::[*/0x0142/*::]*/: { /* n:\"BrtBeginISXTHCols\", */ T:1 },\n\t/*::[*/0x0143/*::]*/: { /* n:\"BrtEndISXTHCols\", */ T:-1 },\n\t/*::[*/0x0144/*::]*/: { /* n:\"BrtBeginSXTDMPS\", */ T:1 },\n\t/*::[*/0x0145/*::]*/: { /* n:\"BrtEndSXTDMPs\", */ T:-1 },\n\t/*::[*/0x0146/*::]*/: { /* n:\"BrtBeginSXTDMP\", */ T:1 },\n\t/*::[*/0x0147/*::]*/: { /* n:\"BrtEndSXTDMP\", */ T:-1 },\n\t/*::[*/0x0148/*::]*/: { /* n:\"BrtBeginSXTHItems\", */ T:1 },\n\t/*::[*/0x0149/*::]*/: { /* n:\"BrtEndSXTHItems\", */ T:-1 },\n\t/*::[*/0x014A/*::]*/: { /* n:\"BrtBeginSXTHItem\", */ T:1 },\n\t/*::[*/0x014B/*::]*/: { /* n:\"BrtEndSXTHItem\", */ T:-1 },\n\t/*::[*/0x014C/*::]*/: { /* n:\"BrtBeginMetadata\", */ T:1 },\n\t/*::[*/0x014D/*::]*/: { /* n:\"BrtEndMetadata\", */ T:-1 },\n\t/*::[*/0x014E/*::]*/: { /* n:\"BrtBeginEsmdtinfo\", */ T:1 },\n\t/*::[*/0x014F/*::]*/: { /* n:\"BrtMdtinfo\", */ f:parse_BrtMdtinfo },\n\t/*::[*/0x0150/*::]*/: { /* n:\"BrtEndEsmdtinfo\", */ T:-1 },\n\t/*::[*/0x0151/*::]*/: { /* n:\"BrtBeginEsmdb\", */ f:parse_BrtBeginEsmdb, T:1 },\n\t/*::[*/0x0152/*::]*/: { /* n:\"BrtEndEsmdb\", */ T:-1 },\n\t/*::[*/0x0153/*::]*/: { /* n:\"BrtBeginEsfmd\", */ T:1 },\n\t/*::[*/0x0154/*::]*/: { /* n:\"BrtEndEsfmd\", */ T:-1 },\n\t/*::[*/0x0155/*::]*/: { /* n:\"BrtBeginSingleCells\", */ T:1 },\n\t/*::[*/0x0156/*::]*/: { /* n:\"BrtEndSingleCells\", */ T:-1 },\n\t/*::[*/0x0157/*::]*/: { /* n:\"BrtBeginList\", */ T:1 },\n\t/*::[*/0x0158/*::]*/: { /* n:\"BrtEndList\", */ T:-1 },\n\t/*::[*/0x0159/*::]*/: { /* n:\"BrtBeginListCols\", */ T:1 },\n\t/*::[*/0x015A/*::]*/: { /* n:\"BrtEndListCols\", */ T:-1 },\n\t/*::[*/0x015B/*::]*/: { /* n:\"BrtBeginListCol\", */ T:1 },\n\t/*::[*/0x015C/*::]*/: { /* n:\"BrtEndListCol\", */ T:-1 },\n\t/*::[*/0x015D/*::]*/: { /* n:\"BrtBeginListXmlCPr\", */ T:1 },\n\t/*::[*/0x015E/*::]*/: { /* n:\"BrtEndListXmlCPr\", */ T:-1 },\n\t/*::[*/0x015F/*::]*/: { /* n:\"BrtListCCFmla\" */ },\n\t/*::[*/0x0160/*::]*/: { /* n:\"BrtListTrFmla\" */ },\n\t/*::[*/0x0161/*::]*/: { /* n:\"BrtBeginExternals\", */ T:1 },\n\t/*::[*/0x0162/*::]*/: { /* n:\"BrtEndExternals\", */ T:-1 },\n\t/*::[*/0x0163/*::]*/: { /* n:\"BrtSupBookSrc\", */ f:parse_RelID},\n\t/*::[*/0x0165/*::]*/: { /* n:\"BrtSupSelf\" */ },\n\t/*::[*/0x0166/*::]*/: { /* n:\"BrtSupSame\" */ },\n\t/*::[*/0x0167/*::]*/: { /* n:\"BrtSupTabs\" */ },\n\t/*::[*/0x0168/*::]*/: { /* n:\"BrtBeginSupBook\", */ T:1 },\n\t/*::[*/0x0169/*::]*/: { /* n:\"BrtPlaceholderName\" */ },\n\t/*::[*/0x016A/*::]*/: { /* n:\"BrtExternSheet\", */ f:parse_ExternSheet },\n\t/*::[*/0x016B/*::]*/: { /* n:\"BrtExternTableStart\" */ },\n\t/*::[*/0x016C/*::]*/: { /* n:\"BrtExternTableEnd\" */ },\n\t/*::[*/0x016E/*::]*/: { /* n:\"BrtExternRowHdr\" */ },\n\t/*::[*/0x016F/*::]*/: { /* n:\"BrtExternCellBlank\" */ },\n\t/*::[*/0x0170/*::]*/: { /* n:\"BrtExternCellReal\" */ },\n\t/*::[*/0x0171/*::]*/: { /* n:\"BrtExternCellBool\" */ },\n\t/*::[*/0x0172/*::]*/: { /* n:\"BrtExternCellError\" */ },\n\t/*::[*/0x0173/*::]*/: { /* n:\"BrtExternCellString\" */ },\n\t/*::[*/0x0174/*::]*/: { /* n:\"BrtBeginEsmdx\", */ T:1 },\n\t/*::[*/0x0175/*::]*/: { /* n:\"BrtEndEsmdx\", */ T:-1 },\n\t/*::[*/0x0176/*::]*/: { /* n:\"BrtBeginMdxSet\", */ T:1 },\n\t/*::[*/0x0177/*::]*/: { /* n:\"BrtEndMdxSet\", */ T:-1 },\n\t/*::[*/0x0178/*::]*/: { /* n:\"BrtBeginMdxMbrProp\", */ T:1 },\n\t/*::[*/0x0179/*::]*/: { /* n:\"BrtEndMdxMbrProp\", */ T:-1 },\n\t/*::[*/0x017A/*::]*/: { /* n:\"BrtBeginMdxKPI\", */ T:1 },\n\t/*::[*/0x017B/*::]*/: { /* n:\"BrtEndMdxKPI\", */ T:-1 },\n\t/*::[*/0x017C/*::]*/: { /* n:\"BrtBeginEsstr\", */ T:1 },\n\t/*::[*/0x017D/*::]*/: { /* n:\"BrtEndEsstr\", */ T:-1 },\n\t/*::[*/0x017E/*::]*/: { /* n:\"BrtBeginPRFItem\", */ T:1 },\n\t/*::[*/0x017F/*::]*/: { /* n:\"BrtEndPRFItem\", */ T:-1 },\n\t/*::[*/0x0180/*::]*/: { /* n:\"BrtBeginPivotCacheIDs\", */ T:1 },\n\t/*::[*/0x0181/*::]*/: { /* n:\"BrtEndPivotCacheIDs\", */ T:-1 },\n\t/*::[*/0x0182/*::]*/: { /* n:\"BrtBeginPivotCacheID\", */ T:1 },\n\t/*::[*/0x0183/*::]*/: { /* n:\"BrtEndPivotCacheID\", */ T:-1 },\n\t/*::[*/0x0184/*::]*/: { /* n:\"BrtBeginISXVIs\", */ T:1 },\n\t/*::[*/0x0185/*::]*/: { /* n:\"BrtEndISXVIs\", */ T:-1 },\n\t/*::[*/0x0186/*::]*/: { /* n:\"BrtBeginColInfos\", */ T:1 },\n\t/*::[*/0x0187/*::]*/: { /* n:\"BrtEndColInfos\", */ T:-1 },\n\t/*::[*/0x0188/*::]*/: { /* n:\"BrtBeginRwBrk\", */ T:1 },\n\t/*::[*/0x0189/*::]*/: { /* n:\"BrtEndRwBrk\", */ T:-1 },\n\t/*::[*/0x018A/*::]*/: { /* n:\"BrtBeginColBrk\", */ T:1 },\n\t/*::[*/0x018B/*::]*/: { /* n:\"BrtEndColBrk\", */ T:-1 },\n\t/*::[*/0x018C/*::]*/: { /* n:\"BrtBrk\" */ },\n\t/*::[*/0x018D/*::]*/: { /* n:\"BrtUserBookView\" */ },\n\t/*::[*/0x018E/*::]*/: { /* n:\"BrtInfo\" */ },\n\t/*::[*/0x018F/*::]*/: { /* n:\"BrtCUsr\" */ },\n\t/*::[*/0x0190/*::]*/: { /* n:\"BrtUsr\" */ },\n\t/*::[*/0x0191/*::]*/: { /* n:\"BrtBeginUsers\", */ T:1 },\n\t/*::[*/0x0193/*::]*/: { /* n:\"BrtEOF\" */ },\n\t/*::[*/0x0194/*::]*/: { /* n:\"BrtUCR\" */ },\n\t/*::[*/0x0195/*::]*/: { /* n:\"BrtRRInsDel\" */ },\n\t/*::[*/0x0196/*::]*/: { /* n:\"BrtRREndInsDel\" */ },\n\t/*::[*/0x0197/*::]*/: { /* n:\"BrtRRMove\" */ },\n\t/*::[*/0x0198/*::]*/: { /* n:\"BrtRREndMove\" */ },\n\t/*::[*/0x0199/*::]*/: { /* n:\"BrtRRChgCell\" */ },\n\t/*::[*/0x019A/*::]*/: { /* n:\"BrtRREndChgCell\" */ },\n\t/*::[*/0x019B/*::]*/: { /* n:\"BrtRRHeader\" */ },\n\t/*::[*/0x019C/*::]*/: { /* n:\"BrtRRUserView\" */ },\n\t/*::[*/0x019D/*::]*/: { /* n:\"BrtRRRenSheet\" */ },\n\t/*::[*/0x019E/*::]*/: { /* n:\"BrtRRInsertSh\" */ },\n\t/*::[*/0x019F/*::]*/: { /* n:\"BrtRRDefName\" */ },\n\t/*::[*/0x01A0/*::]*/: { /* n:\"BrtRRNote\" */ },\n\t/*::[*/0x01A1/*::]*/: { /* n:\"BrtRRConflict\" */ },\n\t/*::[*/0x01A2/*::]*/: { /* n:\"BrtRRTQSIF\" */ },\n\t/*::[*/0x01A3/*::]*/: { /* n:\"BrtRRFormat\" */ },\n\t/*::[*/0x01A4/*::]*/: { /* n:\"BrtRREndFormat\" */ },\n\t/*::[*/0x01A5/*::]*/: { /* n:\"BrtRRAutoFmt\" */ },\n\t/*::[*/0x01A6/*::]*/: { /* n:\"BrtBeginUserShViews\", */ T:1 },\n\t/*::[*/0x01A7/*::]*/: { /* n:\"BrtBeginUserShView\", */ T:1 },\n\t/*::[*/0x01A8/*::]*/: { /* n:\"BrtEndUserShView\", */ T:-1 },\n\t/*::[*/0x01A9/*::]*/: { /* n:\"BrtEndUserShViews\", */ T:-1 },\n\t/*::[*/0x01AA/*::]*/: { /* n:\"BrtArrFmla\", */ f:parse_BrtArrFmla },\n\t/*::[*/0x01AB/*::]*/: { /* n:\"BrtShrFmla\", */ f:parse_BrtShrFmla },\n\t/*::[*/0x01AC/*::]*/: { /* n:\"BrtTable\" */ },\n\t/*::[*/0x01AD/*::]*/: { /* n:\"BrtBeginExtConnections\", */ T:1 },\n\t/*::[*/0x01AE/*::]*/: { /* n:\"BrtEndExtConnections\", */ T:-1 },\n\t/*::[*/0x01AF/*::]*/: { /* n:\"BrtBeginPCDCalcMems\", */ T:1 },\n\t/*::[*/0x01B0/*::]*/: { /* n:\"BrtEndPCDCalcMems\", */ T:-1 },\n\t/*::[*/0x01B1/*::]*/: { /* n:\"BrtBeginPCDCalcMem\", */ T:1 },\n\t/*::[*/0x01B2/*::]*/: { /* n:\"BrtEndPCDCalcMem\", */ T:-1 },\n\t/*::[*/0x01B3/*::]*/: { /* n:\"BrtBeginPCDHGLevels\", */ T:1 },\n\t/*::[*/0x01B4/*::]*/: { /* n:\"BrtEndPCDHGLevels\", */ T:-1 },\n\t/*::[*/0x01B5/*::]*/: { /* n:\"BrtBeginPCDHGLevel\", */ T:1 },\n\t/*::[*/0x01B6/*::]*/: { /* n:\"BrtEndPCDHGLevel\", */ T:-1 },\n\t/*::[*/0x01B7/*::]*/: { /* n:\"BrtBeginPCDHGLGroups\", */ T:1 },\n\t/*::[*/0x01B8/*::]*/: { /* n:\"BrtEndPCDHGLGroups\", */ T:-1 },\n\t/*::[*/0x01B9/*::]*/: { /* n:\"BrtBeginPCDHGLGroup\", */ T:1 },\n\t/*::[*/0x01BA/*::]*/: { /* n:\"BrtEndPCDHGLGroup\", */ T:-1 },\n\t/*::[*/0x01BB/*::]*/: { /* n:\"BrtBeginPCDHGLGMembers\", */ T:1 },\n\t/*::[*/0x01BC/*::]*/: { /* n:\"BrtEndPCDHGLGMembers\", */ T:-1 },\n\t/*::[*/0x01BD/*::]*/: { /* n:\"BrtBeginPCDHGLGMember\", */ T:1 },\n\t/*::[*/0x01BE/*::]*/: { /* n:\"BrtEndPCDHGLGMember\", */ T:-1 },\n\t/*::[*/0x01BF/*::]*/: { /* n:\"BrtBeginQSI\", */ T:1 },\n\t/*::[*/0x01C0/*::]*/: { /* n:\"BrtEndQSI\", */ T:-1 },\n\t/*::[*/0x01C1/*::]*/: { /* n:\"BrtBeginQSIR\", */ T:1 },\n\t/*::[*/0x01C2/*::]*/: { /* n:\"BrtEndQSIR\", */ T:-1 },\n\t/*::[*/0x01C3/*::]*/: { /* n:\"BrtBeginDeletedNames\", */ T:1 },\n\t/*::[*/0x01C4/*::]*/: { /* n:\"BrtEndDeletedNames\", */ T:-1 },\n\t/*::[*/0x01C5/*::]*/: { /* n:\"BrtBeginDeletedName\", */ T:1 },\n\t/*::[*/0x01C6/*::]*/: { /* n:\"BrtEndDeletedName\", */ T:-1 },\n\t/*::[*/0x01C7/*::]*/: { /* n:\"BrtBeginQSIFs\", */ T:1 },\n\t/*::[*/0x01C8/*::]*/: { /* n:\"BrtEndQSIFs\", */ T:-1 },\n\t/*::[*/0x01C9/*::]*/: { /* n:\"BrtBeginQSIF\", */ T:1 },\n\t/*::[*/0x01CA/*::]*/: { /* n:\"BrtEndQSIF\", */ T:-1 },\n\t/*::[*/0x01CB/*::]*/: { /* n:\"BrtBeginAutoSortScope\", */ T:1 },\n\t/*::[*/0x01CC/*::]*/: { /* n:\"BrtEndAutoSortScope\", */ T:-1 },\n\t/*::[*/0x01CD/*::]*/: { /* n:\"BrtBeginConditionalFormatting\", */ T:1 },\n\t/*::[*/0x01CE/*::]*/: { /* n:\"BrtEndConditionalFormatting\", */ T:-1 },\n\t/*::[*/0x01CF/*::]*/: { /* n:\"BrtBeginCFRule\", */ T:1 },\n\t/*::[*/0x01D0/*::]*/: { /* n:\"BrtEndCFRule\", */ T:-1 },\n\t/*::[*/0x01D1/*::]*/: { /* n:\"BrtBeginIconSet\", */ T:1 },\n\t/*::[*/0x01D2/*::]*/: { /* n:\"BrtEndIconSet\", */ T:-1 },\n\t/*::[*/0x01D3/*::]*/: { /* n:\"BrtBeginDatabar\", */ T:1 },\n\t/*::[*/0x01D4/*::]*/: { /* n:\"BrtEndDatabar\", */ T:-1 },\n\t/*::[*/0x01D5/*::]*/: { /* n:\"BrtBeginColorScale\", */ T:1 },\n\t/*::[*/0x01D6/*::]*/: { /* n:\"BrtEndColorScale\", */ T:-1 },\n\t/*::[*/0x01D7/*::]*/: { /* n:\"BrtCFVO\" */ },\n\t/*::[*/0x01D8/*::]*/: { /* n:\"BrtExternValueMeta\" */ },\n\t/*::[*/0x01D9/*::]*/: { /* n:\"BrtBeginColorPalette\", */ T:1 },\n\t/*::[*/0x01DA/*::]*/: { /* n:\"BrtEndColorPalette\", */ T:-1 },\n\t/*::[*/0x01DB/*::]*/: { /* n:\"BrtIndexedColor\" */ },\n\t/*::[*/0x01DC/*::]*/: { /* n:\"BrtMargins\", */ f:parse_BrtMargins },\n\t/*::[*/0x01DD/*::]*/: { /* n:\"BrtPrintOptions\" */ },\n\t/*::[*/0x01DE/*::]*/: { /* n:\"BrtPageSetup\" */ },\n\t/*::[*/0x01DF/*::]*/: { /* n:\"BrtBeginHeaderFooter\", */ T:1 },\n\t/*::[*/0x01E0/*::]*/: { /* n:\"BrtEndHeaderFooter\", */ T:-1 },\n\t/*::[*/0x01E1/*::]*/: { /* n:\"BrtBeginSXCrtFormat\", */ T:1 },\n\t/*::[*/0x01E2/*::]*/: { /* n:\"BrtEndSXCrtFormat\", */ T:-1 },\n\t/*::[*/0x01E3/*::]*/: { /* n:\"BrtBeginSXCrtFormats\", */ T:1 },\n\t/*::[*/0x01E4/*::]*/: { /* n:\"BrtEndSXCrtFormats\", */ T:-1 },\n\t/*::[*/0x01E5/*::]*/: { /* n:\"BrtWsFmtInfo\", */ f:parse_BrtWsFmtInfo },\n\t/*::[*/0x01E6/*::]*/: { /* n:\"BrtBeginMgs\", */ T:1 },\n\t/*::[*/0x01E7/*::]*/: { /* n:\"BrtEndMGs\", */ T:-1 },\n\t/*::[*/0x01E8/*::]*/: { /* n:\"BrtBeginMGMaps\", */ T:1 },\n\t/*::[*/0x01E9/*::]*/: { /* n:\"BrtEndMGMaps\", */ T:-1 },\n\t/*::[*/0x01EA/*::]*/: { /* n:\"BrtBeginMG\", */ T:1 },\n\t/*::[*/0x01EB/*::]*/: { /* n:\"BrtEndMG\", */ T:-1 },\n\t/*::[*/0x01EC/*::]*/: { /* n:\"BrtBeginMap\", */ T:1 },\n\t/*::[*/0x01ED/*::]*/: { /* n:\"BrtEndMap\", */ T:-1 },\n\t/*::[*/0x01EE/*::]*/: { /* n:\"BrtHLink\", */ f:parse_BrtHLink },\n\t/*::[*/0x01EF/*::]*/: { /* n:\"BrtBeginDCon\", */ T:1 },\n\t/*::[*/0x01F0/*::]*/: { /* n:\"BrtEndDCon\", */ T:-1 },\n\t/*::[*/0x01F1/*::]*/: { /* n:\"BrtBeginDRefs\", */ T:1 },\n\t/*::[*/0x01F2/*::]*/: { /* n:\"BrtEndDRefs\", */ T:-1 },\n\t/*::[*/0x01F3/*::]*/: { /* n:\"BrtDRef\" */ },\n\t/*::[*/0x01F4/*::]*/: { /* n:\"BrtBeginScenMan\", */ T:1 },\n\t/*::[*/0x01F5/*::]*/: { /* n:\"BrtEndScenMan\", */ T:-1 },\n\t/*::[*/0x01F6/*::]*/: { /* n:\"BrtBeginSct\", */ T:1 },\n\t/*::[*/0x01F7/*::]*/: { /* n:\"BrtEndSct\", */ T:-1 },\n\t/*::[*/0x01F8/*::]*/: { /* n:\"BrtSlc\" */ },\n\t/*::[*/0x01F9/*::]*/: { /* n:\"BrtBeginDXFs\", */ T:1 },\n\t/*::[*/0x01FA/*::]*/: { /* n:\"BrtEndDXFs\", */ T:-1 },\n\t/*::[*/0x01FB/*::]*/: { /* n:\"BrtDXF\" */ },\n\t/*::[*/0x01FC/*::]*/: { /* n:\"BrtBeginTableStyles\", */ T:1 },\n\t/*::[*/0x01FD/*::]*/: { /* n:\"BrtEndTableStyles\", */ T:-1 },\n\t/*::[*/0x01FE/*::]*/: { /* n:\"BrtBeginTableStyle\", */ T:1 },\n\t/*::[*/0x01FF/*::]*/: { /* n:\"BrtEndTableStyle\", */ T:-1 },\n\t/*::[*/0x0200/*::]*/: { /* n:\"BrtTableStyleElement\" */ },\n\t/*::[*/0x0201/*::]*/: { /* n:\"BrtTableStyleClient\" */ },\n\t/*::[*/0x0202/*::]*/: { /* n:\"BrtBeginVolDeps\", */ T:1 },\n\t/*::[*/0x0203/*::]*/: { /* n:\"BrtEndVolDeps\", */ T:-1 },\n\t/*::[*/0x0204/*::]*/: { /* n:\"BrtBeginVolType\", */ T:1 },\n\t/*::[*/0x0205/*::]*/: { /* n:\"BrtEndVolType\", */ T:-1 },\n\t/*::[*/0x0206/*::]*/: { /* n:\"BrtBeginVolMain\", */ T:1 },\n\t/*::[*/0x0207/*::]*/: { /* n:\"BrtEndVolMain\", */ T:-1 },\n\t/*::[*/0x0208/*::]*/: { /* n:\"BrtBeginVolTopic\", */ T:1 },\n\t/*::[*/0x0209/*::]*/: { /* n:\"BrtEndVolTopic\", */ T:-1 },\n\t/*::[*/0x020A/*::]*/: { /* n:\"BrtVolSubtopic\" */ },\n\t/*::[*/0x020B/*::]*/: { /* n:\"BrtVolRef\" */ },\n\t/*::[*/0x020C/*::]*/: { /* n:\"BrtVolNum\" */ },\n\t/*::[*/0x020D/*::]*/: { /* n:\"BrtVolErr\" */ },\n\t/*::[*/0x020E/*::]*/: { /* n:\"BrtVolStr\" */ },\n\t/*::[*/0x020F/*::]*/: { /* n:\"BrtVolBool\" */ },\n\t/*::[*/0x0210/*::]*/: { /* n:\"BrtBeginCalcChain$\", */ T:1 },\n\t/*::[*/0x0211/*::]*/: { /* n:\"BrtEndCalcChain$\", */ T:-1 },\n\t/*::[*/0x0212/*::]*/: { /* n:\"BrtBeginSortState\", */ T:1 },\n\t/*::[*/0x0213/*::]*/: { /* n:\"BrtEndSortState\", */ T:-1 },\n\t/*::[*/0x0214/*::]*/: { /* n:\"BrtBeginSortCond\", */ T:1 },\n\t/*::[*/0x0215/*::]*/: { /* n:\"BrtEndSortCond\", */ T:-1 },\n\t/*::[*/0x0216/*::]*/: { /* n:\"BrtBookProtection\" */ },\n\t/*::[*/0x0217/*::]*/: { /* n:\"BrtSheetProtection\" */ },\n\t/*::[*/0x0218/*::]*/: { /* n:\"BrtRangeProtection\" */ },\n\t/*::[*/0x0219/*::]*/: { /* n:\"BrtPhoneticInfo\" */ },\n\t/*::[*/0x021A/*::]*/: { /* n:\"BrtBeginECTxtWiz\", */ T:1 },\n\t/*::[*/0x021B/*::]*/: { /* n:\"BrtEndECTxtWiz\", */ T:-1 },\n\t/*::[*/0x021C/*::]*/: { /* n:\"BrtBeginECTWFldInfoLst\", */ T:1 },\n\t/*::[*/0x021D/*::]*/: { /* n:\"BrtEndECTWFldInfoLst\", */ T:-1 },\n\t/*::[*/0x021E/*::]*/: { /* n:\"BrtBeginECTwFldInfo\", */ T:1 },\n\t/*::[*/0x0224/*::]*/: { /* n:\"BrtFileSharing\" */ },\n\t/*::[*/0x0225/*::]*/: { /* n:\"BrtOleSize\" */ },\n\t/*::[*/0x0226/*::]*/: { /* n:\"BrtDrawing\", */ f:parse_RelID },\n\t/*::[*/0x0227/*::]*/: { /* n:\"BrtLegacyDrawing\" */ },\n\t/*::[*/0x0228/*::]*/: { /* n:\"BrtLegacyDrawingHF\" */ },\n\t/*::[*/0x0229/*::]*/: { /* n:\"BrtWebOpt\" */ },\n\t/*::[*/0x022A/*::]*/: { /* n:\"BrtBeginWebPubItems\", */ T:1 },\n\t/*::[*/0x022B/*::]*/: { /* n:\"BrtEndWebPubItems\", */ T:-1 },\n\t/*::[*/0x022C/*::]*/: { /* n:\"BrtBeginWebPubItem\", */ T:1 },\n\t/*::[*/0x022D/*::]*/: { /* n:\"BrtEndWebPubItem\", */ T:-1 },\n\t/*::[*/0x022E/*::]*/: { /* n:\"BrtBeginSXCondFmt\", */ T:1 },\n\t/*::[*/0x022F/*::]*/: { /* n:\"BrtEndSXCondFmt\", */ T:-1 },\n\t/*::[*/0x0230/*::]*/: { /* n:\"BrtBeginSXCondFmts\", */ T:1 },\n\t/*::[*/0x0231/*::]*/: { /* n:\"BrtEndSXCondFmts\", */ T:-1 },\n\t/*::[*/0x0232/*::]*/: { /* n:\"BrtBkHim\" */ },\n\t/*::[*/0x0234/*::]*/: { /* n:\"BrtColor\" */ },\n\t/*::[*/0x0235/*::]*/: { /* n:\"BrtBeginIndexedColors\", */ T:1 },\n\t/*::[*/0x0236/*::]*/: { /* n:\"BrtEndIndexedColors\", */ T:-1 },\n\t/*::[*/0x0239/*::]*/: { /* n:\"BrtBeginMRUColors\", */ T:1 },\n\t/*::[*/0x023A/*::]*/: { /* n:\"BrtEndMRUColors\", */ T:-1 },\n\t/*::[*/0x023C/*::]*/: { /* n:\"BrtMRUColor\" */ },\n\t/*::[*/0x023D/*::]*/: { /* n:\"BrtBeginDVals\", */ T:1 },\n\t/*::[*/0x023E/*::]*/: { /* n:\"BrtEndDVals\", */ T:-1 },\n\t/*::[*/0x0241/*::]*/: { /* n:\"BrtSupNameStart\" */ },\n\t/*::[*/0x0242/*::]*/: { /* n:\"BrtSupNameValueStart\" */ },\n\t/*::[*/0x0243/*::]*/: { /* n:\"BrtSupNameValueEnd\" */ },\n\t/*::[*/0x0244/*::]*/: { /* n:\"BrtSupNameNum\" */ },\n\t/*::[*/0x0245/*::]*/: { /* n:\"BrtSupNameErr\" */ },\n\t/*::[*/0x0246/*::]*/: { /* n:\"BrtSupNameSt\" */ },\n\t/*::[*/0x0247/*::]*/: { /* n:\"BrtSupNameNil\" */ },\n\t/*::[*/0x0248/*::]*/: { /* n:\"BrtSupNameBool\" */ },\n\t/*::[*/0x0249/*::]*/: { /* n:\"BrtSupNameFmla\" */ },\n\t/*::[*/0x024A/*::]*/: { /* n:\"BrtSupNameBits\" */ },\n\t/*::[*/0x024B/*::]*/: { /* n:\"BrtSupNameEnd\" */ },\n\t/*::[*/0x024C/*::]*/: { /* n:\"BrtEndSupBook\", */ T:-1 },\n\t/*::[*/0x024D/*::]*/: { /* n:\"BrtCellSmartTagProperty\" */ },\n\t/*::[*/0x024E/*::]*/: { /* n:\"BrtBeginCellSmartTag\", */ T:1 },\n\t/*::[*/0x024F/*::]*/: { /* n:\"BrtEndCellSmartTag\", */ T:-1 },\n\t/*::[*/0x0250/*::]*/: { /* n:\"BrtBeginCellSmartTags\", */ T:1 },\n\t/*::[*/0x0251/*::]*/: { /* n:\"BrtEndCellSmartTags\", */ T:-1 },\n\t/*::[*/0x0252/*::]*/: { /* n:\"BrtBeginSmartTags\", */ T:1 },\n\t/*::[*/0x0253/*::]*/: { /* n:\"BrtEndSmartTags\", */ T:-1 },\n\t/*::[*/0x0254/*::]*/: { /* n:\"BrtSmartTagType\" */ },\n\t/*::[*/0x0255/*::]*/: { /* n:\"BrtBeginSmartTagTypes\", */ T:1 },\n\t/*::[*/0x0256/*::]*/: { /* n:\"BrtEndSmartTagTypes\", */ T:-1 },\n\t/*::[*/0x0257/*::]*/: { /* n:\"BrtBeginSXFilters\", */ T:1 },\n\t/*::[*/0x0258/*::]*/: { /* n:\"BrtEndSXFilters\", */ T:-1 },\n\t/*::[*/0x0259/*::]*/: { /* n:\"BrtBeginSXFILTER\", */ T:1 },\n\t/*::[*/0x025A/*::]*/: { /* n:\"BrtEndSXFilter\", */ T:-1 },\n\t/*::[*/0x025B/*::]*/: { /* n:\"BrtBeginFills\", */ T:1 },\n\t/*::[*/0x025C/*::]*/: { /* n:\"BrtEndFills\", */ T:-1 },\n\t/*::[*/0x025D/*::]*/: { /* n:\"BrtBeginCellWatches\", */ T:1 },\n\t/*::[*/0x025E/*::]*/: { /* n:\"BrtEndCellWatches\", */ T:-1 },\n\t/*::[*/0x025F/*::]*/: { /* n:\"BrtCellWatch\" */ },\n\t/*::[*/0x0260/*::]*/: { /* n:\"BrtBeginCRErrs\", */ T:1 },\n\t/*::[*/0x0261/*::]*/: { /* n:\"BrtEndCRErrs\", */ T:-1 },\n\t/*::[*/0x0262/*::]*/: { /* n:\"BrtCrashRecErr\" */ },\n\t/*::[*/0x0263/*::]*/: { /* n:\"BrtBeginFonts\", */ T:1 },\n\t/*::[*/0x0264/*::]*/: { /* n:\"BrtEndFonts\", */ T:-1 },\n\t/*::[*/0x0265/*::]*/: { /* n:\"BrtBeginBorders\", */ T:1 },\n\t/*::[*/0x0266/*::]*/: { /* n:\"BrtEndBorders\", */ T:-1 },\n\t/*::[*/0x0267/*::]*/: { /* n:\"BrtBeginFmts\", */ T:1 },\n\t/*::[*/0x0268/*::]*/: { /* n:\"BrtEndFmts\", */ T:-1 },\n\t/*::[*/0x0269/*::]*/: { /* n:\"BrtBeginCellXFs\", */ T:1 },\n\t/*::[*/0x026A/*::]*/: { /* n:\"BrtEndCellXFs\", */ T:-1 },\n\t/*::[*/0x026B/*::]*/: { /* n:\"BrtBeginStyles\", */ T:1 },\n\t/*::[*/0x026C/*::]*/: { /* n:\"BrtEndStyles\", */ T:-1 },\n\t/*::[*/0x0271/*::]*/: { /* n:\"BrtBigName\" */ },\n\t/*::[*/0x0272/*::]*/: { /* n:\"BrtBeginCellStyleXFs\", */ T:1 },\n\t/*::[*/0x0273/*::]*/: { /* n:\"BrtEndCellStyleXFs\", */ T:-1 },\n\t/*::[*/0x0274/*::]*/: { /* n:\"BrtBeginComments\", */ T:1 },\n\t/*::[*/0x0275/*::]*/: { /* n:\"BrtEndComments\", */ T:-1 },\n\t/*::[*/0x0276/*::]*/: { /* n:\"BrtBeginCommentAuthors\", */ T:1 },\n\t/*::[*/0x0277/*::]*/: { /* n:\"BrtEndCommentAuthors\", */ T:-1 },\n\t/*::[*/0x0278/*::]*/: { /* n:\"BrtCommentAuthor\", */ f:parse_BrtCommentAuthor },\n\t/*::[*/0x0279/*::]*/: { /* n:\"BrtBeginCommentList\", */ T:1 },\n\t/*::[*/0x027A/*::]*/: { /* n:\"BrtEndCommentList\", */ T:-1 },\n\t/*::[*/0x027B/*::]*/: { /* n:\"BrtBeginComment\", */ T:1, f:parse_BrtBeginComment},\n\t/*::[*/0x027C/*::]*/: { /* n:\"BrtEndComment\", */ T:-1 },\n\t/*::[*/0x027D/*::]*/: { /* n:\"BrtCommentText\", */ f:parse_BrtCommentText },\n\t/*::[*/0x027E/*::]*/: { /* n:\"BrtBeginOleObjects\", */ T:1 },\n\t/*::[*/0x027F/*::]*/: { /* n:\"BrtOleObject\" */ },\n\t/*::[*/0x0280/*::]*/: { /* n:\"BrtEndOleObjects\", */ T:-1 },\n\t/*::[*/0x0281/*::]*/: { /* n:\"BrtBeginSxrules\", */ T:1 },\n\t/*::[*/0x0282/*::]*/: { /* n:\"BrtEndSxRules\", */ T:-1 },\n\t/*::[*/0x0283/*::]*/: { /* n:\"BrtBeginActiveXControls\", */ T:1 },\n\t/*::[*/0x0284/*::]*/: { /* n:\"BrtActiveX\" */ },\n\t/*::[*/0x0285/*::]*/: { /* n:\"BrtEndActiveXControls\", */ T:-1 },\n\t/*::[*/0x0286/*::]*/: { /* n:\"BrtBeginPCDSDTCEMembersSortBy\", */ T:1 },\n\t/*::[*/0x0288/*::]*/: { /* n:\"BrtBeginCellIgnoreECs\", */ T:1 },\n\t/*::[*/0x0289/*::]*/: { /* n:\"BrtCellIgnoreEC\" */ },\n\t/*::[*/0x028A/*::]*/: { /* n:\"BrtEndCellIgnoreECs\", */ T:-1 },\n\t/*::[*/0x028B/*::]*/: { /* n:\"BrtCsProp\", */ f:parse_BrtCsProp },\n\t/*::[*/0x028C/*::]*/: { /* n:\"BrtCsPageSetup\" */ },\n\t/*::[*/0x028D/*::]*/: { /* n:\"BrtBeginUserCsViews\", */ T:1 },\n\t/*::[*/0x028E/*::]*/: { /* n:\"BrtEndUserCsViews\", */ T:-1 },\n\t/*::[*/0x028F/*::]*/: { /* n:\"BrtBeginUserCsView\", */ T:1 },\n\t/*::[*/0x0290/*::]*/: { /* n:\"BrtEndUserCsView\", */ T:-1 },\n\t/*::[*/0x0291/*::]*/: { /* n:\"BrtBeginPcdSFCIEntries\", */ T:1 },\n\t/*::[*/0x0292/*::]*/: { /* n:\"BrtEndPCDSFCIEntries\", */ T:-1 },\n\t/*::[*/0x0293/*::]*/: { /* n:\"BrtPCDSFCIEntry\" */ },\n\t/*::[*/0x0294/*::]*/: { /* n:\"BrtBeginListParts\", */ T:1 },\n\t/*::[*/0x0295/*::]*/: { /* n:\"BrtListPart\" */ },\n\t/*::[*/0x0296/*::]*/: { /* n:\"BrtEndListParts\", */ T:-1 },\n\t/*::[*/0x0297/*::]*/: { /* n:\"BrtSheetCalcProp\" */ },\n\t/*::[*/0x0298/*::]*/: { /* n:\"BrtBeginFnGroup\", */ T:1 },\n\t/*::[*/0x0299/*::]*/: { /* n:\"BrtFnGroup\" */ },\n\t/*::[*/0x029A/*::]*/: { /* n:\"BrtEndFnGroup\", */ T:-1 },\n\t/*::[*/0x029B/*::]*/: { /* n:\"BrtSupAddin\" */ },\n\t/*::[*/0x029C/*::]*/: { /* n:\"BrtSXTDMPOrder\" */ },\n\t/*::[*/0x029D/*::]*/: { /* n:\"BrtCsProtection\" */ },\n\t/*::[*/0x029F/*::]*/: { /* n:\"BrtBeginWsSortMap\", */ T:1 },\n\t/*::[*/0x02A0/*::]*/: { /* n:\"BrtEndWsSortMap\", */ T:-1 },\n\t/*::[*/0x02A1/*::]*/: { /* n:\"BrtBeginRRSort\", */ T:1 },\n\t/*::[*/0x02A2/*::]*/: { /* n:\"BrtEndRRSort\", */ T:-1 },\n\t/*::[*/0x02A3/*::]*/: { /* n:\"BrtRRSortItem\" */ },\n\t/*::[*/0x02A4/*::]*/: { /* n:\"BrtFileSharingIso\" */ },\n\t/*::[*/0x02A5/*::]*/: { /* n:\"BrtBookProtectionIso\" */ },\n\t/*::[*/0x02A6/*::]*/: { /* n:\"BrtSheetProtectionIso\" */ },\n\t/*::[*/0x02A7/*::]*/: { /* n:\"BrtCsProtectionIso\" */ },\n\t/*::[*/0x02A8/*::]*/: { /* n:\"BrtRangeProtectionIso\" */ },\n\t/*::[*/0x02A9/*::]*/: { /* n:\"BrtDValList\" */ },\n\t/*::[*/0x0400/*::]*/: { /* n:\"BrtRwDescent\" */ },\n\t/*::[*/0x0401/*::]*/: { /* n:\"BrtKnownFonts\" */ },\n\t/*::[*/0x0402/*::]*/: { /* n:\"BrtBeginSXTupleSet\", */ T:1 },\n\t/*::[*/0x0403/*::]*/: { /* n:\"BrtEndSXTupleSet\", */ T:-1 },\n\t/*::[*/0x0404/*::]*/: { /* n:\"BrtBeginSXTupleSetHeader\", */ T:1 },\n\t/*::[*/0x0405/*::]*/: { /* n:\"BrtEndSXTupleSetHeader\", */ T:-1 },\n\t/*::[*/0x0406/*::]*/: { /* n:\"BrtSXTupleSetHeaderItem\" */ },\n\t/*::[*/0x0407/*::]*/: { /* n:\"BrtBeginSXTupleSetData\", */ T:1 },\n\t/*::[*/0x0408/*::]*/: { /* n:\"BrtEndSXTupleSetData\", */ T:-1 },\n\t/*::[*/0x0409/*::]*/: { /* n:\"BrtBeginSXTupleSetRow\", */ T:1 },\n\t/*::[*/0x040A/*::]*/: { /* n:\"BrtEndSXTupleSetRow\", */ T:-1 },\n\t/*::[*/0x040B/*::]*/: { /* n:\"BrtSXTupleSetRowItem\" */ },\n\t/*::[*/0x040C/*::]*/: { /* n:\"BrtNameExt\" */ },\n\t/*::[*/0x040D/*::]*/: { /* n:\"BrtPCDH14\" */ },\n\t/*::[*/0x040E/*::]*/: { /* n:\"BrtBeginPCDCalcMem14\", */ T:1 },\n\t/*::[*/0x040F/*::]*/: { /* n:\"BrtEndPCDCalcMem14\", */ T:-1 },\n\t/*::[*/0x0410/*::]*/: { /* n:\"BrtSXTH14\" */ },\n\t/*::[*/0x0411/*::]*/: { /* n:\"BrtBeginSparklineGroup\", */ T:1 },\n\t/*::[*/0x0412/*::]*/: { /* n:\"BrtEndSparklineGroup\", */ T:-1 },\n\t/*::[*/0x0413/*::]*/: { /* n:\"BrtSparkline\" */ },\n\t/*::[*/0x0414/*::]*/: { /* n:\"BrtSXDI14\" */ },\n\t/*::[*/0x0415/*::]*/: { /* n:\"BrtWsFmtInfoEx14\" */ },\n\t/*::[*/0x0416/*::]*/: { /* n:\"BrtBeginConditionalFormatting14\", */ T:1 },\n\t/*::[*/0x0417/*::]*/: { /* n:\"BrtEndConditionalFormatting14\", */ T:-1 },\n\t/*::[*/0x0418/*::]*/: { /* n:\"BrtBeginCFRule14\", */ T:1 },\n\t/*::[*/0x0419/*::]*/: { /* n:\"BrtEndCFRule14\", */ T:-1 },\n\t/*::[*/0x041A/*::]*/: { /* n:\"BrtCFVO14\" */ },\n\t/*::[*/0x041B/*::]*/: { /* n:\"BrtBeginDatabar14\", */ T:1 },\n\t/*::[*/0x041C/*::]*/: { /* n:\"BrtBeginIconSet14\", */ T:1 },\n\t/*::[*/0x041D/*::]*/: { /* n:\"BrtDVal14\", */ f: parse_BrtDVal14 },\n\t/*::[*/0x041E/*::]*/: { /* n:\"BrtBeginDVals14\", */ T:1 },\n\t/*::[*/0x041F/*::]*/: { /* n:\"BrtColor14\" */ },\n\t/*::[*/0x0420/*::]*/: { /* n:\"BrtBeginSparklines\", */ T:1 },\n\t/*::[*/0x0421/*::]*/: { /* n:\"BrtEndSparklines\", */ T:-1 },\n\t/*::[*/0x0422/*::]*/: { /* n:\"BrtBeginSparklineGroups\", */ T:1 },\n\t/*::[*/0x0423/*::]*/: { /* n:\"BrtEndSparklineGroups\", */ T:-1 },\n\t/*::[*/0x0425/*::]*/: { /* n:\"BrtSXVD14\" */ },\n\t/*::[*/0x0426/*::]*/: { /* n:\"BrtBeginSXView14\", */ T:1 },\n\t/*::[*/0x0427/*::]*/: { /* n:\"BrtEndSXView14\", */ T:-1 },\n\t/*::[*/0x0428/*::]*/: { /* n:\"BrtBeginSXView16\", */ T:1 },\n\t/*::[*/0x0429/*::]*/: { /* n:\"BrtEndSXView16\", */ T:-1 },\n\t/*::[*/0x042A/*::]*/: { /* n:\"BrtBeginPCD14\", */ T:1 },\n\t/*::[*/0x042B/*::]*/: { /* n:\"BrtEndPCD14\", */ T:-1 },\n\t/*::[*/0x042C/*::]*/: { /* n:\"BrtBeginExtConn14\", */ T:1 },\n\t/*::[*/0x042D/*::]*/: { /* n:\"BrtEndExtConn14\", */ T:-1 },\n\t/*::[*/0x042E/*::]*/: { /* n:\"BrtBeginSlicerCacheIDs\", */ T:1 },\n\t/*::[*/0x042F/*::]*/: { /* n:\"BrtEndSlicerCacheIDs\", */ T:-1 },\n\t/*::[*/0x0430/*::]*/: { /* n:\"BrtBeginSlicerCacheID\", */ T:1 },\n\t/*::[*/0x0431/*::]*/: { /* n:\"BrtEndSlicerCacheID\", */ T:-1 },\n\t/*::[*/0x0433/*::]*/: { /* n:\"BrtBeginSlicerCache\", */ T:1 },\n\t/*::[*/0x0434/*::]*/: { /* n:\"BrtEndSlicerCache\", */ T:-1 },\n\t/*::[*/0x0435/*::]*/: { /* n:\"BrtBeginSlicerCacheDef\", */ T:1 },\n\t/*::[*/0x0436/*::]*/: { /* n:\"BrtEndSlicerCacheDef\", */ T:-1 },\n\t/*::[*/0x0437/*::]*/: { /* n:\"BrtBeginSlicersEx\", */ T:1 },\n\t/*::[*/0x0438/*::]*/: { /* n:\"BrtEndSlicersEx\", */ T:-1 },\n\t/*::[*/0x0439/*::]*/: { /* n:\"BrtBeginSlicerEx\", */ T:1 },\n\t/*::[*/0x043A/*::]*/: { /* n:\"BrtEndSlicerEx\", */ T:-1 },\n\t/*::[*/0x043B/*::]*/: { /* n:\"BrtBeginSlicer\", */ T:1 },\n\t/*::[*/0x043C/*::]*/: { /* n:\"BrtEndSlicer\", */ T:-1 },\n\t/*::[*/0x043D/*::]*/: { /* n:\"BrtSlicerCachePivotTables\" */ },\n\t/*::[*/0x043E/*::]*/: { /* n:\"BrtBeginSlicerCacheOlapImpl\", */ T:1 },\n\t/*::[*/0x043F/*::]*/: { /* n:\"BrtEndSlicerCacheOlapImpl\", */ T:-1 },\n\t/*::[*/0x0440/*::]*/: { /* n:\"BrtBeginSlicerCacheLevelsData\", */ T:1 },\n\t/*::[*/0x0441/*::]*/: { /* n:\"BrtEndSlicerCacheLevelsData\", */ T:-1 },\n\t/*::[*/0x0442/*::]*/: { /* n:\"BrtBeginSlicerCacheLevelData\", */ T:1 },\n\t/*::[*/0x0443/*::]*/: { /* n:\"BrtEndSlicerCacheLevelData\", */ T:-1 },\n\t/*::[*/0x0444/*::]*/: { /* n:\"BrtBeginSlicerCacheSiRanges\", */ T:1 },\n\t/*::[*/0x0445/*::]*/: { /* n:\"BrtEndSlicerCacheSiRanges\", */ T:-1 },\n\t/*::[*/0x0446/*::]*/: { /* n:\"BrtBeginSlicerCacheSiRange\", */ T:1 },\n\t/*::[*/0x0447/*::]*/: { /* n:\"BrtEndSlicerCacheSiRange\", */ T:-1 },\n\t/*::[*/0x0448/*::]*/: { /* n:\"BrtSlicerCacheOlapItem\" */ },\n\t/*::[*/0x0449/*::]*/: { /* n:\"BrtBeginSlicerCacheSelections\", */ T:1 },\n\t/*::[*/0x044A/*::]*/: { /* n:\"BrtSlicerCacheSelection\" */ },\n\t/*::[*/0x044B/*::]*/: { /* n:\"BrtEndSlicerCacheSelections\", */ T:-1 },\n\t/*::[*/0x044C/*::]*/: { /* n:\"BrtBeginSlicerCacheNative\", */ T:1 },\n\t/*::[*/0x044D/*::]*/: { /* n:\"BrtEndSlicerCacheNative\", */ T:-1 },\n\t/*::[*/0x044E/*::]*/: { /* n:\"BrtSlicerCacheNativeItem\" */ },\n\t/*::[*/0x044F/*::]*/: { /* n:\"BrtRangeProtection14\" */ },\n\t/*::[*/0x0450/*::]*/: { /* n:\"BrtRangeProtectionIso14\" */ },\n\t/*::[*/0x0451/*::]*/: { /* n:\"BrtCellIgnoreEC14\" */ },\n\t/*::[*/0x0457/*::]*/: { /* n:\"BrtList14\" */ },\n\t/*::[*/0x0458/*::]*/: { /* n:\"BrtCFIcon\" */ },\n\t/*::[*/0x0459/*::]*/: { /* n:\"BrtBeginSlicerCachesPivotCacheIDs\", */ T:1 },\n\t/*::[*/0x045A/*::]*/: { /* n:\"BrtEndSlicerCachesPivotCacheIDs\", */ T:-1 },\n\t/*::[*/0x045B/*::]*/: { /* n:\"BrtBeginSlicers\", */ T:1 },\n\t/*::[*/0x045C/*::]*/: { /* n:\"BrtEndSlicers\", */ T:-1 },\n\t/*::[*/0x045D/*::]*/: { /* n:\"BrtWbProp14\" */ },\n\t/*::[*/0x045E/*::]*/: { /* n:\"BrtBeginSXEdit\", */ T:1 },\n\t/*::[*/0x045F/*::]*/: { /* n:\"BrtEndSXEdit\", */ T:-1 },\n\t/*::[*/0x0460/*::]*/: { /* n:\"BrtBeginSXEdits\", */ T:1 },\n\t/*::[*/0x0461/*::]*/: { /* n:\"BrtEndSXEdits\", */ T:-1 },\n\t/*::[*/0x0462/*::]*/: { /* n:\"BrtBeginSXChange\", */ T:1 },\n\t/*::[*/0x0463/*::]*/: { /* n:\"BrtEndSXChange\", */ T:-1 },\n\t/*::[*/0x0464/*::]*/: { /* n:\"BrtBeginSXChanges\", */ T:1 },\n\t/*::[*/0x0465/*::]*/: { /* n:\"BrtEndSXChanges\", */ T:-1 },\n\t/*::[*/0x0466/*::]*/: { /* n:\"BrtSXTupleItems\" */ },\n\t/*::[*/0x0468/*::]*/: { /* n:\"BrtBeginSlicerStyle\", */ T:1 },\n\t/*::[*/0x0469/*::]*/: { /* n:\"BrtEndSlicerStyle\", */ T:-1 },\n\t/*::[*/0x046A/*::]*/: { /* n:\"BrtSlicerStyleElement\" */ },\n\t/*::[*/0x046B/*::]*/: { /* n:\"BrtBeginStyleSheetExt14\", */ T:1 },\n\t/*::[*/0x046C/*::]*/: { /* n:\"BrtEndStyleSheetExt14\", */ T:-1 },\n\t/*::[*/0x046D/*::]*/: { /* n:\"BrtBeginSlicerCachesPivotCacheID\", */ T:1 },\n\t/*::[*/0x046E/*::]*/: { /* n:\"BrtEndSlicerCachesPivotCacheID\", */ T:-1 },\n\t/*::[*/0x046F/*::]*/: { /* n:\"BrtBeginConditionalFormattings\", */ T:1 },\n\t/*::[*/0x0470/*::]*/: { /* n:\"BrtEndConditionalFormattings\", */ T:-1 },\n\t/*::[*/0x0471/*::]*/: { /* n:\"BrtBeginPCDCalcMemExt\", */ T:1 },\n\t/*::[*/0x0472/*::]*/: { /* n:\"BrtEndPCDCalcMemExt\", */ T:-1 },\n\t/*::[*/0x0473/*::]*/: { /* n:\"BrtBeginPCDCalcMemsExt\", */ T:1 },\n\t/*::[*/0x0474/*::]*/: { /* n:\"BrtEndPCDCalcMemsExt\", */ T:-1 },\n\t/*::[*/0x0475/*::]*/: { /* n:\"BrtPCDField14\" */ },\n\t/*::[*/0x0476/*::]*/: { /* n:\"BrtBeginSlicerStyles\", */ T:1 },\n\t/*::[*/0x0477/*::]*/: { /* n:\"BrtEndSlicerStyles\", */ T:-1 },\n\t/*::[*/0x0478/*::]*/: { /* n:\"BrtBeginSlicerStyleElements\", */ T:1 },\n\t/*::[*/0x0479/*::]*/: { /* n:\"BrtEndSlicerStyleElements\", */ T:-1 },\n\t/*::[*/0x047A/*::]*/: { /* n:\"BrtCFRuleExt\" */ },\n\t/*::[*/0x047B/*::]*/: { /* n:\"BrtBeginSXCondFmt14\", */ T:1 },\n\t/*::[*/0x047C/*::]*/: { /* n:\"BrtEndSXCondFmt14\", */ T:-1 },\n\t/*::[*/0x047D/*::]*/: { /* n:\"BrtBeginSXCondFmts14\", */ T:1 },\n\t/*::[*/0x047E/*::]*/: { /* n:\"BrtEndSXCondFmts14\", */ T:-1 },\n\t/*::[*/0x0480/*::]*/: { /* n:\"BrtBeginSortCond14\", */ T:1 },\n\t/*::[*/0x0481/*::]*/: { /* n:\"BrtEndSortCond14\", */ T:-1 },\n\t/*::[*/0x0482/*::]*/: { /* n:\"BrtEndDVals14\", */ T:-1 },\n\t/*::[*/0x0483/*::]*/: { /* n:\"BrtEndIconSet14\", */ T:-1 },\n\t/*::[*/0x0484/*::]*/: { /* n:\"BrtEndDatabar14\", */ T:-1 },\n\t/*::[*/0x0485/*::]*/: { /* n:\"BrtBeginColorScale14\", */ T:1 },\n\t/*::[*/0x0486/*::]*/: { /* n:\"BrtEndColorScale14\", */ T:-1 },\n\t/*::[*/0x0487/*::]*/: { /* n:\"BrtBeginSxrules14\", */ T:1 },\n\t/*::[*/0x0488/*::]*/: { /* n:\"BrtEndSxrules14\", */ T:-1 },\n\t/*::[*/0x0489/*::]*/: { /* n:\"BrtBeginPRule14\", */ T:1 },\n\t/*::[*/0x048A/*::]*/: { /* n:\"BrtEndPRule14\", */ T:-1 },\n\t/*::[*/0x048B/*::]*/: { /* n:\"BrtBeginPRFilters14\", */ T:1 },\n\t/*::[*/0x048C/*::]*/: { /* n:\"BrtEndPRFilters14\", */ T:-1 },\n\t/*::[*/0x048D/*::]*/: { /* n:\"BrtBeginPRFilter14\", */ T:1 },\n\t/*::[*/0x048E/*::]*/: { /* n:\"BrtEndPRFilter14\", */ T:-1 },\n\t/*::[*/0x048F/*::]*/: { /* n:\"BrtBeginPRFItem14\", */ T:1 },\n\t/*::[*/0x0490/*::]*/: { /* n:\"BrtEndPRFItem14\", */ T:-1 },\n\t/*::[*/0x0491/*::]*/: { /* n:\"BrtBeginCellIgnoreECs14\", */ T:1 },\n\t/*::[*/0x0492/*::]*/: { /* n:\"BrtEndCellIgnoreECs14\", */ T:-1 },\n\t/*::[*/0x0493/*::]*/: { /* n:\"BrtDxf14\" */ },\n\t/*::[*/0x0494/*::]*/: { /* n:\"BrtBeginDxF14s\", */ T:1 },\n\t/*::[*/0x0495/*::]*/: { /* n:\"BrtEndDxf14s\", */ T:-1 },\n\t/*::[*/0x0499/*::]*/: { /* n:\"BrtFilter14\" */ },\n\t/*::[*/0x049A/*::]*/: { /* n:\"BrtBeginCustomFilters14\", */ T:1 },\n\t/*::[*/0x049C/*::]*/: { /* n:\"BrtCustomFilter14\" */ },\n\t/*::[*/0x049D/*::]*/: { /* n:\"BrtIconFilter14\" */ },\n\t/*::[*/0x049E/*::]*/: { /* n:\"BrtPivotCacheConnectionName\" */ },\n\t/*::[*/0x0800/*::]*/: { /* n:\"BrtBeginDecoupledPivotCacheIDs\", */ T:1 },\n\t/*::[*/0x0801/*::]*/: { /* n:\"BrtEndDecoupledPivotCacheIDs\", */ T:-1 },\n\t/*::[*/0x0802/*::]*/: { /* n:\"BrtDecoupledPivotCacheID\" */ },\n\t/*::[*/0x0803/*::]*/: { /* n:\"BrtBeginPivotTableRefs\", */ T:1 },\n\t/*::[*/0x0804/*::]*/: { /* n:\"BrtEndPivotTableRefs\", */ T:-1 },\n\t/*::[*/0x0805/*::]*/: { /* n:\"BrtPivotTableRef\" */ },\n\t/*::[*/0x0806/*::]*/: { /* n:\"BrtSlicerCacheBookPivotTables\" */ },\n\t/*::[*/0x0807/*::]*/: { /* n:\"BrtBeginSxvcells\", */ T:1 },\n\t/*::[*/0x0808/*::]*/: { /* n:\"BrtEndSxvcells\", */ T:-1 },\n\t/*::[*/0x0809/*::]*/: { /* n:\"BrtBeginSxRow\", */ T:1 },\n\t/*::[*/0x080A/*::]*/: { /* n:\"BrtEndSxRow\", */ T:-1 },\n\t/*::[*/0x080C/*::]*/: { /* n:\"BrtPcdCalcMem15\" */ },\n\t/*::[*/0x0813/*::]*/: { /* n:\"BrtQsi15\" */ },\n\t/*::[*/0x0814/*::]*/: { /* n:\"BrtBeginWebExtensions\", */ T:1 },\n\t/*::[*/0x0815/*::]*/: { /* n:\"BrtEndWebExtensions\", */ T:-1 },\n\t/*::[*/0x0816/*::]*/: { /* n:\"BrtWebExtension\" */ },\n\t/*::[*/0x0817/*::]*/: { /* n:\"BrtAbsPath15\" */ },\n\t/*::[*/0x0818/*::]*/: { /* n:\"BrtBeginPivotTableUISettings\", */ T:1 },\n\t/*::[*/0x0819/*::]*/: { /* n:\"BrtEndPivotTableUISettings\", */ T:-1 },\n\t/*::[*/0x081B/*::]*/: { /* n:\"BrtTableSlicerCacheIDs\" */ },\n\t/*::[*/0x081C/*::]*/: { /* n:\"BrtTableSlicerCacheID\" */ },\n\t/*::[*/0x081D/*::]*/: { /* n:\"BrtBeginTableSlicerCache\", */ T:1 },\n\t/*::[*/0x081E/*::]*/: { /* n:\"BrtEndTableSlicerCache\", */ T:-1 },\n\t/*::[*/0x081F/*::]*/: { /* n:\"BrtSxFilter15\" */ },\n\t/*::[*/0x0820/*::]*/: { /* n:\"BrtBeginTimelineCachePivotCacheIDs\", */ T:1 },\n\t/*::[*/0x0821/*::]*/: { /* n:\"BrtEndTimelineCachePivotCacheIDs\", */ T:-1 },\n\t/*::[*/0x0822/*::]*/: { /* n:\"BrtTimelineCachePivotCacheID\" */ },\n\t/*::[*/0x0823/*::]*/: { /* n:\"BrtBeginTimelineCacheIDs\", */ T:1 },\n\t/*::[*/0x0824/*::]*/: { /* n:\"BrtEndTimelineCacheIDs\", */ T:-1 },\n\t/*::[*/0x0825/*::]*/: { /* n:\"BrtBeginTimelineCacheID\", */ T:1 },\n\t/*::[*/0x0826/*::]*/: { /* n:\"BrtEndTimelineCacheID\", */ T:-1 },\n\t/*::[*/0x0827/*::]*/: { /* n:\"BrtBeginTimelinesEx\", */ T:1 },\n\t/*::[*/0x0828/*::]*/: { /* n:\"BrtEndTimelinesEx\", */ T:-1 },\n\t/*::[*/0x0829/*::]*/: { /* n:\"BrtBeginTimelineEx\", */ T:1 },\n\t/*::[*/0x082A/*::]*/: { /* n:\"BrtEndTimelineEx\", */ T:-1 },\n\t/*::[*/0x082B/*::]*/: { /* n:\"BrtWorkBookPr15\" */ },\n\t/*::[*/0x082C/*::]*/: { /* n:\"BrtPCDH15\" */ },\n\t/*::[*/0x082D/*::]*/: { /* n:\"BrtBeginTimelineStyle\", */ T:1 },\n\t/*::[*/0x082E/*::]*/: { /* n:\"BrtEndTimelineStyle\", */ T:-1 },\n\t/*::[*/0x082F/*::]*/: { /* n:\"BrtTimelineStyleElement\" */ },\n\t/*::[*/0x0830/*::]*/: { /* n:\"BrtBeginTimelineStylesheetExt15\", */ T:1 },\n\t/*::[*/0x0831/*::]*/: { /* n:\"BrtEndTimelineStylesheetExt15\", */ T:-1 },\n\t/*::[*/0x0832/*::]*/: { /* n:\"BrtBeginTimelineStyles\", */ T:1 },\n\t/*::[*/0x0833/*::]*/: { /* n:\"BrtEndTimelineStyles\", */ T:-1 },\n\t/*::[*/0x0834/*::]*/: { /* n:\"BrtBeginTimelineStyleElements\", */ T:1 },\n\t/*::[*/0x0835/*::]*/: { /* n:\"BrtEndTimelineStyleElements\", */ T:-1 },\n\t/*::[*/0x0836/*::]*/: { /* n:\"BrtDxf15\" */ },\n\t/*::[*/0x0837/*::]*/: { /* n:\"BrtBeginDxfs15\", */ T:1 },\n\t/*::[*/0x0838/*::]*/: { /* n:\"BrtEndDxfs15\", */ T:-1 },\n\t/*::[*/0x0839/*::]*/: { /* n:\"BrtSlicerCacheHideItemsWithNoData\" */ },\n\t/*::[*/0x083A/*::]*/: { /* n:\"BrtBeginItemUniqueNames\", */ T:1 },\n\t/*::[*/0x083B/*::]*/: { /* n:\"BrtEndItemUniqueNames\", */ T:-1 },\n\t/*::[*/0x083C/*::]*/: { /* n:\"BrtItemUniqueName\" */ },\n\t/*::[*/0x083D/*::]*/: { /* n:\"BrtBeginExtConn15\", */ T:1 },\n\t/*::[*/0x083E/*::]*/: { /* n:\"BrtEndExtConn15\", */ T:-1 },\n\t/*::[*/0x083F/*::]*/: { /* n:\"BrtBeginOledbPr15\", */ T:1 },\n\t/*::[*/0x0840/*::]*/: { /* n:\"BrtEndOledbPr15\", */ T:-1 },\n\t/*::[*/0x0841/*::]*/: { /* n:\"BrtBeginDataFeedPr15\", */ T:1 },\n\t/*::[*/0x0842/*::]*/: { /* n:\"BrtEndDataFeedPr15\", */ T:-1 },\n\t/*::[*/0x0843/*::]*/: { /* n:\"BrtTextPr15\" */ },\n\t/*::[*/0x0844/*::]*/: { /* n:\"BrtRangePr15\" */ },\n\t/*::[*/0x0845/*::]*/: { /* n:\"BrtDbCommand15\" */ },\n\t/*::[*/0x0846/*::]*/: { /* n:\"BrtBeginDbTables15\", */ T:1 },\n\t/*::[*/0x0847/*::]*/: { /* n:\"BrtEndDbTables15\", */ T:-1 },\n\t/*::[*/0x0848/*::]*/: { /* n:\"BrtDbTable15\" */ },\n\t/*::[*/0x0849/*::]*/: { /* n:\"BrtBeginDataModel\", */ T:1 },\n\t/*::[*/0x084A/*::]*/: { /* n:\"BrtEndDataModel\", */ T:-1 },\n\t/*::[*/0x084B/*::]*/: { /* n:\"BrtBeginModelTables\", */ T:1 },\n\t/*::[*/0x084C/*::]*/: { /* n:\"BrtEndModelTables\", */ T:-1 },\n\t/*::[*/0x084D/*::]*/: { /* n:\"BrtModelTable\" */ },\n\t/*::[*/0x084E/*::]*/: { /* n:\"BrtBeginModelRelationships\", */ T:1 },\n\t/*::[*/0x084F/*::]*/: { /* n:\"BrtEndModelRelationships\", */ T:-1 },\n\t/*::[*/0x0850/*::]*/: { /* n:\"BrtModelRelationship\" */ },\n\t/*::[*/0x0851/*::]*/: { /* n:\"BrtBeginECTxtWiz15\", */ T:1 },\n\t/*::[*/0x0852/*::]*/: { /* n:\"BrtEndECTxtWiz15\", */ T:-1 },\n\t/*::[*/0x0853/*::]*/: { /* n:\"BrtBeginECTWFldInfoLst15\", */ T:1 },\n\t/*::[*/0x0854/*::]*/: { /* n:\"BrtEndECTWFldInfoLst15\", */ T:-1 },\n\t/*::[*/0x0855/*::]*/: { /* n:\"BrtBeginECTWFldInfo15\", */ T:1 },\n\t/*::[*/0x0856/*::]*/: { /* n:\"BrtFieldListActiveItem\" */ },\n\t/*::[*/0x0857/*::]*/: { /* n:\"BrtPivotCacheIdVersion\" */ },\n\t/*::[*/0x0858/*::]*/: { /* n:\"BrtSXDI15\" */ },\n\t/*::[*/0x0859/*::]*/: { /* n:\"BrtBeginModelTimeGroupings\", */ T:1 },\n\t/*::[*/0x085A/*::]*/: { /* n:\"BrtEndModelTimeGroupings\", */ T:-1 },\n\t/*::[*/0x085B/*::]*/: { /* n:\"BrtBeginModelTimeGrouping\", */ T:1 },\n\t/*::[*/0x085C/*::]*/: { /* n:\"BrtEndModelTimeGrouping\", */ T:-1 },\n\t/*::[*/0x085D/*::]*/: { /* n:\"BrtModelTimeGroupingCalcCol\" */ },\n\t/*::[*/0x0C00/*::]*/: { /* n:\"BrtUid\" */ },\n\t/*::[*/0x0C01/*::]*/: { /* n:\"BrtRevisionPtr\" */ },\n\t/*::[*/0x1000/*::]*/: { /* n:\"BrtBeginDynamicArrayPr\", */ T:1 },\n\t/*::[*/0x1001/*::]*/: { /* n:\"BrtEndDynamicArrayPr\", */ T:-1 },\n\t/*::[*/0x138A/*::]*/: { /* n:\"BrtBeginRichValueBlock\", */ T:1 },\n\t/*::[*/0x138B/*::]*/: { /* n:\"BrtEndRichValueBlock\", */ T:-1 },\n\t/*::[*/0x13D9/*::]*/: { /* n:\"BrtBeginRichFilters\", */ T:1 },\n\t/*::[*/0x13DA/*::]*/: { /* n:\"BrtEndRichFilters\", */ T:-1 },\n\t/*::[*/0x13DB/*::]*/: { /* n:\"BrtRichFilter\" */ },\n\t/*::[*/0x13DC/*::]*/: { /* n:\"BrtBeginRichFilterColumn\", */ T:1 },\n\t/*::[*/0x13DD/*::]*/: { /* n:\"BrtEndRichFilterColumn\", */ T:-1 },\n\t/*::[*/0x13DE/*::]*/: { /* n:\"BrtBeginCustomRichFilters\", */ T:1 },\n\t/*::[*/0x13DF/*::]*/: { /* n:\"BrtEndCustomRichFilters\", */ T:-1 },\n\t/*::[*/0x13E0/*::]*/: { /* n:\"BrtCustomRichFilter\" */ },\n\t/*::[*/0x13E1/*::]*/: { /* n:\"BrtTop10RichFilter\" */ },\n\t/*::[*/0x13E2/*::]*/: { /* n:\"BrtDynamicRichFilter\" */ },\n\t/*::[*/0x13E4/*::]*/: { /* n:\"BrtBeginRichSortCondition\", */ T:1 },\n\t/*::[*/0x13E5/*::]*/: { /* n:\"BrtEndRichSortCondition\", */ T:-1 },\n\t/*::[*/0x13E6/*::]*/: { /* n:\"BrtRichFilterDateGroupItem\" */ },\n\t/*::[*/0x13E7/*::]*/: { /* n:\"BrtBeginCalcFeatures\", */ T:1 },\n\t/*::[*/0x13E8/*::]*/: { /* n:\"BrtEndCalcFeatures\", */ T:-1 },\n\t/*::[*/0x13E9/*::]*/: { /* n:\"BrtCalcFeature\" */ },\n\t/*::[*/0x13EB/*::]*/: { /* n:\"BrtExternalLinksPr\" */ },\n\t/*::[*/0xFFFF/*::]*/: { n:\"\" }\n};\n\n/* [MS-XLS] 2.3 Record Enumeration (and other sources) */\nvar XLSRecordEnum = {\n\t/* [MS-XLS] 2.3 Record Enumeration 2021-08-17 */\n\t/*::[*/0x0006/*::]*/: { /* n:\"Formula\", */ f:parse_Formula },\n\t/*::[*/0x000a/*::]*/: { /* n:\"EOF\", */ f:parsenoop2 },\n\t/*::[*/0x000c/*::]*/: { /* n:\"CalcCount\", */ f:parseuint16 }, //\n\t/*::[*/0x000d/*::]*/: { /* n:\"CalcMode\", */ f:parseuint16 }, //\n\t/*::[*/0x000e/*::]*/: { /* n:\"CalcPrecision\", */ f:parsebool }, //\n\t/*::[*/0x000f/*::]*/: { /* n:\"CalcRefMode\", */ f:parsebool }, //\n\t/*::[*/0x0010/*::]*/: { /* n:\"CalcDelta\", */ f:parse_Xnum }, //\n\t/*::[*/0x0011/*::]*/: { /* n:\"CalcIter\", */ f:parsebool }, //\n\t/*::[*/0x0012/*::]*/: { /* n:\"Protect\", */ f:parsebool },\n\t/*::[*/0x0013/*::]*/: { /* n:\"Password\", */ f:parseuint16 },\n\t/*::[*/0x0014/*::]*/: { /* n:\"Header\", */ f:parse_XLHeaderFooter },\n\t/*::[*/0x0015/*::]*/: { /* n:\"Footer\", */ f:parse_XLHeaderFooter },\n\t/*::[*/0x0017/*::]*/: { /* n:\"ExternSheet\", */ f:parse_ExternSheet },\n\t/*::[*/0x0018/*::]*/: { /* n:\"Lbl\", */ f:parse_Lbl },\n\t/*::[*/0x0019/*::]*/: { /* n:\"WinProtect\", */ f:parsebool },\n\t/*::[*/0x001a/*::]*/: { /* n:\"VerticalPageBreaks\", */ },\n\t/*::[*/0x001b/*::]*/: { /* n:\"HorizontalPageBreaks\", */ },\n\t/*::[*/0x001c/*::]*/: { /* n:\"Note\", */ f:parse_Note },\n\t/*::[*/0x001d/*::]*/: { /* n:\"Selection\", */ },\n\t/*::[*/0x0022/*::]*/: { /* n:\"Date1904\", */ f:parsebool },\n\t/*::[*/0x0023/*::]*/: { /* n:\"ExternName\", */ f:parse_ExternName },\n\t/*::[*/0x0026/*::]*/: { /* n:\"LeftMargin\", */ f:parse_Xnum }, // *\n\t/*::[*/0x0027/*::]*/: { /* n:\"RightMargin\", */ f:parse_Xnum }, // *\n\t/*::[*/0x0028/*::]*/: { /* n:\"TopMargin\", */ f:parse_Xnum }, // *\n\t/*::[*/0x0029/*::]*/: { /* n:\"BottomMargin\", */ f:parse_Xnum }, // *\n\t/*::[*/0x002a/*::]*/: { /* n:\"PrintRowCol\", */ f:parsebool },\n\t/*::[*/0x002b/*::]*/: { /* n:\"PrintGrid\", */ f:parsebool },\n\t/*::[*/0x002f/*::]*/: { /* n:\"FilePass\", */ f:parse_FilePass },\n\t/*::[*/0x0031/*::]*/: { /* n:\"Font\", */ f:parse_Font },\n\t/*::[*/0x0033/*::]*/: { /* n:\"PrintSize\", */ f:parseuint16 },\n\t/*::[*/0x003c/*::]*/: { /* n:\"Continue\", */ },\n\t/*::[*/0x003d/*::]*/: { /* n:\"Window1\", */ f:parse_Window1 },\n\t/*::[*/0x0040/*::]*/: { /* n:\"Backup\", */ f:parsebool },\n\t/*::[*/0x0041/*::]*/: { /* n:\"Pane\", */ f:parse_Pane },\n\t/*::[*/0x0042/*::]*/: { /* n:\"CodePage\", */ f:parseuint16 },\n\t/*::[*/0x004d/*::]*/: { /* n:\"Pls\", */ },\n\t/*::[*/0x0050/*::]*/: { /* n:\"DCon\", */ },\n\t/*::[*/0x0051/*::]*/: { /* n:\"DConRef\", */ },\n\t/*::[*/0x0052/*::]*/: { /* n:\"DConName\", */ },\n\t/*::[*/0x0055/*::]*/: { /* n:\"DefColWidth\", */ f:parseuint16 },\n\t/*::[*/0x0059/*::]*/: { /* n:\"XCT\", */ },\n\t/*::[*/0x005a/*::]*/: { /* n:\"CRN\", */ },\n\t/*::[*/0x005b/*::]*/: { /* n:\"FileSharing\", */ },\n\t/*::[*/0x005c/*::]*/: { /* n:\"WriteAccess\", */ f:parse_WriteAccess },\n\t/*::[*/0x005d/*::]*/: { /* n:\"Obj\", */ f:parse_Obj },\n\t/*::[*/0x005e/*::]*/: { /* n:\"Uncalced\", */ },\n\t/*::[*/0x005f/*::]*/: { /* n:\"CalcSaveRecalc\", */ f:parsebool }, //\n\t/*::[*/0x0060/*::]*/: { /* n:\"Template\", */ },\n\t/*::[*/0x0061/*::]*/: { /* n:\"Intl\", */ },\n\t/*::[*/0x0063/*::]*/: { /* n:\"ObjProtect\", */ f:parsebool },\n\t/*::[*/0x007d/*::]*/: { /* n:\"ColInfo\", */ f:parse_ColInfo },\n\t/*::[*/0x0080/*::]*/: { /* n:\"Guts\", */ f:parse_Guts },\n\t/*::[*/0x0081/*::]*/: { /* n:\"WsBool\", */ f:parse_WsBool },\n\t/*::[*/0x0082/*::]*/: { /* n:\"GridSet\", */ f:parseuint16 },\n\t/*::[*/0x0083/*::]*/: { /* n:\"HCenter\", */ f:parsebool },\n\t/*::[*/0x0084/*::]*/: { /* n:\"VCenter\", */ f:parsebool },\n\t/*::[*/0x0085/*::]*/: { /* n:\"BoundSheet8\", */ f:parse_BoundSheet8 },\n\t/*::[*/0x0086/*::]*/: { /* n:\"WriteProtect\", */ },\n\t/*::[*/0x008c/*::]*/: { /* n:\"Country\", */ f:parse_Country },\n\t/*::[*/0x008d/*::]*/: { /* n:\"HideObj\", */ f:parseuint16 },\n\t/*::[*/0x0090/*::]*/: { /* n:\"Sort\", */ },\n\t/*::[*/0x0092/*::]*/: { /* n:\"Palette\", */ f:parse_Palette },\n\t/*::[*/0x0097/*::]*/: { /* n:\"Sync\", */ },\n\t/*::[*/0x0098/*::]*/: { /* n:\"LPr\", */ },\n\t/*::[*/0x0099/*::]*/: { /* n:\"DxGCol\", */ },\n\t/*::[*/0x009a/*::]*/: { /* n:\"FnGroupName\", */ },\n\t/*::[*/0x009b/*::]*/: { /* n:\"FilterMode\", */ },\n\t/*::[*/0x009c/*::]*/: { /* n:\"BuiltInFnGroupCount\", */ f:parseuint16 },\n\t/*::[*/0x009d/*::]*/: { /* n:\"AutoFilterInfo\", */ },\n\t/*::[*/0x009e/*::]*/: { /* n:\"AutoFilter\", */ },\n\t/*::[*/0x00a0/*::]*/: { /* n:\"Scl\", */ f:parse_Scl },\n\t/*::[*/0x00a1/*::]*/: { /* n:\"Setup\", */ f:parse_Setup },\n\t/*::[*/0x00ae/*::]*/: { /* n:\"ScenMan\", */ },\n\t/*::[*/0x00af/*::]*/: { /* n:\"SCENARIO\", */ },\n\t/*::[*/0x00b0/*::]*/: { /* n:\"SxView\", */ },\n\t/*::[*/0x00b1/*::]*/: { /* n:\"Sxvd\", */ },\n\t/*::[*/0x00b2/*::]*/: { /* n:\"SXVI\", */ },\n\t/*::[*/0x00b4/*::]*/: { /* n:\"SxIvd\", */ },\n\t/*::[*/0x00b5/*::]*/: { /* n:\"SXLI\", */ },\n\t/*::[*/0x00b6/*::]*/: { /* n:\"SXPI\", */ },\n\t/*::[*/0x00b8/*::]*/: { /* n:\"DocRoute\", */ },\n\t/*::[*/0x00b9/*::]*/: { /* n:\"RecipName\", */ },\n\t/*::[*/0x00bd/*::]*/: { /* n:\"MulRk\", */ f:parse_MulRk },\n\t/*::[*/0x00be/*::]*/: { /* n:\"MulBlank\", */ f:parse_MulBlank },\n\t/*::[*/0x00c1/*::]*/: { /* n:\"Mms\", */ f:parsenoop2 },\n\t/*::[*/0x00c5/*::]*/: { /* n:\"SXDI\", */ },\n\t/*::[*/0x00c6/*::]*/: { /* n:\"SXDB\", */ },\n\t/*::[*/0x00c7/*::]*/: { /* n:\"SXFDB\", */ },\n\t/*::[*/0x00c8/*::]*/: { /* n:\"SXDBB\", */ },\n\t/*::[*/0x00c9/*::]*/: { /* n:\"SXNum\", */ },\n\t/*::[*/0x00ca/*::]*/: { /* n:\"SxBool\", */ f:parsebool },\n\t/*::[*/0x00cb/*::]*/: { /* n:\"SxErr\", */ },\n\t/*::[*/0x00cc/*::]*/: { /* n:\"SXInt\", */ },\n\t/*::[*/0x00cd/*::]*/: { /* n:\"SXString\", */ },\n\t/*::[*/0x00ce/*::]*/: { /* n:\"SXDtr\", */ },\n\t/*::[*/0x00cf/*::]*/: { /* n:\"SxNil\", */ },\n\t/*::[*/0x00d0/*::]*/: { /* n:\"SXTbl\", */ },\n\t/*::[*/0x00d1/*::]*/: { /* n:\"SXTBRGIITM\", */ },\n\t/*::[*/0x00d2/*::]*/: { /* n:\"SxTbpg\", */ },\n\t/*::[*/0x00d3/*::]*/: { /* n:\"ObProj\", */ },\n\t/*::[*/0x00d5/*::]*/: { /* n:\"SXStreamID\", */ },\n\t/*::[*/0x00d7/*::]*/: { /* n:\"DBCell\", */ },\n\t/*::[*/0x00d8/*::]*/: { /* n:\"SXRng\", */ },\n\t/*::[*/0x00d9/*::]*/: { /* n:\"SxIsxoper\", */ },\n\t/*::[*/0x00da/*::]*/: { /* n:\"BookBool\", */ f:parseuint16 },\n\t/*::[*/0x00dc/*::]*/: { /* n:\"DbOrParamQry\", */ },\n\t/*::[*/0x00dd/*::]*/: { /* n:\"ScenarioProtect\", */ f:parsebool },\n\t/*::[*/0x00de/*::]*/: { /* n:\"OleObjectSize\", */ },\n\t/*::[*/0x00e0/*::]*/: { /* n:\"XF\", */ f:parse_XF },\n\t/*::[*/0x00e1/*::]*/: { /* n:\"InterfaceHdr\", */ f:parse_InterfaceHdr },\n\t/*::[*/0x00e2/*::]*/: { /* n:\"InterfaceEnd\", */ f:parsenoop2 },\n\t/*::[*/0x00e3/*::]*/: { /* n:\"SXVS\", */ },\n\t/*::[*/0x00e5/*::]*/: { /* n:\"MergeCells\", */ f:parse_MergeCells },\n\t/*::[*/0x00e9/*::]*/: { /* n:\"BkHim\", */ },\n\t/*::[*/0x00eb/*::]*/: { /* n:\"MsoDrawingGroup\", */ },\n\t/*::[*/0x00ec/*::]*/: { /* n:\"MsoDrawing\", */ },\n\t/*::[*/0x00ed/*::]*/: { /* n:\"MsoDrawingSelection\", */ },\n\t/*::[*/0x00ef/*::]*/: { /* n:\"PhoneticInfo\", */ },\n\t/*::[*/0x00f0/*::]*/: { /* n:\"SxRule\", */ },\n\t/*::[*/0x00f1/*::]*/: { /* n:\"SXEx\", */ },\n\t/*::[*/0x00f2/*::]*/: { /* n:\"SxFilt\", */ },\n\t/*::[*/0x00f4/*::]*/: { /* n:\"SxDXF\", */ },\n\t/*::[*/0x00f5/*::]*/: { /* n:\"SxItm\", */ },\n\t/*::[*/0x00f6/*::]*/: { /* n:\"SxName\", */ },\n\t/*::[*/0x00f7/*::]*/: { /* n:\"SxSelect\", */ },\n\t/*::[*/0x00f8/*::]*/: { /* n:\"SXPair\", */ },\n\t/*::[*/0x00f9/*::]*/: { /* n:\"SxFmla\", */ },\n\t/*::[*/0x00fb/*::]*/: { /* n:\"SxFormat\", */ },\n\t/*::[*/0x00fc/*::]*/: { /* n:\"SST\", */ f:parse_SST },\n\t/*::[*/0x00fd/*::]*/: { /* n:\"LabelSst\", */ f:parse_LabelSst },\n\t/*::[*/0x00ff/*::]*/: { /* n:\"ExtSST\", */ f:parse_ExtSST },\n\t/*::[*/0x0100/*::]*/: { /* n:\"SXVDEx\", */ },\n\t/*::[*/0x0103/*::]*/: { /* n:\"SXFormula\", */ },\n\t/*::[*/0x0122/*::]*/: { /* n:\"SXDBEx\", */ },\n\t/*::[*/0x0137/*::]*/: { /* n:\"RRDInsDel\", */ },\n\t/*::[*/0x0138/*::]*/: { /* n:\"RRDHead\", */ },\n\t/*::[*/0x013b/*::]*/: { /* n:\"RRDChgCell\", */ },\n\t/*::[*/0x013d/*::]*/: { /* n:\"RRTabId\", */ f:parseuint16a },\n\t/*::[*/0x013e/*::]*/: { /* n:\"RRDRenSheet\", */ },\n\t/*::[*/0x013f/*::]*/: { /* n:\"RRSort\", */ },\n\t/*::[*/0x0140/*::]*/: { /* n:\"RRDMove\", */ },\n\t/*::[*/0x014a/*::]*/: { /* n:\"RRFormat\", */ },\n\t/*::[*/0x014b/*::]*/: { /* n:\"RRAutoFmt\", */ },\n\t/*::[*/0x014d/*::]*/: { /* n:\"RRInsertSh\", */ },\n\t/*::[*/0x014e/*::]*/: { /* n:\"RRDMoveBegin\", */ },\n\t/*::[*/0x014f/*::]*/: { /* n:\"RRDMoveEnd\", */ },\n\t/*::[*/0x0150/*::]*/: { /* n:\"RRDInsDelBegin\", */ },\n\t/*::[*/0x0151/*::]*/: { /* n:\"RRDInsDelEnd\", */ },\n\t/*::[*/0x0152/*::]*/: { /* n:\"RRDConflict\", */ },\n\t/*::[*/0x0153/*::]*/: { /* n:\"RRDDefName\", */ },\n\t/*::[*/0x0154/*::]*/: { /* n:\"RRDRstEtxp\", */ },\n\t/*::[*/0x015f/*::]*/: { /* n:\"LRng\", */ },\n\t/*::[*/0x0160/*::]*/: { /* n:\"UsesELFs\", */ f:parsebool },\n\t/*::[*/0x0161/*::]*/: { /* n:\"DSF\", */ f:parsenoop2 },\n\t/*::[*/0x0191/*::]*/: { /* n:\"CUsr\", */ },\n\t/*::[*/0x0192/*::]*/: { /* n:\"CbUsr\", */ },\n\t/*::[*/0x0193/*::]*/: { /* n:\"UsrInfo\", */ },\n\t/*::[*/0x0194/*::]*/: { /* n:\"UsrExcl\", */ },\n\t/*::[*/0x0195/*::]*/: { /* n:\"FileLock\", */ },\n\t/*::[*/0x0196/*::]*/: { /* n:\"RRDInfo\", */ },\n\t/*::[*/0x0197/*::]*/: { /* n:\"BCUsrs\", */ },\n\t/*::[*/0x0198/*::]*/: { /* n:\"UsrChk\", */ },\n\t/*::[*/0x01a9/*::]*/: { /* n:\"UserBView\", */ },\n\t/*::[*/0x01aa/*::]*/: { /* n:\"UserSViewBegin\", */ },\n\t/*::[*/0x01ab/*::]*/: { /* n:\"UserSViewEnd\", */ },\n\t/*::[*/0x01ac/*::]*/: { /* n:\"RRDUserView\", */ },\n\t/*::[*/0x01ad/*::]*/: { /* n:\"Qsi\", */ },\n\t/*::[*/0x01ae/*::]*/: { /* n:\"SupBook\", */ f:parse_SupBook },\n\t/*::[*/0x01af/*::]*/: { /* n:\"Prot4Rev\", */ f:parsebool },\n\t/*::[*/0x01b0/*::]*/: { /* n:\"CondFmt\", */ },\n\t/*::[*/0x01b1/*::]*/: { /* n:\"CF\", */ },\n\t/*::[*/0x01b2/*::]*/: { /* n:\"DVal\", */ },\n\t/*::[*/0x01b5/*::]*/: { /* n:\"DConBin\", */ },\n\t/*::[*/0x01b6/*::]*/: { /* n:\"TxO\", */ f:parse_TxO },\n\t/*::[*/0x01b7/*::]*/: { /* n:\"RefreshAll\", */ f:parsebool }, //\n\t/*::[*/0x01b8/*::]*/: { /* n:\"HLink\", */ f:parse_HLink },\n\t/*::[*/0x01b9/*::]*/: { /* n:\"Lel\", */ },\n\t/*::[*/0x01ba/*::]*/: { /* n:\"CodeName\", */ f:parse_XLUnicodeString },\n\t/*::[*/0x01bb/*::]*/: { /* n:\"SXFDBType\", */ },\n\t/*::[*/0x01bc/*::]*/: { /* n:\"Prot4RevPass\", */ f:parseuint16 },\n\t/*::[*/0x01bd/*::]*/: { /* n:\"ObNoMacros\", */ },\n\t/*::[*/0x01be/*::]*/: { /* n:\"Dv\", */ },\n\t/*::[*/0x01c0/*::]*/: { /* n:\"Excel9File\", */ f:parsenoop2 },\n\t/*::[*/0x01c1/*::]*/: { /* n:\"RecalcId\", */ f:parse_RecalcId, r:2},\n\t/*::[*/0x01c2/*::]*/: { /* n:\"EntExU2\", */ f:parsenoop2 },\n\t/*::[*/0x0200/*::]*/: { /* n:\"Dimensions\", */ f:parse_Dimensions },\n\t/*::[*/0x0201/*::]*/: { /* n:\"Blank\", */ f:parse_Blank },\n\t/*::[*/0x0203/*::]*/: { /* n:\"Number\", */ f:parse_Number },\n\t/*::[*/0x0204/*::]*/: { /* n:\"Label\", */ f:parse_Label },\n\t/*::[*/0x0205/*::]*/: { /* n:\"BoolErr\", */ f:parse_BoolErr },\n\t/*::[*/0x0207/*::]*/: { /* n:\"String\", */ f:parse_String },\n\t/*::[*/0x0208/*::]*/: { /* n:\"Row\", */ f:parse_Row },\n\t/*::[*/0x020b/*::]*/: { /* n:\"Index\", */ },\n\t/*::[*/0x0221/*::]*/: { /* n:\"Array\", */ f:parse_Array },\n\t/*::[*/0x0225/*::]*/: { /* n:\"DefaultRowHeight\", */ f:parse_DefaultRowHeight },\n\t/*::[*/0x0236/*::]*/: { /* n:\"Table\", */ },\n\t/*::[*/0x023e/*::]*/: { /* n:\"Window2\", */ f:parse_Window2 },\n\t/*::[*/0x027e/*::]*/: { /* n:\"RK\", */ f:parse_RK },\n\t/*::[*/0x0293/*::]*/: { /* n:\"Style\", */ },\n\t/*::[*/0x0418/*::]*/: { /* n:\"BigName\", */ },\n\t/*::[*/0x041e/*::]*/: { /* n:\"Format\", */ f:parse_Format },\n\t/*::[*/0x043c/*::]*/: { /* n:\"ContinueBigName\", */ },\n\t/*::[*/0x04bc/*::]*/: { /* n:\"ShrFmla\", */ f:parse_ShrFmla },\n\t/*::[*/0x0800/*::]*/: { /* n:\"HLinkTooltip\", */ f:parse_HLinkTooltip },\n\t/*::[*/0x0801/*::]*/: { /* n:\"WebPub\", */ },\n\t/*::[*/0x0802/*::]*/: { /* n:\"QsiSXTag\", */ },\n\t/*::[*/0x0803/*::]*/: { /* n:\"DBQueryExt\", */ },\n\t/*::[*/0x0804/*::]*/: { /* n:\"ExtString\", */ },\n\t/*::[*/0x0805/*::]*/: { /* n:\"TxtQry\", */ },\n\t/*::[*/0x0806/*::]*/: { /* n:\"Qsir\", */ },\n\t/*::[*/0x0807/*::]*/: { /* n:\"Qsif\", */ },\n\t/*::[*/0x0808/*::]*/: { /* n:\"RRDTQSIF\", */ },\n\t/*::[*/0x0809/*::]*/: { /* n:\"BOF\", */ f:parse_BOF },\n\t/*::[*/0x080a/*::]*/: { /* n:\"OleDbConn\", */ },\n\t/*::[*/0x080b/*::]*/: { /* n:\"WOpt\", */ },\n\t/*::[*/0x080c/*::]*/: { /* n:\"SXViewEx\", */ },\n\t/*::[*/0x080d/*::]*/: { /* n:\"SXTH\", */ },\n\t/*::[*/0x080e/*::]*/: { /* n:\"SXPIEx\", */ },\n\t/*::[*/0x080f/*::]*/: { /* n:\"SXVDTEx\", */ },\n\t/*::[*/0x0810/*::]*/: { /* n:\"SXViewEx9\", */ },\n\t/*::[*/0x0812/*::]*/: { /* n:\"ContinueFrt\", */ },\n\t/*::[*/0x0813/*::]*/: { /* n:\"RealTimeData\", */ },\n\t/*::[*/0x0850/*::]*/: { /* n:\"ChartFrtInfo\", */ },\n\t/*::[*/0x0851/*::]*/: { /* n:\"FrtWrapper\", */ },\n\t/*::[*/0x0852/*::]*/: { /* n:\"StartBlock\", */ },\n\t/*::[*/0x0853/*::]*/: { /* n:\"EndBlock\", */ },\n\t/*::[*/0x0854/*::]*/: { /* n:\"StartObject\", */ },\n\t/*::[*/0x0855/*::]*/: { /* n:\"EndObject\", */ },\n\t/*::[*/0x0856/*::]*/: { /* n:\"CatLab\", */ },\n\t/*::[*/0x0857/*::]*/: { /* n:\"YMult\", */ },\n\t/*::[*/0x0858/*::]*/: { /* n:\"SXViewLink\", */ },\n\t/*::[*/0x0859/*::]*/: { /* n:\"PivotChartBits\", */ },\n\t/*::[*/0x085a/*::]*/: { /* n:\"FrtFontList\", */ },\n\t/*::[*/0x0862/*::]*/: { /* n:\"SheetExt\", */ },\n\t/*::[*/0x0863/*::]*/: { /* n:\"BookExt\", */ r:12},\n\t/*::[*/0x0864/*::]*/: { /* n:\"SXAddl\", */ },\n\t/*::[*/0x0865/*::]*/: { /* n:\"CrErr\", */ },\n\t/*::[*/0x0866/*::]*/: { /* n:\"HFPicture\", */ },\n\t/*::[*/0x0867/*::]*/: { /* n:\"FeatHdr\", */ f:parsenoop2 },\n\t/*::[*/0x0868/*::]*/: { /* n:\"Feat\", */ },\n\t/*::[*/0x086a/*::]*/: { /* n:\"DataLabExt\", */ },\n\t/*::[*/0x086b/*::]*/: { /* n:\"DataLabExtContents\", */ },\n\t/*::[*/0x086c/*::]*/: { /* n:\"CellWatch\", */ },\n\t/*::[*/0x0871/*::]*/: { /* n:\"FeatHdr11\", */ },\n\t/*::[*/0x0872/*::]*/: { /* n:\"Feature11\", */ },\n\t/*::[*/0x0874/*::]*/: { /* n:\"DropDownObjIds\", */ },\n\t/*::[*/0x0875/*::]*/: { /* n:\"ContinueFrt11\", */ },\n\t/*::[*/0x0876/*::]*/: { /* n:\"DConn\", */ },\n\t/*::[*/0x0877/*::]*/: { /* n:\"List12\", */ },\n\t/*::[*/0x0878/*::]*/: { /* n:\"Feature12\", */ },\n\t/*::[*/0x0879/*::]*/: { /* n:\"CondFmt12\", */ },\n\t/*::[*/0x087a/*::]*/: { /* n:\"CF12\", */ },\n\t/*::[*/0x087b/*::]*/: { /* n:\"CFEx\", */ },\n\t/*::[*/0x087c/*::]*/: { /* n:\"XFCRC\", */ f:parse_XFCRC, r:12 },\n\t/*::[*/0x087d/*::]*/: { /* n:\"XFExt\", */ f:parse_XFExt, r:12 },\n\t/*::[*/0x087e/*::]*/: { /* n:\"AutoFilter12\", */ },\n\t/*::[*/0x087f/*::]*/: { /* n:\"ContinueFrt12\", */ },\n\t/*::[*/0x0884/*::]*/: { /* n:\"MDTInfo\", */ },\n\t/*::[*/0x0885/*::]*/: { /* n:\"MDXStr\", */ },\n\t/*::[*/0x0886/*::]*/: { /* n:\"MDXTuple\", */ },\n\t/*::[*/0x0887/*::]*/: { /* n:\"MDXSet\", */ },\n\t/*::[*/0x0888/*::]*/: { /* n:\"MDXProp\", */ },\n\t/*::[*/0x0889/*::]*/: { /* n:\"MDXKPI\", */ },\n\t/*::[*/0x088a/*::]*/: { /* n:\"MDB\", */ },\n\t/*::[*/0x088b/*::]*/: { /* n:\"PLV\", */ },\n\t/*::[*/0x088c/*::]*/: { /* n:\"Compat12\", */ f:parsebool, r:12 },\n\t/*::[*/0x088d/*::]*/: { /* n:\"DXF\", */ },\n\t/*::[*/0x088e/*::]*/: { /* n:\"TableStyles\", */ r:12 },\n\t/*::[*/0x088f/*::]*/: { /* n:\"TableStyle\", */ },\n\t/*::[*/0x0890/*::]*/: { /* n:\"TableStyleElement\", */ },\n\t/*::[*/0x0892/*::]*/: { /* n:\"StyleExt\", */ },\n\t/*::[*/0x0893/*::]*/: { /* n:\"NamePublish\", */ },\n\t/*::[*/0x0894/*::]*/: { /* n:\"NameCmt\", */ f:parse_NameCmt, r:12 },\n\t/*::[*/0x0895/*::]*/: { /* n:\"SortData\", */ },\n\t/*::[*/0x0896/*::]*/: { /* n:\"Theme\", */ f:parse_Theme, r:12 },\n\t/*::[*/0x0897/*::]*/: { /* n:\"GUIDTypeLib\", */ },\n\t/*::[*/0x0898/*::]*/: { /* n:\"FnGrp12\", */ },\n\t/*::[*/0x0899/*::]*/: { /* n:\"NameFnGrp12\", */ },\n\t/*::[*/0x089a/*::]*/: { /* n:\"MTRSettings\", */ f:parse_MTRSettings, r:12 },\n\t/*::[*/0x089b/*::]*/: { /* n:\"CompressPictures\", */ f:parsenoop2 },\n\t/*::[*/0x089c/*::]*/: { /* n:\"HeaderFooter\", */ },\n\t/*::[*/0x089d/*::]*/: { /* n:\"CrtLayout12\", */ },\n\t/*::[*/0x089e/*::]*/: { /* n:\"CrtMlFrt\", */ },\n\t/*::[*/0x089f/*::]*/: { /* n:\"CrtMlFrtContinue\", */ },\n\t/*::[*/0x08a3/*::]*/: { /* n:\"ForceFullCalculation\", */ f:parse_ForceFullCalculation },\n\t/*::[*/0x08a4/*::]*/: { /* n:\"ShapePropsStream\", */ },\n\t/*::[*/0x08a5/*::]*/: { /* n:\"TextPropsStream\", */ },\n\t/*::[*/0x08a6/*::]*/: { /* n:\"RichTextStream\", */ },\n\t/*::[*/0x08a7/*::]*/: { /* n:\"CrtLayout12A\", */ },\n\t/*::[*/0x1001/*::]*/: { /* n:\"Units\", */ },\n\t/*::[*/0x1002/*::]*/: { /* n:\"Chart\", */ },\n\t/*::[*/0x1003/*::]*/: { /* n:\"Series\", */ },\n\t/*::[*/0x1006/*::]*/: { /* n:\"DataFormat\", */ },\n\t/*::[*/0x1007/*::]*/: { /* n:\"LineFormat\", */ },\n\t/*::[*/0x1009/*::]*/: { /* n:\"MarkerFormat\", */ },\n\t/*::[*/0x100a/*::]*/: { /* n:\"AreaFormat\", */ },\n\t/*::[*/0x100b/*::]*/: { /* n:\"PieFormat\", */ },\n\t/*::[*/0x100c/*::]*/: { /* n:\"AttachedLabel\", */ },\n\t/*::[*/0x100d/*::]*/: { /* n:\"SeriesText\", */ },\n\t/*::[*/0x1014/*::]*/: { /* n:\"ChartFormat\", */ },\n\t/*::[*/0x1015/*::]*/: { /* n:\"Legend\", */ },\n\t/*::[*/0x1016/*::]*/: { /* n:\"SeriesList\", */ },\n\t/*::[*/0x1017/*::]*/: { /* n:\"Bar\", */ },\n\t/*::[*/0x1018/*::]*/: { /* n:\"Line\", */ },\n\t/*::[*/0x1019/*::]*/: { /* n:\"Pie\", */ },\n\t/*::[*/0x101a/*::]*/: { /* n:\"Area\", */ },\n\t/*::[*/0x101b/*::]*/: { /* n:\"Scatter\", */ },\n\t/*::[*/0x101c/*::]*/: { /* n:\"CrtLine\", */ },\n\t/*::[*/0x101d/*::]*/: { /* n:\"Axis\", */ },\n\t/*::[*/0x101e/*::]*/: { /* n:\"Tick\", */ },\n\t/*::[*/0x101f/*::]*/: { /* n:\"ValueRange\", */ },\n\t/*::[*/0x1020/*::]*/: { /* n:\"CatSerRange\", */ },\n\t/*::[*/0x1021/*::]*/: { /* n:\"AxisLine\", */ },\n\t/*::[*/0x1022/*::]*/: { /* n:\"CrtLink\", */ },\n\t/*::[*/0x1024/*::]*/: { /* n:\"DefaultText\", */ },\n\t/*::[*/0x1025/*::]*/: { /* n:\"Text\", */ },\n\t/*::[*/0x1026/*::]*/: { /* n:\"FontX\", */ f:parseuint16 },\n\t/*::[*/0x1027/*::]*/: { /* n:\"ObjectLink\", */ },\n\t/*::[*/0x1032/*::]*/: { /* n:\"Frame\", */ },\n\t/*::[*/0x1033/*::]*/: { /* n:\"Begin\", */ },\n\t/*::[*/0x1034/*::]*/: { /* n:\"End\", */ },\n\t/*::[*/0x1035/*::]*/: { /* n:\"PlotArea\", */ },\n\t/*::[*/0x103a/*::]*/: { /* n:\"Chart3d\", */ },\n\t/*::[*/0x103c/*::]*/: { /* n:\"PicF\", */ },\n\t/*::[*/0x103d/*::]*/: { /* n:\"DropBar\", */ },\n\t/*::[*/0x103e/*::]*/: { /* n:\"Radar\", */ },\n\t/*::[*/0x103f/*::]*/: { /* n:\"Surf\", */ },\n\t/*::[*/0x1040/*::]*/: { /* n:\"RadarArea\", */ },\n\t/*::[*/0x1041/*::]*/: { /* n:\"AxisParent\", */ },\n\t/*::[*/0x1043/*::]*/: { /* n:\"LegendException\", */ },\n\t/*::[*/0x1044/*::]*/: { /* n:\"ShtProps\", */ f:parse_ShtProps },\n\t/*::[*/0x1045/*::]*/: { /* n:\"SerToCrt\", */ },\n\t/*::[*/0x1046/*::]*/: { /* n:\"AxesUsed\", */ },\n\t/*::[*/0x1048/*::]*/: { /* n:\"SBaseRef\", */ },\n\t/*::[*/0x104a/*::]*/: { /* n:\"SerParent\", */ },\n\t/*::[*/0x104b/*::]*/: { /* n:\"SerAuxTrend\", */ },\n\t/*::[*/0x104e/*::]*/: { /* n:\"IFmtRecord\", */ },\n\t/*::[*/0x104f/*::]*/: { /* n:\"Pos\", */ },\n\t/*::[*/0x1050/*::]*/: { /* n:\"AlRuns\", */ },\n\t/*::[*/0x1051/*::]*/: { /* n:\"BRAI\", */ },\n\t/*::[*/0x105b/*::]*/: { /* n:\"SerAuxErrBar\", */ },\n\t/*::[*/0x105c/*::]*/: { /* n:\"ClrtClient\", */ f:parse_ClrtClient },\n\t/*::[*/0x105d/*::]*/: { /* n:\"SerFmt\", */ },\n\t/*::[*/0x105f/*::]*/: { /* n:\"Chart3DBarShape\", */ },\n\t/*::[*/0x1060/*::]*/: { /* n:\"Fbi\", */ },\n\t/*::[*/0x1061/*::]*/: { /* n:\"BopPop\", */ },\n\t/*::[*/0x1062/*::]*/: { /* n:\"AxcExt\", */ },\n\t/*::[*/0x1063/*::]*/: { /* n:\"Dat\", */ },\n\t/*::[*/0x1064/*::]*/: { /* n:\"PlotGrowth\", */ },\n\t/*::[*/0x1065/*::]*/: { /* n:\"SIIndex\", */ },\n\t/*::[*/0x1066/*::]*/: { /* n:\"GelFrame\", */ },\n\t/*::[*/0x1067/*::]*/: { /* n:\"BopPopCustom\", */ },\n\t/*::[*/0x1068/*::]*/: { /* n:\"Fbi2\", */ },\n\n\t/*::[*/0x0000/*::]*/: { /* n:\"Dimensions\", */ f:parse_Dimensions },\n\t/*::[*/0x0001/*::]*/: { /* n:\"BIFF2BLANK\", */ },\n\t/*::[*/0x0002/*::]*/: { /* n:\"BIFF2INT\", */ f:parse_BIFF2INT },\n\t/*::[*/0x0003/*::]*/: { /* n:\"BIFF2NUM\", */ f:parse_BIFF2NUM },\n\t/*::[*/0x0004/*::]*/: { /* n:\"BIFF2STR\", */ f:parse_BIFF2STR },\n\t/*::[*/0x0005/*::]*/: { /* n:\"BoolErr\", */ f:parse_BoolErr },\n\t/*::[*/0x0007/*::]*/: { /* n:\"String\", */ f:parse_BIFF2STRING },\n\t/*::[*/0x0008/*::]*/: { /* n:\"BIFF2ROW\", */ },\n\t/*::[*/0x0009/*::]*/: { /* n:\"BOF\", */ f:parse_BOF },\n\t/*::[*/0x000b/*::]*/: { /* n:\"Index\", */ },\n\t/*::[*/0x0016/*::]*/: { /* n:\"ExternCount\", */ f:parseuint16 },\n\t/*::[*/0x001e/*::]*/: { /* n:\"BIFF2FORMAT\", */ f:parse_BIFF2Format },\n\t/*::[*/0x001f/*::]*/: { /* n:\"BIFF2FMTCNT\", */ }, /* 16-bit cnt of BIFF2FORMAT records */\n\t/*::[*/0x0020/*::]*/: { /* n:\"BIFF2COLINFO\", */ },\n\t/*::[*/0x0021/*::]*/: { /* n:\"Array\", */ f:parse_Array },\n\t/*::[*/0x0024/*::]*/: { /* n:\"COLWIDTH\", */ },\n\t/*::[*/0x0025/*::]*/: { /* n:\"DefaultRowHeight\", */ f:parse_DefaultRowHeight },\n\t// 0x2c ??\n\t// 0x2d ??\n\t// 0x2e ??\n\t// 0x30 FONTCOUNT: number of fonts\n\t/*::[*/0x0032/*::]*/: { /* n:\"BIFF2FONTXTRA\", */ f:parse_BIFF2FONTXTRA },\n\t// 0x35: INFOOPTS\n\t// 0x36: TABLE (BIFF2 only)\n\t// 0x37: TABLE2 (BIFF2 only)\n\t// 0x38: WNDESK\n\t// 0x39 ??\n\t// 0x3a: BEGINPREF\n\t// 0x3b: ENDPREF\n\t/*::[*/0x003e/*::]*/: { /* n:\"BIFF2WINDOW2\", */ },\n\t// 0x3f ??\n\t// 0x46: SHOWSCROLL\n\t// 0x47: SHOWFORMULA\n\t// 0x48: STATUSBAR\n\t// 0x49: SHORTMENUS\n\t// 0x4A:\n\t// 0x4B:\n\t// 0x4C:\n\t// 0x4E:\n\t// 0x4F:\n\t// 0x58: TOOLBAR (BIFF3)\n\n\t/* - - - */\n\t/*::[*/0x0034/*::]*/: { /* n:\"DDEObjName\", */ },\n\t/*::[*/0x0043/*::]*/: { /* n:\"BIFF2XF\", */ },\n\t/*::[*/0x0044/*::]*/: { /* n:\"BIFF2XFINDEX\", */ f:parseuint16 },\n\t/*::[*/0x0045/*::]*/: { /* n:\"BIFF2FONTCLR\", */ },\n\t/*::[*/0x0056/*::]*/: { /* n:\"BIFF4FMTCNT\", */ }, /* 16-bit cnt, similar to BIFF2 */\n\t/*::[*/0x007e/*::]*/: { /* n:\"RK\", */ }, /* Not necessarily same as 0x027e */\n\t/*::[*/0x007f/*::]*/: { /* n:\"ImData\", */ f:parse_ImData },\n\t/*::[*/0x0087/*::]*/: { /* n:\"Addin\", */ },\n\t/*::[*/0x0088/*::]*/: { /* n:\"Edg\", */ },\n\t/*::[*/0x0089/*::]*/: { /* n:\"Pub\", */ },\n\t// 0x8A\n\t// 0x8B LH: alternate menu key flag (BIFF3/4)\n\t// 0x8E\n\t// 0x8F\n\t/*::[*/0x0091/*::]*/: { /* n:\"Sub\", */ },\n\t// 0x93 STYLE\n\t/*::[*/0x0094/*::]*/: { /* n:\"LHRecord\", */ },\n\t/*::[*/0x0095/*::]*/: { /* n:\"LHNGraph\", */ },\n\t/*::[*/0x0096/*::]*/: { /* n:\"Sound\", */ },\n\t// 0xA2 FNPROTO: function prototypes (BIFF4)\n\t// 0xA3\n\t// 0xA8\n\t/*::[*/0x00a9/*::]*/: { /* n:\"CoordList\", */ },\n\t/*::[*/0x00ab/*::]*/: { /* n:\"GCW\", */ },\n\t/*::[*/0x00bc/*::]*/: { /* n:\"ShrFmla\", */ }, /* Not necessarily same as 0x04bc */\n\t/*::[*/0x00bf/*::]*/: { /* n:\"ToolbarHdr\", */ },\n\t/*::[*/0x00c0/*::]*/: { /* n:\"ToolbarEnd\", */ },\n\t/*::[*/0x00c2/*::]*/: { /* n:\"AddMenu\", */ },\n\t/*::[*/0x00c3/*::]*/: { /* n:\"DelMenu\", */ },\n\t/*::[*/0x00d6/*::]*/: { /* n:\"RString\", */ f:parse_RString },\n\t/*::[*/0x00df/*::]*/: { /* n:\"UDDesc\", */ },\n\t/*::[*/0x00ea/*::]*/: { /* n:\"TabIdConf\", */ },\n\t/*::[*/0x0162/*::]*/: { /* n:\"XL5Modify\", */ },\n\t/*::[*/0x01a5/*::]*/: { /* n:\"FileSharing2\", */ },\n\t/*::[*/0x0206/*::]*/: { /* n:\"Formula\", */ f:parse_Formula },\n\t/*::[*/0x0209/*::]*/: { /* n:\"BOF\", */ f:parse_BOF },\n\t/*::[*/0x0218/*::]*/: { /* n:\"Lbl\", */ f:parse_Lbl },\n\t/*::[*/0x0223/*::]*/: { /* n:\"ExternName\", */ f:parse_ExternName },\n\t/*::[*/0x0231/*::]*/: { /* n:\"Font\", */ },\n\t/*::[*/0x0243/*::]*/: { /* n:\"BIFF3XF\", */ },\n\t/*::[*/0x0406/*::]*/: { /* n:\"Formula\", */ f:parse_Formula },\n\t/*::[*/0x0409/*::]*/: { /* n:\"BOF\", */ f:parse_BOF },\n\t/*::[*/0x0443/*::]*/: { /* n:\"BIFF4XF\", */ },\n\t/*::[*/0x086d/*::]*/: { /* n:\"FeatInfo\", */ },\n\t/*::[*/0x0873/*::]*/: { /* n:\"FeatInfo11\", */ },\n\t/*::[*/0x0881/*::]*/: { /* n:\"SXAddl12\", */ },\n\t/*::[*/0x08c0/*::]*/: { /* n:\"AutoWebPub\", */ },\n\t/*::[*/0x08c1/*::]*/: { /* n:\"ListObj\", */ },\n\t/*::[*/0x08c2/*::]*/: { /* n:\"ListField\", */ },\n\t/*::[*/0x08c3/*::]*/: { /* n:\"ListDV\", */ },\n\t/*::[*/0x08c4/*::]*/: { /* n:\"ListCondFmt\", */ },\n\t/*::[*/0x08c5/*::]*/: { /* n:\"ListCF\", */ },\n\t/*::[*/0x08c6/*::]*/: { /* n:\"FMQry\", */ },\n\t/*::[*/0x08c7/*::]*/: { /* n:\"FMSQry\", */ },\n\t/*::[*/0x08c8/*::]*/: { /* n:\"PLV\", */ },\n\t/*::[*/0x08c9/*::]*/: { /* n:\"LnExt\", */ },\n\t/*::[*/0x08ca/*::]*/: { /* n:\"MkrExt\", */ },\n\t/*::[*/0x08cb/*::]*/: { /* n:\"CrtCoopt\", */ },\n\t/*::[*/0x08d6/*::]*/: { /* n:\"FRTArchId$\", */ r:12 },\n\n\t/* --- multiplan 4 records --- */\n\t/*::[*/0x0065/*::]*/: { /* n:\"\", */ }, // one per window\n\t/*::[*/0x0066/*::]*/: { /* n:\"\", */ }, // calc settings\n\t/*::[*/0x0069/*::]*/: { /* n:\"\", */ }, // print header\n\t/*::[*/0x006a/*::]*/: { /* n:\"\", */ }, // print footer\n\t/*::[*/0x006b/*::]*/: { /* n:\"\", */ }, // print settings\n\t/*::[*/0x006d/*::]*/: { /* n:\"\", */ }, // one per window\n\t/*::[*/0x0070/*::]*/: { /* n:\"\", */ }, // includes default col width\n\t/*::[*/0x0072/*::]*/: { /* n:\"\", */ }, // includes selected cell\n\n\t/*::[*/0x7262/*::]*/: {}\n};\n\nfunction write_biff_rec(ba/*:BufArray*/, type/*:number*/, payload, length/*:?number*/)/*:void*/ {\n\tvar t/*:number*/ = type;\n\tif(isNaN(t)) return;\n\tvar len = length || (payload||[]).length || 0;\n\tvar o = ba.next(4);\n\to.write_shift(2, t);\n\to.write_shift(2, len);\n\tif(/*:: len != null &&*/len > 0 && is_buf(payload)) ba.push(payload);\n}\n\nfunction write_biff_continue(ba/*:BufArray*/, type/*:number*/, payload, length/*:?number*/)/*:void*/ {\n\tvar len = length || (payload||[]).length || 0;\n\tif(len <= 8224) return write_biff_rec(ba, type, payload, len);\n\tvar t = type;\n\tif(isNaN(t)) return;\n\tvar parts = payload.parts || [], sidx = 0;\n\tvar i = 0, w = 0;\n\twhile(w + (parts[sidx] || 8224) <= 8224) { w+= (parts[sidx] || 8224); sidx++; }\n\tvar o = ba.next(4);\n\to.write_shift(2, t);\n\to.write_shift(2, w);\n\tba.push(payload.slice(i, i + w));\n\ti += w;\n\twhile(i < len) {\n\t\to = ba.next(4);\n\t\to.write_shift(2, 0x3c); // TODO: figure out correct continue type\n\t\tw = 0;\n\t\twhile(w + (parts[sidx] || 8224) <= 8224) { w+= (parts[sidx] || 8224); sidx++; }\n\t\to.write_shift(2, w);\n\t\tba.push(payload.slice(i, i+w)); i+= w;\n\t}\n}\n\nfunction write_BIFF2Cell(out, r/*:number*/, c/*:number*/) {\n\tif(!out) out = new_buf(7);\n\tout.write_shift(2, r);\n\tout.write_shift(2, c);\n\tout.write_shift(2, 0);\n\tout.write_shift(1, 0);\n\treturn out;\n}\n\nfunction write_BIFF2BERR(r/*:number*/, c/*:number*/, val, t/*:?string*/) {\n\tvar out = new_buf(9);\n\twrite_BIFF2Cell(out, r, c);\n\twrite_Bes(val, t || 'b', out);\n\treturn out;\n}\n\n/* TODO: codepage, large strings */\nfunction write_BIFF2LABEL(r/*:number*/, c/*:number*/, val) {\n\tvar out = new_buf(8 + 2*val.length);\n\twrite_BIFF2Cell(out, r, c);\n\tout.write_shift(1, val.length);\n\tout.write_shift(val.length, val, 'sbcs');\n\treturn out.l < out.length ? out.slice(0, out.l) : out;\n}\n\nfunction write_ws_biff2_cell(ba/*:BufArray*/, cell/*:Cell*/, R/*:number*/, C/*:number*//*::, opts*/) {\n\tif(cell.v != null) switch(cell.t) {\n\t\tcase 'd': case 'n':\n\t\t\tvar v = cell.t == 'd' ? datenum(parseDate(cell.v)) : cell.v;\n\t\t\tif((v == (v|0)) && (v >= 0) && (v < 65536))\n\t\t\t\twrite_biff_rec(ba, 0x0002, write_BIFF2INT(R, C, v));\n\t\t\telse\n\t\t\t\twrite_biff_rec(ba, 0x0003, write_BIFF2NUM(R,C, v));\n\t\t\treturn;\n\t\tcase 'b': case 'e': write_biff_rec(ba, 0x0005, write_BIFF2BERR(R, C, cell.v, cell.t)); return;\n\t\t/* TODO: codepage, sst */\n\t\tcase 's': case 'str':\n\t\t\twrite_biff_rec(ba, 0x0004, write_BIFF2LABEL(R, C, cell.v == null ? \"\" : String(cell.v).slice(0,255)));\n\t\t\treturn;\n\t}\n\twrite_biff_rec(ba, 0x0001, write_BIFF2Cell(null, R, C));\n}\n\nfunction write_ws_biff2(ba/*:BufArray*/, ws/*:Worksheet*/, idx/*:number*/, opts/*::, wb:Workbook*/) {\n\tvar dense = ws[\"!data\"] != null;\n\tvar range = safe_decode_range(ws['!ref'] || \"A1\"), ref/*:string*/, rr = \"\", cols/*:Array<string>*/ = [];\n\tif(range.e.c > 0xFF || range.e.r > 0x3FFF) {\n\t\tif(opts.WTF) throw new Error(\"Range \" + (ws['!ref'] || \"A1\") + \" exceeds format limit A1:IV16384\");\n\t\trange.e.c = Math.min(range.e.c, 0xFF);\n\t\trange.e.r = Math.min(range.e.c, 0x3FFF);\n\t}\n\tvar row = [];\n\tfor(var C = range.s.c; C <= range.e.c; ++C) cols[C] = encode_col(C);\n\tfor(var R = range.s.r; R <= range.e.r; ++R) {\n\t\tif(dense) row = ws[\"!data\"][R] || [];\n\t\trr = encode_row(R);\n\t\tfor(C = range.s.c; C <= range.e.c; ++C) {\n\t\t\tvar cell = dense ? row[C] : ws[cols[C] + rr];\n\t\t\tif(!cell) continue;\n\t\t\t/* write cell */\n\t\t\twrite_ws_biff2_cell(ba, cell, R, C, opts);\n\t\t}\n\t}\n}\n\n/* Based on test files */\nfunction write_biff2_buf(wb/*:Workbook*/, opts/*:WriteOpts*/) {\n\tvar o = opts || {};\n\tvar ba = buf_array();\n\tvar idx = 0;\n\tfor(var i=0;i<wb.SheetNames.length;++i) if(wb.SheetNames[i] == o.sheet) idx=i;\n\tif(idx == 0 && !!o.sheet && wb.SheetNames[0] != o.sheet) throw new Error(\"Sheet not found: \" + o.sheet);\n\twrite_biff_rec(ba, (o.biff == 4 ? 0x0409 : (o.biff == 3 ? 0x0209 : 0x0009)), write_BOF(wb, 0x10, o));\n\t/* ... */\n\twrite_ws_biff2(ba, wb.Sheets[wb.SheetNames[idx]], idx, o, wb);\n\t/* ... */\n\twrite_biff_rec(ba, 0x000A);\n\treturn ba.end();\n}\n\nfunction write_FONTS_biff8(ba, data, opts) {\n\twrite_biff_rec(ba, 0x0031 /* Font */, write_Font({\n\t\tsz:12,\n\t\tcolor: {theme:1},\n\t\tname: \"Arial\",\n\t\tfamily: 2,\n\t\tscheme: \"minor\"\n\t}, opts));\n}\n\n\nfunction write_FMTS_biff8(ba, NF/*:?SSFTable*/, opts) {\n\tif(!NF) return;\n\t[[5,8],[23,26],[41,44],[/*63*/50,/*66],[164,*/392]].forEach(function(r) {\n\t\t/*:: if(!NF) return; */\n\t\tfor(var i = r[0]; i <= r[1]; ++i) if(NF[i] != null) write_biff_rec(ba, 0x041E /* Format */, write_Format(i, NF[i], opts));\n\t});\n}\n\nfunction write_FEAT(ba, ws) {\n\t/* [MS-XLS] 2.4.112 */\n\tvar o = new_buf(19);\n\to.write_shift(4, 0x867); o.write_shift(4, 0); o.write_shift(4, 0);\n\to.write_shift(2, 3); o.write_shift(1, 1); o.write_shift(4, 0);\n\twrite_biff_rec(ba, 0x0867 /* FeatHdr */, o);\n\t/* [MS-XLS] 2.4.111 */\n\to = new_buf(39);\n\to.write_shift(4, 0x868); o.write_shift(4, 0); o.write_shift(4, 0);\n\to.write_shift(2, 3); o.write_shift(1, 0); o.write_shift(4, 0);\n\to.write_shift(2, 1); o.write_shift(4, 4); o.write_shift(2, 0);\n\twrite_Ref8U(safe_decode_range(ws['!ref']||\"A1\"), o);\n\to.write_shift(4, 4);\n\twrite_biff_rec(ba, 0x0868 /* Feat */, o);\n}\n\nfunction write_CELLXFS_biff8(ba, opts) {\n\tfor(var i = 0; i < 16; ++i) write_biff_rec(ba, 0x00e0 /* XF */, write_XF({numFmtId:0, style:true}, 0, opts));\n\topts.cellXfs.forEach(function(c) {\n\t\twrite_biff_rec(ba, 0x00e0 /* XF */, write_XF(c, 0, opts));\n\t});\n}\n\nfunction write_ws_biff8_hlinks(ba/*:BufArray*/, ws) {\n\tfor(var R=0; R<ws['!links'].length; ++R) {\n\t\tvar HL = ws['!links'][R];\n\t\twrite_biff_rec(ba, 0x01b8 /* HLink */, write_HLink(HL));\n\t\tif(HL[1].Tooltip) write_biff_rec(ba, 0x0800 /* HLinkTooltip */, write_HLinkTooltip(HL));\n\t}\n\tdelete ws['!links'];\n}\n\nfunction write_ws_cols_biff8(ba, cols) {\n\tif(!cols) return;\n\tvar cnt = 0;\n\tcols.forEach(function(col, idx) {\n\t\tif(++cnt <= 256 && col) {\n\t\t\twrite_biff_rec(ba, 0x007d /* ColInfo */, write_ColInfo(col_obj_w(idx, col), idx));\n\t\t}\n\t});\n}\n\nfunction write_ws_biff8_cell(ba/*:BufArray*/, cell/*:Cell*/, R/*:number*/, C/*:number*/, opts) {\n\tvar os = 16 + get_cell_style(opts.cellXfs, cell, opts);\n\tif(cell.v == null && !cell.bf) {\n\t\twrite_biff_rec(ba, 0x0201 /* Blank */, write_XLSCell(R, C, os));\n\t\treturn;\n\t}\n\tif(cell.bf) write_biff_rec(ba, 0x0006 /* Formula */, write_Formula(cell, R, C, opts, os));\n\telse switch(cell.t) {\n\t\tcase 'd': case 'n':\n\t\t\tvar v = cell.t == 'd' ? datenum(parseDate(cell.v)) : cell.v;\n\t\t\t/* TODO: emit RK as appropriate */\n\t\t\twrite_biff_rec(ba, 0x0203 /* Number */, write_Number(R, C, v, os, opts));\n\t\t\tbreak;\n\t\tcase 'b': case 'e':\n\t\t\twrite_biff_rec(ba, 0x0205 /* BoolErr */, write_BoolErr(R, C, cell.v, os, opts, cell.t));\n\t\t\tbreak;\n\t\t/* TODO: codepage, sst */\n\t\tcase 's': case 'str':\n\t\t\tif(opts.bookSST) {\n\t\t\t\tvar isst = get_sst_id(opts.Strings, cell.v == null ? \"\" : String(cell.v), opts.revStrings);\n\t\t\t\twrite_biff_rec(ba, 0x00fd /* LabelSst */, write_LabelSst(R, C, isst, os, opts));\n\t\t\t} else write_biff_rec(ba, 0x0204 /* Label */, write_Label(R, C, (cell.v == null ? \"\" : String(cell.v)).slice(0,255), os, opts));\n\t\t\tbreak;\n\t\tdefault:\n\t\t\twrite_biff_rec(ba, 0x0201 /* Blank */, write_XLSCell(R, C, os));\n\t}\n}\n\n/* [MS-XLS] 2.1.7.20.5 */\nfunction write_ws_biff8(idx/*:number*/, opts, wb/*:Workbook*/) {\n\tvar ba = buf_array();\n\tvar s = wb.SheetNames[idx], ws = wb.Sheets[s] || {};\n\tvar _WB/*:WBWBProps*/ = ((wb||{}).Workbook||{}/*:any*/);\n\tvar _sheet/*:WBWSProp*/ = ((_WB.Sheets||[])[idx]||{}/*:any*/);\n\tvar dense = ws[\"!data\"] != null;\n\tvar b8 = opts.biff == 8;\n\tvar ref/*:string*/, rr = \"\", cols/*:Array<string>*/ = [];\n\tvar range = safe_decode_range(ws['!ref'] || \"A1\");\n\tvar MAX_ROWS = b8 ? 65536 : 16384;\n\tif(range.e.c > 0xFF || range.e.r >= MAX_ROWS) {\n\t\tif(opts.WTF) throw new Error(\"Range \" + (ws['!ref'] || \"A1\") + \" exceeds format limit A1:IV16384\");\n\t\trange.e.c = Math.min(range.e.c, 0xFF);\n\t\trange.e.r = Math.min(range.e.c, MAX_ROWS-1);\n\t}\n\n\twrite_biff_rec(ba, 0x0809, write_BOF(wb, 0x10, opts));\n\t/* [Uncalced] Index */\n\twrite_biff_rec(ba, 0x000d /* CalcMode */, writeuint16(1));\n\twrite_biff_rec(ba, 0x000c /* CalcCount */, writeuint16(100));\n\twrite_biff_rec(ba, 0x000f /* CalcRefMode */, writebool(true));\n\twrite_biff_rec(ba, 0x0011 /* CalcIter */, writebool(false));\n\twrite_biff_rec(ba, 0x0010 /* CalcDelta */, write_Xnum(0.001));\n\twrite_biff_rec(ba, 0x005f /* CalcSaveRecalc */, writebool(true));\n\twrite_biff_rec(ba, 0x002a /* PrintRowCol */, writebool(false));\n\twrite_biff_rec(ba, 0x002b /* PrintGrid */, writebool(false));\n\twrite_biff_rec(ba, 0x0082 /* GridSet */, writeuint16(1));\n\twrite_biff_rec(ba, 0x0080 /* Guts */, write_Guts([0,0]));\n\t/* DefaultRowHeight WsBool [Sync] [LPr] [HorizontalPageBreaks] [VerticalPageBreaks] */\n\t/* Header (string) */\n\t/* Footer (string) */\n\twrite_biff_rec(ba, 0x0083 /* HCenter */, writebool(false));\n\twrite_biff_rec(ba, 0x0084 /* VCenter */, writebool(false));\n\t/* ... */\n\tif(b8) write_ws_cols_biff8(ba, ws[\"!cols\"]);\n\t/* ... */\n\twrite_biff_rec(ba, 0x0200 /* Dimensions */, write_Dimensions(range, opts));\n\t/* ... */\n\n\tif(b8) ws['!links'] = [];\n\tvar comments = [];\n\tvar row = [];\n\tfor(var C = range.s.c; C <= range.e.c; ++C) cols[C] = encode_col(C);\n\tfor(var R = range.s.r; R <= range.e.r; ++R) {\n\t\tif(dense) row = ws[\"!data\"][R] || [];\n\t\trr = encode_row(R);\n\t\tfor(C = range.s.c; C <= range.e.c; ++C) {\n\t\t\tref = cols[C] + rr;\n\t\t\tvar cell = dense ? row[C] : ws[ref];\n\t\t\tif(!cell) continue;\n\t\t\t/* write cell */\n\t\t\twrite_ws_biff8_cell(ba, cell, R, C, opts);\n\t\t\tif(b8 && cell.l) ws['!links'].push([ref, cell.l]);\n\t\t\tif(b8 && cell.c) comments.push([ref, cell.c]);\n\t\t}\n\t}\n\tvar cname/*:string*/ = _sheet.CodeName || _sheet.name || s;\n\t/* ... */\n\t// if(b8) comments.forEach(function(comment) { write_biff_rec(ba, 0x001c /* Note */, write_NoteSh(comment)); });\n\t/* ... */\n\tif(b8) write_biff_rec(ba, 0x023e /* Window2 */, write_Window2((_WB.Views||[])[0]));\n\t/* ... */\n\tif(b8 && (ws['!merges']||[]).length) write_biff_rec(ba, 0x00e5 /* MergeCells */, write_MergeCells(ws['!merges']));\n\t/* [LRng] *QUERYTABLE [PHONETICINFO] CONDFMTS */\n\tif(b8) write_ws_biff8_hlinks(ba, ws);\n\t/* [DVAL] */\n\twrite_biff_rec(ba, 0x01ba /* CodeName */, write_XLUnicodeString(cname, opts));\n\t/* *WebPub *CellWatch [SheetExt] */\n\tif(b8) write_FEAT(ba, ws);\n\t/* *FEAT11 *RECORD12 */\n\twrite_biff_rec(ba, 0x000a /* EOF */);\n\treturn ba.end();\n}\n\n/* [MS-XLS] 2.1.7.20.3 */\nfunction write_biff8_global(wb/*:Workbook*/, bufs, opts/*:WriteOpts*/) {\n\tvar A = buf_array();\n\tvar _WB/*:WBWBProps*/ = ((wb||{}).Workbook||{}/*:any*/);\n\tvar _sheets/*:Array<WBWSProp>*/ = (_WB.Sheets||[]);\n\tvar _wb/*:WBProps*/ = /*::((*/_WB.WBProps||{/*::CodeName:\"ThisWorkbook\"*/}/*:: ):any)*/;\n\tvar b8 = opts.biff == 8, b5 = opts.biff == 5;\n\twrite_biff_rec(A, 0x0809, write_BOF(wb, 0x05, opts));\n\tif(opts.bookType == \"xla\") write_biff_rec(A, 0x0087 /* Addin */);\n\twrite_biff_rec(A, 0x00e1 /* InterfaceHdr */, b8 ? writeuint16(0x04b0) : null);\n\twrite_biff_rec(A, 0x00c1 /* Mms */, writezeroes(2));\n\tif(b5) write_biff_rec(A, 0x00bf /* ToolbarHdr */);\n\tif(b5) write_biff_rec(A, 0x00c0 /* ToolbarEnd */);\n\twrite_biff_rec(A, 0x00e2 /* InterfaceEnd */);\n\twrite_biff_rec(A, 0x005c /* WriteAccess */, write_WriteAccess(\"SheetJS\", opts));\n\t/* [FileSharing] */\n\twrite_biff_rec(A, 0x0042 /* CodePage */, writeuint16(b8 ? 0x04b0 : 0x04E4));\n\t/* *2047 Lel */\n\tif(b8) write_biff_rec(A, 0x0161 /* DSF */, writeuint16(0));\n\tif(b8) write_biff_rec(A, 0x01c0 /* Excel9File */);\n\twrite_biff_rec(A, 0x013d /* RRTabId */, write_RRTabId(wb.SheetNames.length));\n\tif(b8 && wb.vbaraw) write_biff_rec(A, 0x00d3 /* ObProj */);\n\t/* [ObNoMacros] */\n\tif(b8 && wb.vbaraw) {\n\t\tvar cname/*:string*/ = _wb.CodeName || \"ThisWorkbook\";\n\t\twrite_biff_rec(A, 0x01ba /* CodeName */, write_XLUnicodeString(cname, opts));\n\t}\n\twrite_biff_rec(A, 0x009c /* BuiltInFnGroupCount */, writeuint16(0x11));\n\t/* *FnGroupName *FnGrp12 */\n\t/* *Lbl */\n\t/* [OleObjectSize] */\n\twrite_biff_rec(A, 0x0019 /* WinProtect */, writebool(false));\n\twrite_biff_rec(A, 0x0012 /* Protect */, writebool(false));\n\twrite_biff_rec(A, 0x0013 /* Password */, writeuint16(0));\n\tif(b8) write_biff_rec(A, 0x01af /* Prot4Rev */, writebool(false));\n\tif(b8) write_biff_rec(A, 0x01bc /* Prot4RevPass */, writeuint16(0));\n\twrite_biff_rec(A, 0x003d /* Window1 */, write_Window1(opts));\n\twrite_biff_rec(A, 0x0040 /* Backup */, writebool(false));\n\twrite_biff_rec(A, 0x008d /* HideObj */, writeuint16(0));\n\twrite_biff_rec(A, 0x0022 /* Date1904 */, writebool(safe1904(wb)==\"true\"));\n\twrite_biff_rec(A, 0x000e /* CalcPrecision */, writebool(true));\n\tif(b8) write_biff_rec(A, 0x01b7 /* RefreshAll */, writebool(false));\n\twrite_biff_rec(A, 0x00DA /* BookBool */, writeuint16(0));\n\t/* ... */\n\twrite_FONTS_biff8(A, wb, opts);\n\twrite_FMTS_biff8(A, wb.SSF, opts);\n\twrite_CELLXFS_biff8(A, opts);\n\t/* ... */\n\tif(b8) write_biff_rec(A, 0x0160 /* UsesELFs */, writebool(false));\n\tvar a = A.end();\n\n\tvar C = buf_array();\n\t/* METADATA [MTRSettings] [ForceFullCalculation] */\n\tif(b8) write_biff_rec(C, 0x008C /* Country */, write_Country());\n\t/* *SUPBOOK *LBL *RTD [RecalcId] *HFPicture *MSODRAWINGGROUP */\n\n\t/* BIFF8: [SST *Continue] ExtSST */\n\tif(b8 && opts.Strings) write_biff_continue(C, 0x00FC /* SST */, write_SST(opts.Strings, opts));\n\n\t/* *WebPub [WOpt] [CrErr] [BookExt] *FeatHdr *DConn [THEME] [CompressPictures] [Compat12] [GUIDTypeLib] */\n\twrite_biff_rec(C, 0x000A /* EOF */);\n\tvar c = C.end();\n\n\tvar B = buf_array();\n\tvar blen = 0, j = 0;\n\tfor(j = 0; j < wb.SheetNames.length; ++j) blen += (b8 ? 12 : 11) + (b8 ? 2 : 1) * wb.SheetNames[j].length;\n\tvar start = a.length + blen + c.length;\n\tfor(j = 0; j < wb.SheetNames.length; ++j) {\n\t\tvar _sheet/*:WBWSProp*/ = _sheets[j] || ({}/*:any*/);\n\t\twrite_biff_rec(B, 0x0085 /* BoundSheet8 */, write_BoundSheet8({pos:start, hs:_sheet.Hidden||0, dt:0, name:wb.SheetNames[j]}, opts));\n\t\tstart += bufs[j].length;\n\t}\n\t/* 1*BoundSheet8 */\n\tvar b = B.end();\n\tif(blen != b.length) throw new Error(\"BS8 \" + blen + \" != \" + b.length);\n\n\tvar out = [];\n\tif(a.length) out.push(a);\n\tif(b.length) out.push(b);\n\tif(c.length) out.push(c);\n\treturn bconcat(out);\n}\n\n/* [MS-XLS] 2.1.7.20 Workbook Stream */\nfunction write_biff8_buf(wb/*:Workbook*/, opts/*:WriteOpts*/) {\n\tvar o = opts || {};\n\tvar bufs = [];\n\n\tif(wb && !wb.SSF) {\n\t\twb.SSF = dup(table_fmt);\n\t}\n\tif(wb && wb.SSF) {\n\t\tmake_ssf(); SSF_load_table(wb.SSF);\n\t\t// $FlowIgnore\n\t\to.revssf = evert_num(wb.SSF); o.revssf[wb.SSF[65535]] = 0;\n\t\to.ssf = wb.SSF;\n\t}\n\n\to.Strings = /*::((*/[]/*:: :any):SST)*/; o.Strings.Count = 0; o.Strings.Unique = 0;\n\tfix_write_opts(o);\n\n\to.cellXfs = [];\n\tget_cell_style(o.cellXfs, {}, {revssf:{\"General\":0}});\n\n\tif(!wb.Props) wb.Props = {};\n\n\tfor(var i = 0; i < wb.SheetNames.length; ++i) bufs[bufs.length] = write_ws_biff8(i, o, wb);\n\tbufs.unshift(write_biff8_global(wb, bufs, o));\n\treturn bconcat(bufs);\n}\n\nfunction write_biff_buf(wb/*:Workbook*/, opts/*:WriteOpts*/) {\n\tfor(var i = 0; i <= wb.SheetNames.length; ++i) {\n\t\tvar ws = wb.Sheets[wb.SheetNames[i]];\n\t\tif(!ws || !ws[\"!ref\"]) continue;\n\t\tvar range = decode_range(ws[\"!ref\"]);\n\t\tif(range.e.c > 255) { // note: 255 is IV\n\t\t\tif(typeof console != \"undefined\" && console.error) console.error(\"Worksheet '\" + wb.SheetNames[i] + \"' extends beyond column IV (255).  Data may be lost.\");\n\t\t}\n\t}\n\n\tvar o = opts || {};\n\tswitch(o.biff || 2) {\n\t\tcase 8: case 5: return write_biff8_buf(wb, opts);\n\t\tcase 4: case 3: case 2: return write_biff2_buf(wb, opts);\n\t}\n\tthrow new Error(\"invalid type \" + o.bookType + \" for BIFF\");\n}\n/* note: browser DOM element cannot see mso- style attrs, must parse */\nfunction html_to_sheet(str/*:string*/, _opts)/*:Workbook*/ {\n\tvar opts = _opts || {};\n\tvar dense = (opts.dense != null) ? opts.dense : DENSE;\n\tvar ws/*:Worksheet*/ = ({}/*:any*/); if(dense) ws[\"!data\"] = [];\n\tstr = str.replace(/<!--.*?-->/g, \"\");\n\tvar mtch/*:any*/ = str.match(/<table/i);\n\tif(!mtch) throw new Error(\"Invalid HTML: could not find <table>\");\n\tvar mtch2/*:any*/ = str.match(/<\\/table/i);\n\tvar i/*:number*/ = mtch.index, j/*:number*/ = mtch2 && mtch2.index || str.length;\n\tvar rows = split_regex(str.slice(i, j), /(:?<tr[^>]*>)/i, \"<tr>\");\n\tvar R = -1, C = 0, RS = 0, CS = 0;\n\tvar range/*:Range*/ = {s:{r:10000000, c:10000000},e:{r:0,c:0}};\n\tvar merges/*:Array<Range>*/ = [];\n\tfor(i = 0; i < rows.length; ++i) {\n\t\tvar row = rows[i].trim();\n\t\tvar hd = row.slice(0,3).toLowerCase();\n\t\tif(hd == \"<tr\") { ++R; if(opts.sheetRows && opts.sheetRows <= R) { --R; break; } C = 0; continue; }\n\t\tif(hd != \"<td\" && hd != \"<th\") continue;\n\t\tvar cells = row.split(/<\\/t[dh]>/i);\n\t\tfor(j = 0; j < cells.length; ++j) {\n\t\t\tvar cell = cells[j].trim();\n\t\t\tif(!cell.match(/<t[dh]/i)) continue;\n\t\t\tvar m = cell, cc = 0;\n\t\t\t/* TODO: parse styles etc */\n\t\t\twhile(m.charAt(0) == \"<\" && (cc = m.indexOf(\">\")) > -1) m = m.slice(cc+1);\n\t\t\tfor(var midx = 0; midx < merges.length; ++midx) {\n\t\t\t\tvar _merge/*:Range*/ = merges[midx];\n\t\t\t\tif(_merge.s.c == C && _merge.s.r < R && R <= _merge.e.r) { C = _merge.e.c + 1; midx = -1; }\n\t\t\t}\n\t\t\tvar tag = parsexmltag(cell.slice(0, cell.indexOf(\">\")));\n\t\t\tCS = tag.colspan ? +tag.colspan : 1;\n\t\t\tif((RS = +tag.rowspan)>1 || CS>1) merges.push({s:{r:R,c:C},e:{r:R + (RS||1) - 1, c:C + CS - 1}});\n\t\t\tvar _t/*:string*/ = tag.t || tag[\"data-t\"] || \"\";\n\t\t\t/* TODO: generate stub cells */\n\t\t\tif(!m.length) { C += CS; continue; }\n\t\t\tm = htmldecode(m);\n\t\t\tif(range.s.r > R) range.s.r = R; if(range.e.r < R) range.e.r = R;\n\t\t\tif(range.s.c > C) range.s.c = C; if(range.e.c < C) range.e.c = C;\n\t\t\tif(!m.length) { C += CS; continue; }\n\t\t\tvar o/*:Cell*/ = {t:'s', v:m};\n\t\t\tif(opts.raw || !m.trim().length || _t == 's'){}\n\t\t\telse if(m === 'TRUE') o = {t:'b', v:true};\n\t\t\telse if(m === 'FALSE') o = {t:'b', v:false};\n\t\t\telse if(!isNaN(fuzzynum(m))) o = {t:'n', v:fuzzynum(m)};\n\t\t\telse if(!isNaN(fuzzydate(m).getDate())) {\n\t\t\t\to = ({t:'d', v:parseDate(m)}/*:any*/);\n\t\t\t\tif(!opts.cellDates) o = ({t:'n', v:datenum(o.v)}/*:any*/);\n\t\t\t\to.z = opts.dateNF || table_fmt[14];\n\t\t\t}\n\t\t\tif(dense) { if(!ws[\"!data\"][R]) ws[\"!data\"][R] = []; ws[\"!data\"][R][C] = o; }\n\t\t\telse ws[encode_cell({r:R, c:C})] = o;\n\t\t\tC += CS;\n\t\t}\n\t}\n\tws['!ref'] = encode_range(range);\n\tif(merges.length) ws[\"!merges\"] = merges;\n\treturn ws;\n}\nfunction make_html_row(ws/*:Worksheet*/, r/*:Range*/, R/*:number*/, o/*:Sheet2HTMLOpts*/)/*:string*/ {\n\tvar M/*:Array<Range>*/ = (ws['!merges'] ||[]);\n\tvar oo/*:Array<string>*/ = [];\n\tvar sp = ({}/*:any*/);\n\tvar dense = ws[\"!data\"] != null;\n\tfor(var C = r.s.c; C <= r.e.c; ++C) {\n\t\tvar RS = 0, CS = 0;\n\t\tfor(var j = 0; j < M.length; ++j) {\n\t\t\tif(M[j].s.r > R || M[j].s.c > C) continue;\n\t\t\tif(M[j].e.r < R || M[j].e.c < C) continue;\n\t\t\tif(M[j].s.r < R || M[j].s.c < C) { RS = -1; break; }\n\t\t\tRS = M[j].e.r - M[j].s.r + 1; CS = M[j].e.c - M[j].s.c + 1; break;\n\t\t}\n\t\tif(RS < 0) continue;\n\t\tvar coord = encode_col(C) + encode_row(R);\n\t\tvar cell = dense ? (ws[\"!data\"][R]||[])[C] : ws[coord];\n\t\t/* TODO: html entities */\n\t\tvar w = (cell && cell.v != null) && (cell.h || escapehtml(cell.w || (format_cell(cell), cell.w) || \"\")) || \"\";\n\t\tsp = ({}/*:any*/);\n\t\tif(RS > 1) sp.rowspan = RS;\n\t\tif(CS > 1) sp.colspan = CS;\n\t\tif(o.editable) w = '<span contenteditable=\"true\">' + w + '</span>';\n\t\telse if(cell) {\n\t\t\tsp[\"data-t\"] = cell && cell.t || 'z';\n\t\t\tif(cell.v != null) sp[\"data-v\"] = cell.v;\n\t\t\tif(cell.z != null) sp[\"data-z\"] = cell.z;\n\t\t\tif(cell.l && (cell.l.Target || \"#\").charAt(0) != \"#\") w = '<a href=\"' + escapehtml(cell.l.Target) +'\">' + w + '</a>';\n\t\t}\n\t\tsp.id = (o.id || \"sjs\") + \"-\" + coord;\n\t\too.push(writextag('td', w, sp));\n\t}\n\tvar preamble = \"<tr>\";\n\treturn preamble + oo.join(\"\") + \"</tr>\";\n}\n\nvar HTML_BEGIN = '<html><head><meta charset=\"utf-8\"/><title>SheetJS Table Export</title></head><body>';\nvar HTML_END = '</body></html>';\n\nfunction html_to_workbook(str/*:string*/, opts)/*:Workbook*/ {\n\tvar mtch = str.match(/<table[\\s\\S]*?>[\\s\\S]*?<\\/table>/gi);\n\tif(!mtch || mtch.length == 0) throw new Error(\"Invalid HTML: could not find <table>\");\n\tif(mtch.length == 1) {\n\t\tvar w = sheet_to_workbook(html_to_sheet(mtch[0], opts), opts);\n\t\tw.bookType = \"html\";\n\t\treturn w;\n\t}\n\tvar wb = book_new();\n\tmtch.forEach(function(s, idx) { book_append_sheet(wb, html_to_sheet(s, opts), \"Sheet\" + (idx+1)); });\n\twb.bookType = \"html\";\n\treturn wb;\n}\n\nfunction make_html_preamble(ws/*:Worksheet*/, R/*:Range*/, o/*:Sheet2HTMLOpts*/)/*:string*/ {\n\tvar out/*:Array<string>*/ = [];\n\treturn out.join(\"\") + '<table' + (o && o.id ? ' id=\"' + o.id + '\"' : \"\") + '>';\n}\n\nfunction sheet_to_html(ws/*:Worksheet*/, opts/*:?Sheet2HTMLOpts*//*, wb:?Workbook*/)/*:string*/ {\n\tvar o = opts || {};\n\tvar header = o.header != null ? o.header : HTML_BEGIN;\n\tvar footer = o.footer != null ? o.footer : HTML_END;\n\tvar out/*:Array<string>*/ = [header];\n\tvar r = decode_range(ws['!ref']);\n\tout.push(make_html_preamble(ws, r, o));\n\tfor(var R = r.s.r; R <= r.e.r; ++R) out.push(make_html_row(ws, r, R, o));\n\tout.push(\"</table>\" + footer);\n\treturn out.join(\"\");\n}\n\nfunction sheet_add_dom(ws/*:Worksheet*/, table/*:HTMLElement*/, _opts/*:?any*/)/*:Worksheet*/ {\n\tvar rows/*:HTMLCollection<HTMLTableRowElement>*/ = table.rows;\n\tif(!rows) {\n\t\t/* not an HTML TABLE */\n\t\tthrow \"Unsupported origin when \" + table.tagName + \" is not a TABLE\";\n\t}\n\n\tvar opts = _opts || {};\n\tvar dense = ws[\"!data\"] != null;\n\tvar or_R = 0, or_C = 0;\n\tif(opts.origin != null) {\n\t\tif(typeof opts.origin == 'number') or_R = opts.origin;\n\t\telse {\n\t\t\tvar _origin/*:CellAddress*/ = typeof opts.origin == \"string\" ? decode_cell(opts.origin) : opts.origin;\n\t\t\tor_R = _origin.r; or_C = _origin.c;\n\t\t}\n\t}\n\n\tvar sheetRows = Math.min(opts.sheetRows||10000000, rows.length);\n\tvar range/*:Range*/ = {s:{r:0,c:0},e:{r:or_R,c:or_C}};\n\tif(ws[\"!ref\"]) {\n\t\tvar _range/*:Range*/ = decode_range(ws[\"!ref\"]);\n\t\trange.s.r = Math.min(range.s.r, _range.s.r);\n\t\trange.s.c = Math.min(range.s.c, _range.s.c);\n\t\trange.e.r = Math.max(range.e.r, _range.e.r);\n\t\trange.e.c = Math.max(range.e.c, _range.e.c);\n\t\tif(or_R == -1) range.e.r = or_R = _range.e.r + 1;\n\t}\n\tvar merges/*:Array<Range>*/ = [], midx = 0;\n\tvar rowinfo/*:Array<RowInfo>*/ = ws[\"!rows\"] || (ws[\"!rows\"] = []);\n\tvar _R = 0, R = 0, _C = 0, C = 0, RS = 0, CS = 0;\n\tif(!ws[\"!cols\"]) ws['!cols'] = [];\n\tfor(; _R < rows.length && R < sheetRows; ++_R) {\n\t\tvar row/*:HTMLTableRowElement*/ = rows[_R];\n\t\tif (is_dom_element_hidden(row)) {\n\t\t\tif (opts.display) continue;\n\t\t\trowinfo[R] = {hidden: true};\n\t\t}\n\t\tvar elts/*:HTMLCollection<HTMLTableCellElement>*/ = (row.cells);\n\t\tfor(_C = C = 0; _C < elts.length; ++_C) {\n\t\t\tvar elt/*:HTMLTableCellElement*/ = elts[_C];\n\t\t\tif (opts.display && is_dom_element_hidden(elt)) continue;\n\t\t\tvar v/*:?string*/ = elt.hasAttribute('data-v') ? elt.getAttribute('data-v') : elt.hasAttribute('v') ? elt.getAttribute('v') : htmldecode(elt.innerHTML);\n\t\t\tvar z/*:?string*/ = elt.getAttribute('data-z') || elt.getAttribute('z');\n\t\t\tfor(midx = 0; midx < merges.length; ++midx) {\n\t\t\t\tvar m/*:Range*/ = merges[midx];\n\t\t\t\tif(m.s.c == C + or_C && m.s.r < R + or_R && R + or_R <= m.e.r) { C = m.e.c+1 - or_C; midx = -1; }\n\t\t\t}\n\t\t\t/* TODO: figure out how to extract nonstandard mso- style */\n\t\t\tCS = +elt.getAttribute(\"colspan\") || 1;\n\t\t\tif( ((RS = (+elt.getAttribute(\"rowspan\") || 1)))>1 || CS>1) merges.push({s:{r:R + or_R,c:C + or_C},e:{r:R + or_R + (RS||1) - 1, c:C + or_C + (CS||1) - 1}});\n\t\t\tvar o/*:Cell*/ = {t:'s', v:v};\n\t\t\tvar _t/*:string*/ = elt.getAttribute(\"data-t\") || elt.getAttribute(\"t\") || \"\";\n\t\t\tif(v != null) {\n\t\t\t\tif(v.length == 0) o.t = _t || 'z';\n\t\t\t\telse if(opts.raw || v.trim().length == 0 || _t == \"s\"){}\n\t\t\t\telse if(v === 'TRUE') o = {t:'b', v:true};\n\t\t\t\telse if(v === 'FALSE') o = {t:'b', v:false};\n\t\t\t\telse if(!isNaN(fuzzynum(v))) o = {t:'n', v:fuzzynum(v)};\n\t\t\t\telse if(!isNaN(fuzzydate(v).getDate())) {\n\t\t\t\t\to = ({t:'d', v:parseDate(v)}/*:any*/);\n\t\t\t\t\tif(!opts.cellDates) o = ({t:'n', v:datenum(o.v)}/*:any*/);\n\t\t\t\t\to.z = opts.dateNF || table_fmt[14];\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(o.z === undefined && z != null) o.z = z;\n\t\t\t/* The first link is used.  Links are assumed to be fully specified.\n\t\t\t * TODO: The right way to process relative links is to make a new <a> */\n\t\t\tvar l = \"\", Aelts = elt.getElementsByTagName(\"A\");\n\t\t\tif(Aelts && Aelts.length) for(var Aelti = 0; Aelti < Aelts.length; ++Aelti)\tif(Aelts[Aelti].hasAttribute(\"href\")) {\n\t\t\t\tl = Aelts[Aelti].getAttribute(\"href\"); if(l.charAt(0) != \"#\") break;\n\t\t\t}\n\t\t\tif(l && l.charAt(0) != \"#\" &&\tl.slice(0, 11).toLowerCase() != 'javascript:') o.l = ({ Target: l });\n\t\t\tif(dense) { if(!ws[\"!data\"][R + or_R]) ws[\"!data\"][R + or_R] = []; ws[\"!data\"][R + or_R][C + or_C] = o; }\n\t\t\telse ws[encode_cell({c:C + or_C, r:R + or_R})] = o;\n\t\t\tif(range.e.c < C + or_C) range.e.c = C + or_C;\n\t\t\tC += CS;\n\t\t}\n\t\t++R;\n\t}\n\tif(merges.length) ws['!merges'] = (ws[\"!merges\"] || []).concat(merges);\n\trange.e.r = Math.max(range.e.r, R - 1 + or_R);\n\tws['!ref'] = encode_range(range);\n\tif(R >= sheetRows) ws['!fullref'] = encode_range((range.e.r = rows.length-_R+R-1 + or_R,range)); // We can count the real number of rows to parse but we don't to improve the performance\n\treturn ws;\n}\n\nfunction parse_dom_table(table/*:HTMLElement*/, _opts/*:?any*/)/*:Worksheet*/ {\n\tvar opts = _opts || {};\n\tvar ws/*:Worksheet*/ = ({}/*:any*/); if(opts.dense) ws[\"!data\"] = [];\n\treturn sheet_add_dom(ws, table, _opts);\n}\n\nfunction table_to_book(table/*:HTMLElement*/, opts/*:?any*/)/*:Workbook*/ {\n\tvar o = sheet_to_workbook(parse_dom_table(table, opts), opts);\n\t//o.bookType = \"dom\"; // TODO: define a type for this\n\treturn o;\n}\n\nfunction is_dom_element_hidden(element/*:HTMLElement*/)/*:boolean*/ {\n\tvar display/*:string*/ = '';\n\tvar get_computed_style/*:?function*/ = get_get_computed_style_function(element);\n\tif(get_computed_style) display = get_computed_style(element).getPropertyValue('display');\n\tif(!display) display = element.style && element.style.display;\n\treturn display === 'none';\n}\n\n/* global getComputedStyle */\nfunction get_get_computed_style_function(element/*:HTMLElement*/)/*:?function*/ {\n\t// The proper getComputedStyle implementation is the one defined in the element window\n\tif(element.ownerDocument.defaultView && typeof element.ownerDocument.defaultView.getComputedStyle === 'function') return element.ownerDocument.defaultView.getComputedStyle;\n\t// If it is not available, try to get one from the global namespace\n\tif(typeof getComputedStyle === 'function') return getComputedStyle;\n\treturn null;\n}\n/* OpenDocument */\nfunction parse_text_p(text/*:string*//*::, tag*/)/*:Array<any>*/ {\n\t/* 6.1.2 White Space Characters */\n\tvar fixed = text\n\t\t.replace(/[\\t\\r\\n]/g, \" \").trim().replace(/ +/g, \" \")\n\t\t.replace(/<text:s\\/>/g,\" \")\n\t\t.replace(/<text:s text:c=\"(\\d+)\"\\/>/g, function($$,$1) { return Array(parseInt($1,10)+1).join(\" \"); })\n\t\t.replace(/<text:tab[^>]*\\/>/g,\"\\t\")\n\t\t.replace(/<text:line-break\\/>/g,\"\\n\");\n\tvar v = unescapexml(fixed.replace(/<[^>]*>/g,\"\"));\n\n\treturn [v];\n}\n\n/* Note: ODS can stick styles in content.xml or styles.xml, FODS blurs lines */\nfunction parse_ods_styles(d/*:string*/, _opts, _nfm) {\n\tvar number_format_map = _nfm || {};\n\tvar str = xlml_normalize(d);\n\txlmlregex.lastIndex = 0;\n\tstr = str.replace(/<!--([\\s\\S]*?)-->/mg,\"\").replace(/<!DOCTYPE[^\\[]*\\[[^\\]]*\\]>/gm,\"\");\n\tvar Rn, NFtag, NF = \"\", tNF = \"\", y, etpos = 0, tidx = -1, infmt = false, payload = \"\";\n\twhile((Rn = xlmlregex.exec(str))) {\n\t\tswitch((Rn[3]=Rn[3].replace(/_.*$/,\"\"))) {\n\t\t/* Number Format Definitions */\n\t\tcase 'number-style': // <number:number-style> 16.29.2\n\t\tcase 'currency-style': // <number:currency-style> 16.29.8\n\t\tcase 'percentage-style': // <number:percentage-style> 16.29.10\n\t\tcase 'date-style': // <number:date-style> 16.29.11\n\t\tcase 'time-style': // <number:time-style> 16.29.19\n\t\tcase 'text-style': // <number:text-style> 16.29.26\n\t\t\tif(Rn[1]==='/') {\n\t\t\t\tinfmt = false;\n\t\t\t\tif(NFtag['truncate-on-overflow'] == \"false\") {\n\t\t\t\t\tif(NF.match(/h/)) NF = NF.replace(/h+/, \"[$&]\");\n\t\t\t\t\telse if(NF.match(/m/)) NF = NF.replace(/m+/, \"[$&]\");\n\t\t\t\t\telse if(NF.match(/s/)) NF = NF.replace(/s+/, \"[$&]\");\n\t\t\t\t}\n\t\t\t\tnumber_format_map[NFtag.name] = NF;\n\t\t\t\tNF = \"\";\n\t\t\t} else if(Rn[0].charAt(Rn[0].length-2) !== '/') {\n\t\t\t\tinfmt = true;\n\t\t\t\tNF = \"\";\n\t\t\t\tNFtag = parsexmltag(Rn[0], false);\n\t\t\t} break;\n\n\t\t// LibreOffice bug https://bugs.documentfoundation.org/show_bug.cgi?id=149484\n\t\tcase 'boolean-style': // <number:boolean-style> 16.29.24\n\t\t\tif(Rn[1]==='/') {\n\t\t\t\tinfmt = false;\n\t\t\t\tnumber_format_map[NFtag.name] = \"General\";\n\t\t\t\tNF = \"\";\n\t\t\t} else if(Rn[0].charAt(Rn[0].length-2) !== '/') {\n\t\t\t\tinfmt = true;\n\t\t\t\tNF = \"\";\n\t\t\t\tNFtag = parsexmltag(Rn[0], false);\n\t\t\t} break;\n\n\t\t/* Number Format Elements */\n\t\tcase 'boolean': // <number:boolean> 16.29.25\n\t\t\tNF += \"General\"; // ODF spec is unfortunately underspecified here\n\t\t\tbreak;\n\n\t\tcase 'text': // <number:text> 16.29.27\n\t\t\tif(Rn[1]==='/') {\n\t\t\t\tpayload = str.slice(tidx, xlmlregex.lastIndex - Rn[0].length);\n\t\t\t\t// NOTE: Excel has a different interpretation of \"%%\" and friends\n\t\t\t\tif(payload == \"%\" && NFtag[0] == '<number:percentage-style') NF += \"%\";\n\t\t\t\telse NF += '\"' + payload.replace(/\"/g, '\"\"') + '\"';\n\t\t\t} else if(Rn[0].charAt(Rn[0].length-2) !== '/') {\n\t\t\t\ttidx = xlmlregex.lastIndex;\n\t\t\t} break;\n\n\n\t\tcase 'day': { // <number:day> 16.29.12\n\t\t\ty = parsexmltag(Rn[0], false);\n\t\t\tswitch(y[\"style\"]) {\n\t\t\t\tcase \"short\": NF += \"d\"; break;\n\t\t\t\tcase \"long\": NF += \"dd\"; break;\n\t\t\t\tdefault: NF += \"dd\"; break; // TODO: error condition\n\t\t\t}\n\t\t} break;\n\n\t\tcase 'day-of-week': { // <number:day-of-week> 16.29.16\n\t\t\ty = parsexmltag(Rn[0], false);\n\t\t\tswitch(y[\"style\"]) {\n\t\t\t\tcase \"short\": NF += \"ddd\"; break;\n\t\t\t\tcase \"long\": NF += \"dddd\"; break;\n\t\t\t\tdefault: NF += \"ddd\"; break;\n\t\t\t}\n\t\t} break;\n\n\t\tcase 'era': { // <number:era> 16.29.15 TODO: proper mapping\n\t\t\ty = parsexmltag(Rn[0], false);\n\t\t\tswitch(y[\"style\"]) {\n\t\t\t\tcase \"short\": NF += \"ee\"; break;\n\t\t\t\tcase \"long\": NF += \"eeee\"; break;\n\t\t\t\tdefault: NF += \"eeee\"; break; // TODO: error condition\n\t\t\t}\n\t\t} break;\n\n\t\tcase 'hours': { // <number:hours> 16.29.20\n\t\t\ty = parsexmltag(Rn[0], false);\n\t\t\tswitch(y[\"style\"]) {\n\t\t\t\tcase \"short\": NF += \"h\"; break;\n\t\t\t\tcase \"long\": NF += \"hh\"; break;\n\t\t\t\tdefault: NF += \"hh\"; break; // TODO: error condition\n\t\t\t}\n\t\t} break;\n\n\t\tcase 'minutes': { // <number:minutes> 16.29.21\n\t\t\ty = parsexmltag(Rn[0], false);\n\t\t\tswitch(y[\"style\"]) {\n\t\t\t\tcase \"short\": NF += \"m\"; break;\n\t\t\t\tcase \"long\": NF += \"mm\"; break;\n\t\t\t\tdefault: NF += \"mm\"; break; // TODO: error condition\n\t\t\t}\n\t\t} break;\n\n\t\tcase 'month': { // <number:month> 16.29.13\n\t\t\ty = parsexmltag(Rn[0], false);\n\t\t\tif(y[\"textual\"]) NF += \"mm\";\n\t\t\tswitch(y[\"style\"]) {\n\t\t\t\tcase \"short\": NF += \"m\"; break;\n\t\t\t\tcase \"long\": NF += \"mm\"; break;\n\t\t\t\tdefault: NF += \"m\"; break;\n\t\t\t}\n\t\t} break;\n\n\t\tcase 'seconds': { // <number:seconds> 16.29.22\n\t\t\ty = parsexmltag(Rn[0], false);\n\t\t\tswitch(y[\"style\"]) {\n\t\t\t\tcase \"short\": NF += \"s\"; break;\n\t\t\t\tcase \"long\": NF += \"ss\"; break;\n\t\t\t\tdefault: NF += \"ss\"; break; // TODO: error condition\n\t\t\t}\n\t\t\tif(y[\"decimal-places\"]) NF += \".\" + fill(\"0\", +y[\"decimal-places\"]);\n\t\t} break;\n\n\t\tcase 'year': { // <number:year> 16.29.14\n\t\t\ty = parsexmltag(Rn[0], false);\n\t\t\tswitch(y[\"style\"]) {\n\t\t\t\tcase \"short\": NF += \"yy\"; break;\n\t\t\t\tcase \"long\": NF += \"yyyy\"; break;\n\t\t\t\tdefault: NF += \"yy\"; break; // TODO: error condition\n\t\t\t}\n\t\t} break;\n\n\t\tcase 'am-pm': // <number:am-pm> 16.29.23\n\t\t\tNF += \"AM/PM\"; // LO autocorrects A/P -> AM/PM\n\t\t\tbreak;\n\n\t\tcase 'week-of-year': // <number:week-of-year> 16.29.17\n\t\tcase 'quarter': // <number:quarter> 16.29.18\n\t\t\tconsole.error(\"Excel does not support ODS format token \" + Rn[3]);\n\t\t\tbreak;\n\n\t\tcase 'fill-character': // <number:fill-character> 16.29.5\n\t\t\tif(Rn[1]==='/') {\n\t\t\t\tpayload = str.slice(tidx, xlmlregex.lastIndex - Rn[0].length);\n\t\t\t\t// NOTE: Excel has a different interpretation of \"%%\" and friends\n\t\t\t\tNF += '\"' + payload.replace(/\"/g, '\"\"') + '\"*';\n\t\t\t} else if(Rn[0].charAt(Rn[0].length-2) !== '/') {\n\t\t\t\ttidx = xlmlregex.lastIndex;\n\t\t\t} break;\n\n\t\tcase 'scientific-number': // <number:scientific-number> 16.29.6\n\t\t\t// TODO: find a mapping for all parameters\n\t\t\ty = parsexmltag(Rn[0], false);\n\t\t\tNF += \"0.\" + fill(\"0\", +y[\"min-decimal-places\"] || +y[\"decimal-places\"] || 2) + fill(\"?\", +y[\"decimal-places\"] - +y[\"min-decimal-places\"] || 0) + \"E\" + (parsexmlbool(y[\"forced-exponent-sign\"]) ? \"+\" : \"\") + fill(\"0\", +y[\"min-exponent-digits\"] || 2);\n\t\t\tbreak;\n\n\t\tcase 'fraction': // <number:fraction> 16.29.7\n\t\t\t// TODO: find a mapping for all parameters\n\t\t\ty = parsexmltag(Rn[0], false);\n\t\t\tif(!+y[\"min-integer-digits\"]) NF += \"#\";\n\t\t\telse NF += fill(\"0\", +y[\"min-integer-digits\"]);\n\t\t\tNF += \" \";\n\t\t\tNF += fill(\"?\", +y[\"min-numerator-digits\"] || 1);\n\t\t\tNF += \"/\";\n\t\t\tif(+y[\"denominator-value\"]) NF += y[\"denominator-value\"];\n\t\t\telse NF += fill(\"?\", +y[\"min-denominator-digits\"] || 1);\n\t\t\tbreak;\n\n\t\tcase 'currency-symbol': // <number:currency-symbol> 16.29.9\n\t\t\t// TODO: localization with [$-...]\n\t\t\tif(Rn[1]==='/') {\n\t\t\t\tNF += '\"' + str.slice(tidx, xlmlregex.lastIndex - Rn[0].length).replace(/\"/g, '\"\"') + '\"';\n\t\t\t} else if(Rn[0].charAt(Rn[0].length-2) !== '/') {\n\t\t\t\ttidx = xlmlregex.lastIndex;\n\t\t\t} else NF += \"$\";\n\t\t\tbreak;\n\n\t\tcase 'text-properties': // <style:text-properties> 16.29.29\n\t\t\ty = parsexmltag(Rn[0], false);\n\t\t\tswitch((y[\"color\"]||\"\").toLowerCase().replace(\"#\", \"\")) {\n\t\t\t\tcase \"ff0000\": case \"red\": NF = \"[Red]\" + NF; break;\n\t\t\t}\n\t\t\tbreak;\n\n\t\tcase 'text-content': // <number:text-content> 16.29.28\n\t\t\tNF += \"@\";\n\t\t\tbreak;\n\n\t\tcase 'map': // <style:map> 16.3\n\t\t\t// TODO: handle more complex maps\n\t\t\ty = parsexmltag(Rn[0], false);\n\t\t\tif(unescapexml(y[\"condition\"]) == \"value()>=0\") NF = number_format_map[y[\"apply-style-name\"]] + \";\" + NF;\n\t\t\telse console.error(\"ODS number format may be incorrect: \" + y[\"condition\"]);\n\t\t\tbreak;\n\n\t\tcase 'number': // <number:number> 16.29.3\n\t\t\t// TODO: handle all the attributes\n\t\t\tif(Rn[1]==='/') break;\n\t\t\ty = parsexmltag(Rn[0], false);\n\t\t\ttNF = \"\";\n\t\t\ttNF += fill(\"0\", +y[\"min-integer-digits\"] || 1);\n\t\t\tif(parsexmlbool(y[\"grouping\"])) tNF = commaify(fill(\"#\", Math.max(0, 4 - tNF.length)) + tNF);\n\t\t\tif(+y[\"min-decimal-places\"] || +y[\"decimal-places\"]) tNF += \".\";\n\t\t\tif(+y[\"min-decimal-places\"]) tNF += fill(\"0\", +y[\"min-decimal-places\"] || 1);\n\t\t\tif(+y[\"decimal-places\"] - (+y[\"min-decimal-places\"]||0)) tNF += fill(\"0\", +y[\"decimal-places\"] - (+y[\"min-decimal-places\"]||0)); // TODO: should this be \"#\" ?\n\t\t\tNF += tNF;\n\t\t\tbreak;\n\n\t\tcase 'embedded-text': // <number:embedded-text> 16.29.4\n\t\t\t// TODO: verify interplay with grouping et al\n\t\t\tif(Rn[1]==='/') {\n\t\t\t\tif(etpos == 0) NF += '\"' + str.slice(tidx, xlmlregex.lastIndex - Rn[0].length).replace(/\"/g, '\"\"') + '\"';\n\t\t\t\telse NF = NF.slice(0, etpos) + '\"' + str.slice(tidx, xlmlregex.lastIndex - Rn[0].length).replace(/\"/g, '\"\"') + '\"' + NF.slice(etpos);\n\t\t\t} else if(Rn[0].charAt(Rn[0].length-2) !== '/') {\n\t\t\t\ttidx = xlmlregex.lastIndex;\n\t\t\t\tetpos = -+parsexmltag(Rn[0], false)[\"position\"] || 0;\n\t\t\t} break;\n\n\t}}\n\treturn number_format_map;\n}\n\nfunction parse_content_xml(d/*:string*/, _opts, _nfm)/*:Workbook*/ {\n\t\tvar opts = _opts || {};\n\t\tif(DENSE != null && opts.dense == null) opts.dense = DENSE;\n\t\tvar str = xlml_normalize(d);\n\t\tvar state/*:Array<any>*/ = [], tmp;\n\t\tvar tag/*:: = {}*/;\n\t\tvar nfidx, NF = \"\", pidx = 0;\n\t\tvar sheetag/*:: = {name:\"\", '名称':\"\"}*/;\n\t\tvar rowtag/*:: = {'行号':\"\"}*/;\n\t\tvar Sheets = {}, SheetNames/*:Array<string>*/ = [];\n\t\tvar ws = ({}/*:any*/); if(opts.dense) ws[\"!data\"] = [];\n\t\tvar Rn, q/*:: :any = ({t:\"\", v:null, z:null, w:\"\",c:[],}:any)*/;\n\t\tvar ctag = ({value:\"\"}/*:any*/);\n\t\tvar textp = \"\", textpidx = 0, textptag/*:: = {}*/;\n\t\tvar textR = [];\n\t\tvar R = -1, C = -1, range = {s: {r:1000000,c:10000000}, e: {r:0, c:0}};\n\t\tvar row_ol = 0;\n\t\tvar number_format_map = _nfm || {}, styles = {};\n\t\tvar merges/*:Array<Range>*/ = [], mrange = {}, mR = 0, mC = 0;\n\t\tvar rowinfo/*:Array<RowInfo>*/ = [], rowpeat = 1, colpeat = 1;\n\t\tvar arrayf/*:Array<[Range, string]>*/ = [];\n\t\tvar WB = {Names:[], WBProps:{}};\n\t\tvar atag = ({}/*:any*/);\n\t\tvar _Ref/*:[string, string]*/ = [\"\", \"\"];\n\t\tvar comments/*:Array<Comment>*/ = [], comment/*:Comment*/ = ({}/*:any*/);\n\t\tvar creator = \"\", creatoridx = 0;\n\t\tvar isstub = false, intable = false;\n\t\tvar i = 0;\n\t\tvar baddate = 0;\n\t\txlmlregex.lastIndex = 0;\n\t\tstr = str.replace(/<!--([\\s\\S]*?)-->/mg,\"\").replace(/<!DOCTYPE[^\\[]*\\[[^\\]]*\\]>/gm,\"\");\n\t\twhile((Rn = xlmlregex.exec(str))) switch((Rn[3]=Rn[3].replace(/_.*$/,\"\"))) {\n\n\t\t\tcase 'table': case '工作表': // 9.1.2 <table:table>\n\t\t\t\tif(Rn[1]==='/') {\n\t\t\t\t\tif(range.e.c >= range.s.c && range.e.r >= range.s.r) ws['!ref'] = encode_range(range);\n\t\t\t\t\telse ws['!ref'] = \"A1:A1\";\n\t\t\t\t\tif(opts.sheetRows > 0 && opts.sheetRows <= range.e.r) {\n\t\t\t\t\t\tws['!fullref'] = ws['!ref'];\n\t\t\t\t\t\trange.e.r = opts.sheetRows - 1;\n\t\t\t\t\t\tws['!ref'] = encode_range(range);\n\t\t\t\t\t}\n\t\t\t\t\tif(merges.length) ws['!merges'] = merges;\n\t\t\t\t\tif(rowinfo.length) ws[\"!rows\"] = rowinfo;\n\t\t\t\t\tsheetag.name = sheetag['名称'] || sheetag.name;\n\t\t\t\t\tif(typeof JSON !== 'undefined') JSON.stringify(sheetag);\n\t\t\t\t\tSheetNames.push(sheetag.name);\n\t\t\t\t\tSheets[sheetag.name] = ws;\n\t\t\t\t\tintable = false;\n\t\t\t\t}\n\t\t\t\telse if(Rn[0].charAt(Rn[0].length-2) !== '/') {\n\t\t\t\t\tsheetag = parsexmltag(Rn[0], false);\n\t\t\t\t\tR = C = -1;\n\t\t\t\t\trange.s.r = range.s.c = 10000000; range.e.r = range.e.c = 0;\n\t\t\t\t\tws = ({}/*:any*/); if(opts.dense) ws[\"!data\"] = []; merges = [];\n\t\t\t\t\trowinfo = [];\n\t\t\t\t\tintable = true;\n\t\t\t\t}\n\t\t\t\tbreak;\n\n\t\t\tcase 'table-row-group': // 9.1.9 <table:table-row-group>\n\t\t\t\tif(Rn[1] === \"/\") --row_ol; else ++row_ol;\n\t\t\t\tbreak;\n\t\t\tcase 'table-row': case '行': // 9.1.3 <table:table-row>\n\t\t\t\tif(Rn[1] === '/') { R+=rowpeat; rowpeat = 1; break; }\n\t\t\t\trowtag = parsexmltag(Rn[0], false);\n\t\t\t\tif(rowtag['行号']) R = rowtag['行号'] - 1; else if(R == -1) R = 0;\n\t\t\t\trowpeat = +rowtag['number-rows-repeated'] || 1;\n\t\t\t\t/* TODO: remove magic */\n\t\t\t\tif(rowpeat < 10) for(i = 0; i < rowpeat; ++i) if(row_ol > 0) rowinfo[R + i] = {level: row_ol};\n\t\t\t\tC = -1; break;\n\t\t\tcase 'covered-table-cell': // 9.1.5 <table:covered-table-cell>\n\t\t\t\tif(Rn[1] !== '/') ++C;\n\t\t\t\tif(opts.sheetStubs) {\n\t\t\t\t\tif(opts.dense) { if(!ws[\"!data\"][R]) ws[\"!data\"][R] = []; ws[\"!data\"][R][C] = {t:'z'}; }\n\t\t\t\t\telse ws[encode_cell({r:R,c:C})] = {t:'z'};\n\t\t\t\t}\n\t\t\t\ttextp = \"\"; textR = [];\n\t\t\t\tbreak; /* stub */\n\t\t\tcase 'table-cell': case '数据':\n\t\t\t\tif(Rn[0].charAt(Rn[0].length-2) === '/') {\n\t\t\t\t\t++C;\n\t\t\t\t\tctag = parsexmltag(Rn[0], false);\n\t\t\t\t\tcolpeat = parseInt(ctag['number-columns-repeated']||\"1\", 10);\n\t\t\t\t\tq = ({t:'z', v:null/*:: , z:null, w:\"\",c:[]*/}/*:any*/);\n\t\t\t\t\tif(ctag.formula && opts.cellFormula != false) q.f = ods_to_csf_formula(unescapexml(ctag.formula));\n\t\t\t\t\tif(ctag[\"style-name\"] && styles[ctag[\"style-name\"]]) q.z = styles[ctag[\"style-name\"]];\n\t\t\t\t\tif((ctag['数据类型'] || ctag['value-type']) == \"string\") {\n\t\t\t\t\t\tq.t = \"s\"; q.v = unescapexml(ctag['string-value'] || \"\");\n\t\t\t\t\t\tif(opts.dense) {\n\t\t\t\t\t\t\tif(!ws[\"!data\"][R]) ws[\"!data\"][R] = [];\n\t\t\t\t\t\t\tws[\"!data\"][R][C] = q;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tws[encode_col(C) + encode_row(R)] = q;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tC+= colpeat-1;\n\t\t\t\t} else if(Rn[1]!=='/') {\n\t\t\t\t\t++C;\n\t\t\t\t\ttextp = \"\"; textpidx = 0; textR = [];\n\t\t\t\t\tcolpeat = 1;\n\t\t\t\t\tvar rptR = rowpeat ? R + rowpeat - 1 : R;\n\t\t\t\t\tif(C > range.e.c) range.e.c = C;\n\t\t\t\t\tif(C < range.s.c) range.s.c = C;\n\t\t\t\t\tif(R < range.s.r) range.s.r = R;\n\t\t\t\t\tif(rptR > range.e.r) range.e.r = rptR;\n\t\t\t\t\tctag = parsexmltag(Rn[0], false);\n\t\t\t\t\tcomments = []; comment = ({}/*:any*/);\n\t\t\t\t\tq = ({t:ctag['数据类型'] || ctag['value-type'], v:null/*:: , z:null, w:\"\",c:[]*/}/*:any*/);\n\t\t\t\t\tif(ctag[\"style-name\"] && styles[ctag[\"style-name\"]]) q.z = styles[ctag[\"style-name\"]];\n\t\t\t\t\tif(opts.cellFormula) {\n\t\t\t\t\t\tif(ctag.formula) ctag.formula = unescapexml(ctag.formula);\n\t\t\t\t\t\tif(ctag['number-matrix-columns-spanned'] && ctag['number-matrix-rows-spanned']) {\n\t\t\t\t\t\t\tmR = parseInt(ctag['number-matrix-rows-spanned'],10) || 0;\n\t\t\t\t\t\t\tmC = parseInt(ctag['number-matrix-columns-spanned'],10) || 0;\n\t\t\t\t\t\t\tmrange = {s: {r:R,c:C}, e:{r:R + mR-1,c:C + mC-1}};\n\t\t\t\t\t\t\tq.F = encode_range(mrange);\n\t\t\t\t\t\t\tarrayf.push([mrange, q.F]);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif(ctag.formula) q.f = ods_to_csf_formula(ctag.formula);\n\t\t\t\t\t\telse for(i = 0; i < arrayf.length; ++i)\n\t\t\t\t\t\t\tif(R >= arrayf[i][0].s.r && R <= arrayf[i][0].e.r)\n\t\t\t\t\t\t\t\tif(C >= arrayf[i][0].s.c && C <= arrayf[i][0].e.c)\n\t\t\t\t\t\t\t\t\tq.F = arrayf[i][1];\n\t\t\t\t\t}\n\t\t\t\t\tif(ctag['number-columns-spanned'] || ctag['number-rows-spanned']) {\n\t\t\t\t\t\tmR = parseInt(ctag['number-rows-spanned'],10) || 0;\n\t\t\t\t\t\tmC = parseInt(ctag['number-columns-spanned'],10) || 0;\n\t\t\t\t\t\tmrange = {s: {r:R,c:C}, e:{r:R + mR-1,c:C + mC-1}};\n\t\t\t\t\t\tmerges.push(mrange);\n\t\t\t\t\t}\n\n\t\t\t\t\t/* 19.675.2 table:number-columns-repeated */\n\t\t\t\t\tif(ctag['number-columns-repeated']) colpeat = parseInt(ctag['number-columns-repeated'], 10);\n\n\t\t\t\t\t/* 19.385 office:value-type */\n\t\t\t\t\tswitch(q.t) {\n\t\t\t\t\t\tcase 'boolean': q.t = 'b'; q.v = parsexmlbool(ctag['boolean-value']) || (+ctag['boolean-value'] >= 1); break;\n\t\t\t\t\t\tcase 'float': q.t = 'n'; q.v = parseFloat(ctag.value); break;\n\t\t\t\t\t\tcase 'percentage': q.t = 'n'; q.v = parseFloat(ctag.value); break;\n\t\t\t\t\t\tcase 'currency': q.t = 'n'; q.v = parseFloat(ctag.value); break;\n\t\t\t\t\t\tcase 'date': q.t = 'd'; q.v = parseDate(ctag['date-value']);\n\t\t\t\t\t\t\tif(!opts.cellDates) { q.t = 'n'; q.v = datenum(q.v, WB.WBProps.date1904) - baddate; }\n\t\t\t\t\t\t\tif(!q.z) q.z = 'm/d/yy'; break;\n\t\t\t\t\t\tcase 'time': q.t = 'n'; q.v = parse_isodur(ctag['time-value'])/86400;\n\t\t\t\t\t\t\tif(opts.cellDates) { q.t = 'd'; q.v = numdate(q.v); }\n\t\t\t\t\t\t\tif(!q.z) q.z = 'HH:MM:SS'; break;\n\t\t\t\t\t\tcase 'number': q.t = 'n'; q.v = parseFloat(ctag['数据数值']); break;\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tif(q.t === 'string' || q.t === 'text' || !q.t) {\n\t\t\t\t\t\t\t\tq.t = 's';\n\t\t\t\t\t\t\t\tif(ctag['string-value'] != null) { textp = unescapexml(ctag['string-value']); textR = []; }\n\t\t\t\t\t\t\t} else throw new Error('Unsupported value type ' + q.t);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tisstub = false;\n\t\t\t\t\tif(q.t === 's') {\n\t\t\t\t\t\tq.v = textp || '';\n\t\t\t\t\t\tif(textR.length) q.R = textR;\n\t\t\t\t\t\tisstub = textpidx == 0;\n\t\t\t\t\t}\n\t\t\t\t\tif(atag.Target) q.l = atag;\n\t\t\t\t\tif(comments.length > 0) { q.c = comments; comments = []; }\n\t\t\t\t\tif(textp && opts.cellText !== false) q.w = textp;\n\t\t\t\t\tif(isstub) { q.t = \"z\"; delete q.v; }\n\t\t\t\t\tif(!isstub || opts.sheetStubs) {\n\t\t\t\t\t\tif(!(opts.sheetRows && opts.sheetRows <= R)) {\n\t\t\t\t\t\t\tfor(var rpt = 0; rpt < rowpeat; ++rpt) {\n\t\t\t\t\t\t\t\tcolpeat = parseInt(ctag['number-columns-repeated']||\"1\", 10);\n\t\t\t\t\t\t\t\tif(opts.dense) {\n\t\t\t\t\t\t\t\t\tif(!ws[\"!data\"][R + rpt]) ws[\"!data\"][R + rpt] = [];\n\t\t\t\t\t\t\t\t\tws[\"!data\"][R + rpt][C] = rpt == 0 ? q : dup(q);\n\t\t\t\t\t\t\t\t\twhile(--colpeat > 0) ws[\"!data\"][R + rpt][C + colpeat] = dup(q);\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tws[encode_cell({r:R + rpt,c:C})] = q;\n\t\t\t\t\t\t\t\t\twhile(--colpeat > 0) ws[encode_cell({r:R + rpt,c:C + colpeat})] = dup(q);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tif(range.e.c <= C) range.e.c = C;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcolpeat = parseInt(ctag['number-columns-repeated']||\"1\", 10);\n\t\t\t\t\tC += colpeat-1; colpeat = 0;\n\t\t\t\t\tq = {/*:: t:\"\", v:null, z:null, w:\"\",c:[]*/};\n\t\t\t\t\ttextp = \"\"; textR = [];\n\t\t\t\t}\n\t\t\t\tatag = ({}/*:any*/);\n\t\t\t\tbreak; // 9.1.4 <table:table-cell>\n\n\t\t\t/* pure state */\n\t\t\tcase 'document': // TODO: <office:document> is the root for FODS\n\t\t\tcase 'document-content': case '电子表格文档': // 3.1.3.2 <office:document-content>\n\t\t\tcase 'spreadsheet': case '主体': // 3.7 <office:spreadsheet>\n\t\t\tcase 'scripts': // 3.12 <office:scripts>\n\t\t\tcase 'styles': // TODO <office:styles>\n\t\t\tcase 'font-face-decls': // 3.14 <office:font-face-decls>\n\t\t\tcase 'master-styles': // 3.15.4 <office:master-styles> -- relevant for FODS\n\t\t\t\tif(Rn[1]==='/'){if((tmp=state.pop())[0]!==Rn[3]) throw \"Bad state: \"+tmp;}\n\t\t\t\telse if(Rn[0].charAt(Rn[0].length-2) !== '/') state.push([Rn[3], true]);\n\t\t\t\tbreak;\n\n\t\t\tcase 'annotation': // 14.1 <office:annotation>\n\t\t\t\tif(Rn[1]==='/'){\n\t\t\t\t\tif((tmp=state.pop())[0]!==Rn[3]) throw \"Bad state: \"+tmp;\n\t\t\t\t\tcomment.t = textp;\n\t\t\t\t\tif(textR.length) /*::(*/comment/*:: :any)*/.R = textR;\n\t\t\t\t\tcomment.a = creator;\n\t\t\t\t\tcomments.push(comment);\n\t\t\t\t}\n\t\t\t\telse if(Rn[0].charAt(Rn[0].length-2) !== '/') {state.push([Rn[3], false]);}\n\t\t\t\tcreator = \"\"; creatoridx = 0;\n\t\t\t\ttextp = \"\"; textpidx = 0; textR = [];\n\t\t\t\tbreak;\n\n\t\t\tcase 'creator': // 4.3.2.7 <dc:creator>\n\t\t\t\tif(Rn[1]==='/') { creator = str.slice(creatoridx,Rn.index); }\n\t\t\t\telse creatoridx = Rn.index + Rn[0].length;\n\t\t\t\tbreak;\n\n\t\t\t/* ignore state */\n\t\t\tcase 'meta': case '元数据': // TODO: <office:meta> <uof:元数据> FODS/UOF\n\t\t\tcase 'settings': // TODO: <office:settings>\n\t\t\tcase 'config-item-set': // TODO: <office:config-item-set>\n\t\t\tcase 'config-item-map-indexed': // TODO: <office:config-item-map-indexed>\n\t\t\tcase 'config-item-map-entry': // TODO: <office:config-item-map-entry>\n\t\t\tcase 'config-item-map-named': // TODO: <office:config-item-map-entry>\n\t\t\tcase 'shapes': // 9.2.8 <table:shapes>\n\t\t\tcase 'frame': // 10.4.2 <draw:frame>\n\t\t\tcase 'text-box': // 10.4.3 <draw:text-box>\n\t\t\tcase 'image': // 10.4.4 <draw:image>\n\t\t\tcase 'data-pilot-tables': // 9.6.2 <table:data-pilot-tables>\n\t\t\tcase 'list-style': // 16.30 <text:list-style>\n\t\t\tcase 'form': // 13.13 <form:form>\n\t\t\tcase 'dde-links': // 9.8 <table:dde-links>\n\t\t\tcase 'event-listeners': // TODO\n\t\t\tcase 'chart': // TODO\n\t\t\t\tif(Rn[1]==='/'){if((tmp=state.pop())[0]!==Rn[3]) throw \"Bad state: \"+tmp;}\n\t\t\t\telse if(Rn[0].charAt(Rn[0].length-2) !== '/') state.push([Rn[3], false]);\n\t\t\t\ttextp = \"\"; textpidx = 0; textR = [];\n\t\t\t\tbreak;\n\n\t\t\tcase 'scientific-number': // <number:scientific-number>\n\t\t\tcase 'currency-symbol': // <number:currency-symbol>\n\t\t\tcase 'fill-character': // 16.29.5 <number:fill-character>\n\t\t\t\tbreak;\n\n\t\t\tcase 'text-style': // 16.27.25 <number:text-style>\n\t\t\tcase 'boolean-style': // 16.27.23 <number:boolean-style>\n\t\t\tcase 'number-style': // 16.27.2 <number:number-style>\n\t\t\tcase 'currency-style': // 16.29.8 <number:currency-style>\n\t\t\tcase 'percentage-style': // 16.27.9 <number:percentage-style>\n\t\t\tcase 'date-style': // 16.27.10 <number:date-style>\n\t\t\tcase 'time-style': // 16.27.18 <number:time-style>\n\t\t\t\tif(Rn[1]==='/'){\n\t\t\t\t\tvar xlmlidx = xlmlregex.lastIndex;\n\t\t\t\t\tparse_ods_styles(str.slice(nfidx, xlmlregex.lastIndex), _opts, number_format_map);\n\t\t\t\t\txlmlregex.lastIndex = xlmlidx;\n\t\t\t\t} else if(Rn[0].charAt(Rn[0].length-2) !== '/') {\n\t\t\t\t\tnfidx = xlmlregex.lastIndex - Rn[0].length;\n\t\t\t\t} break;\n\n\t\t\tcase 'script': break; // 3.13 <office:script>\n\t\t\tcase 'libraries': break; // TODO: <ooo:libraries>\n\t\t\tcase 'automatic-styles': break; // 3.15.3 <office:automatic-styles>\n\n\t\t\tcase 'default-style': // TODO: <style:default-style>\n\t\t\tcase 'page-layout': break; // TODO: <style:page-layout>\n\t\t\tcase 'style': { // 16.2 <style:style>\n\t\t\t\tvar styletag = parsexmltag(Rn[0], false);\n\t\t\t\tif(styletag[\"family\"] == \"table-cell\" && number_format_map[styletag[\"data-style-name\"]]) styles[styletag[\"name\"]] = number_format_map[styletag[\"data-style-name\"]];\n\t\t\t} break;\n\t\t\tcase 'map': break; // 16.3 <style:map>\n\t\t\tcase 'font-face': break; // 16.21 <style:font-face>\n\n\t\t\tcase 'paragraph-properties': break; // 17.6 <style:paragraph-properties>\n\t\t\tcase 'table-properties': break; // 17.15 <style:table-properties>\n\t\t\tcase 'table-column-properties': break; // 17.16 <style:table-column-properties>\n\t\t\tcase 'table-row-properties': break; // 17.17 <style:table-row-properties>\n\t\t\tcase 'table-cell-properties': break; // 17.18 <style:table-cell-properties>\n\n\t\t\tcase 'number': // 16.27.3 <number:number>\n\t\t\t\tbreak;\n\n\t\t\tcase 'fraction': break; // TODO 16.27.6 <number:fraction>\n\n\t\t\tcase 'day': // 16.27.11 <number:day>\n\t\t\tcase 'month': // 16.27.12 <number:month>\n\t\t\tcase 'year': // 16.27.13 <number:year>\n\t\t\tcase 'era': // 16.27.14 <number:era>\n\t\t\tcase 'day-of-week': // 16.27.15 <number:day-of-week>\n\t\t\tcase 'week-of-year': // 16.27.16 <number:week-of-year>\n\t\t\tcase 'quarter': // 16.27.17 <number:quarter>\n\t\t\tcase 'hours': // 16.27.19 <number:hours>\n\t\t\tcase 'minutes': // 16.27.20 <number:minutes>\n\t\t\tcase 'seconds': // 16.27.21 <number:seconds>\n\t\t\tcase 'am-pm': // 16.27.22 <number:am-pm>\n\t\t\t\tbreak;\n\n\t\t\tcase 'boolean': break; // 16.27.24 <number:boolean>\n\t\t\tcase 'text': // 16.27.26 <number:text>\n\t\t\t\tif(Rn[0].slice(-2) === \"/>\") break;\n\t\t\t\telse if(Rn[1]===\"/\") switch(state[state.length-1][0]) {\n\t\t\t\t\tcase 'number-style':\n\t\t\t\t\tcase 'date-style':\n\t\t\t\t\tcase 'time-style':\n\t\t\t\t\t\tNF += str.slice(pidx, Rn.index);\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\telse pidx = Rn.index + Rn[0].length;\n\t\t\t\tbreak;\n\n\t\t\tcase 'named-range': // 9.4.12 <table:named-range>\n\t\t\t\ttag = parsexmltag(Rn[0], false);\n\t\t\t\t_Ref = ods_to_csf_3D(tag['cell-range-address']);\n\t\t\t\tvar nrange = ({Name:tag.name, Ref:_Ref[0] + '!' + _Ref[1]}/*:any*/);\n\t\t\t\tif(intable) nrange.Sheet = SheetNames.length;\n\t\t\t\tWB.Names.push(nrange);\n\t\t\t\tbreak;\n\n\t\t\tcase 'text-content': break; // 16.27.27 <number:text-content>\n\t\t\tcase 'text-properties': break; // 16.27.27 <style:text-properties>\n\t\t\tcase 'embedded-text': break; // 16.27.4 <number:embedded-text>\n\n\t\t\tcase 'body': case '电子表格': break; // 3.3 16.9.6 19.726.3\n\n\t\t\tcase 'forms': break; // 12.25.2 13.2\n\t\t\tcase 'table-column': break; // 9.1.6 <table:table-column>\n\t\t\tcase 'table-header-rows': break; // 9.1.7 <table:table-header-rows>\n\t\t\tcase 'table-rows': break; // 9.1.12 <table:table-rows>\n\t\t\t/* TODO: outline levels */\n\t\t\tcase 'table-column-group': break; // 9.1.10 <table:table-column-group>\n\t\t\tcase 'table-header-columns': break; // 9.1.11 <table:table-header-columns>\n\t\t\tcase 'table-columns': break; // 9.1.12 <table:table-columns>\n\n\t\t\tcase 'null-date': // 9.4.2 <table:null-date>\n\t\t\t\ttag = parsexmltag(Rn[0], false);\n\t\t\t\tswitch(tag[\"date-value\"]) {\n\t\t\t\t\tcase \"1904-01-01\": WB.WBProps.date1904 = true;\n\t\t\t\t\t/* falls through */\n\t\t\t\t\tcase \"1900-01-01\": baddate = 0;\n\t\t\t\t}\n\t\t\t\tbreak;\n\n\t\t\tcase 'graphic-properties': break; // 17.21 <style:graphic-properties>\n\t\t\tcase 'calculation-settings': break; // 9.4.1 <table:calculation-settings>\n\t\t\tcase 'named-expressions': break; // 9.4.11 <table:named-expressions>\n\t\t\tcase 'label-range': break; // 9.4.9 <table:label-range>\n\t\t\tcase 'label-ranges': break; // 9.4.10 <table:label-ranges>\n\t\t\tcase 'named-expression': break; // 9.4.13 <table:named-expression>\n\t\t\tcase 'sort': break; // 9.4.19 <table:sort>\n\t\t\tcase 'sort-by': break; // 9.4.20 <table:sort-by>\n\t\t\tcase 'sort-groups': break; // 9.4.22 <table:sort-groups>\n\n\t\t\tcase 'tab': break; // 6.1.4 <text:tab>\n\t\t\tcase 'line-break': break; // 6.1.5 <text:line-break>\n\t\t\tcase 'span': break; // 6.1.7 <text:span>\n\t\t\tcase 'p': case '文本串': // 5.1.3 <text:p>\n\t\t\t\tif(['master-styles'].indexOf(state[state.length-1][0]) > -1) break;\n\t\t\t\tif(Rn[1]==='/' && (!ctag || !ctag['string-value'])) {\n\t\t\t\t\tvar ptp = parse_text_p(str.slice(textpidx,Rn.index), textptag);\n\t\t\t\t\ttextp = (textp.length > 0 ? textp + \"\\n\" : \"\") + ptp[0];\n\t\t\t\t} else { textptag = parsexmltag(Rn[0], false); textpidx = Rn.index + Rn[0].length; }\n\t\t\t\tbreak; // <text:p>\n\t\t\tcase 's': break; // <text:s>\n\n\t\t\tcase 'database-range': // 9.4.15 <table:database-range>\n\t\t\t\tif(Rn[1]==='/') break;\n\t\t\t\ttry {\n\t\t\t\t\t_Ref = ods_to_csf_3D(parsexmltag(Rn[0])['target-range-address']);\n\t\t\t\t\tSheets[_Ref[0]]['!autofilter'] = { ref:_Ref[1] };\n\t\t\t\t} catch(e) {/* empty */}\n\t\t\t\tbreak;\n\n\t\t\tcase 'date': break; // <*:date>\n\n\t\t\tcase 'object': break; // 10.4.6.2 <draw:object>\n\t\t\tcase 'title': case '标题': break; // <*:title> OR <uof:标题>\n\t\t\tcase 'desc': break; // <*:desc>\n\t\t\tcase 'binary-data': break; // 10.4.5 TODO: b64 blob\n\n\t\t\t/* 9.2 Advanced Tables */\n\t\t\tcase 'table-source': break; // 9.2.6\n\t\t\tcase 'scenario': break; // 9.2.6\n\n\t\t\tcase 'iteration': break; // 9.4.3 <table:iteration>\n\t\t\tcase 'content-validations': break; // 9.4.4 <table:\n\t\t\tcase 'content-validation': break; // 9.4.5 <table:\n\t\t\tcase 'help-message': break; // 9.4.6 <table:\n\t\t\tcase 'error-message': break; // 9.4.7 <table:\n\t\t\tcase 'database-ranges': break; // 9.4.14 <table:database-ranges>\n\t\t\tcase 'filter': break; // 9.5.2 <table:filter>\n\t\t\tcase 'filter-and': break; // 9.5.3 <table:filter-and>\n\t\t\tcase 'filter-or': break; // 9.5.4 <table:filter-or>\n\t\t\tcase 'filter-condition': break; // 9.5.5 <table:filter-condition>\n\n\t\t\tcase 'list-level-style-bullet': break; // 16.31 <text:\n\t\t\tcase 'list-level-style-number': break; // 16.32 <text:\n\t\t\tcase 'list-level-properties': break; // 17.19 <style:\n\n\t\t\t/* 7.3 Document Fields */\n\t\t\tcase 'sender-firstname': // 7.3.6.2\n\t\t\tcase 'sender-lastname': // 7.3.6.3\n\t\t\tcase 'sender-initials': // 7.3.6.4\n\t\t\tcase 'sender-title': // 7.3.6.5\n\t\t\tcase 'sender-position': // 7.3.6.6\n\t\t\tcase 'sender-email': // 7.3.6.7\n\t\t\tcase 'sender-phone-private': // 7.3.6.8\n\t\t\tcase 'sender-fax': // 7.3.6.9\n\t\t\tcase 'sender-company': // 7.3.6.10\n\t\t\tcase 'sender-phone-work': // 7.3.6.11\n\t\t\tcase 'sender-street': // 7.3.6.12\n\t\t\tcase 'sender-city': // 7.3.6.13\n\t\t\tcase 'sender-postal-code': // 7.3.6.14\n\t\t\tcase 'sender-country': // 7.3.6.15\n\t\t\tcase 'sender-state-or-province': // 7.3.6.16\n\t\t\tcase 'author-name': // 7.3.7.1\n\t\t\tcase 'author-initials': // 7.3.7.2\n\t\t\tcase 'chapter': // 7.3.8\n\t\t\tcase 'file-name': // 7.3.9\n\t\t\tcase 'template-name': // 7.3.9\n\t\t\tcase 'sheet-name': // 7.3.9\n\t\t\t\tbreak;\n\n\t\t\tcase 'event-listener':\n\t\t\t\tbreak;\n\t\t\t/* TODO: FODS Properties */\n\t\t\tcase 'initial-creator':\n\t\t\tcase 'creation-date':\n\t\t\tcase 'print-date':\n\t\t\tcase 'generator':\n\t\t\tcase 'document-statistic':\n\t\t\tcase 'user-defined':\n\t\t\tcase 'editing-duration':\n\t\t\tcase 'editing-cycles':\n\t\t\t\tbreak;\n\n\t\t\t/* TODO: FODS Config */\n\t\t\tcase 'config-item':\n\t\t\t\tbreak;\n\n\t\t\t/* TODO: style tokens */\n\t\t\tcase 'page-number': break; // TODO <text:page-number>\n\t\t\tcase 'page-count': break; // TODO <text:page-count>\n\t\t\tcase 'time': break; // TODO <text:time>\n\n\t\t\t/* 9.3 Advanced Table Cells */\n\t\t\tcase 'cell-range-source': break; // 9.3.1 <table:\n\t\t\tcase 'detective': break; // 9.3.2 <table:\n\t\t\tcase 'operation': break; // 9.3.3 <table:\n\t\t\tcase 'highlighted-range': break; // 9.3.4 <table:\n\n\t\t\t/* 9.6 Data Pilot Tables <table: */\n\t\t\tcase 'data-pilot-table': // 9.6.3\n\t\t\tcase 'source-cell-range': // 9.6.5\n\t\t\tcase 'source-service': // 9.6.6\n\t\t\tcase 'data-pilot-field': // 9.6.7\n\t\t\tcase 'data-pilot-level': // 9.6.8\n\t\t\tcase 'data-pilot-subtotals': // 9.6.9\n\t\t\tcase 'data-pilot-subtotal': // 9.6.10\n\t\t\tcase 'data-pilot-members': // 9.6.11\n\t\t\tcase 'data-pilot-member': // 9.6.12\n\t\t\tcase 'data-pilot-display-info': // 9.6.13\n\t\t\tcase 'data-pilot-sort-info': // 9.6.14\n\t\t\tcase 'data-pilot-layout-info': // 9.6.15\n\t\t\tcase 'data-pilot-field-reference': // 9.6.16\n\t\t\tcase 'data-pilot-groups': // 9.6.17\n\t\t\tcase 'data-pilot-group': // 9.6.18\n\t\t\tcase 'data-pilot-group-member': // 9.6.19\n\t\t\t\tbreak;\n\n\t\t\t/* 10.3 Drawing Shapes */\n\t\t\tcase 'rect': // 10.3.2\n\t\t\t\tbreak;\n\n\t\t\t/* 14.6 DDE Connections */\n\t\t\tcase 'dde-connection-decls': // 14.6.2 <text:\n\t\t\tcase 'dde-connection-decl': // 14.6.3 <text:\n\t\t\tcase 'dde-link': // 14.6.4 <table:\n\t\t\tcase 'dde-source': // 14.6.5 <office:\n\t\t\t\tbreak;\n\n\t\t\tcase 'properties': break; // 13.7 <form:properties>\n\t\t\tcase 'property': break; // 13.8 <form:property>\n\n\t\t\tcase 'a': // 6.1.8 hyperlink\n\t\t\t\tif(Rn[1]!== '/') {\n\t\t\t\t\tatag = parsexmltag(Rn[0], false);\n\t\t\t\t\tif(!atag.href) break;\n\t\t\t\t\tatag.Target = unescapexml(atag.href); delete atag.href;\n\t\t\t\t\tif(atag.Target.charAt(0) == \"#\" && atag.Target.indexOf(\".\") > -1) {\n\t\t\t\t\t\t_Ref = ods_to_csf_3D(atag.Target.slice(1));\n\t\t\t\t\t\tatag.Target = \"#\" + _Ref[0] + \"!\" + _Ref[1];\n\t\t\t\t\t} else if(atag.Target.match(/^\\.\\.[\\\\\\/]/)) atag.Target = atag.Target.slice(3);\n\t\t\t\t}\n\t\t\t\tbreak;\n\n\t\t\t/* non-standard */\n\t\t\tcase 'table-protection': break;\n\t\t\tcase 'data-pilot-grand-total': break; // <table:\n\t\t\tcase 'office-document-common-attrs': break; // bare\n\t\t\tdefault: switch(Rn[2]) {\n\t\t\t\tcase 'dc:':       // TODO: properties\n\t\t\t\tcase 'calcext:':  // ignore undocumented extensions\n\t\t\t\tcase 'loext:':    // ignore undocumented extensions\n\t\t\t\tcase 'ooo:':      // ignore undocumented extensions\n\t\t\t\tcase 'chartooo:': // ignore undocumented extensions\n\t\t\t\tcase 'draw:':     // TODO: drawing\n\t\t\t\tcase 'style:':    // TODO: styles\n\t\t\t\tcase 'chart:':    // TODO: charts\n\t\t\t\tcase 'form:':     // TODO: forms\n\t\t\t\tcase 'uof:':      // TODO: uof\n\t\t\t\tcase '表:':       // TODO: uof\n\t\t\t\tcase '字:':       // TODO: uof\n\t\t\t\t\tbreak;\n\t\t\t\tdefault: if(opts.WTF) throw new Error(Rn);\n\t\t\t}\n\t\t}\n\t\tvar out/*:Workbook*/ = ({\n\t\t\tSheets: Sheets,\n\t\t\tSheetNames: SheetNames,\n\t\t\tWorkbook: WB\n\t\t}/*:any*/);\n\t\tif(opts.bookSheets) delete /*::(*/out/*:: :any)*/.Sheets;\n\t\treturn out;\n}\n\nfunction parse_ods(zip/*:ZIPFile*/, opts/*:?ParseOpts*/)/*:Workbook*/ {\n\topts = opts || ({}/*:any*/);\n\tif(safegetzipfile(zip, 'META-INF/manifest.xml')) parse_manifest(getzipdata(zip, 'META-INF/manifest.xml'), opts);\n\tvar styles = getzipstr(zip, 'styles.xml');\n\tvar Styles = styles && parse_ods_styles(utf8read(styles), opts);\n\tvar content = getzipstr(zip, 'content.xml');\n\tif(!content) throw new Error(\"Missing content.xml in ODS / UOF file\");\n\tvar wb = parse_content_xml(utf8read(content), opts, Styles);\n\tif(safegetzipfile(zip, 'meta.xml')) wb.Props = parse_core_props(getzipdata(zip, 'meta.xml'));\n\twb.bookType = \"ods\";\n\treturn wb;\n}\nfunction parse_fods(data/*:string*/, opts/*:?ParseOpts*/)/*:Workbook*/ {\n\tvar wb = parse_content_xml(data, opts);\n\twb.bookType = \"fods\";\n\treturn wb;\n}\n\n/* OpenDocument */\nvar write_styles_ods/*:{(wb:any, opts:any):string}*/ = /* @__PURE__ */(function() {\n\tvar master_styles = [\n\t\t'<office:master-styles>',\n\t\t\t'<style:master-page style:name=\"mp1\" style:page-layout-name=\"mp1\">',\n\t\t\t\t'<style:header/>',\n\t\t\t\t'<style:header-left style:display=\"false\"/>',\n\t\t\t\t'<style:footer/>',\n\t\t\t\t'<style:footer-left style:display=\"false\"/>',\n\t\t\t'</style:master-page>',\n\t\t'</office:master-styles>'\n\t].join(\"\");\n\n\tvar payload = '<office:document-styles ' + wxt_helper({\n\t\t'xmlns:office':   \"urn:oasis:names:tc:opendocument:xmlns:office:1.0\",\n\t\t'xmlns:table':    \"urn:oasis:names:tc:opendocument:xmlns:table:1.0\",\n\t\t'xmlns:style':    \"urn:oasis:names:tc:opendocument:xmlns:style:1.0\",\n\t\t'xmlns:text':     \"urn:oasis:names:tc:opendocument:xmlns:text:1.0\",\n\t\t'xmlns:draw':     \"urn:oasis:names:tc:opendocument:xmlns:drawing:1.0\",\n\t\t'xmlns:fo':       \"urn:oasis:names:tc:opendocument:xmlns:xsl-fo-compatible:1.0\",\n\t\t'xmlns:xlink':    \"http://www.w3.org/1999/xlink\",\n\t\t'xmlns:dc':       \"http://purl.org/dc/elements/1.1/\",\n\t\t'xmlns:number':   \"urn:oasis:names:tc:opendocument:xmlns:datastyle:1.0\",\n\t\t'xmlns:svg':      \"urn:oasis:names:tc:opendocument:xmlns:svg-compatible:1.0\",\n\t\t'xmlns:of':       \"urn:oasis:names:tc:opendocument:xmlns:of:1.2\",\n\t\t'office:version': \"1.2\"\n\t}) + '>' + master_styles + '</office:document-styles>';\n\n\treturn function wso(/*::wb, opts*/) {\n\t\treturn XML_HEADER + payload;\n\t};\n})();\n\n// TODO: find out if anyone actually read the spec.  LO has some wild errors\nfunction write_number_format_ods(nf/*:string*/, nfidx/*:string*/)/*:string*/ {\n\tvar type = \"number\", payload = \"\", nopts = { \"style:name\": nfidx }, c = \"\", i = 0;\n\tnf = nf.replace(/\"[$]\"/g, \"$\");\n\t/* TODO: replace with an actual parser based on a real grammar */\n\tj: {\n\t\t// TODO: support style maps\n\t\tif(nf.indexOf(\";\") > -1) {\n\t\t\tconsole.error(\"Unsupported ODS Style Map exported.  Using first branch of \" + nf);\n\t\t\tnf = nf.slice(0, nf.indexOf(\";\"));\n\t\t}\n\n\t\tif(nf == \"@\") { type = \"text\"; payload = \"<number:text-content/>\"; break j; }\n\n\t\t/* currency flag */\n\t\tif(nf.indexOf(/\\$/) > -1) { type = \"currency\"; }\n\n\t\t/* opening string literal */\n\t\tif(nf[i] == '\"') {\n\t\t\tc = \"\";\n\t\t\twhile(nf[++i] != '\"' || nf[++i] == '\"') c += nf[i]; --i;\n\t\t\tif(nf[i+1] == \"*\") {\n\t\t\t\ti++;\n\t\t\t\tpayload += '<number:fill-character>' + escapexml(c.replace(/\"\"/g, '\"')) + '</number:fill-character>';\n\t\t\t} else {\n\t\t\t\tpayload += '<number:text>' + escapexml(c.replace(/\"\"/g, '\"')) + '</number:text>';\n\t\t\t}\n\t\t\tnf = nf.slice(i+1); i = 0;\n\t\t}\n\n\t\t/* fractions */\n\t\tvar t = nf.match(/# (\\?+)\\/(\\?+)/);\n\t\tif(t) { payload += writextag(\"number:fraction\", null, {\"number:min-integer-digits\":0, \"number:min-numerator-digits\": t[1].length, \"number:max-denominator-value\": Math.max(+(t[1].replace(/./g, \"9\")), +(t[2].replace(/./g, \"9\"))) }); break j; }\n\t\tif((t=nf.match(/# (\\?+)\\/(\\d+)/))) { payload += writextag(\"number:fraction\", null, {\"number:min-integer-digits\":0, \"number:min-numerator-digits\": t[1].length, \"number:denominator-value\": +t[2]}); break j; }\n\n\t\t/* percentages */\n\t\tif((t=nf.match(/(\\d+)(|\\.\\d+)%/))) { type = \"percentage\"; payload += writextag(\"number:number\", null, {\"number:decimal-places\": t[2] && t.length - 1 || 0, \"number:min-decimal-places\": t[2] && t.length - 1 || 0, \"number:min-integer-digits\": t[1].length }) + \"<number:text>%</number:text>\"; break j; }\n\n\t\t/* datetime */\n\t\tvar has_time = false;\n\t\tif([\"y\",\"m\",\"d\"].indexOf(nf[0]) > -1) {\n\t\t\ttype = \"date\";\n\t\t\tk: for(; i < nf.length; ++i) switch((c = nf[i].toLowerCase())) {\n\t\t\t\tcase \"h\": case \"s\": has_time = true; --i; break k;\n\t\t\t\tcase \"m\":\n\t\t\t\t\tl: for(var h = i+1; h < nf.length; ++h) switch(nf[h]) {\n\t\t\t\t\t\tcase \"y\": case \"d\": break l;\n\t\t\t\t\t\tcase \"h\": case \"s\": has_time = true; --i; break k;\n\t\t\t\t\t}\n\t\t\t\t\t/* falls through */\n\t\t\t\tcase \"y\": case \"d\":\n\t\t\t\t\twhile((nf[++i]||\"\").toLowerCase() == c[0]) c += c[0]; --i;\n\t\t\t\t\tswitch(c) {\n\t\t\t\t\t\tcase \"y\": case \"yy\": payload += \"<number:year/>\"; break;\n\t\t\t\t\t\tcase \"yyy\": case \"yyyy\": payload += '<number:year number:style=\"long\"/>'; break;\n\t\t\t\t\t\tcase \"mmmmm\": console.error(\"ODS has no equivalent of format |mmmmm|\");\n\t\t\t\t\t\t\t/* falls through */\n\t\t\t\t\t\tcase \"m\": case \"mm\": case \"mmm\": case \"mmmm\":\n\t\t\t\t\t\t\tpayload += '<number:month number:style=\"' + (c.length % 2 ? \"short\" : \"long\") + '\" number:textual=\"' + (c.length >= 3 ? \"true\" : \"false\") + '\"/>';\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase \"d\": case \"dd\": payload += '<number:day number:style=\"' + (c.length % 2 ? \"short\" : \"long\") + '\"/>'; break;\n\t\t\t\t\t\tcase \"ddd\": case \"dddd\": payload += '<number:day-of-week number:style=\"' + (c.length % 2 ? \"short\" : \"long\") + '\"/>'; break;\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase '\"':\n\t\t\t\t\twhile(nf[++i] != '\"' || nf[++i] == '\"') c += nf[i]; --i;\n\t\t\t\t\tpayload += '<number:text>' + escapexml(c.slice(1).replace(/\"\"/g, '\"')) + '</number:text>';\n\t\t\t\t\tbreak;\n\t\t\t\tcase '/': payload += '<number:text>' + escapexml(c) + '</number:text>'; break;\n\t\t\t\tdefault: console.error(\"unrecognized character \" + c + \" in ODF format \" + nf);\n\t\t\t}\n\t\t\tif(!has_time) break j;\n\t\t\tnf = nf.slice(i+1); i = 0;\n\t\t}\n\t\tif(nf.match(/^\\[?[hms]/)) {\n\t\t\tif(type == \"number\") type = \"time\";\n\t\t\tif(nf.match(/\\[/)) {\n\t\t\t\tnf = nf.replace(/[\\[\\]]/g, \"\");\n\t\t\t\tnopts['number:truncate-on-overflow'] = \"false\";\n\t\t\t}\n\t\t\tfor(; i < nf.length; ++i) switch((c = nf[i].toLowerCase())) {\n\t\t\t\tcase \"h\": case \"m\": case \"s\":\n\t\t\t\t\twhile((nf[++i]||\"\").toLowerCase() == c[0]) c += c[0]; --i;\n\t\t\t\t\tswitch(c) {\n\t\t\t\t\t\tcase \"h\": case \"hh\": payload += '<number:hours number:style=\"' + (c.length % 2 ? \"short\" : \"long\") + '\"/>'; break;\n\t\t\t\t\t\tcase \"m\": case \"mm\": payload += '<number:minutes number:style=\"' + (c.length % 2 ? \"short\" : \"long\") + '\"/>'; break;\n\t\t\t\t\t\tcase \"s\": case \"ss\":\n\t\t\t\t\t\t\tif(nf[i+1] == \".\") do { c += nf[i+1]; ++i; } while(nf[i+1] == \"0\");\n\t\t\t\t\t\t\tpayload += '<number:seconds number:style=\"' + (c.match(\"ss\") ? \"long\" : \"short\") + '\"' + (c.match(/\\./) ? ' number:decimal-places=\"' + (c.match(/0+/)||[\"\"])[0].length + '\"' : \"\")+ '/>'; break;\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase '\"':\n\t\t\t\t\twhile(nf[++i] != '\"' || nf[++i] == '\"') c += nf[i]; --i;\n\t\t\t\t\tpayload += '<number:text>' + escapexml(c.slice(1).replace(/\"\"/g, '\"')) + '</number:text>';\n\t\t\t\t\tbreak;\n\t\t\t\tcase '/': payload += '<number:text>' + escapexml(c) + '</number:text>'; break;\n\t\t\t\tcase \"a\":\n\t\t\t\t\tif(nf.slice(i, i+3).toLowerCase() == \"a/p\") { payload += '<number:am-pm/>'; i += 2; break; } // Note: ODF does not support A/P\n\t\t\t\t\tif(nf.slice(i, i+5).toLowerCase() == \"am/pm\")  { payload += '<number:am-pm/>'; i += 4; break; }\n\t\t\t\t\t/* falls through */\n\t\t\t\tdefault: console.error(\"unrecognized character \" + c + \" in ODF format \" + nf);\n\t\t\t}\n\t\t\tbreak j;\n\t\t}\n\n\t\t/* currency flag */\n\t\tif(nf.indexOf(/\\$/) > -1) { type = \"currency\"; }\n\n\t\t/* should be in a char loop */\n\t\tif(nf[0] == \"$\") { payload += '<number:currency-symbol number:language=\"en\" number:country=\"US\">$</number:currency-symbol>'; nf = nf.slice(1); i = 0; }\n\t\ti = 0; if(nf[i] == '\"') {\n\t\t\twhile(nf[++i] != '\"' || nf[++i] == '\"') c += nf[i]; --i;\n\t\t\tif(nf[i+1] == \"*\") {\n\t\t\t\ti++;\n\t\t\t\tpayload += '<number:fill-character>' + escapexml(c.replace(/\"\"/g, '\"')) + '</number:fill-character>';\n\t\t\t} else {\n\t\t\t\tpayload += '<number:text>' + escapexml(c.replace(/\"\"/g, '\"')) + '</number:text>';\n\t\t\t}\n\t\t\tnf = nf.slice(i+1); i = 0;\n\t\t}\n\n\t\t/* number TODO: interstitial text e.g. 000)000-0000 */\n\t\tvar np = nf.match(/([#0][0#,]*)(\\.[0#]*|)(E[+]?0*|)/i);\n\t\tif(!np || !np[0]) console.error(\"Could not find numeric part of \" + nf);\n\t\telse {\n\t\t\tvar base = np[1].replace(/,/g, \"\");\n\t\t\tpayload += '<number:' + (np[3] ? \"scientific-\" : \"\")+ 'number' +\n\t\t\t\t' number:min-integer-digits=\"' + (base.indexOf(\"0\") == -1 ? \"0\" : base.length - base.indexOf(\"0\")) + '\"' +\n\t\t\t\t(np[0].indexOf(\",\") > -1 ? ' number:grouping=\"true\"' : \"\") +\n\t\t\t\t(np[2] && ' number:decimal-places=\"' + (np[2].length - 1) + '\"' || ' number:decimal-places=\"0\"') +\n\t\t\t\t(np[3] && np[3].indexOf(\"+\") > -1 ? ' number:forced-exponent-sign=\"true\"' : \"\" ) +\n\t\t\t\t(np[3] ? ' number:min-exponent-digits=\"' + np[3].match(/0+/)[0].length + '\"' : \"\" ) +\n\t\t\t\t'>' +\n\t\t\t\t/* TODO: interstitial text placeholders */\n\t\t\t\t'</number:' + (np[3] ? \"scientific-\" : \"\") + 'number>';\n\t\t\ti = np.index + np[0].length;\n\t\t}\n\n\t\t/* residual text */\n\t\tif(nf[i] == '\"') {\n\t\t\tc = \"\";\n\t\t\twhile(nf[++i] != '\"' || nf[++i] == '\"') c += nf[i]; --i;\n\t\t\tpayload += '<number:text>' + escapexml(c.replace(/\"\"/g, '\"')) + '</number:text>';\n\t\t}\n\t}\n\n\tif(!payload) { console.error(\"Could not generate ODS number format for |\" + nf + \"|\"); return \"\"; }\n\treturn writextag(\"number:\" + type + \"-style\", payload, nopts);\n}\n\nfunction write_names_ods(Names, SheetNames, idx) {\n\tvar scoped = Names.filter(function(name) { return name.Sheet == (idx == -1 ? null : idx); });\n\tif(!scoped.length) return \"\";\n\treturn \"      <table:named-expressions>\\n\" + scoped.map(function(name) {\n\t\tvar odsref =  csf_to_ods_3D(name.Ref);\n\t\treturn \"        \" + writextag(\"table:named-range\", null, {\n\t\t\t\"table:name\": name.Name,\n\t\t\t\"table:cell-range-address\": odsref,\n\t\t\t\"table:base-cell-address\": odsref.replace(/[\\.]?[^\\.]*$/, \".$A$1\")\n\t\t});\n\t}).join(\"\\n\") + \"\\n      </table:named-expressions>\\n\";\n}\nvar write_content_ods/*:{(wb:any, opts:any):string}*/ = /* @__PURE__ */(function() {\n\t/* 6.1.2 White Space Characters */\n\tvar write_text_p = function(text/*:string*/)/*:string*/ {\n\t\treturn escapexml(text)\n\t\t\t.replace(/  +/g, function($$){return '<text:s text:c=\"'+$$.length+'\"/>';})\n\t\t\t.replace(/\\t/g, \"<text:tab/>\")\n\t\t\t.replace(/\\n/g, \"</text:p><text:p>\")\n\t\t\t.replace(/^ /, \"<text:s/>\").replace(/ $/, \"<text:s/>\");\n\t};\n\n\tvar null_cell_xml = '          <table:table-cell />\\n';\n\tvar covered_cell_xml = '          <table:covered-table-cell/>\\n';\n\tvar write_ws = function(ws, wb/*:Workbook*/, i/*:number*/, opts, nfs)/*:string*/ {\n\t\t/* Section 9 Tables */\n\t\tvar o/*:Array<string>*/ = [];\n\t\to.push('      <table:table table:name=\"' + escapexml(wb.SheetNames[i]) + '\" table:style-name=\"ta1\">\\n');\n\t\tvar R=0,C=0, range = decode_range(ws['!ref']||\"A1\");\n\t\tvar marr/*:Array<Range>*/ = ws['!merges'] || [], mi = 0;\n\t\tvar dense = ws[\"!data\"] != null;\n\t\tif(ws[\"!cols\"]) {\n\t\t\tfor(C = 0; C <= range.e.c; ++C) o.push('        <table:table-column' + (ws[\"!cols\"][C] ? ' table:style-name=\"co' + ws[\"!cols\"][C].ods + '\"' : '') + '></table:table-column>\\n');\n\t\t}\n\t\tvar H = \"\", ROWS = ws[\"!rows\"]||[];\n\t\tfor(R = 0; R < range.s.r; ++R) {\n\t\t\tH = ROWS[R] ? ' table:style-name=\"ro' + ROWS[R].ods + '\"' : \"\";\n\t\t\to.push('        <table:table-row' + H + '></table:table-row>\\n');\n\t\t}\n\t\tfor(; R <= range.e.r; ++R) {\n\t\t\tH = ROWS[R] ? ' table:style-name=\"ro' + ROWS[R].ods + '\"' : \"\";\n\t\t\to.push('        <table:table-row' + H + '>\\n');\n\t\t\tfor(C=0; C < range.s.c; ++C) o.push(null_cell_xml);\n\t\t\tfor(; C <= range.e.c; ++C) {\n\t\t\t\tvar skip = false, ct = {}, textp = \"\";\n\t\t\t\tfor(mi = 0; mi != marr.length; ++mi) {\n\t\t\t\t\tif(marr[mi].s.c > C) continue;\n\t\t\t\t\tif(marr[mi].s.r > R) continue;\n\t\t\t\t\tif(marr[mi].e.c < C) continue;\n\t\t\t\t\tif(marr[mi].e.r < R) continue;\n\t\t\t\t\tif(marr[mi].s.c != C || marr[mi].s.r != R) skip = true;\n\t\t\t\t\tct['table:number-columns-spanned'] = (marr[mi].e.c - marr[mi].s.c + 1);\n\t\t\t\t\tct['table:number-rows-spanned'] =    (marr[mi].e.r - marr[mi].s.r + 1);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tif(skip) { o.push(covered_cell_xml); continue; }\n\t\t\t\tvar ref = encode_cell({r:R, c:C}), cell = dense ? (ws[\"!data\"][R]||[])[C]: ws[ref];\n\t\t\t\tif(cell && cell.f) {\n\t\t\t\t\tct['table:formula'] = escapexml(csf_to_ods_formula(cell.f));\n\t\t\t\t\tif(cell.F) {\n\t\t\t\t\t\tif(cell.F.slice(0, ref.length) == ref) {\n\t\t\t\t\t\t\tvar _Fref = decode_range(cell.F);\n\t\t\t\t\t\t\tct['table:number-matrix-columns-spanned'] = (_Fref.e.c - _Fref.s.c + 1);\n\t\t\t\t\t\t\tct['table:number-matrix-rows-spanned'] =    (_Fref.e.r - _Fref.s.r + 1);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif(!cell) { o.push(null_cell_xml); continue; }\n\t\t\t\tswitch(cell.t) {\n\t\t\t\t\tcase 'b':\n\t\t\t\t\t\ttextp = (cell.v ? 'TRUE' : 'FALSE');\n\t\t\t\t\t\tct['office:value-type'] = \"boolean\";\n\t\t\t\t\t\tct['office:boolean-value'] = (cell.v ? 'true' : 'false');\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'n':\n\t\t\t\t\t\ttextp = (cell.w||String(cell.v||0));\n\t\t\t\t\t\tct['office:value-type'] = \"float\";\n\t\t\t\t\t\tct['office:value'] = (cell.v||0);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 's': case 'str':\n\t\t\t\t\t\ttextp = cell.v == null ? \"\" : cell.v;\n\t\t\t\t\t\tct['office:value-type'] = \"string\";\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'd':\n\t\t\t\t\t\ttextp = (cell.w||(parseDate(cell.v).toISOString()));\n\t\t\t\t\t\tct['office:value-type'] = \"date\";\n\t\t\t\t\t\tct['office:date-value'] = (parseDate(cell.v).toISOString());\n\t\t\t\t\t\tct['table:style-name'] = \"ce1\";\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t//case 'e':\n\t\t\t\t\tdefault: o.push(null_cell_xml); continue;\n\t\t\t\t}\n\t\t\t\tvar text_p = write_text_p(textp);\n\t\t\t\tif(cell.l && cell.l.Target) {\n\t\t\t\t\tvar _tgt = cell.l.Target;\n\t\t\t\t\t_tgt = _tgt.charAt(0) == \"#\" ? \"#\" + csf_to_ods_3D(_tgt.slice(1)) : _tgt;\n\t\t\t\t\t// TODO: choose correct parent path format based on link delimiters\n\t\t\t\t\tif(_tgt.charAt(0) != \"#\" && !_tgt.match(/^\\w+:/)) _tgt = '../' + _tgt;\n\t\t\t\t\ttext_p = writextag('text:a', text_p, {'xlink:href': _tgt.replace(/&/g, \"&amp;\")});\n\t\t\t\t}\n\t\t\t\tif(nfs[cell.z]) ct[\"table:style-name\"] = \"ce\" + nfs[cell.z].slice(1);\n\t\t\t\to.push('          ' + writextag('table:table-cell', writextag('text:p', text_p, {}), ct) + '\\n');\n\t\t\t}\n\t\t\to.push('        </table:table-row>\\n');\n\t\t}\n\t\tif((wb.Workbook||{}).Names) o.push(write_names_ods(wb.Workbook.Names, wb.SheetNames, i));\n\t\to.push('      </table:table>\\n');\n\t\treturn o.join(\"\");\n\t};\n\n\tvar write_automatic_styles_ods = function(o/*:Array<string>*/, wb) {\n\t\to.push(' <office:automatic-styles>\\n');\n\n\t\t/* column styles */\n\t\tvar cidx = 0;\n\t\twb.SheetNames.map(function(n) { return wb.Sheets[n]; }).forEach(function(ws) {\n\t\t\tif(!ws) return;\n\t\t\tif(ws[\"!cols\"]) {\n\t\t\t\tfor(var C = 0; C < ws[\"!cols\"].length; ++C) if(ws[\"!cols\"][C]) {\n\t\t\t\t\tvar colobj = ws[\"!cols\"][C];\n\t\t\t\t\tif(colobj.width == null && colobj.wpx == null && colobj.wch == null) continue;\n\t\t\t\t\tprocess_col(colobj);\n\t\t\t\t\tcolobj.ods = cidx;\n\t\t\t\t\tvar w = ws[\"!cols\"][C].wpx + \"px\";\n\t\t\t\t\to.push('  <style:style style:name=\"co' + cidx + '\" style:family=\"table-column\">\\n');\n\t\t\t\t\to.push('   <style:table-column-properties fo:break-before=\"auto\" style:column-width=\"' + w + '\"/>\\n');\n\t\t\t\t\to.push('  </style:style>\\n');\n\t\t\t\t\t++cidx;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\t/* row styles */\n\t\tvar ridx = 0;\n\t\twb.SheetNames.map(function(n) { return wb.Sheets[n]; }).forEach(function(ws) {\n\t\t\tif(!ws) return;\n\t\t\tif(ws[\"!rows\"]) {\n\t\t\t\tfor(var R = 0; R < ws[\"!rows\"].length; ++R) if(ws[\"!rows\"][R]) {\n\t\t\t\t\tws[\"!rows\"][R].ods = ridx;\n\t\t\t\t\tvar h = ws[\"!rows\"][R].hpx + \"px\";\n\t\t\t\t\to.push('  <style:style style:name=\"ro' + ridx + '\" style:family=\"table-row\">\\n');\n\t\t\t\t\to.push('   <style:table-row-properties fo:break-before=\"auto\" style:row-height=\"' + h + '\"/>\\n');\n\t\t\t\t\to.push('  </style:style>\\n');\n\t\t\t\t\t++ridx;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\t/* table */\n\t\to.push('  <style:style style:name=\"ta1\" style:family=\"table\" style:master-page-name=\"mp1\">\\n');\n\t\to.push('   <style:table-properties table:display=\"true\" style:writing-mode=\"lr-tb\"/>\\n');\n\t\to.push('  </style:style>\\n');\n\n\t\to.push('  <number:date-style style:name=\"N37\" number:automatic-order=\"true\">\\n');\n\t\to.push('   <number:month number:style=\"long\"/>\\n');\n\t\to.push('   <number:text>/</number:text>\\n');\n\t\to.push('   <number:day number:style=\"long\"/>\\n');\n\t\to.push('   <number:text>/</number:text>\\n');\n\t\to.push('   <number:year/>\\n');\n\t\to.push('  </number:date-style>\\n');\n\n\t\t/* number formats, table cells, text */\n\t\tvar nfs = {};\n\t\tvar nfi = 69;\n\t\twb.SheetNames.map(function(n) { return wb.Sheets[n]; }).forEach(function(ws) {\n\t\t\tif(!ws) return;\n\t\t\tvar dense = (ws[\"!data\"] != null);\n\t\t\tvar range = decode_range(ws[\"!ref\"]);\n\t\t\tfor(var R = 0; R <= range.e.r; ++R) for(var C = 0; C <= range.e.c; ++C) {\n\t\t\t\tvar c = dense ? (ws[\"!data\"][R]||[])[C] : ws[encode_cell({r:R,c:C})];\n\t\t\t\tif(!c || !c.z || c.z.toLowerCase() == \"general\") continue;\n\t\t\t\tif(!nfs[c.z]) {\n\t\t\t\t\tvar out = write_number_format_ods(c.z, \"N\" + nfi);\n\t\t\t\t\tif(out) { nfs[c.z] = \"N\" + nfi; ++nfi; o.push(out + \"\\n\"); }\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\to.push('  <style:style style:name=\"ce1\" style:family=\"table-cell\" style:parent-style-name=\"Default\" style:data-style-name=\"N37\"/>\\n');\n\t\tkeys(nfs).forEach(function(nf) {\n\t\t\to.push('<style:style style:name=\"ce' + nfs[nf].slice(1) + '\" style:family=\"table-cell\" style:parent-style-name=\"Default\" style:data-style-name=\"' + nfs[nf] + '\"/>\\n');\n\t\t});\n\n\t\t/* page-layout */\n\n\t\to.push(' </office:automatic-styles>\\n');\n\t\treturn nfs;\n\t};\n\n\treturn function wcx(wb, opts) {\n\t\tvar o = [XML_HEADER];\n\t\t/* 3.1.3.2 */\n\t\tvar attr = wxt_helper({\n\t\t\t'xmlns:office':       \"urn:oasis:names:tc:opendocument:xmlns:office:1.0\",\n\t\t\t'xmlns:table':        \"urn:oasis:names:tc:opendocument:xmlns:table:1.0\",\n\t\t\t'xmlns:style':        \"urn:oasis:names:tc:opendocument:xmlns:style:1.0\",\n\t\t\t'xmlns:text':         \"urn:oasis:names:tc:opendocument:xmlns:text:1.0\",\n\t\t\t'xmlns:draw':         \"urn:oasis:names:tc:opendocument:xmlns:drawing:1.0\",\n\t\t\t'xmlns:fo':           \"urn:oasis:names:tc:opendocument:xmlns:xsl-fo-compatible:1.0\",\n\t\t\t'xmlns:xlink':        \"http://www.w3.org/1999/xlink\",\n\t\t\t'xmlns:dc':           \"http://purl.org/dc/elements/1.1/\",\n\t\t\t'xmlns:meta':         \"urn:oasis:names:tc:opendocument:xmlns:meta:1.0\",\n\t\t\t'xmlns:number':       \"urn:oasis:names:tc:opendocument:xmlns:datastyle:1.0\",\n\t\t\t'xmlns:presentation': \"urn:oasis:names:tc:opendocument:xmlns:presentation:1.0\",\n\t\t\t'xmlns:svg':          \"urn:oasis:names:tc:opendocument:xmlns:svg-compatible:1.0\",\n\t\t\t'xmlns:chart':        \"urn:oasis:names:tc:opendocument:xmlns:chart:1.0\",\n\t\t\t'xmlns:dr3d':         \"urn:oasis:names:tc:opendocument:xmlns:dr3d:1.0\",\n\t\t\t'xmlns:math':         \"http://www.w3.org/1998/Math/MathML\",\n\t\t\t'xmlns:form':         \"urn:oasis:names:tc:opendocument:xmlns:form:1.0\",\n\t\t\t'xmlns:script':       \"urn:oasis:names:tc:opendocument:xmlns:script:1.0\",\n\t\t\t'xmlns:ooo':          \"http://openoffice.org/2004/office\",\n\t\t\t'xmlns:ooow':         \"http://openoffice.org/2004/writer\",\n\t\t\t'xmlns:oooc':         \"http://openoffice.org/2004/calc\",\n\t\t\t'xmlns:dom':          \"http://www.w3.org/2001/xml-events\",\n\t\t\t'xmlns:xforms':       \"http://www.w3.org/2002/xforms\",\n\t\t\t'xmlns:xsd':          \"http://www.w3.org/2001/XMLSchema\",\n\t\t\t'xmlns:xsi':          \"http://www.w3.org/2001/XMLSchema-instance\",\n\t\t\t'xmlns:sheet':        \"urn:oasis:names:tc:opendocument:sh33tjs:1.0\",\n\t\t\t'xmlns:rpt':          \"http://openoffice.org/2005/report\",\n\t\t\t'xmlns:of':           \"urn:oasis:names:tc:opendocument:xmlns:of:1.2\",\n\t\t\t'xmlns:xhtml':        \"http://www.w3.org/1999/xhtml\",\n\t\t\t'xmlns:grddl':        \"http://www.w3.org/2003/g/data-view#\",\n\t\t\t'xmlns:tableooo':     \"http://openoffice.org/2009/table\",\n\t\t\t'xmlns:drawooo':      \"http://openoffice.org/2010/draw\",\n\t\t\t'xmlns:calcext':      \"urn:org:documentfoundation:names:experimental:calc:xmlns:calcext:1.0\",\n\t\t\t'xmlns:loext':        \"urn:org:documentfoundation:names:experimental:office:xmlns:loext:1.0\",\n\t\t\t'xmlns:field':        \"urn:openoffice:names:experimental:ooo-ms-interop:xmlns:field:1.0\",\n\t\t\t'xmlns:formx':        \"urn:openoffice:names:experimental:ooxml-odf-interop:xmlns:form:1.0\",\n\t\t\t'xmlns:css3t':        \"http://www.w3.org/TR/css3-text/\",\n\t\t\t'office:version':     \"1.2\"\n\t\t});\n\n\t\tvar fods = wxt_helper({\n\t\t\t'xmlns:config':    \"urn:oasis:names:tc:opendocument:xmlns:config:1.0\",\n\t\t\t'office:mimetype': \"application/vnd.oasis.opendocument.spreadsheet\"\n\t\t});\n\n\t\tif(opts.bookType == \"fods\") {\n\t\t\to.push('<office:document' + attr + fods + '>\\n');\n\t\t\to.push(write_meta_ods().replace(/<office:document-meta.*?>/, \"\").replace(/<\\/office:document-meta>/, \"\") + \"\\n\");\n\t\t\t// TODO: settings (equiv of settings.xml for ODS)\n\t\t} else o.push('<office:document-content' + attr  + '>\\n');\n\t\t// o.push('  <office:scripts/>\\n');\n\t\tvar nfs = write_automatic_styles_ods(o, wb);\n\t\to.push('  <office:body>\\n');\n\t\to.push('    <office:spreadsheet>\\n');\n\t\tif(((wb.Workbook||{}).WBProps||{}).date1904) o.push('      <table:calculation-settings table:case-sensitive=\"false\" table:search-criteria-must-apply-to-whole-cell=\"true\" table:use-wildcards=\"true\" table:use-regular-expressions=\"false\" table:automatic-find-labels=\"false\">\\n        <table:null-date table:date-value=\"1904-01-01\"/>\\n      </table:calculation-settings>\\n');\n\t\tfor(var i = 0; i != wb.SheetNames.length; ++i) o.push(write_ws(wb.Sheets[wb.SheetNames[i]], wb, i, opts, nfs));\n\t\tif((wb.Workbook||{}).Names) o.push(write_names_ods(wb.Workbook.Names, wb.SheetNames, -1));\n\t\to.push('    </office:spreadsheet>\\n');\n\t\to.push('  </office:body>\\n');\n\t\tif(opts.bookType == \"fods\") o.push('</office:document>');\n\t\telse o.push('</office:document-content>');\n\t\treturn o.join(\"\");\n\t};\n})();\n\nfunction write_ods(wb/*:any*/, opts/*:any*/) {\n\tif(opts.bookType == \"fods\") return write_content_ods(wb, opts);\n\n\tvar zip = zip_new();\n\tvar f = \"\";\n\n\tvar manifest/*:Array<Array<string> >*/ = [];\n\tvar rdf/*:Array<[string, string]>*/ = [];\n\n\t/* Part 3 Section 3.3 MIME Media Type */\n\tf = \"mimetype\";\n\tzip_add_file(zip, f, \"application/vnd.oasis.opendocument.spreadsheet\");\n\n\t/* Part 1 Section 2.2 Documents */\n\tf = \"content.xml\";\n\tzip_add_file(zip, f, write_content_ods(wb, opts));\n\tmanifest.push([f, \"text/xml\"]);\n\trdf.push([f, \"ContentFile\"]);\n\n\t/* TODO: these are hard-coded styles to satiate excel */\n\tf = \"styles.xml\";\n\tzip_add_file(zip, f, write_styles_ods(wb, opts));\n\tmanifest.push([f, \"text/xml\"]);\n\trdf.push([f, \"StylesFile\"]);\n\n\t/* TODO: this is hard-coded to satiate excel */\n\tf = \"meta.xml\";\n\tzip_add_file(zip, f, XML_HEADER + write_meta_ods(/*::wb, opts*/));\n\tmanifest.push([f, \"text/xml\"]);\n\trdf.push([f, \"MetadataFile\"]);\n\n\t/* Part 3 Section 6 Metadata Manifest File */\n\tf = \"manifest.rdf\";\n\tzip_add_file(zip, f, write_rdf(rdf/*, opts*/));\n\tmanifest.push([f, \"application/rdf+xml\"]);\n\n\t/* Part 3 Section 4 Manifest File */\n\tf = \"META-INF/manifest.xml\";\n\tzip_add_file(zip, f, write_manifest(manifest/*, opts*/));\n\n\treturn zip;\n}\n\n/*! sheetjs (C) 2013-present SheetJS -- http://sheetjs.com */\nvar subarray = function() {\n  try {\n    if (typeof Uint8Array == \"undefined\")\n      return \"slice\";\n    if (typeof Uint8Array.prototype.subarray == \"undefined\")\n      return \"slice\";\n    if (typeof Buffer !== \"undefined\") {\n      if (typeof Buffer.prototype.subarray == \"undefined\")\n        return \"slice\";\n      if ((typeof Buffer.from == \"function\" ? Buffer.from([72, 62]) : new Buffer([72, 62])) instanceof Uint8Array)\n        return \"subarray\";\n      return \"slice\";\n    }\n    return \"subarray\";\n  } catch (e) {\n    return \"slice\";\n  }\n}();\nfunction u8_to_dataview(array) {\n  return new DataView(array.buffer, array.byteOffset, array.byteLength);\n}\nfunction u8str(u8) {\n  return typeof TextDecoder != \"undefined\" ? new TextDecoder().decode(u8) : utf8read(a2s(u8));\n}\nfunction stru8(str) {\n  return typeof TextEncoder != \"undefined\" ? new TextEncoder().encode(str) : s2a(utf8write(str));\n}\nfunction u8concat(u8a) {\n  var len = 0;\n  for (var i = 0; i < u8a.length; ++i)\n    len += u8a[i].length;\n  var out = new Uint8Array(len);\n  var off = 0;\n  for (i = 0; i < u8a.length; ++i) {\n    var u8 = u8a[i], L = u8.length;\n    if (L < 250) {\n      for (var j = 0; j < L; ++j)\n        out[off++] = u8[j];\n    } else {\n      out.set(u8, off);\n      off += L;\n    }\n  }\n  return out;\n}\nfunction popcnt(x) {\n  x -= x >> 1 & 1431655765;\n  x = (x & 858993459) + (x >> 2 & 858993459);\n  return (x + (x >> 4) & 252645135) * 16843009 >>> 24;\n}\nfunction readDecimal128LE(buf, offset) {\n  var exp = (buf[offset + 15] & 127) << 7 | buf[offset + 14] >> 1;\n  var mantissa = buf[offset + 14] & 1;\n  for (var j = offset + 13; j >= offset; --j)\n    mantissa = mantissa * 256 + buf[j];\n  return (buf[offset + 15] & 128 ? -mantissa : mantissa) * Math.pow(10, exp - 6176);\n}\nfunction writeDecimal128LE(buf, offset, value) {\n  var exp = Math.floor(value == 0 ? 0 : Math.LOG10E * Math.log(Math.abs(value))) + 6176 - 16;\n  var mantissa = value / Math.pow(10, exp - 6176);\n  buf[offset + 15] |= exp >> 7;\n  buf[offset + 14] |= (exp & 127) << 1;\n  for (var i = 0; mantissa >= 1; ++i, mantissa /= 256)\n    buf[offset + i] = mantissa & 255;\n  buf[offset + 15] |= value >= 0 ? 0 : 128;\n}\nfunction parse_varint49(buf, ptr) {\n  var l = ptr.l;\n  var usz = buf[l] & 127;\n  varint:\n    if (buf[l++] >= 128) {\n      usz |= (buf[l] & 127) << 7;\n      if (buf[l++] < 128)\n        break varint;\n      usz |= (buf[l] & 127) << 14;\n      if (buf[l++] < 128)\n        break varint;\n      usz |= (buf[l] & 127) << 21;\n      if (buf[l++] < 128)\n        break varint;\n      usz += (buf[l] & 127) * Math.pow(2, 28);\n      ++l;\n      if (buf[l++] < 128)\n        break varint;\n      usz += (buf[l] & 127) * Math.pow(2, 35);\n      ++l;\n      if (buf[l++] < 128)\n        break varint;\n      usz += (buf[l] & 127) * Math.pow(2, 42);\n      ++l;\n      if (buf[l++] < 128)\n        break varint;\n    }\n  ptr.l = l;\n  return usz;\n}\nfunction write_varint49(v) {\n  var usz = new Uint8Array(7);\n  usz[0] = v & 127;\n  var L = 1;\n  sz:\n    if (v > 127) {\n      usz[L - 1] |= 128;\n      usz[L] = v >> 7 & 127;\n      ++L;\n      if (v <= 16383)\n        break sz;\n      usz[L - 1] |= 128;\n      usz[L] = v >> 14 & 127;\n      ++L;\n      if (v <= 2097151)\n        break sz;\n      usz[L - 1] |= 128;\n      usz[L] = v >> 21 & 127;\n      ++L;\n      if (v <= 268435455)\n        break sz;\n      usz[L - 1] |= 128;\n      usz[L] = v / 256 >>> 21 & 127;\n      ++L;\n      if (v <= 34359738367)\n        break sz;\n      usz[L - 1] |= 128;\n      usz[L] = v / 65536 >>> 21 & 127;\n      ++L;\n      if (v <= 4398046511103)\n        break sz;\n      usz[L - 1] |= 128;\n      usz[L] = v / 16777216 >>> 21 & 127;\n      ++L;\n    }\n  return usz[subarray](0, L);\n}\nfunction parse_packed_varints(buf) {\n  var ptr = { l: 0 };\n  var out = [];\n  while (ptr.l < buf.length)\n    out.push(parse_varint49(buf, ptr));\n  return out;\n}\nfunction write_packed_varints(nums) {\n  return u8concat(nums.map(function(x) {\n    return write_varint49(x);\n  }));\n}\nfunction varint_to_i32(buf) {\n  var l = 0, i32 = buf[l] & 127;\n  varint:\n    if (buf[l++] >= 128) {\n      i32 |= (buf[l] & 127) << 7;\n      if (buf[l++] < 128)\n        break varint;\n      i32 |= (buf[l] & 127) << 14;\n      if (buf[l++] < 128)\n        break varint;\n      i32 |= (buf[l] & 127) << 21;\n      if (buf[l++] < 128)\n        break varint;\n      i32 |= (buf[l] & 127) << 28;\n    }\n  return i32;\n}\nfunction varint_to_u64(buf) {\n  var l = 0, lo = buf[l] & 127, hi = 0;\n  varint:\n    if (buf[l++] >= 128) {\n      lo |= (buf[l] & 127) << 7;\n      if (buf[l++] < 128)\n        break varint;\n      lo |= (buf[l] & 127) << 14;\n      if (buf[l++] < 128)\n        break varint;\n      lo |= (buf[l] & 127) << 21;\n      if (buf[l++] < 128)\n        break varint;\n      lo |= (buf[l] & 127) << 28;\n      hi = buf[l] >> 4 & 7;\n      if (buf[l++] < 128)\n        break varint;\n      hi |= (buf[l] & 127) << 3;\n      if (buf[l++] < 128)\n        break varint;\n      hi |= (buf[l] & 127) << 10;\n      if (buf[l++] < 128)\n        break varint;\n      hi |= (buf[l] & 127) << 17;\n      if (buf[l++] < 128)\n        break varint;\n      hi |= (buf[l] & 127) << 24;\n      if (buf[l++] < 128)\n        break varint;\n      hi |= (buf[l] & 127) << 31;\n    }\n  return [lo >>> 0, hi >>> 0];\n}\nfunction parse_shallow(buf) {\n  var out = [], ptr = { l: 0 };\n  while (ptr.l < buf.length) {\n    var off = ptr.l;\n    var num = parse_varint49(buf, ptr);\n    var type = num & 7;\n    num = num / 8 | 0;\n    var data;\n    var l = ptr.l;\n    switch (type) {\n      case 0:\n        {\n          while (buf[l++] >= 128)\n            ;\n          data = buf[subarray](ptr.l, l);\n          ptr.l = l;\n        }\n        break;\n      case 1:\n        {\n          data = buf[subarray](l, l + 8);\n          ptr.l = l + 8;\n        }\n        break;\n      case 2:\n        {\n          var len = parse_varint49(buf, ptr);\n          data = buf[subarray](ptr.l, ptr.l + len);\n          ptr.l += len;\n        }\n        break;\n      case 5:\n        {\n          data = buf[subarray](l, l + 4);\n          ptr.l = l + 4;\n        }\n        break;\n      default:\n        throw new Error(\"PB Type \".concat(type, \" for Field \").concat(num, \" at offset \").concat(off));\n    }\n    var v = { data: data, type: type };\n    if (out[num] == null)\n      out[num] = [];\n    out[num].push(v);\n  }\n  return out;\n}\nfunction write_shallow(proto) {\n  var out = [];\n  proto.forEach(function(field, idx) {\n    if (idx == 0)\n      return;\n    field.forEach(function(item) {\n      if (!item.data)\n        return;\n      out.push(write_varint49(idx * 8 + item.type));\n      if (item.type == 2)\n        out.push(write_varint49(item.data.length));\n      out.push(item.data);\n    });\n  });\n  return u8concat(out);\n}\nfunction mappa(data, cb) {\n  return (data == null ? void 0 : data.map(function(d) {\n    return cb(d.data);\n  })) || [];\n}\nfunction parse_iwa_file(buf) {\n  var _a;\n  var out = [], ptr = { l: 0 };\n  while (ptr.l < buf.length) {\n    var len = parse_varint49(buf, ptr);\n    var ai = parse_shallow(buf[subarray](ptr.l, ptr.l + len));\n    ptr.l += len;\n    var res = {\n      id: varint_to_i32(ai[1][0].data),\n      messages: []\n    };\n    ai[2].forEach(function(b) {\n      var mi = parse_shallow(b.data);\n      var fl = varint_to_i32(mi[3][0].data);\n      res.messages.push({\n        meta: mi,\n        data: buf[subarray](ptr.l, ptr.l + fl)\n      });\n      ptr.l += fl;\n    });\n    if ((_a = ai[3]) == null ? void 0 : _a[0])\n      res.merge = varint_to_i32(ai[3][0].data) >>> 0 > 0;\n    out.push(res);\n  }\n  return out;\n}\nfunction write_iwa_file(ias) {\n  var bufs = [];\n  ias.forEach(function(ia) {\n    var ai = [\n      [],\n      [{ data: write_varint49(ia.id), type: 0 }],\n      []\n    ];\n    if (ia.merge != null)\n      ai[3] = [{ data: write_varint49(+!!ia.merge), type: 0 }];\n    var midata = [];\n    ia.messages.forEach(function(mi) {\n      midata.push(mi.data);\n      mi.meta[3] = [{ type: 0, data: write_varint49(mi.data.length) }];\n      ai[2].push({ data: write_shallow(mi.meta), type: 2 });\n    });\n    var aipayload = write_shallow(ai);\n    bufs.push(write_varint49(aipayload.length));\n    bufs.push(aipayload);\n    midata.forEach(function(mid) {\n      return bufs.push(mid);\n    });\n  });\n  return u8concat(bufs);\n}\nfunction parse_snappy_chunk(type, buf) {\n  if (type != 0)\n    throw new Error(\"Unexpected Snappy chunk type \".concat(type));\n  var ptr = { l: 0 };\n  var usz = parse_varint49(buf, ptr);\n  var chunks = [];\n  var l = ptr.l;\n  while (l < buf.length) {\n    var tag = buf[l] & 3;\n    if (tag == 0) {\n      var len = buf[l++] >> 2;\n      if (len < 60)\n        ++len;\n      else {\n        var c = len - 59;\n        len = buf[l];\n        if (c > 1)\n          len |= buf[l + 1] << 8;\n        if (c > 2)\n          len |= buf[l + 2] << 16;\n        if (c > 3)\n          len |= buf[l + 3] << 24;\n        len >>>= 0;\n        len++;\n        l += c;\n      }\n      chunks.push(buf[subarray](l, l + len));\n      l += len;\n      continue;\n    } else {\n      var offset = 0, length = 0;\n      if (tag == 1) {\n        length = (buf[l] >> 2 & 7) + 4;\n        offset = (buf[l++] & 224) << 3;\n        offset |= buf[l++];\n      } else {\n        length = (buf[l++] >> 2) + 1;\n        if (tag == 2) {\n          offset = buf[l] | buf[l + 1] << 8;\n          l += 2;\n        } else {\n          offset = (buf[l] | buf[l + 1] << 8 | buf[l + 2] << 16 | buf[l + 3] << 24) >>> 0;\n          l += 4;\n        }\n      }\n      if (offset == 0)\n        throw new Error(\"Invalid offset 0\");\n      var j = chunks.length - 1, off = offset;\n      while (j >= 0 && off >= chunks[j].length) {\n        off -= chunks[j].length;\n        --j;\n      }\n      if (j < 0) {\n        if (off == 0)\n          off = chunks[j = 0].length;\n        else\n          throw new Error(\"Invalid offset beyond length\");\n      }\n      if (length < off)\n        chunks.push(chunks[j][subarray](chunks[j].length - off, chunks[j].length - off + length));\n      else {\n        if (off > 0) {\n          chunks.push(chunks[j][subarray](chunks[j].length - off));\n          length -= off;\n        }\n        ++j;\n        while (length >= chunks[j].length) {\n          chunks.push(chunks[j]);\n          length -= chunks[j].length;\n          ++j;\n        }\n        if (length)\n          chunks.push(chunks[j][subarray](0, length));\n      }\n      if (chunks.length > 25)\n        chunks = [u8concat(chunks)];\n    }\n  }\n  var clen = 0;\n  for (var u8i = 0; u8i < chunks.length; ++u8i)\n    clen += chunks[u8i].length;\n  if (clen != usz)\n    throw new Error(\"Unexpected length: \".concat(clen, \" != \").concat(usz));\n  return chunks;\n}\nfunction decompress_iwa_file(buf) {\n  if (Array.isArray(buf))\n    buf = new Uint8Array(buf);\n  var out = [];\n  var l = 0;\n  while (l < buf.length) {\n    var t = buf[l++];\n    var len = buf[l] | buf[l + 1] << 8 | buf[l + 2] << 16;\n    l += 3;\n    out.push.apply(out, parse_snappy_chunk(t, buf[subarray](l, l + len)));\n    l += len;\n  }\n  if (l !== buf.length)\n    throw new Error(\"data is not a valid framed stream!\");\n  return out.length == 1 ? out[0] : u8concat(out);\n}\nfunction compress_iwa_file(buf) {\n  var out = [];\n  var l = 0;\n  while (l < buf.length) {\n    var c = Math.min(buf.length - l, 268435455);\n    var frame = new Uint8Array(4);\n    out.push(frame);\n    var usz = write_varint49(c);\n    var L = usz.length;\n    out.push(usz);\n    if (c <= 60) {\n      L++;\n      out.push(new Uint8Array([c - 1 << 2]));\n    } else if (c <= 256) {\n      L += 2;\n      out.push(new Uint8Array([240, c - 1 & 255]));\n    } else if (c <= 65536) {\n      L += 3;\n      out.push(new Uint8Array([244, c - 1 & 255, c - 1 >> 8 & 255]));\n    } else if (c <= 16777216) {\n      L += 4;\n      out.push(new Uint8Array([248, c - 1 & 255, c - 1 >> 8 & 255, c - 1 >> 16 & 255]));\n    } else if (c <= 4294967296) {\n      L += 5;\n      out.push(new Uint8Array([252, c - 1 & 255, c - 1 >> 8 & 255, c - 1 >> 16 & 255, c - 1 >>> 24 & 255]));\n    }\n    out.push(buf[subarray](l, l + c));\n    L += c;\n    frame[0] = 0;\n    frame[1] = L & 255;\n    frame[2] = L >> 8 & 255;\n    frame[3] = L >> 16 & 255;\n    l += c;\n  }\n  return u8concat(out);\n}\nvar numbers_lut_new = function() {\n  return { sst: [], rsst: [], ofmt: [], nfmt: [] };\n};\nfunction numbers_format_cell(cell, t, flags, ofmt, nfmt) {\n  var _a, _b, _c, _d;\n  var ctype = t & 255, ver = t >> 8;\n  var fmt = ver >= 5 ? nfmt : ofmt;\n  dur:\n    if (flags & (ver > 4 ? 8 : 4) && cell.t == \"n\" && ctype == 7) {\n      var dstyle = ((_a = fmt[7]) == null ? void 0 : _a[0]) ? varint_to_i32(fmt[7][0].data) : -1;\n      if (dstyle == -1)\n        break dur;\n      var dmin = ((_b = fmt[15]) == null ? void 0 : _b[0]) ? varint_to_i32(fmt[15][0].data) : -1;\n      var dmax = ((_c = fmt[16]) == null ? void 0 : _c[0]) ? varint_to_i32(fmt[16][0].data) : -1;\n      var auto = ((_d = fmt[40]) == null ? void 0 : _d[0]) ? varint_to_i32(fmt[40][0].data) : -1;\n      var d = cell.v, dd = d;\n      autodur:\n        if (auto) {\n          if (d == 0) {\n            dmin = dmax = 2;\n            break autodur;\n          }\n          if (d >= 604800)\n            dmin = 1;\n          else if (d >= 86400)\n            dmin = 2;\n          else if (d >= 3600)\n            dmin = 4;\n          else if (d >= 60)\n            dmin = 8;\n          else if (d >= 1)\n            dmin = 16;\n          else\n            dmin = 32;\n          if (Math.floor(d) != d)\n            dmax = 32;\n          else if (d % 60)\n            dmax = 16;\n          else if (d % 3600)\n            dmax = 8;\n          else if (d % 86400)\n            dmax = 4;\n          else if (d % 604800)\n            dmax = 2;\n          if (dmax < dmin)\n            dmax = dmin;\n        }\n      if (dmin == -1 || dmax == -1)\n        break dur;\n      var dstr = [], zstr = [];\n      if (dmin == 1) {\n        dd = d / 604800;\n        if (dmax == 1) {\n          zstr.push('d\"d\"');\n        } else {\n          dd |= 0;\n          d -= 604800 * dd;\n        }\n        dstr.push(dd + (dstyle == 2 ? \" week\" + (dd == 1 ? \"\" : \"s\") : dstyle == 1 ? \"w\" : \"\"));\n      }\n      if (dmin <= 2 && dmax >= 2) {\n        dd = d / 86400;\n        if (dmax > 2) {\n          dd |= 0;\n          d -= 86400 * dd;\n        }\n        zstr.push('d\"d\"');\n        dstr.push(dd + (dstyle == 2 ? \" day\" + (dd == 1 ? \"\" : \"s\") : dstyle == 1 ? \"d\" : \"\"));\n      }\n      if (dmin <= 4 && dmax >= 4) {\n        dd = d / 3600;\n        if (dmax > 4) {\n          dd |= 0;\n          d -= 3600 * dd;\n        }\n        zstr.push((dmin >= 4 ? \"[h]\" : \"h\") + '\"h\"');\n        dstr.push(dd + (dstyle == 2 ? \" hour\" + (dd == 1 ? \"\" : \"s\") : dstyle == 1 ? \"h\" : \"\"));\n      }\n      if (dmin <= 8 && dmax >= 8) {\n        dd = d / 60;\n        if (dmax > 8) {\n          dd |= 0;\n          d -= 60 * dd;\n        }\n        zstr.push((dmin >= 8 ? \"[m]\" : \"m\") + '\"m\"');\n        if (dstyle == 0)\n          dstr.push((dmin == 8 && dmax == 8 || dd >= 10 ? \"\" : \"0\") + dd);\n        else\n          dstr.push(dd + (dstyle == 2 ? \" minute\" + (dd == 1 ? \"\" : \"s\") : dstyle == 1 ? \"m\" : \"\"));\n      }\n      if (dmin <= 16 && dmax >= 16) {\n        dd = d;\n        if (dmax > 16) {\n          dd |= 0;\n          d -= dd;\n        }\n        zstr.push((dmin >= 16 ? \"[s]\" : \"s\") + '\"s\"');\n        if (dstyle == 0)\n          dstr.push((dmax == 16 && dmin == 16 || dd >= 10 ? \"\" : \"0\") + dd);\n        else\n          dstr.push(dd + (dstyle == 2 ? \" second\" + (dd == 1 ? \"\" : \"s\") : dstyle == 1 ? \"s\" : \"\"));\n      }\n      if (dmax >= 32) {\n        dd = Math.round(1e3 * d);\n        if (dmin < 32)\n          zstr.push('.000\"ms\"');\n        if (dstyle == 0)\n          dstr.push((dd >= 100 ? \"\" : dd >= 10 ? \"0\" : \"00\") + dd);\n        else\n          dstr.push(dd + (dstyle == 2 ? \" millisecond\" + (dd == 1 ? \"\" : \"s\") : dstyle == 1 ? \"ms\" : \"\"));\n      }\n      cell.w = dstr.join(dstyle == 0 ? \":\" : \" \");\n      cell.z = zstr.join(dstyle == 0 ? '\":\"' : \" \");\n      if (dstyle == 0)\n        cell.w = cell.w.replace(/:(\\d\\d\\d)$/, \".$1\");\n    }\n}\nfunction parse_old_storage(buf, lut, v) {\n  var dv = u8_to_dataview(buf);\n  var flags = dv.getUint32(4, true);\n  var ridx = -1, sidx = -1, zidx = -1, ieee = NaN, dt = new Date(2001, 0, 1);\n  var doff = v > 1 ? 12 : 8;\n  if (flags & 2) {\n    zidx = dv.getUint32(doff, true);\n    doff += 4;\n  }\n  doff += popcnt(flags & (v > 1 ? 3468 : 396)) * 4;\n  if (flags & 512) {\n    ridx = dv.getUint32(doff, true);\n    doff += 4;\n  }\n  doff += popcnt(flags & (v > 1 ? 12288 : 4096)) * 4;\n  if (flags & 16) {\n    sidx = dv.getUint32(doff, true);\n    doff += 4;\n  }\n  if (flags & 32) {\n    ieee = dv.getFloat64(doff, true);\n    doff += 8;\n  }\n  if (flags & 64) {\n    dt.setTime(dt.getTime() + dv.getFloat64(doff, true) * 1e3);\n    doff += 8;\n  }\n  if (v > 1) {\n    flags = dv.getUint32(8, true) >>> 16;\n    if (flags & 255) {\n      if (zidx == -1)\n        zidx = dv.getUint32(doff, true);\n      doff += 4;\n    }\n  }\n  var ret;\n  var t = buf[v >= 4 ? 1 : 2];\n  switch (t) {\n    case 0:\n      return void 0;\n    case 2:\n      ret = { t: \"n\", v: ieee };\n      break;\n    case 3:\n      ret = { t: \"s\", v: lut.sst[sidx] };\n      break;\n    case 5:\n      ret = { t: \"d\", v: dt };\n      break;\n    case 6:\n      ret = { t: \"b\", v: ieee > 0 };\n      break;\n    case 7:\n      ret = { t: \"n\", v: ieee };\n      break;\n    case 8:\n      ret = { t: \"e\", v: 0 };\n      break;\n    case 9:\n      {\n        if (ridx > -1)\n          ret = { t: \"s\", v: lut.rsst[ridx] };\n        else\n          throw new Error(\"Unsupported cell type \".concat(buf[subarray](0, 4)));\n      }\n      break;\n    default:\n      throw new Error(\"Unsupported cell type \".concat(buf[subarray](0, 4)));\n  }\n  if (zidx > -1)\n    numbers_format_cell(ret, t | v << 8, flags, lut.ofmt[zidx], lut.nfmt[zidx]);\n  if (t == 7)\n    ret.v /= 86400;\n  return ret;\n}\nfunction parse_new_storage(buf, lut) {\n  var dv = u8_to_dataview(buf);\n  var flags = dv.getUint32(4, true);\n  var fields = dv.getUint32(8, true);\n  var doff = 12;\n  var ridx = -1, sidx = -1, zidx = -1, d128 = NaN, ieee = NaN, dt = new Date(2001, 0, 1);\n  if (fields & 1) {\n    d128 = readDecimal128LE(buf, doff);\n    doff += 16;\n  }\n  if (fields & 2) {\n    ieee = dv.getFloat64(doff, true);\n    doff += 8;\n  }\n  if (fields & 4) {\n    dt.setTime(dt.getTime() + dv.getFloat64(doff, true) * 1e3);\n    doff += 8;\n  }\n  if (fields & 8) {\n    sidx = dv.getUint32(doff, true);\n    doff += 4;\n  }\n  if (fields & 16) {\n    ridx = dv.getUint32(doff, true);\n    doff += 4;\n  }\n  var ret;\n  var t = buf[1];\n  switch (t) {\n    case 0:\n      return void 0;\n    case 2:\n      ret = { t: \"n\", v: d128 };\n      break;\n    case 3:\n      ret = { t: \"s\", v: lut.sst[sidx] };\n      break;\n    case 5:\n      ret = { t: \"d\", v: dt };\n      break;\n    case 6:\n      ret = { t: \"b\", v: ieee > 0 };\n      break;\n    case 7:\n      ret = { t: \"n\", v: ieee };\n      break;\n    case 8:\n      ret = { t: \"e\", v: 0 };\n      break;\n    case 9:\n      ret = { t: \"s\", v: lut.rsst[ridx] };\n      break;\n    case 10:\n      ret = { t: \"n\", v: d128 };\n      break;\n    default:\n      throw new Error(\"Unsupported cell type \".concat(buf[1], \" : \").concat(fields & 31, \" : \").concat(buf[subarray](0, 4)));\n  }\n  doff += popcnt(fields & 8160) * 4;\n  if (fields & 516096) {\n    if (zidx == -1)\n      zidx = dv.getUint32(doff, true);\n    doff += 4;\n  }\n  if (zidx > -1)\n    numbers_format_cell(ret, t | 5 << 8, fields >> 13, lut.ofmt[zidx], lut.nfmt[zidx]);\n  if (t == 7)\n    ret.v /= 86400;\n  return ret;\n}\nfunction write_new_storage(cell, sst) {\n  var out = new Uint8Array(32), dv = u8_to_dataview(out), l = 12, flags = 0;\n  out[0] = 5;\n  switch (cell.t) {\n    case \"n\":\n      out[1] = 2;\n      writeDecimal128LE(out, l, cell.v);\n      flags |= 1;\n      l += 16;\n      break;\n    case \"b\":\n      out[1] = 6;\n      dv.setFloat64(l, cell.v ? 1 : 0, true);\n      flags |= 2;\n      l += 8;\n      break;\n    case \"s\":\n      var s = cell.v == null ? \"\" : String(cell.v);\n      var isst = sst.indexOf(s);\n      if (isst == -1)\n        sst[isst = sst.length] = s;\n      out[1] = 3;\n      dv.setUint32(l, isst, true);\n      flags |= 8;\n      l += 4;\n      break;\n    default:\n      throw \"unsupported cell type \" + cell.t;\n  }\n  dv.setUint32(8, flags, true);\n  return out[subarray](0, l);\n}\nfunction write_old_storage(cell, sst) {\n  var out = new Uint8Array(32), dv = u8_to_dataview(out), l = 12, flags = 0;\n  out[0] = 4;\n  switch (cell.t) {\n    case \"n\":\n      out[2] = 2;\n      dv.setFloat64(l, cell.v, true);\n      flags |= 32;\n      l += 8;\n      break;\n    case \"b\":\n      out[2] = 6;\n      dv.setFloat64(l, cell.v ? 1 : 0, true);\n      flags |= 32;\n      l += 8;\n      break;\n    case \"s\":\n      var s = cell.v == null ? \"\" : String(cell.v);\n      var isst = sst.indexOf(s);\n      if (isst == -1)\n        sst[isst = sst.length] = s;\n      out[2] = 3;\n      dv.setUint32(l, isst, true);\n      flags |= 16;\n      l += 4;\n      break;\n    default:\n      throw \"unsupported cell type \" + cell.t;\n  }\n  dv.setUint32(8, flags, true);\n  return out[subarray](0, l);\n}\nfunction parse_cell_storage(buf, lut) {\n  switch (buf[0]) {\n    case 0:\n    case 1:\n    case 2:\n    case 3:\n    case 4:\n      return parse_old_storage(buf, lut, buf[0]);\n    case 5:\n      return parse_new_storage(buf, lut);\n    default:\n      throw new Error(\"Unsupported payload version \".concat(buf[0]));\n  }\n}\nfunction parse_TSP_Reference(buf) {\n  var pb = parse_shallow(buf);\n  return varint_to_i32(pb[1][0].data);\n}\nfunction write_TSP_Reference(idx) {\n  return write_shallow([\n    [],\n    [{ type: 0, data: write_varint49(idx) }]\n  ]);\n}\nfunction numbers_add_oref(iwa, ref) {\n  var _a;\n  var orefs = ((_a = iwa.messages[0].meta[5]) == null ? void 0 : _a[0]) ? parse_packed_varints(iwa.messages[0].meta[5][0].data) : [];\n  var orefidx = orefs.indexOf(ref);\n  if (orefidx == -1) {\n    orefs.push(ref);\n    iwa.messages[0].meta[5] = [{ type: 2, data: write_packed_varints(orefs) }];\n  }\n}\nfunction numbers_del_oref(iwa, ref) {\n  var _a;\n  var orefs = ((_a = iwa.messages[0].meta[5]) == null ? void 0 : _a[0]) ? parse_packed_varints(iwa.messages[0].meta[5][0].data) : [];\n  iwa.messages[0].meta[5] = [{ type: 2, data: write_packed_varints(orefs.filter(function(r) {\n    return r != ref;\n  })) }];\n}\nfunction parse_TST_TableDataList(M, root) {\n  var pb = parse_shallow(root.data);\n  var type = varint_to_i32(pb[1][0].data);\n  var entries = pb[3];\n  var data = [];\n  (entries || []).forEach(function(entry) {\n    var le = parse_shallow(entry.data);\n    if (!le[1])\n      return;\n    var key = varint_to_i32(le[1][0].data) >>> 0;\n    switch (type) {\n      case 1:\n        data[key] = u8str(le[3][0].data);\n        break;\n      case 8:\n        {\n          var rt = M[parse_TSP_Reference(le[9][0].data)][0];\n          var rtp = parse_shallow(rt.data);\n          var rtpref = M[parse_TSP_Reference(rtp[1][0].data)][0];\n          var mtype = varint_to_i32(rtpref.meta[1][0].data);\n          if (mtype != 2001)\n            throw new Error(\"2000 unexpected reference to \".concat(mtype));\n          var tswpsa = parse_shallow(rtpref.data);\n          data[key] = tswpsa[3].map(function(x) {\n            return u8str(x.data);\n          }).join(\"\");\n        }\n        break;\n      case 2:\n        data[key] = parse_shallow(le[6][0].data);\n        break;\n      default:\n        throw type;\n    }\n  });\n  return data;\n}\nfunction parse_TST_TileRowInfo(u8, type) {\n  var _a, _b, _c, _d, _e, _f, _g, _h, _i, _j, _k, _l, _m, _n;\n  var pb = parse_shallow(u8);\n  var R = varint_to_i32(pb[1][0].data) >>> 0;\n  var cnt = varint_to_i32(pb[2][0].data) >>> 0;\n  var wide_offsets = ((_b = (_a = pb[8]) == null ? void 0 : _a[0]) == null ? void 0 : _b.data) && varint_to_i32(pb[8][0].data) > 0 || false;\n  var used_storage_u8, used_storage;\n  if (((_d = (_c = pb[7]) == null ? void 0 : _c[0]) == null ? void 0 : _d.data) && type != 0) {\n    used_storage_u8 = (_f = (_e = pb[7]) == null ? void 0 : _e[0]) == null ? void 0 : _f.data;\n    used_storage = (_h = (_g = pb[6]) == null ? void 0 : _g[0]) == null ? void 0 : _h.data;\n  } else if (((_j = (_i = pb[4]) == null ? void 0 : _i[0]) == null ? void 0 : _j.data) && type != 1) {\n    used_storage_u8 = (_l = (_k = pb[4]) == null ? void 0 : _k[0]) == null ? void 0 : _l.data;\n    used_storage = (_n = (_m = pb[3]) == null ? void 0 : _m[0]) == null ? void 0 : _n.data;\n  } else\n    throw \"NUMBERS Tile missing \".concat(type, \" cell storage\");\n  var width = wide_offsets ? 4 : 1;\n  var used_storage_offsets = u8_to_dataview(used_storage_u8);\n  var offsets = [];\n  for (var C = 0; C < used_storage_u8.length / 2; ++C) {\n    var off = used_storage_offsets.getUint16(C * 2, true);\n    if (off < 65535)\n      offsets.push([C, off]);\n  }\n  if (offsets.length != cnt)\n    throw \"Expected \".concat(cnt, \" cells, found \").concat(offsets.length);\n  var cells = [];\n  for (C = 0; C < offsets.length - 1; ++C)\n    cells[offsets[C][0]] = used_storage[subarray](offsets[C][1] * width, offsets[C + 1][1] * width);\n  if (offsets.length >= 1)\n    cells[offsets[offsets.length - 1][0]] = used_storage[subarray](offsets[offsets.length - 1][1] * width);\n  return { R: R, cells: cells };\n}\nfunction parse_TST_Tile(M, root) {\n  var _a;\n  var pb = parse_shallow(root.data);\n  var storage = -1;\n  if ((_a = pb == null ? void 0 : pb[7]) == null ? void 0 : _a[0]) {\n    if (varint_to_i32(pb[7][0].data) >>> 0)\n      storage = 1;\n    else\n      storage = 0;\n  }\n  var ri = mappa(pb[5], function(u8) {\n    return parse_TST_TileRowInfo(u8, storage);\n  });\n  return {\n    nrows: varint_to_i32(pb[4][0].data) >>> 0,\n    data: ri.reduce(function(acc, x) {\n      if (!acc[x.R])\n        acc[x.R] = [];\n      x.cells.forEach(function(cell, C) {\n        if (acc[x.R][C])\n          throw new Error(\"Duplicate cell r=\".concat(x.R, \" c=\").concat(C));\n        acc[x.R][C] = cell;\n      });\n      return acc;\n    }, [])\n  };\n}\nfunction parse_TST_TableModelArchive(M, root, ws) {\n  var _a, _b, _c, _d, _e, _f;\n  var pb = parse_shallow(root.data);\n  var range = { s: { r: 0, c: 0 }, e: { r: 0, c: 0 } };\n  range.e.r = (varint_to_i32(pb[6][0].data) >>> 0) - 1;\n  if (range.e.r < 0)\n    throw new Error(\"Invalid row varint \".concat(pb[6][0].data));\n  range.e.c = (varint_to_i32(pb[7][0].data) >>> 0) - 1;\n  if (range.e.c < 0)\n    throw new Error(\"Invalid col varint \".concat(pb[7][0].data));\n  ws[\"!ref\"] = encode_range(range);\n  var dense = ws[\"!data\"] != null, dws = ws;\n  var store = parse_shallow(pb[4][0].data);\n  var lut = numbers_lut_new();\n  if ((_a = store[4]) == null ? void 0 : _a[0])\n    lut.sst = parse_TST_TableDataList(M, M[parse_TSP_Reference(store[4][0].data)][0]);\n  if ((_b = store[11]) == null ? void 0 : _b[0])\n    lut.ofmt = parse_TST_TableDataList(M, M[parse_TSP_Reference(store[11][0].data)][0]);\n  if ((_c = store[17]) == null ? void 0 : _c[0])\n    lut.rsst = parse_TST_TableDataList(M, M[parse_TSP_Reference(store[17][0].data)][0]);\n  if ((_d = store[22]) == null ? void 0 : _d[0])\n    lut.nfmt = parse_TST_TableDataList(M, M[parse_TSP_Reference(store[22][0].data)][0]);\n  var tile = parse_shallow(store[3][0].data);\n  var _R = 0;\n  tile[1].forEach(function(t) {\n    var tl = parse_shallow(t.data);\n    var ref2 = M[parse_TSP_Reference(tl[2][0].data)][0];\n    var mtype2 = varint_to_i32(ref2.meta[1][0].data);\n    if (mtype2 != 6002)\n      throw new Error(\"6001 unexpected reference to \".concat(mtype2));\n    var _tile = parse_TST_Tile(M, ref2);\n    _tile.data.forEach(function(row, R) {\n      row.forEach(function(buf, C) {\n        var res = parse_cell_storage(buf, lut);\n        if (res) {\n          if (dense) {\n            if (!dws[\"!data\"][_R + R])\n              dws[\"!data\"][_R + R] = [];\n            dws[\"!data\"][_R + R][C] = res;\n          } else {\n            ws[encode_col(C) + encode_row(_R + R)] = res;\n          }\n        }\n      });\n    });\n    _R += _tile.nrows;\n  });\n  if ((_e = store[13]) == null ? void 0 : _e[0]) {\n    var ref = M[parse_TSP_Reference(store[13][0].data)][0];\n    var mtype = varint_to_i32(ref.meta[1][0].data);\n    if (mtype != 6144)\n      throw new Error(\"Expected merge type 6144, found \".concat(mtype));\n    ws[\"!merges\"] = (_f = parse_shallow(ref.data)) == null ? void 0 : _f[1].map(function(pi) {\n      var merge = parse_shallow(pi.data);\n      var origin = u8_to_dataview(parse_shallow(merge[1][0].data)[1][0].data), size = u8_to_dataview(parse_shallow(merge[2][0].data)[1][0].data);\n      return {\n        s: { r: origin.getUint16(0, true), c: origin.getUint16(2, true) },\n        e: {\n          r: origin.getUint16(0, true) + size.getUint16(0, true) - 1,\n          c: origin.getUint16(2, true) + size.getUint16(2, true) - 1\n        }\n      };\n    });\n  }\n}\nfunction parse_TST_TableInfoArchive(M, root, opts) {\n  var pb = parse_shallow(root.data);\n  var out = { \"!ref\": \"A1\" };\n  if (opts == null ? void 0 : opts.dense)\n    out[\"!data\"] = [];\n  var tableref = M[parse_TSP_Reference(pb[2][0].data)];\n  var mtype = varint_to_i32(tableref[0].meta[1][0].data);\n  if (mtype != 6001)\n    throw new Error(\"6000 unexpected reference to \".concat(mtype));\n  parse_TST_TableModelArchive(M, tableref[0], out);\n  return out;\n}\nfunction parse_TN_SheetArchive(M, root, opts) {\n  var _a;\n  var pb = parse_shallow(root.data);\n  var out = {\n    name: ((_a = pb[1]) == null ? void 0 : _a[0]) ? u8str(pb[1][0].data) : \"\",\n    sheets: []\n  };\n  var shapeoffs = mappa(pb[2], parse_TSP_Reference);\n  shapeoffs.forEach(function(off) {\n    M[off].forEach(function(m) {\n      var mtype = varint_to_i32(m.meta[1][0].data);\n      if (mtype == 6e3)\n        out.sheets.push(parse_TST_TableInfoArchive(M, m, opts));\n    });\n  });\n  return out;\n}\nfunction parse_TN_DocumentArchive(M, root, opts) {\n  var _a;\n  var out = book_new();\n  var pb = parse_shallow(root.data);\n  if ((_a = pb[2]) == null ? void 0 : _a[0])\n    throw new Error(\"Keynote presentations are not supported\");\n  var sheetoffs = mappa(pb[1], parse_TSP_Reference);\n  sheetoffs.forEach(function(off) {\n    M[off].forEach(function(m) {\n      var mtype = varint_to_i32(m.meta[1][0].data);\n      if (mtype == 2) {\n        var root2 = parse_TN_SheetArchive(M, m, opts);\n        root2.sheets.forEach(function(sheet, idx) {\n          book_append_sheet(out, sheet, idx == 0 ? root2.name : root2.name + \"_\" + idx, true);\n        });\n      }\n    });\n  });\n  if (out.SheetNames.length == 0)\n    throw new Error(\"Empty NUMBERS file\");\n  out.bookType = \"numbers\";\n  return out;\n}\nfunction parse_numbers_iwa(cfb, opts) {\n  var _a, _b, _c, _d, _e, _f, _g;\n  var M = {}, indices = [];\n  cfb.FullPaths.forEach(function(p) {\n    if (p.match(/\\.iwpv2/))\n      throw new Error(\"Unsupported password protection\");\n  });\n  cfb.FileIndex.forEach(function(s) {\n    if (!s.name.match(/\\.iwa$/))\n      return;\n    if (s.content[0] != 0)\n      return;\n    var o;\n    try {\n      o = decompress_iwa_file(s.content);\n    } catch (e) {\n      return console.log(\"?? \" + s.content.length + \" \" + (e.message || e));\n    }\n    var packets;\n    try {\n      packets = parse_iwa_file(o);\n    } catch (e) {\n      return console.log(\"## \" + (e.message || e));\n    }\n    packets.forEach(function(packet) {\n      M[packet.id] = packet.messages;\n      indices.push(packet.id);\n    });\n  });\n  if (!indices.length)\n    throw new Error(\"File has no messages\");\n  if (((_c = (_b = (_a = M == null ? void 0 : M[1]) == null ? void 0 : _a[0].meta) == null ? void 0 : _b[1]) == null ? void 0 : _c[0].data) && varint_to_i32(M[1][0].meta[1][0].data) == 1e4)\n    throw new Error(\"Pages documents are not supported\");\n  var docroot = ((_g = (_f = (_e = (_d = M == null ? void 0 : M[1]) == null ? void 0 : _d[0]) == null ? void 0 : _e.meta) == null ? void 0 : _f[1]) == null ? void 0 : _g[0].data) && varint_to_i32(M[1][0].meta[1][0].data) == 1 && M[1][0];\n  if (!docroot)\n    indices.forEach(function(idx) {\n      M[idx].forEach(function(iwam) {\n        var mtype = varint_to_i32(iwam.meta[1][0].data) >>> 0;\n        if (mtype == 1) {\n          if (!docroot)\n            docroot = iwam;\n          else\n            throw new Error(\"Document has multiple roots\");\n        }\n      });\n    });\n  if (!docroot)\n    throw new Error(\"Cannot find Document root\");\n  return parse_TN_DocumentArchive(M, docroot, opts);\n}\nfunction write_TST_TileRowInfo(data, SST, wide) {\n  var _a, _b;\n  var tri = [\n    [],\n    [{ type: 0, data: write_varint49(0) }],\n    [{ type: 0, data: write_varint49(0) }],\n    [{ type: 2, data: new Uint8Array([]) }],\n    [{ type: 2, data: new Uint8Array(Array.from({ length: 510 }, function() {\n      return 255;\n    })) }],\n    [{ type: 0, data: write_varint49(5) }],\n    [{ type: 2, data: new Uint8Array([]) }],\n    [{ type: 2, data: new Uint8Array(Array.from({ length: 510 }, function() {\n      return 255;\n    })) }],\n    [{ type: 0, data: write_varint49(1) }]\n  ];\n  if (!((_a = tri[6]) == null ? void 0 : _a[0]) || !((_b = tri[7]) == null ? void 0 : _b[0]))\n    throw \"Mutation only works on post-BNC storages!\";\n  var cnt = 0;\n  if (tri[7][0].data.length < 2 * data.length) {\n    var new_7 = new Uint8Array(2 * data.length);\n    new_7.set(tri[7][0].data);\n    tri[7][0].data = new_7;\n  }\n  if (tri[4][0].data.length < 2 * data.length) {\n    var new_4 = new Uint8Array(2 * data.length);\n    new_4.set(tri[4][0].data);\n    tri[4][0].data = new_4;\n  }\n  var dv = u8_to_dataview(tri[7][0].data), last_offset = 0, cell_storage = [];\n  var _dv = u8_to_dataview(tri[4][0].data), _last_offset = 0, _cell_storage = [];\n  var width = wide ? 4 : 1;\n  for (var C = 0; C < data.length; ++C) {\n    if (data[C] == null) {\n      dv.setUint16(C * 2, 65535, true);\n      _dv.setUint16(C * 2, 65535);\n      continue;\n    }\n    dv.setUint16(C * 2, last_offset / width, true);\n    _dv.setUint16(C * 2, _last_offset / width, true);\n    var celload, _celload;\n    switch (typeof data[C]) {\n      case \"string\":\n        celload = write_new_storage({ t: \"s\", v: data[C] }, SST);\n        _celload = write_old_storage({ t: \"s\", v: data[C] }, SST);\n        break;\n      case \"number\":\n        celload = write_new_storage({ t: \"n\", v: data[C] }, SST);\n        _celload = write_old_storage({ t: \"n\", v: data[C] }, SST);\n        break;\n      case \"boolean\":\n        celload = write_new_storage({ t: \"b\", v: data[C] }, SST);\n        _celload = write_old_storage({ t: \"b\", v: data[C] }, SST);\n        break;\n      default:\n        if (data[C] instanceof Date) {\n          celload = write_new_storage({ t: \"s\", v: data[C].toISOString() }, SST);\n          _celload = write_old_storage({ t: \"s\", v: data[C].toISOString() }, SST);\n          break;\n        }\n        throw new Error(\"Unsupported value \" + data[C]);\n    }\n    cell_storage.push(celload);\n    last_offset += celload.length;\n    {\n      _cell_storage.push(_celload);\n      _last_offset += _celload.length;\n    }\n    ++cnt;\n  }\n  tri[2][0].data = write_varint49(cnt);\n  tri[5][0].data = write_varint49(5);\n  for (; C < tri[7][0].data.length / 2; ++C) {\n    dv.setUint16(C * 2, 65535, true);\n    _dv.setUint16(C * 2, 65535, true);\n  }\n  tri[6][0].data = u8concat(cell_storage);\n  tri[3][0].data = u8concat(_cell_storage);\n  tri[8] = [{ type: 0, data: write_varint49(wide ? 1 : 0) }];\n  return tri;\n}\nfunction write_iwam(type, payload) {\n  return {\n    meta: [\n      [],\n      [{ type: 0, data: write_varint49(type) }]\n    ],\n    data: payload\n  };\n}\nfunction get_unique_msgid(dep, dependents) {\n  if (!dependents.last)\n    dependents.last = 927262;\n  for (var i = dependents.last; i < 2e6; ++i)\n    if (!dependents[i]) {\n      dependents[dependents.last = i] = dep;\n      return i;\n    }\n  throw new Error(\"Too many messages\");\n}\nfunction build_numbers_deps(cfb) {\n  var dependents = {};\n  var indices = [];\n  cfb.FileIndex.map(function(fi, idx) {\n    return [fi, cfb.FullPaths[idx]];\n  }).forEach(function(row) {\n    var fi = row[0], fp = row[1];\n    if (fi.type != 2)\n      return;\n    if (!fi.name.match(/\\.iwa/))\n      return;\n    if (fi.content[0] != 0)\n      return;\n    parse_iwa_file(decompress_iwa_file(fi.content)).forEach(function(packet) {\n      indices.push(packet.id);\n      dependents[packet.id] = { deps: [], location: fp, type: varint_to_i32(packet.messages[0].meta[1][0].data) };\n    });\n  });\n  cfb.FileIndex.forEach(function(fi) {\n    if (!fi.name.match(/\\.iwa/))\n      return;\n    if (fi.content[0] != 0)\n      return;\n    parse_iwa_file(decompress_iwa_file(fi.content)).forEach(function(ia) {\n      ia.messages.forEach(function(mess) {\n        [5, 6].forEach(function(f) {\n          if (!mess.meta[f])\n            return;\n          mess.meta[f].forEach(function(x) {\n            dependents[ia.id].deps.push(varint_to_i32(x.data));\n          });\n        });\n      });\n    });\n  });\n  return dependents;\n}\nfunction write_numbers_iwa(wb, opts) {\n  if (!opts || !opts.numbers)\n    throw new Error(\"Must pass a `numbers` option -- check the README\");\n  var cfb = CFB.read(opts.numbers, { type: \"base64\" });\n  var deps = build_numbers_deps(cfb);\n  var docroot = numbers_iwa_find(cfb, deps, 1);\n  if (docroot == null)\n    throw \"Could not find message \".concat(1, \" in Numbers template\");\n  var sheetrefs = mappa(parse_shallow(docroot.messages[0].data)[1], parse_TSP_Reference);\n  if (sheetrefs.length > 1)\n    throw new Error(\"Template NUMBERS file must have exactly one sheet\");\n  wb.SheetNames.forEach(function(name, idx) {\n    if (idx >= 1) {\n      numbers_add_ws(cfb, deps, idx + 1);\n      docroot = numbers_iwa_find(cfb, deps, 1);\n      sheetrefs = mappa(parse_shallow(docroot.messages[0].data)[1], parse_TSP_Reference);\n    }\n    write_numbers_ws(cfb, deps, wb.Sheets[name], name, idx, sheetrefs[idx]);\n  });\n  return cfb;\n}\nfunction numbers_iwa_doit(cfb, deps, id, cb) {\n  var entry = CFB.find(cfb, deps[id].location);\n  if (!entry)\n    throw \"Could not find \".concat(deps[id].location, \" in Numbers template\");\n  var x = parse_iwa_file(decompress_iwa_file(entry.content));\n  var ainfo = x.find(function(packet) {\n    return packet.id == id;\n  });\n  cb(ainfo, x);\n  entry.content = compress_iwa_file(write_iwa_file(x));\n  entry.size = entry.content.length;\n}\nfunction numbers_iwa_find(cfb, deps, id) {\n  var entry = CFB.find(cfb, deps[id].location);\n  if (!entry)\n    throw \"Could not find \".concat(deps[id].location, \" in Numbers template\");\n  var x = parse_iwa_file(decompress_iwa_file(entry.content));\n  var ainfo = x.find(function(packet) {\n    return packet.id == id;\n  });\n  return ainfo;\n}\nfunction numbers_add_ws(cfb, deps, wsidx) {\n  var sheetref = -1, newsheetref = -1;\n  var remap = {};\n  numbers_iwa_doit(cfb, deps, 1, function(docroot, arch) {\n    var doc = parse_shallow(docroot.messages[0].data);\n    sheetref = parse_TSP_Reference(parse_shallow(docroot.messages[0].data)[1][0].data);\n    newsheetref = get_unique_msgid({ deps: [1], location: deps[sheetref].location, type: 2 }, deps);\n    remap[sheetref] = newsheetref;\n    numbers_add_oref(docroot, newsheetref);\n    doc[1].push({ type: 2, data: write_TSP_Reference(newsheetref) });\n    var sheet = numbers_iwa_find(cfb, deps, sheetref);\n    sheet.id = newsheetref;\n    if (deps[1].location == deps[newsheetref].location)\n      arch.push(sheet);\n    else\n      numbers_iwa_doit(cfb, deps, newsheetref, function(_, x) {\n        return x.push(sheet);\n      });\n    docroot.messages[0].data = write_shallow(doc);\n  });\n  var tiaref = -1;\n  numbers_iwa_doit(cfb, deps, newsheetref, function(sheetroot, arch) {\n    var sa = parse_shallow(sheetroot.messages[0].data);\n    for (var i = 3; i <= 69; ++i)\n      delete sa[i];\n    var drawables = mappa(sa[2], parse_TSP_Reference);\n    drawables.forEach(function(n) {\n      return numbers_del_oref(sheetroot, n);\n    });\n    tiaref = get_unique_msgid({ deps: [newsheetref], location: deps[drawables[0]].location, type: deps[drawables[0]].type }, deps);\n    numbers_add_oref(sheetroot, tiaref);\n    remap[drawables[0]] = tiaref;\n    sa[2] = [{ type: 2, data: write_TSP_Reference(tiaref) }];\n    var tia = numbers_iwa_find(cfb, deps, drawables[0]);\n    tia.id = tiaref;\n    if (deps[drawables[0]].location == deps[newsheetref].location)\n      arch.push(tia);\n    else {\n      var loc2 = deps[newsheetref].location;\n      loc2 = loc2.replace(/^Root Entry\\//, \"\");\n      loc2 = loc2.replace(/^Index\\//, \"\").replace(/\\.iwa$/, \"\");\n      numbers_iwa_doit(cfb, deps, 2, function(ai) {\n        var mlist = parse_shallow(ai.messages[0].data);\n        var parentidx = mlist[3].findIndex(function(m) {\n          var _a, _b;\n          var mm = parse_shallow(m.data);\n          if ((_a = mm[3]) == null ? void 0 : _a[0])\n            return u8str(mm[3][0].data) == loc2;\n          if (((_b = mm[2]) == null ? void 0 : _b[0]) && u8str(mm[2][0].data) == loc2)\n            return true;\n          return false;\n        });\n        var parent = parse_shallow(mlist[3][parentidx].data);\n        if (!parent[6])\n          parent[6] = [];\n        parent[6].push({\n          type: 2,\n          data: write_shallow([\n            [],\n            [{ type: 0, data: write_varint49(tiaref) }]\n          ])\n        });\n        mlist[3][parentidx].data = write_shallow(parent);\n        ai.messages[0].data = write_shallow(mlist);\n      });\n      numbers_iwa_doit(cfb, deps, tiaref, function(_, x) {\n        return x.push(tia);\n      });\n    }\n    sheetroot.messages[0].data = write_shallow(sa);\n  });\n  var tmaref = -1;\n  numbers_iwa_doit(cfb, deps, tiaref, function(tiaroot, arch) {\n    var tia = parse_shallow(tiaroot.messages[0].data);\n    var da = parse_shallow(tia[1][0].data);\n    for (var i = 3; i <= 69; ++i)\n      delete da[i];\n    var dap = parse_TSP_Reference(da[2][0].data);\n    da[2][0].data = write_TSP_Reference(remap[dap]);\n    tia[1][0].data = write_shallow(da);\n    var oldtmaref = parse_TSP_Reference(tia[2][0].data);\n    numbers_del_oref(tiaroot, oldtmaref);\n    tmaref = get_unique_msgid({ deps: [tiaref], location: deps[oldtmaref].location, type: deps[oldtmaref].type }, deps);\n    numbers_add_oref(tiaroot, tmaref);\n    remap[oldtmaref] = tmaref;\n    tia[2][0].data = write_TSP_Reference(tmaref);\n    var tma = numbers_iwa_find(cfb, deps, oldtmaref);\n    tma.id = tmaref;\n    if (deps[tiaref].location == deps[tmaref].location)\n      arch.push(tma);\n    else\n      numbers_iwa_doit(cfb, deps, tmaref, function(_, x) {\n        return x.push(tma);\n      });\n    tiaroot.messages[0].data = write_shallow(tia);\n  });\n  var loc = deps[tmaref].location;\n  loc = loc.replace(/^Root Entry\\//, \"\");\n  loc = loc.replace(/^Index\\//, \"\").replace(/\\.iwa$/, \"\");\n  numbers_iwa_doit(cfb, deps, tmaref, function(tmaroot, arch) {\n    var _a, _b;\n    var tma = parse_shallow(tmaroot.messages[0].data);\n    var uuid = u8str(tma[1][0].data), new_uuid = uuid.replace(/-[A-Z0-9]*/, \"-\".concat(wsidx.toString(16).padStart(4, \"0\")));\n    tma[1][0].data = stru8(new_uuid);\n    [12, 13, 29, 31, 32, 33, 39, 44, 47, 81, 82, 84].forEach(function(n) {\n      return delete tma[n];\n    });\n    if (tma[45]) {\n      var srrta = parse_shallow(tma[45][0].data);\n      var ref = parse_TSP_Reference(srrta[1][0].data);\n      numbers_del_oref(tmaroot, ref);\n      delete tma[45];\n    }\n    if (tma[70]) {\n      var hsoa = parse_shallow(tma[70][0].data);\n      (_a = hsoa[2]) == null ? void 0 : _a.forEach(function(item) {\n        var hsa = parse_shallow(item.data);\n        [2, 3].map(function(n) {\n          return hsa[n][0];\n        }).forEach(function(hseadata) {\n          var hsea = parse_shallow(hseadata.data);\n          if (!hsea[8])\n            return;\n          var ref2 = parse_TSP_Reference(hsea[8][0].data);\n          numbers_del_oref(tmaroot, ref2);\n        });\n      });\n      delete tma[70];\n    }\n    [\n      46,\n      30,\n      34,\n      35,\n      36,\n      38,\n      48,\n      49,\n      60,\n      61,\n      62,\n      63,\n      64,\n      71,\n      72,\n      73,\n      74,\n      75,\n      85,\n      86,\n      87,\n      88,\n      89\n    ].forEach(function(n) {\n      if (!tma[n])\n        return;\n      var ref2 = parse_TSP_Reference(tma[n][0].data);\n      delete tma[n];\n      numbers_del_oref(tmaroot, ref2);\n    });\n    var store = parse_shallow(tma[4][0].data);\n    {\n      [2, 4, 5, 6, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22].forEach(function(n) {\n        var _a2;\n        if (!((_a2 = store[n]) == null ? void 0 : _a2[0]))\n          return;\n        var oldref = parse_TSP_Reference(store[n][0].data);\n        var newref = get_unique_msgid({ deps: [tmaref], location: deps[oldref].location, type: deps[oldref].type }, deps);\n        numbers_del_oref(tmaroot, oldref);\n        numbers_add_oref(tmaroot, newref);\n        remap[oldref] = newref;\n        var msg = numbers_iwa_find(cfb, deps, oldref);\n        msg.id = newref;\n        if (deps[oldref].location == deps[tmaref].location)\n          arch.push(msg);\n        else {\n          deps[newref].location = deps[oldref].location.replace(oldref.toString(), newref.toString());\n          if (deps[newref].location == deps[oldref].location)\n            deps[newref].location = deps[newref].location.replace(/\\.iwa/, \"-\".concat(newref, \".iwa\"));\n          CFB.utils.cfb_add(cfb, deps[newref].location, compress_iwa_file(write_iwa_file([msg])));\n          var newloc = deps[newref].location;\n          newloc = newloc.replace(/^Root Entry\\//, \"\");\n          newloc = newloc.replace(/^Index\\//, \"\").replace(/\\.iwa$/, \"\");\n          numbers_iwa_doit(cfb, deps, 2, function(ai) {\n            var mlist = parse_shallow(ai.messages[0].data);\n            mlist[3].push({ type: 2, data: write_shallow([\n              [],\n              [{ type: 0, data: write_varint49(newref) }],\n              [{ type: 2, data: stru8(newloc.replace(/-.*$/, \"\")) }],\n              [{ type: 2, data: stru8(newloc) }],\n              [{ type: 2, data: new Uint8Array([2, 0, 0]) }],\n              [{ type: 2, data: new Uint8Array([2, 0, 0]) }],\n              [],\n              [],\n              [],\n              [],\n              [{ type: 0, data: write_varint49(0) }],\n              [],\n              [{ type: 0, data: write_varint49(0) }]\n            ]) });\n            mlist[1] = [{ type: 0, data: write_varint49(Math.max(newref + 1, varint_to_i32(mlist[1][0].data))) }];\n            var parentidx = mlist[3].findIndex(function(m) {\n              var _a3, _b2;\n              var mm = parse_shallow(m.data);\n              if ((_a3 = mm[3]) == null ? void 0 : _a3[0])\n                return u8str(mm[3][0].data) == loc;\n              if (((_b2 = mm[2]) == null ? void 0 : _b2[0]) && u8str(mm[2][0].data) == loc)\n                return true;\n              return false;\n            });\n            var parent = parse_shallow(mlist[3][parentidx].data);\n            if (!parent[6])\n              parent[6] = [];\n            parent[6].push({\n              type: 2,\n              data: write_shallow([\n                [],\n                [{ type: 0, data: write_varint49(newref) }]\n              ])\n            });\n            mlist[3][parentidx].data = write_shallow(parent);\n            ai.messages[0].data = write_shallow(mlist);\n          });\n        }\n        store[n][0].data = write_TSP_Reference(newref);\n      });\n      var row_headers = parse_shallow(store[1][0].data);\n      {\n        (_b = row_headers[2]) == null ? void 0 : _b.forEach(function(tspref) {\n          var oldref = parse_TSP_Reference(tspref.data);\n          var newref = get_unique_msgid({ deps: [tmaref], location: deps[oldref].location, type: deps[oldref].type }, deps);\n          numbers_del_oref(tmaroot, oldref);\n          numbers_add_oref(tmaroot, newref);\n          remap[oldref] = newref;\n          var msg = numbers_iwa_find(cfb, deps, oldref);\n          msg.id = newref;\n          if (deps[oldref].location == deps[tmaref].location) {\n            arch.push(msg);\n          } else {\n            deps[newref].location = deps[oldref].location.replace(oldref.toString(), newref.toString());\n            if (deps[newref].location == deps[oldref].location)\n              deps[newref].location = deps[newref].location.replace(/\\.iwa/, \"-\".concat(newref, \".iwa\"));\n            CFB.utils.cfb_add(cfb, deps[newref].location, compress_iwa_file(write_iwa_file([msg])));\n            var newloc = deps[newref].location;\n            newloc = newloc.replace(/^Root Entry\\//, \"\");\n            newloc = newloc.replace(/^Index\\//, \"\").replace(/\\.iwa$/, \"\");\n            numbers_iwa_doit(cfb, deps, 2, function(ai) {\n              var mlist = parse_shallow(ai.messages[0].data);\n              mlist[3].push({ type: 2, data: write_shallow([\n                [],\n                [{ type: 0, data: write_varint49(newref) }],\n                [{ type: 2, data: stru8(newloc.replace(/-.*$/, \"\")) }],\n                [{ type: 2, data: stru8(newloc) }],\n                [{ type: 2, data: new Uint8Array([2, 0, 0]) }],\n                [{ type: 2, data: new Uint8Array([2, 0, 0]) }],\n                [],\n                [],\n                [],\n                [],\n                [{ type: 0, data: write_varint49(0) }],\n                [],\n                [{ type: 0, data: write_varint49(0) }]\n              ]) });\n              mlist[1] = [{ type: 0, data: write_varint49(Math.max(newref + 1, varint_to_i32(mlist[1][0].data))) }];\n              var parentidx = mlist[3].findIndex(function(m) {\n                var _a2, _b2;\n                var mm = parse_shallow(m.data);\n                if ((_a2 = mm[3]) == null ? void 0 : _a2[0])\n                  return u8str(mm[3][0].data) == loc;\n                if (((_b2 = mm[2]) == null ? void 0 : _b2[0]) && u8str(mm[2][0].data) == loc)\n                  return true;\n                return false;\n              });\n              var parent = parse_shallow(mlist[3][parentidx].data);\n              if (!parent[6])\n                parent[6] = [];\n              parent[6].push({\n                type: 2,\n                data: write_shallow([\n                  [],\n                  [{ type: 0, data: write_varint49(newref) }]\n                ])\n              });\n              mlist[3][parentidx].data = write_shallow(parent);\n              ai.messages[0].data = write_shallow(mlist);\n            });\n          }\n          tspref.data = write_TSP_Reference(newref);\n        });\n      }\n      store[1][0].data = write_shallow(row_headers);\n      var tiles = parse_shallow(store[3][0].data);\n      {\n        tiles[1].forEach(function(t) {\n          var tst = parse_shallow(t.data);\n          var oldtileref = parse_TSP_Reference(tst[2][0].data);\n          var newtileref = remap[oldtileref];\n          if (!remap[oldtileref]) {\n            newtileref = get_unique_msgid({ deps: [tmaref], location: \"\", type: deps[oldtileref].type }, deps);\n            deps[newtileref].location = \"Root Entry/Index/Tables/Tile-\".concat(newtileref, \".iwa\");\n            remap[oldtileref] = newtileref;\n            var oldtile = numbers_iwa_find(cfb, deps, oldtileref);\n            oldtile.id = newtileref;\n            numbers_del_oref(tmaroot, oldtileref);\n            numbers_add_oref(tmaroot, newtileref);\n            CFB.utils.cfb_add(cfb, \"/Index/Tables/Tile-\".concat(newtileref, \".iwa\"), compress_iwa_file(write_iwa_file([oldtile])));\n            numbers_iwa_doit(cfb, deps, 2, function(ai) {\n              var mlist = parse_shallow(ai.messages[0].data);\n              mlist[3].push({ type: 2, data: write_shallow([\n                [],\n                [{ type: 0, data: write_varint49(newtileref) }],\n                [{ type: 2, data: stru8(\"Tables/Tile\") }],\n                [{ type: 2, data: stru8(\"Tables/Tile-\".concat(newtileref)) }],\n                [{ type: 2, data: new Uint8Array([2, 0, 0]) }],\n                [{ type: 2, data: new Uint8Array([2, 0, 0]) }],\n                [],\n                [],\n                [],\n                [],\n                [{ type: 0, data: write_varint49(0) }],\n                [],\n                [{ type: 0, data: write_varint49(0) }]\n              ]) });\n              mlist[1] = [{ type: 0, data: write_varint49(Math.max(newtileref + 1, varint_to_i32(mlist[1][0].data))) }];\n              var parentidx = mlist[3].findIndex(function(m) {\n                var _a2, _b2;\n                var mm = parse_shallow(m.data);\n                if ((_a2 = mm[3]) == null ? void 0 : _a2[0])\n                  return u8str(mm[3][0].data) == loc;\n                if (((_b2 = mm[2]) == null ? void 0 : _b2[0]) && u8str(mm[2][0].data) == loc)\n                  return true;\n                return false;\n              });\n              var parent = parse_shallow(mlist[3][parentidx].data);\n              if (!parent[6])\n                parent[6] = [];\n              parent[6].push({\n                type: 2,\n                data: write_shallow([\n                  [],\n                  [{ type: 0, data: write_varint49(newtileref) }]\n                ])\n              });\n              mlist[3][parentidx].data = write_shallow(parent);\n              ai.messages[0].data = write_shallow(mlist);\n            });\n          }\n          tst[2][0].data = write_TSP_Reference(newtileref);\n          t.data = write_shallow(tst);\n        });\n      }\n      store[3][0].data = write_shallow(tiles);\n    }\n    tma[4][0].data = write_shallow(store);\n    tmaroot.messages[0].data = write_shallow(tma);\n  });\n}\nfunction write_numbers_ws(cfb, deps, ws, wsname, sheetidx, rootref) {\n  var drawables = [];\n  numbers_iwa_doit(cfb, deps, rootref, function(docroot) {\n    var sheetref = parse_shallow(docroot.messages[0].data);\n    {\n      sheetref[1] = [{ type: 2, data: stru8(wsname) }];\n      drawables = mappa(sheetref[2], parse_TSP_Reference);\n    }\n    docroot.messages[0].data = write_shallow(sheetref);\n  });\n  var tia = numbers_iwa_find(cfb, deps, drawables[0]);\n  var tmaref = parse_TSP_Reference(parse_shallow(tia.messages[0].data)[2][0].data);\n  numbers_iwa_doit(cfb, deps, tmaref, function(docroot, x) {\n    return write_numbers_tma(cfb, deps, ws, docroot, x, tmaref);\n  });\n}\nvar USE_WIDE_ROWS = true;\nfunction write_numbers_tma(cfb, deps, ws, tmaroot, tmafile, tmaref) {\n  var range = decode_range(ws[\"!ref\"]);\n  range.s.r = range.s.c = 0;\n  var trunc = false;\n  if (range.e.c > 999) {\n    trunc = true;\n    range.e.c = 999;\n  }\n  if (range.e.r > 999999) {\n    trunc = true;\n    range.e.r = 999999;\n  }\n  if (trunc)\n    console.error(\"Truncating to \".concat(encode_range(range)));\n  var data = sheet_to_json(ws, { range: range, header: 1 });\n  var SST = [\"~Sh33tJ5~\"];\n  var loc = deps[tmaref].location;\n  loc = loc.replace(/^Root Entry\\//, \"\");\n  loc = loc.replace(/^Index\\//, \"\").replace(/\\.iwa$/, \"\");\n  var pb = parse_shallow(tmaroot.messages[0].data);\n  {\n    pb[6][0].data = write_varint49(range.e.r + 1);\n    pb[7][0].data = write_varint49(range.e.c + 1);\n    delete pb[46];\n    var store = parse_shallow(pb[4][0].data);\n    {\n      var row_header_ref = parse_TSP_Reference(parse_shallow(store[1][0].data)[2][0].data);\n      numbers_iwa_doit(cfb, deps, row_header_ref, function(rowhead, _x) {\n        var _a;\n        var base_bucket = parse_shallow(rowhead.messages[0].data);\n        if ((_a = base_bucket == null ? void 0 : base_bucket[2]) == null ? void 0 : _a[0])\n          for (var R2 = 0; R2 < data.length; ++R2) {\n            var _bucket = parse_shallow(base_bucket[2][0].data);\n            _bucket[1][0].data = write_varint49(R2);\n            _bucket[4][0].data = write_varint49(data[R2].length);\n            base_bucket[2][R2] = { type: base_bucket[2][0].type, data: write_shallow(_bucket) };\n          }\n        rowhead.messages[0].data = write_shallow(base_bucket);\n      });\n      var col_header_ref = parse_TSP_Reference(store[2][0].data);\n      numbers_iwa_doit(cfb, deps, col_header_ref, function(colhead, _x) {\n        var base_bucket = parse_shallow(colhead.messages[0].data);\n        for (var C = 0; C <= range.e.c; ++C) {\n          var _bucket = parse_shallow(base_bucket[2][0].data);\n          _bucket[1][0].data = write_varint49(C);\n          _bucket[4][0].data = write_varint49(range.e.r + 1);\n          base_bucket[2][C] = { type: base_bucket[2][0].type, data: write_shallow(_bucket) };\n        }\n        colhead.messages[0].data = write_shallow(base_bucket);\n      });\n      var rbtree = parse_shallow(store[9][0].data);\n      rbtree[1] = [];\n      var tilestore = parse_shallow(store[3][0].data);\n      {\n        var tstride = 256;\n        tilestore[2] = [{ type: 0, data: write_varint49(tstride) }];\n        var tileref = parse_TSP_Reference(parse_shallow(tilestore[1][0].data)[2][0].data);\n        var save_token = function() {\n          var metadata = numbers_iwa_find(cfb, deps, 2);\n          var mlist = parse_shallow(metadata.messages[0].data);\n          var mlst = mlist[3].filter(function(m) {\n            return varint_to_i32(parse_shallow(m.data)[1][0].data) == tileref;\n          });\n          return (mlst == null ? void 0 : mlst.length) ? varint_to_i32(parse_shallow(mlst[0].data)[12][0].data) : 0;\n        }();\n        {\n          CFB.utils.cfb_del(cfb, deps[tileref].location);\n          numbers_iwa_doit(cfb, deps, 2, function(ai) {\n            var mlist = parse_shallow(ai.messages[0].data);\n            mlist[3] = mlist[3].filter(function(m) {\n              return varint_to_i32(parse_shallow(m.data)[1][0].data) != tileref;\n            });\n            var parentidx = mlist[3].findIndex(function(m) {\n              var _a, _b;\n              var mm = parse_shallow(m.data);\n              if ((_a = mm[3]) == null ? void 0 : _a[0])\n                return u8str(mm[3][0].data) == loc;\n              if (((_b = mm[2]) == null ? void 0 : _b[0]) && u8str(mm[2][0].data) == loc)\n                return true;\n              return false;\n            });\n            var parent = parse_shallow(mlist[3][parentidx].data);\n            if (!parent[6])\n              parent[6] = [];\n            parent[6] = parent[6].filter(function(m) {\n              return varint_to_i32(parse_shallow(m.data)[1][0].data) != tileref;\n            });\n            mlist[3][parentidx].data = write_shallow(parent);\n            ai.messages[0].data = write_shallow(mlist);\n          });\n          numbers_del_oref(tmaroot, tileref);\n        }\n        tilestore[1] = [];\n        var ntiles = Math.ceil((range.e.r + 1) / tstride);\n        for (var tidx = 0; tidx < ntiles; ++tidx) {\n          var newtileid = get_unique_msgid({\n            deps: [],\n            location: \"\",\n            type: 6002\n          }, deps);\n          deps[newtileid].location = \"Root Entry/Index/Tables/Tile-\".concat(newtileid, \".iwa\");\n          var tiledata = [\n            [],\n            [{ type: 0, data: write_varint49(0) }],\n            [{ type: 0, data: write_varint49(Math.min(range.e.r + 1, (tidx + 1) * tstride)) }],\n            [{ type: 0, data: write_varint49(0) }],\n            [{ type: 0, data: write_varint49(Math.min((tidx + 1) * tstride, range.e.r + 1) - tidx * tstride) }],\n            [],\n            [{ type: 0, data: write_varint49(5) }],\n            [{ type: 0, data: write_varint49(1) }],\n            [{ type: 0, data: write_varint49(USE_WIDE_ROWS ? 1 : 0) }]\n          ];\n          for (var R = tidx * tstride; R <= Math.min(range.e.r, (tidx + 1) * tstride - 1); ++R) {\n            var tilerow = write_TST_TileRowInfo(data[R], SST, USE_WIDE_ROWS);\n            tilerow[1][0].data = write_varint49(R - tidx * tstride);\n            tiledata[5].push({ data: write_shallow(tilerow), type: 2 });\n          }\n          tilestore[1].push({ type: 2, data: write_shallow([\n            [],\n            [{ type: 0, data: write_varint49(tidx) }],\n            [{ type: 2, data: write_TSP_Reference(newtileid) }]\n          ]) });\n          var newtile = {\n            id: newtileid,\n            messages: [write_iwam(6002, write_shallow(tiledata))]\n          };\n          var tilecontent = compress_iwa_file(write_iwa_file([newtile]));\n          CFB.utils.cfb_add(cfb, \"/Index/Tables/Tile-\".concat(newtileid, \".iwa\"), tilecontent);\n          numbers_iwa_doit(cfb, deps, 2, function(ai) {\n            var mlist = parse_shallow(ai.messages[0].data);\n            mlist[3].push({ type: 2, data: write_shallow([\n              [],\n              [{ type: 0, data: write_varint49(newtileid) }],\n              [{ type: 2, data: stru8(\"Tables/Tile\") }],\n              [{ type: 2, data: stru8(\"Tables/Tile-\".concat(newtileid)) }],\n              [{ type: 2, data: new Uint8Array([2, 0, 0]) }],\n              [{ type: 2, data: new Uint8Array([2, 0, 0]) }],\n              [],\n              [],\n              [],\n              [],\n              [{ type: 0, data: write_varint49(0) }],\n              [],\n              [{ type: 0, data: write_varint49(save_token) }]\n            ]) });\n            mlist[1] = [{ type: 0, data: write_varint49(Math.max(newtileid + 1, varint_to_i32(mlist[1][0].data))) }];\n            var parentidx = mlist[3].findIndex(function(m) {\n              var _a, _b;\n              var mm = parse_shallow(m.data);\n              if ((_a = mm[3]) == null ? void 0 : _a[0])\n                return u8str(mm[3][0].data) == loc;\n              if (((_b = mm[2]) == null ? void 0 : _b[0]) && u8str(mm[2][0].data) == loc)\n                return true;\n              return false;\n            });\n            var parent = parse_shallow(mlist[3][parentidx].data);\n            if (!parent[6])\n              parent[6] = [];\n            parent[6].push({\n              type: 2,\n              data: write_shallow([\n                [],\n                [{ type: 0, data: write_varint49(newtileid) }]\n              ])\n            });\n            mlist[3][parentidx].data = write_shallow(parent);\n            ai.messages[0].data = write_shallow(mlist);\n          });\n          numbers_add_oref(tmaroot, newtileid);\n          rbtree[1].push({ type: 2, data: write_shallow([\n            [],\n            [{ type: 0, data: write_varint49(tidx * tstride) }],\n            [{ type: 0, data: write_varint49(tidx) }]\n          ]) });\n        }\n      }\n      store[3][0].data = write_shallow(tilestore);\n      store[9][0].data = write_shallow(rbtree);\n      store[10] = [{ type: 2, data: new Uint8Array([]) }];\n      if (ws[\"!merges\"]) {\n        var mergeid = get_unique_msgid({\n          type: 6144,\n          deps: [tmaref],\n          location: deps[tmaref].location\n        }, deps);\n        tmafile.push({\n          id: mergeid,\n          messages: [write_iwam(6144, write_shallow([\n            [],\n            ws[\"!merges\"].map(function(m) {\n              return { type: 2, data: write_shallow([\n                [],\n                [{ type: 2, data: write_shallow([\n                  [],\n                  [{ type: 5, data: new Uint8Array(new Uint16Array([m.s.r, m.s.c]).buffer) }]\n                ]) }],\n                [{ type: 2, data: write_shallow([\n                  [],\n                  [{ type: 5, data: new Uint8Array(new Uint16Array([m.e.r - m.s.r + 1, m.e.c - m.s.c + 1]).buffer) }]\n                ]) }]\n              ]) };\n            })\n          ]))]\n        });\n        store[13] = [{ type: 2, data: write_TSP_Reference(mergeid) }];\n        numbers_iwa_doit(cfb, deps, 2, function(ai) {\n          var mlist = parse_shallow(ai.messages[0].data);\n          var parentidx = mlist[3].findIndex(function(m) {\n            var _a, _b;\n            var mm = parse_shallow(m.data);\n            if ((_a = mm[3]) == null ? void 0 : _a[0])\n              return u8str(mm[3][0].data) == loc;\n            if (((_b = mm[2]) == null ? void 0 : _b[0]) && u8str(mm[2][0].data) == loc)\n              return true;\n            return false;\n          });\n          var parent = parse_shallow(mlist[3][parentidx].data);\n          if (!parent[6])\n            parent[6] = [];\n          parent[6].push({\n            type: 2,\n            data: write_shallow([\n              [],\n              [{ type: 0, data: write_varint49(mergeid) }]\n            ])\n          });\n          mlist[3][parentidx].data = write_shallow(parent);\n          ai.messages[0].data = write_shallow(mlist);\n        });\n        numbers_add_oref(tmaroot, mergeid);\n      } else\n        delete store[13];\n      var sstref = parse_TSP_Reference(store[4][0].data);\n      numbers_iwa_doit(cfb, deps, sstref, function(sstroot) {\n        var sstdata = parse_shallow(sstroot.messages[0].data);\n        {\n          sstdata[3] = [];\n          SST.forEach(function(str, i) {\n            if (i == 0)\n              return;\n            sstdata[3].push({ type: 2, data: write_shallow([\n              [],\n              [{ type: 0, data: write_varint49(i) }],\n              [{ type: 0, data: write_varint49(1) }],\n              [{ type: 2, data: stru8(str) }]\n            ]) });\n          });\n        }\n        sstroot.messages[0].data = write_shallow(sstdata);\n      });\n    }\n    pb[4][0].data = write_shallow(store);\n  }\n  tmaroot.messages[0].data = write_shallow(pb);\n}\nfunction fix_opts_func(defaults/*:Array<Array<any> >*/)/*:{(o:any):void}*/ {\n\treturn function fix_opts(opts) {\n\t\tfor(var i = 0; i != defaults.length; ++i) {\n\t\t\tvar d = defaults[i];\n\t\t\tif(opts[d[0]] === undefined) opts[d[0]] = d[1];\n\t\t\tif(d[2] === 'n') opts[d[0]] = Number(opts[d[0]]);\n\t\t}\n\t};\n}\n\nfunction fix_read_opts(opts) {\nfix_opts_func([\n\t['cellNF', false], /* emit cell number format string as .z */\n\t['cellHTML', true], /* emit html string as .h */\n\t['cellFormula', true], /* emit formulae as .f */\n\t['cellStyles', false], /* emits style/theme as .s */\n\t['cellText', true], /* emit formatted text as .w */\n\t['cellDates', false], /* emit date cells with type `d` */\n\n\t['sheetStubs', false], /* emit empty cells */\n\t['sheetRows', 0, 'n'], /* read n rows (0 = read all rows) */\n\n\t['bookDeps', false], /* parse calculation chains */\n\t['bookSheets', false], /* only try to get sheet names (no Sheets) */\n\t['bookProps', false], /* only try to get properties (no Sheets) */\n\t['bookFiles', false], /* include raw file structure (keys, files, cfb) */\n\t['bookVBA', false], /* include vba raw data (vbaraw) */\n\n\t['password',''], /* password */\n\t['WTF', false] /* WTF mode (throws errors) */\n])(opts);\n}\n\nfunction fix_write_opts(opts) {\nfix_opts_func([\n\t['cellDates', false], /* write date cells with type `d` */\n\n\t['bookSST', false], /* Generate Shared String Table */\n\n\t['bookType', 'xlsx'], /* Type of workbook (xlsx/m/b) */\n\n\t['compression', false], /* Use file compression */\n\n\t['WTF', false] /* WTF mode (throws errors) */\n])(opts);\n}\nfunction get_sheet_type(n/*:string*/)/*:string*/ {\n\tif(RELS.WS.indexOf(n) > -1) return \"sheet\";\n\tif(RELS.CS && n == RELS.CS) return \"chart\";\n\tif(RELS.DS && n == RELS.DS) return \"dialog\";\n\tif(RELS.MS && n == RELS.MS) return \"macro\";\n\treturn (n && n.length) ? n : \"sheet\";\n}\nfunction safe_parse_wbrels(wbrels, sheets) {\n\tif(!wbrels) return 0;\n\ttry {\n\t\twbrels = sheets.map(function pwbr(w) { if(!w.id) w.id = w.strRelID; return [w.name, wbrels['!id'][w.id].Target, get_sheet_type(wbrels['!id'][w.id].Type)]; });\n\t} catch(e) { return null; }\n\treturn !wbrels || wbrels.length === 0 ? null : wbrels;\n}\n\nfunction safe_parse_sheet(zip, path/*:string*/, relsPath/*:string*/, sheet, idx/*:number*/, sheetRels, sheets, stype/*:string*/, opts, wb, themes, styles) {\n\ttry {\n\t\tsheetRels[sheet]=parse_rels(getzipstr(zip, relsPath, true), path);\n\t\tvar data = getzipdata(zip, path);\n\t\tvar _ws;\n\t\tswitch(stype) {\n\t\t\tcase 'sheet':  _ws = parse_ws(data, path, idx, opts, sheetRels[sheet], wb, themes, styles); break;\n\t\t\tcase 'chart':  _ws = parse_cs(data, path, idx, opts, sheetRels[sheet], wb, themes, styles);\n\t\t\t\tif(!_ws || !_ws['!drawel']) break;\n\t\t\t\tvar dfile = resolve_path(_ws['!drawel'].Target, path);\n\t\t\t\tvar drelsp = get_rels_path(dfile);\n\t\t\t\tvar draw = parse_drawing(getzipstr(zip, dfile, true), parse_rels(getzipstr(zip, drelsp, true), dfile));\n\t\t\t\tvar chartp = resolve_path(draw, dfile);\n\t\t\t\tvar crelsp = get_rels_path(chartp);\n\t\t\t\t_ws = parse_chart(getzipstr(zip, chartp, true), chartp, opts, parse_rels(getzipstr(zip, crelsp, true), chartp), wb, _ws);\n\t\t\t\tbreak;\n\t\t\tcase 'macro':  _ws = parse_ms(data, path, idx, opts, sheetRels[sheet], wb, themes, styles); break;\n\t\t\tcase 'dialog': _ws = parse_ds(data, path, idx, opts, sheetRels[sheet], wb, themes, styles); break;\n\t\t\tdefault: throw new Error(\"Unrecognized sheet type \" + stype);\n\t\t}\n\t\tsheets[sheet] = _ws;\n\n\t\t/* scan rels for comments and threaded comments */\n\t\tvar comments = [], tcomments = [];\n\t\tif(sheetRels && sheetRels[sheet]) keys(sheetRels[sheet]).forEach(function(n) {\n\t\t\tvar dfile = \"\";\n\t\t\tif(sheetRels[sheet][n].Type == RELS.CMNT) {\n\t\t\t\tdfile = resolve_path(sheetRels[sheet][n].Target, path);\n\t\t\t\tcomments = parse_cmnt(getzipdata(zip, dfile, true), dfile, opts);\n\t\t\t\tif(!comments || !comments.length) return;\n\t\t\t\tsheet_insert_comments(_ws, comments, false);\n\t\t\t}\n\t\t\tif(sheetRels[sheet][n].Type == RELS.TCMNT) {\n\t\t\t\tdfile = resolve_path(sheetRels[sheet][n].Target, path);\n\t\t\t\ttcomments = tcomments.concat(parse_tcmnt_xml(getzipdata(zip, dfile, true), opts));\n\t\t\t}\n\t\t});\n\t\tif(tcomments && tcomments.length) sheet_insert_comments(_ws, tcomments, true, opts.people || []);\n\t} catch(e) { if(opts.WTF) throw e; }\n}\n\nfunction strip_front_slash(x/*:string*/)/*:string*/ { return x.charAt(0) == '/' ? x.slice(1) : x; }\n\nfunction parse_zip(zip/*:ZIP*/, opts/*:?ParseOpts*/)/*:Workbook*/ {\n\tmake_ssf();\n\topts = opts || {};\n\tfix_read_opts(opts);\n\n\t/* OpenDocument Part 3 Section 2.2.1 OpenDocument Package */\n\tif(safegetzipfile(zip, 'META-INF/manifest.xml')) return parse_ods(zip, opts);\n\t/* UOC */\n\tif(safegetzipfile(zip, 'objectdata.xml')) return parse_ods(zip, opts);\n\t/* Numbers */\n\tif(safegetzipfile(zip, 'Index/Document.iwa')) {\n\t\tif(typeof Uint8Array == \"undefined\") throw new Error('NUMBERS file parsing requires Uint8Array support');\n\t\tif(typeof parse_numbers_iwa != \"undefined\") {\n\t\t\tif(zip.FileIndex) return parse_numbers_iwa(zip, opts);\n\t\t\tvar _zip = CFB.utils.cfb_new();\n\t\t\tzipentries(zip).forEach(function(e) { zip_add_file(_zip, e, getzipbin(zip, e)); });\n\t\t\treturn parse_numbers_iwa(_zip, opts);\n\t\t}\n\t\tthrow new Error('Unsupported NUMBERS file');\n\t}\n\tif(!safegetzipfile(zip, '[Content_Types].xml')) {\n\t\tif(safegetzipfile(zip, 'index.xml.gz')) throw new Error('Unsupported NUMBERS 08 file');\n\t\tif(safegetzipfile(zip, 'index.xml')) throw new Error('Unsupported NUMBERS 09 file');\n\t\tvar index_zip = CFB.find(zip, 'Index.zip');\n\t\tif(index_zip) {\n\t\t\topts = dup(opts);\n\t\t\tdelete opts.type;\n\t\t\tif(typeof index_zip.content == \"string\") opts.type = \"binary\";\n\t\t\t// TODO: Bun buffer bug\n\t\t\tif(typeof Bun !== \"undefined\" && Buffer.isBuffer(index_zip.content)) return readSync(new Uint8Array(index_zip.content), opts);\n\t\t\treturn readSync(index_zip.content, opts);\n\t\t}\n\t\tthrow new Error('Unsupported ZIP file');\n\t}\n\n\tvar entries = zipentries(zip);\n\tvar dir = parse_ct((getzipstr(zip, '[Content_Types].xml')/*:?any*/));\n\tvar xlsb = false;\n\tvar sheets, binname;\n\tif(dir.workbooks.length === 0) {\n\t\tbinname = \"xl/workbook.xml\";\n\t\tif(getzipdata(zip,binname, true)) dir.workbooks.push(binname);\n\t}\n\tif(dir.workbooks.length === 0) {\n\t\tbinname = \"xl/workbook.bin\";\n\t\tif(!getzipdata(zip,binname,true)) throw new Error(\"Could not find workbook\");\n\t\tdir.workbooks.push(binname);\n\t\txlsb = true;\n\t}\n\tif(dir.workbooks[0].slice(-3) == \"bin\") xlsb = true;\n\n\tvar themes = ({}/*:any*/);\n\tvar styles = ({}/*:any*/);\n\tif(!opts.bookSheets && !opts.bookProps) {\n\t\tstrs = [];\n\t\tif(dir.sst) try { strs=parse_sst(getzipdata(zip, strip_front_slash(dir.sst)), dir.sst, opts); } catch(e) { if(opts.WTF) throw e; }\n\n\t\tif(opts.cellStyles && dir.themes.length) themes = parse_theme_xml(getzipstr(zip, dir.themes[0].replace(/^\\//,''), true)||\"\", opts);\n\n\t\tif(dir.style) styles = parse_sty(getzipdata(zip, strip_front_slash(dir.style)), dir.style, themes, opts);\n\t}\n\n\t/*var externbooks = */dir.links.map(function(link) {\n\t\ttry {\n\t\t\tvar rels = parse_rels(getzipstr(zip, get_rels_path(strip_front_slash(link))), link);\n\t\t\treturn parse_xlink(getzipdata(zip, strip_front_slash(link)), rels, link, opts);\n\t\t} catch(e) {}\n\t});\n\n\tvar wb = parse_wb(getzipdata(zip, strip_front_slash(dir.workbooks[0])), dir.workbooks[0], opts);\n\n\tvar props = {}, propdata = \"\";\n\n\tif(dir.coreprops.length) {\n\t\tpropdata = getzipdata(zip, strip_front_slash(dir.coreprops[0]), true);\n\t\tif(propdata) props = parse_core_props(propdata);\n\t\tif(dir.extprops.length !== 0) {\n\t\t\tpropdata = getzipdata(zip, strip_front_slash(dir.extprops[0]), true);\n\t\t\tif(propdata) parse_ext_props(propdata, props, opts);\n\t\t}\n\t}\n\n\tvar custprops = {};\n\tif(!opts.bookSheets || opts.bookProps) {\n\t\tif (dir.custprops.length !== 0) {\n\t\t\tpropdata = getzipstr(zip, strip_front_slash(dir.custprops[0]), true);\n\t\t\tif(propdata) custprops = parse_cust_props(propdata, opts);\n\t\t}\n\t}\n\n\tvar out = ({}/*:any*/);\n\tif(opts.bookSheets || opts.bookProps) {\n\t\tif(wb.Sheets) sheets = wb.Sheets.map(function pluck(x){ return x.name; });\n\t\telse if(props.Worksheets && props.SheetNames.length > 0) sheets=props.SheetNames;\n\t\tif(opts.bookProps) { out.Props = props; out.Custprops = custprops; }\n\t\tif(opts.bookSheets && typeof sheets !== 'undefined') out.SheetNames = sheets;\n\t\tif(opts.bookSheets ? out.SheetNames : opts.bookProps) return out;\n\t}\n\tsheets = {};\n\n\tvar deps = {};\n\tif(opts.bookDeps && dir.calcchain) deps=parse_cc(getzipdata(zip, strip_front_slash(dir.calcchain)),dir.calcchain,opts);\n\n\tvar i=0;\n\tvar sheetRels = ({}/*:any*/);\n\tvar path, relsPath;\n\n\t{\n\t\tvar wbsheets = wb.Sheets;\n\t\tprops.Worksheets = wbsheets.length;\n\t\tprops.SheetNames = [];\n\t\tfor(var j = 0; j != wbsheets.length; ++j) {\n\t\t\tprops.SheetNames[j] = wbsheets[j].name;\n\t\t}\n\t}\n\n\tvar wbext = xlsb ? \"bin\" : \"xml\";\n\tvar wbrelsi = dir.workbooks[0].lastIndexOf(\"/\");\n\tvar wbrelsfile = (dir.workbooks[0].slice(0, wbrelsi+1) + \"_rels/\" + dir.workbooks[0].slice(wbrelsi+1) + \".rels\").replace(/^\\//,\"\");\n\tif(!safegetzipfile(zip, wbrelsfile)) wbrelsfile = 'xl/_rels/workbook.' + wbext + '.rels';\n\tvar wbrels = parse_rels(getzipstr(zip, wbrelsfile, true), wbrelsfile.replace(/_rels.*/, \"s5s\"));\n\n\tif((dir.metadata || []).length >= 1) {\n\t\t/* TODO: MDX and other types of metadata */\n\t\topts.xlmeta = parse_xlmeta(getzipdata(zip, strip_front_slash(dir.metadata[0])),dir.metadata[0],opts);\n\t}\n\n\tif((dir.people || []).length >= 1) {\n\t\topts.people = parse_people_xml(getzipdata(zip, strip_front_slash(dir.people[0])),opts);\n\t}\n\n\tif(wbrels) wbrels = safe_parse_wbrels(wbrels, wb.Sheets);\n\n\t/* Numbers iOS hack */\n\tvar nmode = (getzipdata(zip,\"xl/worksheets/sheet.xml\",true))?1:0;\n\twsloop: for(i = 0; i != props.Worksheets; ++i) {\n\t\tvar stype = \"sheet\";\n\t\tif(wbrels && wbrels[i]) {\n\t\t\tpath = 'xl/' + (wbrels[i][1]).replace(/[\\/]?xl\\//, \"\");\n\t\t\tif(!safegetzipfile(zip, path)) path = wbrels[i][1];\n\t\t\tif(!safegetzipfile(zip, path)) path = wbrelsfile.replace(/_rels\\/.*$/,\"\") + wbrels[i][1];\n\t\t\tstype = wbrels[i][2];\n\t\t} else {\n\t\t\tpath = 'xl/worksheets/sheet'+(i+1-nmode)+\".\" + wbext;\n\t\t\tpath = path.replace(/sheet0\\./,\"sheet.\");\n\t\t}\n\t\trelsPath = path.replace(/^(.*)(\\/)([^\\/]*)$/, \"$1/_rels/$3.rels\");\n\t\tif(opts && opts.sheets != null) switch(typeof opts.sheets) {\n\t\t\tcase \"number\": if(i != opts.sheets) continue wsloop; break;\n\t\t\tcase \"string\": if(props.SheetNames[i].toLowerCase() != opts.sheets.toLowerCase()) continue wsloop; break;\n\t\t\tdefault: if(Array.isArray && Array.isArray(opts.sheets)) {\n\t\t\t\tvar snjseen = false;\n\t\t\t\tfor(var snj = 0; snj != opts.sheets.length; ++snj) {\n\t\t\t\t\tif(typeof opts.sheets[snj] == \"number\" && opts.sheets[snj] == i) snjseen=1;\n\t\t\t\t\tif(typeof opts.sheets[snj] == \"string\" && opts.sheets[snj].toLowerCase() == props.SheetNames[i].toLowerCase()) snjseen = 1;\n\t\t\t\t}\n\t\t\t\tif(!snjseen) continue wsloop;\n\t\t\t}\n\t\t}\n\t\tsafe_parse_sheet(zip, path, relsPath, props.SheetNames[i], i, sheetRels, sheets, stype, opts, wb, themes, styles);\n\t}\n\n\tout = ({\n\t\tDirectory: dir,\n\t\tWorkbook: wb,\n\t\tProps: props,\n\t\tCustprops: custprops,\n\t\tDeps: deps,\n\t\tSheets: sheets,\n\t\tSheetNames: props.SheetNames,\n\t\tStrings: strs,\n\t\tStyles: styles,\n\t\tThemes: themes,\n\t\tSSF: dup(table_fmt)\n\t}/*:any*/);\n\tif(opts && opts.bookFiles) {\n\t\tif(zip.files) {\n\t\t\tout.keys = entries;\n\t\t\tout.files = zip.files;\n\t\t} else {\n\t\t\tout.keys = [];\n\t\t\tout.files = {};\n\t\t\tzip.FullPaths.forEach(function(p, idx) {\n\t\t\t\tp = p.replace(/^Root Entry[\\/]/, \"\");\n\t\t\t\tout.keys.push(p);\n\t\t\t\tout.files[p] = zip.FileIndex[idx];\n\t\t\t});\n\t\t}\n\t}\n\tif(opts && opts.bookVBA) {\n\t\tif(dir.vba.length > 0) out.vbaraw = getzipdata(zip,strip_front_slash(dir.vba[0]),true);\n\t\telse if(dir.defaults && dir.defaults.bin === CT_VBA) out.vbaraw = getzipdata(zip, 'xl/vbaProject.bin',true);\n\t}\n\t// TODO: pass back content types metdata for xlsm/xlsx resolution\n\tout.bookType = xlsb ? \"xlsb\" : \"xlsx\";\n\treturn out;\n}\n\n/* [MS-OFFCRYPTO] 2.1.1 */\nfunction parse_xlsxcfb(cfb, _opts/*:?ParseOpts*/)/*:Workbook*/ {\n\tvar opts = _opts || {};\n\tvar f = 'Workbook', data = CFB.find(cfb, f);\n\ttry {\n\tf = '/!DataSpaces/Version';\n\tdata = CFB.find(cfb, f); if(!data || !data.content) throw new Error(\"ECMA-376 Encrypted file missing \" + f);\n\t/*var version = */parse_DataSpaceVersionInfo(data.content);\n\n\t/* 2.3.4.1 */\n\tf = '/!DataSpaces/DataSpaceMap';\n\tdata = CFB.find(cfb, f); if(!data || !data.content) throw new Error(\"ECMA-376 Encrypted file missing \" + f);\n\tvar dsm = parse_DataSpaceMap(data.content);\n\tif(dsm.length !== 1 || dsm[0].comps.length !== 1 || dsm[0].comps[0].t !== 0 || dsm[0].name !== \"StrongEncryptionDataSpace\" || dsm[0].comps[0].v !== \"EncryptedPackage\")\n\t\tthrow new Error(\"ECMA-376 Encrypted file bad \" + f);\n\n\t/* 2.3.4.2 */\n\tf = '/!DataSpaces/DataSpaceInfo/StrongEncryptionDataSpace';\n\tdata = CFB.find(cfb, f); if(!data || !data.content) throw new Error(\"ECMA-376 Encrypted file missing \" + f);\n\tvar seds = parse_DataSpaceDefinition(data.content);\n\tif(seds.length != 1 || seds[0] != \"StrongEncryptionTransform\")\n\t\tthrow new Error(\"ECMA-376 Encrypted file bad \" + f);\n\n\t/* 2.3.4.3 */\n\tf = '/!DataSpaces/TransformInfo/StrongEncryptionTransform/!Primary';\n\tdata = CFB.find(cfb, f); if(!data || !data.content) throw new Error(\"ECMA-376 Encrypted file missing \" + f);\n\t/*var hdr = */parse_Primary(data.content);\n\t} catch(e) {}\n\n\tf = '/EncryptionInfo';\n\tdata = CFB.find(cfb, f); if(!data || !data.content) throw new Error(\"ECMA-376 Encrypted file missing \" + f);\n\tvar einfo = parse_EncryptionInfo(data.content);\n\n\t/* 2.3.4.4 */\n\tf = '/EncryptedPackage';\n\tdata = CFB.find(cfb, f); if(!data || !data.content) throw new Error(\"ECMA-376 Encrypted file missing \" + f);\n\n/*global decrypt_agile */\n/*:: declare var decrypt_agile:any; */\n\tif(einfo[0] == 0x04 && typeof decrypt_agile !== 'undefined') return decrypt_agile(einfo[1], data.content, opts.password || \"\", opts);\n/*global decrypt_std76 */\n/*:: declare var decrypt_std76:any; */\n\tif(einfo[0] == 0x02 && typeof decrypt_std76 !== 'undefined') return decrypt_std76(einfo[1], data.content, opts.password || \"\", opts);\n\tthrow new Error(\"File is password-protected\");\n}\n\nfunction write_zip_xlsb(wb/*:Workbook*/, opts/*:WriteOpts*/)/*:ZIP*/ {\n\tif(wb && !wb.SSF) {\n\t\twb.SSF = dup(table_fmt);\n\t}\n\tif(wb && wb.SSF) {\n\t\tmake_ssf(); SSF_load_table(wb.SSF);\n\t\t// $FlowIgnore\n\t\topts.revssf = evert_num(wb.SSF); opts.revssf[wb.SSF[65535]] = 0;\n\t\topts.ssf = wb.SSF;\n\t}\n\topts.rels = {}; opts.wbrels = {};\n\topts.Strings = /*::((*/[]/*:: :any):SST)*/; opts.Strings.Count = 0; opts.Strings.Unique = 0;\n\tif(browser_has_Map) opts.revStrings = new Map();\n\telse { opts.revStrings = {}; opts.revStrings.foo = []; delete opts.revStrings.foo; }\n\tvar wbext = \"bin\";\n\tvar vbafmt = true;\n\tvar ct = new_ct();\n\tfix_write_opts(opts = opts || {});\n\tvar zip = zip_new();\n\tvar f = \"\", rId = 0;\n\n\topts.cellXfs = [];\n\tget_cell_style(opts.cellXfs, {}, {revssf:{\"General\":0}});\n\n\tif(!wb.Props) wb.Props = {};\n\n\tf = \"docProps/core.xml\";\n\tzip_add_file(zip, f, write_core_props(wb.Props, opts));\n\tct.coreprops.push(f);\n\tadd_rels(opts.rels, 2, f, RELS.CORE_PROPS);\n\n\t/*::if(!wb.Props) throw \"unreachable\"; */\n\tf = \"docProps/app.xml\";\n\tif(wb.Props && wb.Props.SheetNames){/* empty */}\n\telse if(!wb.Workbook || !wb.Workbook.Sheets) wb.Props.SheetNames = wb.SheetNames;\n\telse {\n\t\tvar _sn = [];\n\t\tfor(var _i = 0; _i < wb.SheetNames.length; ++_i)\n\t\t\tif((wb.Workbook.Sheets[_i]||{}).Hidden != 2) _sn.push(wb.SheetNames[_i]);\n\t\twb.Props.SheetNames = _sn;\n\t}\n\twb.Props.Worksheets = wb.Props.SheetNames.length;\n\tzip_add_file(zip, f, write_ext_props(wb.Props, opts));\n\tct.extprops.push(f);\n\tadd_rels(opts.rels, 3, f, RELS.EXT_PROPS);\n\n\tif(wb.Custprops !== wb.Props && keys(wb.Custprops||{}).length > 0) {\n\t\tf = \"docProps/custom.xml\";\n\t\tzip_add_file(zip, f, write_cust_props(wb.Custprops, opts));\n\t\tct.custprops.push(f);\n\t\tadd_rels(opts.rels, 4, f, RELS.CUST_PROPS);\n\t}\n\n\tfor(rId=1;rId <= wb.SheetNames.length; ++rId) {\n\t\tvar wsrels = {'!id':{}};\n\t\tvar ws = wb.Sheets[wb.SheetNames[rId-1]];\n\t\tvar _type = (ws || {})[\"!type\"] || \"sheet\";\n\t\tswitch(_type) {\n\t\tcase \"chart\":\n\t\t\t/* falls through */\n\t\tdefault:\n\t\t\tf = \"xl/worksheets/sheet\" + rId + \".\" + wbext;\n\t\t\tzip_add_file(zip, f, write_ws_bin(rId-1, opts, wb, wsrels));\n\t\t\tct.sheets.push(f);\n\t\t\tadd_rels(opts.wbrels, -1, \"worksheets/sheet\" + rId + \".\" + wbext, RELS.WS[0]);\n\t\t}\n\n\t\tif(ws) {\n\t\t\tvar comments = ws['!comments'];\n\t\t\tvar need_vml = false;\n\t\t\tvar cf = \"\";\n\t\t\tif(comments && comments.length > 0) {\n\t\t\t\tcf = \"xl/comments\" + rId + \".\" + wbext;\n\t\t\t\tzip_add_file(zip, cf, write_comments_bin(comments, opts));\n\t\t\t\tct.comments.push(cf);\n\t\t\t\tadd_rels(wsrels, -1, \"../comments\" + rId + \".\" + wbext, RELS.CMNT);\n\t\t\t\tneed_vml = true;\n\t\t\t}\n\t\t\tif(ws['!legacy']) {\n\t\t\t\tif(need_vml) zip_add_file(zip, \"xl/drawings/vmlDrawing\" + (rId) + \".vml\", write_vml(rId, ws['!comments']));\n\t\t\t}\n\t\t\tdelete ws['!comments'];\n\t\t\tdelete ws['!legacy'];\n\t\t}\n\n\t\tif(wsrels['!id'].rId1) zip_add_file(zip, get_rels_path(f), write_rels(wsrels));\n\t}\n\n\tif(opts.Strings != null && opts.Strings.length > 0) {\n\t\tf = \"xl/sharedStrings.\" + wbext;\n\t\tzip_add_file(zip, f, write_sst_bin(opts.Strings, opts));\n\t\tct.strs.push(f);\n\t\tadd_rels(opts.wbrels, -1, \"sharedStrings.\" + wbext, RELS.SST);\n\t}\n\n\tf = \"xl/workbook.\" + wbext;\n\tzip_add_file(zip, f, write_wb_bin(wb, opts));\n\tct.workbooks.push(f);\n\tadd_rels(opts.rels, 1, f, RELS.WB);\n\n\t/* TODO: something more intelligent with themes */\n\n\tf = \"xl/theme/theme1.xml\";\n\tvar ww = write_theme(wb.Themes, opts);\n\tzip_add_file(zip, f, ww);\n\tct.themes.push(f);\n\tadd_rels(opts.wbrels, -1, \"theme/theme1.xml\", RELS.THEME);\n\n\t/* TODO: something more intelligent with styles */\n\n\tf = \"xl/styles.\" + wbext;\n\tzip_add_file(zip, f, write_sty_bin(wb, opts));\n\tct.styles.push(f);\n\tadd_rels(opts.wbrels, -1, \"styles.\" + wbext, RELS.STY);\n\n\tif(wb.vbaraw && vbafmt) {\n\t\tf = \"xl/vbaProject.bin\";\n\t\tzip_add_file(zip, f, wb.vbaraw);\n\t\tct.vba.push(f);\n\t\tadd_rels(opts.wbrels, -1, \"vbaProject.bin\", RELS.VBA);\n\t}\n\n\tf = \"xl/metadata.\" + wbext;\n\tzip_add_file(zip, f, write_xlmeta_bin());\n\tct.metadata.push(f);\n\tadd_rels(opts.wbrels, -1, \"metadata.\" + wbext, RELS.XLMETA);\n\n\tzip_add_file(zip, \"[Content_Types].xml\", write_ct(ct, opts));\n\tzip_add_file(zip, '_rels/.rels', write_rels(opts.rels));\n\tzip_add_file(zip, 'xl/_rels/workbook.' + wbext + '.rels', write_rels(opts.wbrels));\n\n\tdelete opts.revssf; delete opts.ssf;\n\treturn zip;\n}\n\nfunction write_zip_xlsx(wb/*:Workbook*/, opts/*:WriteOpts*/)/*:ZIP*/ {\n\tif(wb && !wb.SSF) {\n\t\twb.SSF = dup(table_fmt);\n\t}\n\tif(wb && wb.SSF) {\n\t\tmake_ssf(); SSF_load_table(wb.SSF);\n\t\t// $FlowIgnore\n\t\topts.revssf = evert_num(wb.SSF); opts.revssf[wb.SSF[65535]] = 0;\n\t\topts.ssf = wb.SSF;\n\t}\n\topts.rels = {}; opts.wbrels = {};\n\topts.Strings = /*::((*/[]/*:: :any):SST)*/; opts.Strings.Count = 0; opts.Strings.Unique = 0;\n\tif(browser_has_Map) opts.revStrings = new Map();\n\telse { opts.revStrings = {}; opts.revStrings.foo = []; delete opts.revStrings.foo; }\n\tvar wbext = \"xml\";\n\tvar vbafmt = VBAFMTS.indexOf(opts.bookType) > -1;\n\tvar ct = new_ct();\n\tfix_write_opts(opts = opts || {});\n\tvar zip = zip_new();\n\tvar f = \"\", rId = 0;\n\n\topts.cellXfs = [];\n\tget_cell_style(opts.cellXfs, {}, {revssf:{\"General\":0}});\n\n\tif(!wb.Props) wb.Props = {};\n\n\tf = \"docProps/core.xml\";\n\tzip_add_file(zip, f, write_core_props(wb.Props, opts));\n\tct.coreprops.push(f);\n\tadd_rels(opts.rels, 2, f, RELS.CORE_PROPS);\n\n\t/*::if(!wb.Props) throw \"unreachable\"; */\n\tf = \"docProps/app.xml\";\n\tif(wb.Props && wb.Props.SheetNames){/* empty */}\n\telse if(!wb.Workbook || !wb.Workbook.Sheets) wb.Props.SheetNames = wb.SheetNames;\n\telse {\n\t\tvar _sn = [];\n\t\tfor(var _i = 0; _i < wb.SheetNames.length; ++_i)\n\t\t\tif((wb.Workbook.Sheets[_i]||{}).Hidden != 2) _sn.push(wb.SheetNames[_i]);\n\t\twb.Props.SheetNames = _sn;\n\t}\n\twb.Props.Worksheets = wb.Props.SheetNames.length;\n\tzip_add_file(zip, f, write_ext_props(wb.Props, opts));\n\tct.extprops.push(f);\n\tadd_rels(opts.rels, 3, f, RELS.EXT_PROPS);\n\n\tif(wb.Custprops !== wb.Props && keys(wb.Custprops||{}).length > 0) {\n\t\tf = \"docProps/custom.xml\";\n\t\tzip_add_file(zip, f, write_cust_props(wb.Custprops, opts));\n\t\tct.custprops.push(f);\n\t\tadd_rels(opts.rels, 4, f, RELS.CUST_PROPS);\n\t}\n\n\tvar people = [\"SheetJ5\"];\n\topts.tcid = 0;\n\n\tfor(rId=1;rId <= wb.SheetNames.length; ++rId) {\n\t\tvar wsrels = {'!id':{}};\n\t\tvar ws = wb.Sheets[wb.SheetNames[rId-1]];\n\t\tvar _type = (ws || {})[\"!type\"] || \"sheet\";\n\t\tswitch(_type) {\n\t\tcase \"chart\":\n\t\t\t/* falls through */\n\t\tdefault:\n\t\t\tf = \"xl/worksheets/sheet\" + rId + \".\" + wbext;\n\t\t\tzip_add_file(zip, f, write_ws_xml(rId-1, opts, wb, wsrels));\n\t\t\tct.sheets.push(f);\n\t\t\tadd_rels(opts.wbrels, -1, \"worksheets/sheet\" + rId + \".\" + wbext, RELS.WS[0]);\n\t\t}\n\n\t\tif(ws) {\n\t\t\tvar comments = ws['!comments'];\n\t\t\tvar need_vml = false;\n\t\t\tvar cf = \"\";\n\t\t\tif(comments && comments.length > 0) {\n\t\t\t\tvar needtc = false;\n\t\t\t\tcomments.forEach(function(carr) {\n\t\t\t\t\tcarr[1].forEach(function(c) { if(c.T == true) needtc = true; });\n\t\t\t\t});\n\t\t\t\tif(needtc) {\n\t\t\t\t\tcf = \"xl/threadedComments/threadedComment\" + rId + \".xml\";\n\t\t\t\t\tzip_add_file(zip, cf, write_tcmnt_xml(comments, people, opts));\n\t\t\t\t\tct.threadedcomments.push(cf);\n\t\t\t\t\tadd_rels(wsrels, -1, \"../threadedComments/threadedComment\" + rId + \".xml\", RELS.TCMNT);\n\t\t\t\t}\n\n\t\t\t\tcf = \"xl/comments\" + rId + \".\" + wbext;\n\t\t\t\tzip_add_file(zip, cf, write_comments_xml(comments, opts));\n\t\t\t\tct.comments.push(cf);\n\t\t\t\tadd_rels(wsrels, -1, \"../comments\" + rId + \".\" + wbext, RELS.CMNT);\n\t\t\t\tneed_vml = true;\n\t\t\t}\n\t\t\tif(ws['!legacy']) {\n\t\t\t\tif(need_vml) zip_add_file(zip, \"xl/drawings/vmlDrawing\" + (rId) + \".vml\", write_vml(rId, ws['!comments']));\n\t\t\t}\n\t\t\tdelete ws['!comments'];\n\t\t\tdelete ws['!legacy'];\n\t\t}\n\n\t\tif(wsrels['!id'].rId1) zip_add_file(zip, get_rels_path(f), write_rels(wsrels));\n\t}\n\n\tif(opts.Strings != null && opts.Strings.length > 0) {\n\t\tf = \"xl/sharedStrings.\" + wbext;\n\t\tzip_add_file(zip, f, write_sst_xml(opts.Strings, opts));\n\t\tct.strs.push(f);\n\t\tadd_rels(opts.wbrels, -1, \"sharedStrings.\" + wbext, RELS.SST);\n\t}\n\n\tf = \"xl/workbook.\" + wbext;\n\tzip_add_file(zip, f, write_wb_xml(wb, opts));\n\tct.workbooks.push(f);\n\tadd_rels(opts.rels, 1, f, RELS.WB);\n\n\t/* TODO: something more intelligent with themes */\n\n\tf = \"xl/theme/theme1.xml\";\n\tzip_add_file(zip, f, write_theme(wb.Themes, opts));\n\tct.themes.push(f);\n\tadd_rels(opts.wbrels, -1, \"theme/theme1.xml\", RELS.THEME);\n\n\t/* TODO: something more intelligent with styles */\n\n\tf = \"xl/styles.\" + wbext;\n\tzip_add_file(zip, f, write_sty_xml(wb, opts));\n\tct.styles.push(f);\n\tadd_rels(opts.wbrels, -1, \"styles.\" + wbext, RELS.STY);\n\n\tif(wb.vbaraw && vbafmt) {\n\t\tf = \"xl/vbaProject.bin\";\n\t\tzip_add_file(zip, f, wb.vbaraw);\n\t\tct.vba.push(f);\n\t\tadd_rels(opts.wbrels, -1, \"vbaProject.bin\", RELS.VBA);\n\t}\n\n\tf = \"xl/metadata.\" + wbext;\n\tzip_add_file(zip, f, write_xlmeta_xml());\n\tct.metadata.push(f);\n\tadd_rels(opts.wbrels, -1, \"metadata.\" + wbext, RELS.XLMETA);\n\n\tif(people.length > 1) {\n\t\tf = \"xl/persons/person.xml\";\n\t\tzip_add_file(zip, f, write_people_xml(people, opts));\n\t\tct.people.push(f);\n\t\tadd_rels(opts.wbrels, -1, \"persons/person.xml\", RELS.PEOPLE);\n\t}\n\n\tzip_add_file(zip, \"[Content_Types].xml\", write_ct(ct, opts));\n\tzip_add_file(zip, '_rels/.rels', write_rels(opts.rels));\n\tzip_add_file(zip, 'xl/_rels/workbook.' + wbext + '.rels', write_rels(opts.wbrels));\n\n\tdelete opts.revssf; delete opts.ssf;\n\treturn zip;\n}\n\nfunction firstbyte(f/*:RawData*/,o/*:?TypeOpts*/)/*:Array<number>*/ {\n\tvar x = \"\";\n\tswitch((o||{}).type || \"base64\") {\n\t\tcase 'buffer': return [f[0], f[1], f[2], f[3], f[4], f[5], f[6], f[7]];\n\t\tcase 'base64': x = Base64_decode(f.slice(0,12)); break;\n\t\tcase 'binary': x = f; break;\n\t\tcase 'array':  return [f[0], f[1], f[2], f[3], f[4], f[5], f[6], f[7]];\n\t\tdefault: throw new Error(\"Unrecognized type \" + (o && o.type || \"undefined\"));\n\t}\n\treturn [x.charCodeAt(0), x.charCodeAt(1), x.charCodeAt(2), x.charCodeAt(3), x.charCodeAt(4), x.charCodeAt(5), x.charCodeAt(6), x.charCodeAt(7)];\n}\n\nfunction read_cfb(cfb/*:CFBContainer*/, opts/*:?ParseOpts*/)/*:Workbook*/ {\n\tif(CFB.find(cfb, \"EncryptedPackage\")) return parse_xlsxcfb(cfb, opts);\n\treturn parse_xlscfb(cfb, opts);\n}\n\nfunction read_zip(data/*:RawData*/, opts/*:?ParseOpts*/)/*:Workbook*/ {\n\tvar zip, d = data;\n\tvar o = opts||{};\n\tif(!o.type) o.type = (has_buf && Buffer.isBuffer(data)) ? \"buffer\" : \"base64\";\n\tzip = zip_read(d, o);\n\treturn parse_zip(zip, o);\n}\n\nfunction read_plaintext(data/*:string*/, o/*:ParseOpts*/)/*:Workbook*/ {\n\tvar i = 0;\n\tmain: while(i < data.length) switch(data.charCodeAt(i)) {\n\t\tcase 0x0A: case 0x0D: case 0x20: ++i; break;\n\t\tcase 0x3C: return parse_xlml(data.slice(i),o);\n\t\tdefault: break main;\n\t}\n\treturn PRN.to_workbook(data, o);\n}\n\nfunction read_plaintext_raw(data/*:RawData*/, o/*:ParseOpts*/)/*:Workbook*/ {\n\tvar str = \"\", bytes = firstbyte(data, o);\n\tswitch(o.type) {\n\t\tcase 'base64': str = Base64_decode(data); break;\n\t\tcase 'binary': str = data; break;\n\t\tcase 'buffer': str = data.toString('binary'); break;\n\t\tcase 'array': str = cc2str(data); break;\n\t\tdefault: throw new Error(\"Unrecognized type \" + o.type);\n\t}\n\tif(bytes[0] == 0xEF && bytes[1] == 0xBB && bytes[2] == 0xBF) str = utf8read(str);\n\to.type = \"binary\";\n\treturn read_plaintext(str, o);\n}\n\nfunction read_utf16(data/*:RawData*/, o/*:ParseOpts*/)/*:Workbook*/ {\n\tvar d = data;\n\tif(o.type == 'base64') d = Base64_decode(d);\n\tif(typeof ArrayBuffer !== \"undefined\" && data instanceof ArrayBuffer) d = new Uint8Array(data);\n\td = typeof $cptable !== \"undefined\" ? $cptable.utils.decode(1200, d.slice(2), 'str') : (\n\t\t(has_buf && Buffer.isBuffer(data)) ? data.slice(2).toString(\"utf16le\") :\n\t\t(typeof Uint8Array !== \"undefined\" && d instanceof Uint8Array) ? (\n\t\t\ttypeof TextDecoder !== \"undefined\" ? new TextDecoder(\"utf-16le\").decode(d.slice(2)) : utf16lereadu(d.slice(2))\n\t\t) : utf16leread(d.slice(2))\n\t);\n\to.type = \"binary\";\n\treturn read_plaintext(d, o);\n}\n\nfunction bstrify(data/*:string*/)/*:string*/ {\n\treturn !data.match(/[^\\x00-\\x7F]/) ? data : utf8write(data);\n}\n\nfunction read_prn(data, d, o, str) {\n\tif(str) { o.type = \"string\"; return PRN.to_workbook(data, o); }\n\treturn PRN.to_workbook(d, o);\n}\n\nfunction readSync(data/*:RawData*/, opts/*:?ParseOpts*/)/*:Workbook*/ {\n\treset_cp();\n\tvar o = opts||{};\n\tif(o.codepage && typeof $cptable === \"undefined\") console.error(\"Codepage tables are not loaded.  Non-ASCII characters may not give expected results\");\n\tif(typeof ArrayBuffer !== 'undefined' && data instanceof ArrayBuffer) return readSync(new Uint8Array(data), (o = dup(o), o.type = \"array\", o));\n\tif(typeof Uint8Array !== 'undefined' && data instanceof Uint8Array && !o.type) o.type = typeof Deno !== \"undefined\" ? \"buffer\" : \"array\";\n\tvar d = data, n = [0,0,0,0], str = false;\n\tif(o.cellStyles) { o.cellNF = true; o.sheetStubs = true; }\n\t_ssfopts = {};\n\tif(o.dateNF) _ssfopts.dateNF = o.dateNF;\n\tif(!o.type) o.type = (has_buf && Buffer.isBuffer(data)) ? \"buffer\" : \"base64\";\n\tif(o.type == \"file\") { o.type = has_buf ? \"buffer\" : \"binary\"; d = read_binary(data); if(typeof Uint8Array !== 'undefined' && !has_buf) o.type = \"array\"; }\n\tif(o.type == \"string\") { str = true; o.type = \"binary\"; o.codepage = 65001; d = bstrify(data); }\n\tif(o.type == 'array' && typeof Uint8Array !== 'undefined' && data instanceof Uint8Array && typeof ArrayBuffer !== 'undefined') {\n\t\t// $FlowIgnore\n\t\tvar ab=new ArrayBuffer(3), vu=new Uint8Array(ab); vu.foo=\"bar\";\n\t\t// $FlowIgnore\n\t\tif(!vu.foo) {o=dup(o); o.type='array'; return readSync(ab2a(d), o);}\n\t}\n\tswitch((n = firstbyte(d, o))[0]) {\n\t\tcase 0xD0: if(n[1] === 0xCF && n[2] === 0x11 && n[3] === 0xE0 && n[4] === 0xA1 && n[5] === 0xB1 && n[6] === 0x1A && n[7] === 0xE1) return read_cfb(CFB.read(d, o), o); break;\n\t\tcase 0x09: if(n[1] <= 0x08) return parse_xlscfb(d, o); break;\n\t\tcase 0x3C: return parse_xlml(d, o);\n\t\tcase 0x49:\n\t\t\tif(n[1] === 0x49 && n[2] === 0x2a && n[3] === 0x00) throw new Error(\"TIFF Image File is not a spreadsheet\");\n\t\t\tif(n[1] === 0x44) return read_wb_ID(d, o);\n\t\t\tbreak;\n\t\tcase 0x54: if(n[1] === 0x41 && n[2] === 0x42 && n[3] === 0x4C) return DIF.to_workbook(d, o); break;\n\t\tcase 0x50: return (n[1] === 0x4B && n[2] < 0x09 && n[3] < 0x09) ? read_zip(d, o) : read_prn(data, d, o, str);\n\t\tcase 0xEF: return n[3] === 0x3C ? parse_xlml(d, o) : read_prn(data, d, o, str);\n\t\tcase 0xFF:\n\t\t\tif(n[1] === 0xFE) { return read_utf16(d, o); }\n\t\t\telse if(n[1] === 0x00 && n[2] === 0x02 && n[3] === 0x00) return WK_.to_workbook(d, o);\n\t\t\tbreak;\n\t\tcase 0x00:\n\t\t\tif(n[1] === 0x00) {\n\t\t\t\tif(n[2] >= 0x02 && n[3] === 0x00) return WK_.to_workbook(d, o);\n\t\t\t\tif(n[2] === 0x00 && (n[3] === 0x08 || n[3] === 0x09)) return WK_.to_workbook(d, o);\n\t\t\t}\n\t\t\tbreak;\n\t\tcase 0x03: case 0x83: case 0x8B: case 0x8C: return DBF.to_workbook(d, o);\n\t\tcase 0x7B: if(n[1] === 0x5C && n[2] === 0x72 && n[3] === 0x74) return rtf_to_workbook(d, o); break;\n\t\tcase 0x0A: case 0x0D: case 0x20: return read_plaintext_raw(d, o);\n\t\tcase 0x89: if(n[1] === 0x50 && n[2] === 0x4E && n[3] === 0x47) throw new Error(\"PNG Image File is not a spreadsheet\"); break;\n\t\tcase 0x08: if(n[1] === 0xE7) throw new Error(\"Unsupported Multiplan 1.x file!\"); break;\n\t\tcase 0x0C:\n\t\t\tif(n[1] === 0xEC) throw new Error(\"Unsupported Multiplan 2.x file!\");\n\t\t\tif(n[1] === 0xED) throw new Error(\"Unsupported Multiplan 3.x file!\");\n\t\t\tbreak;\n\t}\n\tif(DBF_SUPPORTED_VERSIONS.indexOf(n[0]) > -1 && n[2] <= 12 && n[3] <= 31) return DBF.to_workbook(d, o);\n\treturn read_prn(data, d, o, str);\n}\n\nfunction readFileSync(filename/*:string*/, opts/*:?ParseOpts*/)/*:Workbook*/ {\n\tvar o = opts||{}; o.type = 'file';\n\treturn readSync(filename, o);\n}\nfunction write_cfb_ctr(cfb/*:CFBContainer*/, o/*:WriteOpts*/)/*:any*/ {\n\tswitch(o.type) {\n\t\tcase \"base64\": case \"binary\": break;\n\t\tcase \"buffer\": case \"array\": o.type = \"\"; break;\n\t\tcase \"file\": return write_dl(o.file, CFB.write(cfb, {type:has_buf ? 'buffer' : \"\"}));\n\t\tcase \"string\": throw new Error(\"'string' output type invalid for '\" + o.bookType + \"' files\");\n\t\tdefault: throw new Error(\"Unrecognized type \" + o.type);\n\t}\n\treturn CFB.write(cfb, o);\n}\n\nfunction write_zip(wb/*:Workbook*/, opts/*:WriteOpts*/)/*:ZIP*/ {\n\tswitch(opts.bookType) {\n\t\tcase \"ods\": return write_ods(wb, opts);\n\t\tcase \"numbers\": return write_numbers_iwa(wb, opts);\n\t\tcase \"xlsb\": return write_zip_xlsb(wb, opts);\n\t\tdefault: return write_zip_xlsx(wb, opts);\n\t}\n}\n\n/*:: declare var encrypt_agile:any; */\nfunction write_zip_type(wb/*:Workbook*/, opts/*:?WriteOpts*/)/*:any*/ {\n\tvar o = dup(opts||{});\n\tvar z = write_zip(wb, o);\n\treturn write_zip_denouement(z, o);\n}\nfunction write_zip_typeXLSX(wb/*:Workbook*/, opts/*:?WriteOpts*/)/*:any*/ {\n\tvar o = dup(opts||{});\n\tvar z = write_zip_xlsx(wb, o);\n\treturn write_zip_denouement(z, o);\n}\nfunction write_zip_denouement(z/*:any*/, o/*:?WriteOpts*/)/*:any*/ {\n\tvar oopts = {};\n\tvar ftype = has_buf ? \"nodebuffer\" : (typeof Uint8Array !== \"undefined\" ? \"array\" : \"string\");\n\tif(o.compression) oopts.compression = 'DEFLATE';\n\tif(o.password) oopts.type = ftype;\n\telse switch(o.type) {\n\t\tcase \"base64\": oopts.type = \"base64\"; break;\n\t\tcase \"binary\": oopts.type = \"string\"; break;\n\t\tcase \"string\": throw new Error(\"'string' output type invalid for '\" + o.bookType + \"' files\");\n\t\tcase \"buffer\":\n\t\tcase \"file\": oopts.type = ftype; break;\n\t\tdefault: throw new Error(\"Unrecognized type \" + o.type);\n\t}\n\tvar out = z.FullPaths ? CFB.write(z, {fileType:\"zip\", type: /*::(*/{\"nodebuffer\": \"buffer\", \"string\": \"binary\"}/*:: :any)*/[oopts.type] || oopts.type, compression: !!o.compression}) : z.generate(oopts);\n\tif(typeof Deno !== \"undefined\") {\n\t\tif(typeof out == \"string\") {\n\t\t\tif(o.type == \"binary\" || o.type == \"base64\") return out;\n\t\t\tout = new Uint8Array(s2ab(out));\n\t\t}\n\t}\n/*jshint -W083 */\n\tif(o.password && typeof encrypt_agile !== 'undefined') return write_cfb_ctr(encrypt_agile(out, o.password), o); // eslint-disable-line no-undef\n/*jshint +W083 */\n\tif(o.type === \"file\") return write_dl(o.file, out);\n\treturn o.type == \"string\" ? utf8read(/*::(*/out/*:: :any)*/) : out;\n}\n\nfunction write_cfb_type(wb/*:Workbook*/, opts/*:?WriteOpts*/)/*:any*/ {\n\tvar o = opts||{};\n\tvar cfb/*:CFBContainer*/ = write_xlscfb(wb, o);\n\treturn write_cfb_ctr(cfb, o);\n}\n\nfunction write_string_type(out/*:string*/, opts/*:WriteOpts*/, bom/*:?string*/)/*:any*/ {\n\tif(!bom) bom = \"\";\n\tvar o = bom + out;\n\tswitch(opts.type) {\n\t\tcase \"base64\": return Base64_encode(utf8write(o));\n\t\tcase \"binary\": return utf8write(o);\n\t\tcase \"string\": return out;\n\t\tcase \"file\": return write_dl(opts.file, o, 'utf8');\n\t\tcase \"buffer\": {\n\t\t\tif(has_buf) return Buffer_from(o, 'utf8');\n\t\t\telse if(typeof TextEncoder !== \"undefined\") return new TextEncoder().encode(o);\n\t\t\telse return write_string_type(o, {type:'binary'}).split(\"\").map(function(c) { return c.charCodeAt(0); });\n\t\t}\n\t}\n\tthrow new Error(\"Unrecognized type \" + opts.type);\n}\n\nfunction write_stxt_type(out/*:string*/, opts/*:WriteOpts*/)/*:any*/ {\n\tswitch(opts.type) {\n\t\tcase \"base64\": return Base64_encode_pass(out);\n\t\tcase \"binary\": return out;\n\t\tcase \"string\": return out; /* override in sheet_to_txt */\n\t\tcase \"file\": return write_dl(opts.file, out, 'binary');\n\t\tcase \"buffer\": {\n\t\t\tif(has_buf) return Buffer_from(out, 'binary');\n\t\t\telse return out.split(\"\").map(function(c) { return c.charCodeAt(0); });\n\t\t}\n\t}\n\tthrow new Error(\"Unrecognized type \" + opts.type);\n}\n\n/* TODO: test consistency */\nfunction write_binary_type(out, opts/*:WriteOpts*/)/*:any*/ {\n\tswitch(opts.type) {\n\t\tcase \"string\":\n\t\tcase \"base64\":\n\t\tcase \"binary\":\n\t\t\tvar bstr = \"\";\n\t\t\t// $FlowIgnore\n\t\t\tfor(var i = 0; i < out.length; ++i) bstr += String.fromCharCode(out[i]);\n\t\t\treturn opts.type == 'base64' ? Base64_encode(bstr) : opts.type == 'string' ? utf8read(bstr) : bstr;\n\t\tcase \"file\": return write_dl(opts.file, out);\n\t\tcase \"buffer\": return out;\n\t\tdefault: throw new Error(\"Unrecognized type \" + opts.type);\n\t}\n}\n\nfunction writeSyncXLSX(wb/*:Workbook*/, opts/*:?WriteOpts*/) {\n\treset_cp();\n\tcheck_wb(wb);\n\tvar o = dup(opts||{});\n\tif(o.cellStyles) { o.cellNF = true; o.sheetStubs = true; }\n\tif(o.type == \"array\") { o.type = \"binary\"; var out/*:string*/ = (writeSyncXLSX(wb, o)/*:any*/); o.type = \"array\"; return s2ab(out); }\n\treturn write_zip_typeXLSX(wb, o);\n}\n\nfunction writeSync(wb/*:Workbook*/, opts/*:?WriteOpts*/) {\n\treset_cp();\n\tcheck_wb(wb);\n\tvar o = dup(opts||{});\n\tif(o.cellStyles) { o.cellNF = true; o.sheetStubs = true; }\n\tif(o.type == \"array\") { o.type = \"binary\"; var out/*:string*/ = (writeSync(wb, o)/*:any*/); o.type = \"array\"; return s2ab(out); }\n\tvar idx = 0;\n\tif(o.sheet) {\n\t\tif(typeof o.sheet == \"number\") idx = o.sheet;\n\t\telse idx = wb.SheetNames.indexOf(o.sheet);\n\t\tif(!wb.SheetNames[idx]) throw new Error(\"Sheet not found: \" + o.sheet + \" : \" + (typeof o.sheet));\n\t}\n\tswitch(o.bookType || 'xlsb') {\n\t\tcase 'xml':\n\t\tcase 'xlml': return write_string_type(write_xlml(wb, o), o);\n\t\tcase 'slk':\n\t\tcase 'sylk': return write_string_type(SYLK.from_sheet(wb.Sheets[wb.SheetNames[idx]], o, wb), o);\n\t\tcase 'htm':\n\t\tcase 'html': return write_string_type(sheet_to_html(wb.Sheets[wb.SheetNames[idx]], o), o);\n\t\tcase 'txt': return write_stxt_type(sheet_to_txt(wb.Sheets[wb.SheetNames[idx]], o), o);\n\t\tcase 'csv': return write_string_type(sheet_to_csv(wb.Sheets[wb.SheetNames[idx]], o), o, \"\\ufeff\");\n\t\tcase 'dif': return write_string_type(DIF.from_sheet(wb.Sheets[wb.SheetNames[idx]], o), o);\n\t\tcase 'dbf': return write_binary_type(DBF.from_sheet(wb.Sheets[wb.SheetNames[idx]], o), o);\n\t\tcase 'prn': return write_string_type(PRN.from_sheet(wb.Sheets[wb.SheetNames[idx]], o), o);\n\t\tcase 'rtf': return write_string_type(sheet_to_rtf(wb.Sheets[wb.SheetNames[idx]], o), o);\n\t\tcase 'eth': return write_string_type(ETH.from_sheet(wb.Sheets[wb.SheetNames[idx]], o), o);\n\t\tcase 'fods': return write_string_type(write_ods(wb, o), o);\n\t\tcase 'wk1': return write_binary_type(WK_.sheet_to_wk1(wb.Sheets[wb.SheetNames[idx]], o), o);\n\t\tcase 'wk3': return write_binary_type(WK_.book_to_wk3(wb, o), o);\n\t\tcase 'biff2': if(!o.biff) o.biff = 2; /* falls through */\n\t\tcase 'biff3': if(!o.biff) o.biff = 3; /* falls through */\n\t\tcase 'biff4': if(!o.biff) o.biff = 4; return write_binary_type(write_biff_buf(wb, o), o);\n\t\tcase 'biff5': if(!o.biff) o.biff = 5; /* falls through */\n\t\tcase 'biff8':\n\t\tcase 'xla':\n\t\tcase 'xls': if(!o.biff) o.biff = 8; return write_cfb_type(wb, o);\n\t\tcase 'xlsx':\n\t\tcase 'xlsm':\n\t\tcase 'xlam':\n\t\tcase 'xlsb':\n\t\tcase 'numbers':\n\t\tcase 'ods': return write_zip_type(wb, o);\n\t\tdefault: throw new Error (\"Unrecognized bookType |\" + o.bookType + \"|\");\n\t}\n}\n\nfunction resolve_book_type(o/*:WriteFileOpts*/) {\n\tif(o.bookType) return;\n\tvar _BT = {\n\t\t\"xls\": \"biff8\",\n\t\t\"htm\": \"html\",\n\t\t\"slk\": \"sylk\",\n\t\t\"socialcalc\": \"eth\",\n\t\t\"Sh33tJS\": \"WTF\"\n\t};\n\tvar ext = o.file.slice(o.file.lastIndexOf(\".\")).toLowerCase();\n\tif(ext.match(/^\\.[a-z]+$/)) o.bookType = ext.slice(1);\n\to.bookType = _BT[o.bookType] || o.bookType;\n}\n\nfunction writeFileSync(wb/*:Workbook*/, filename/*:string*/, opts/*:?WriteFileOpts*/) {\n\tvar o = opts||{}; o.type = 'file';\n\to.file = filename;\n\tresolve_book_type(o);\n\treturn writeSync(wb, o);\n}\n\nfunction writeFileSyncXLSX(wb/*:Workbook*/, filename/*:string*/, opts/*:?WriteFileOpts*/) {\n\tvar o = opts||{}; o.type = 'file';\n\to.file = filename;\n\tresolve_book_type(o);\n\treturn writeSyncXLSX(wb, o);\n}\n\n\nfunction writeFileAsync(filename/*:string*/, wb/*:Workbook*/, opts/*:?WriteFileOpts*/, cb/*:?(e?:ErrnoError)=>void*/) {\n\tvar o = opts||{}; o.type = 'file';\n\to.file = filename;\n\tresolve_book_type(o);\n\to.type = 'buffer';\n\tvar _cb = cb; if(!(_cb instanceof Function)) _cb = (opts/*:any*/);\n\treturn _fs.writeFile(filename, writeSync(wb, o), _cb);\n}\n/*::\ntype MJRObject = {\n\trow: any;\n\tisempty: boolean;\n};\n*/\nfunction make_json_row(sheet/*:Worksheet*/, r/*:Range*/, R/*:number*/, cols/*:Array<string>*/, header/*:number*/, hdr/*:Array<any>*/, o/*:Sheet2JSONOpts*/)/*:MJRObject*/ {\n\tvar rr = encode_row(R);\n\tvar defval = o.defval, raw = o.raw || !Object.prototype.hasOwnProperty.call(o, \"raw\");\n\tvar isempty = true, dense = (sheet[\"!data\"] != null);\n\tvar row/*:any*/ = (header === 1) ? [] : {};\n\tif(header !== 1) {\n\t\tif(Object.defineProperty) try { Object.defineProperty(row, '__rowNum__', {value:R, enumerable:false}); } catch(e) { row.__rowNum__ = R; }\n\t\telse row.__rowNum__ = R;\n\t}\n\tif(!dense || sheet[\"!data\"][R]) for (var C = r.s.c; C <= r.e.c; ++C) {\n\t\tvar val = dense ? (sheet[\"!data\"][R]||[])[C] : sheet[cols[C] + rr];\n\t\tif(val === undefined || val.t === undefined) {\n\t\t\tif(defval === undefined) continue;\n\t\t\tif(hdr[C] != null) { row[hdr[C]] = defval; }\n\t\t\tcontinue;\n\t\t}\n\t\tvar v = val.v;\n\t\tswitch(val.t){\n\t\t\tcase 'z': if(v == null) break; continue;\n\t\t\tcase 'e': v = (v == 0 ? null : void 0); break;\n\t\t\tcase 's': case 'd': case 'b': case 'n': break;\n\t\t\tdefault: throw new Error('unrecognized type ' + val.t);\n\t\t}\n\t\tif(hdr[C] != null) {\n\t\t\tif(v == null) {\n\t\t\t\tif(val.t == \"e\" && v === null) row[hdr[C]] = null;\n\t\t\t\telse if(defval !== undefined) row[hdr[C]] = defval;\n\t\t\t\telse if(raw && v === null) row[hdr[C]] = null;\n\t\t\t\telse continue;\n\t\t\t} else {\n\t\t\t\trow[hdr[C]] = raw && (val.t !== \"n\" || (val.t === \"n\" && o.rawNumbers !== false)) ? v : format_cell(val,v,o);\n\t\t\t}\n\t\t\tif(v != null) isempty = false;\n\t\t}\n\t}\n\treturn { row: row, isempty: isempty };\n}\n\n\nfunction sheet_to_json(sheet/*:Worksheet*/, opts/*:?Sheet2JSONOpts*/) {\n\tif(sheet == null || sheet[\"!ref\"] == null) return [];\n\tvar val = {t:'n',v:0}, header = 0, offset = 1, hdr/*:Array<any>*/ = [], v=0, vv=\"\";\n\tvar r = {s:{r:0,c:0},e:{r:0,c:0}};\n\tvar o = opts || {};\n\tvar range = o.range != null ? o.range : sheet[\"!ref\"];\n\tif(o.header === 1) header = 1;\n\telse if(o.header === \"A\") header = 2;\n\telse if(Array.isArray(o.header)) header = 3;\n\telse if(o.header == null) header = 0;\n\tswitch(typeof range) {\n\t\tcase 'string': r = safe_decode_range(range); break;\n\t\tcase 'number': r = safe_decode_range(sheet[\"!ref\"]); r.s.r = range; break;\n\t\tdefault: r = range;\n\t}\n\tif(header > 0) offset = 0;\n\tvar rr = encode_row(r.s.r);\n\tvar cols/*:Array<string>*/ = [];\n\tvar out/*:Array<any>*/ = [];\n\tvar outi = 0, counter = 0;\n\tvar dense = sheet[\"!data\"] != null;\n\tvar R = r.s.r, C = 0;\n\tvar header_cnt = {};\n\tif(dense && !sheet[\"!data\"][R]) sheet[\"!data\"][R] = [];\n\tvar colinfo/*:Array<ColInfo>*/ = o.skipHidden && sheet[\"!cols\"] || [];\n\tvar rowinfo/*:Array<ColInfo>*/ = o.skipHidden && sheet[\"!rows\"] || [];\n\tfor(C = r.s.c; C <= r.e.c; ++C) {\n\t\tif(((colinfo[C]||{}).hidden)) continue;\n\t\tcols[C] = encode_col(C);\n\t\tval = dense ? sheet[\"!data\"][R][C] : sheet[cols[C] + rr];\n\t\tswitch(header) {\n\t\t\tcase 1: hdr[C] = C - r.s.c; break;\n\t\t\tcase 2: hdr[C] = cols[C]; break;\n\t\t\tcase 3: hdr[C] = o.header[C - r.s.c]; break;\n\t\t\tdefault:\n\t\t\t\tif(val == null) val = {w: \"__EMPTY\", t: \"s\"};\n\t\t\t\tvv = v = format_cell(val, null, o);\n\t\t\t\tcounter = header_cnt[v] || 0;\n\t\t\t\tif(!counter) header_cnt[v] = 1;\n\t\t\t\telse {\n\t\t\t\t\tdo { vv = v + \"_\" + (counter++); } while(header_cnt[vv]); header_cnt[v] = counter;\n\t\t\t\t\theader_cnt[vv] = 1;\n\t\t\t\t}\n\t\t\t\thdr[C] = vv;\n\t\t}\n\t}\n\tfor (R = r.s.r + offset; R <= r.e.r; ++R) {\n\t\tif ((rowinfo[R]||{}).hidden) continue;\n\t\tvar row = make_json_row(sheet, r, R, cols, header, hdr, o);\n\t\tif((row.isempty === false) || (header === 1 ? o.blankrows !== false : !!o.blankrows)) out[outi++] = row.row;\n\t}\n\tout.length = outi;\n\treturn out;\n}\n\nvar qreg = /\"/g;\nfunction make_csv_row(sheet/*:Worksheet*/, r/*:Range*/, R/*:number*/, cols/*:Array<string>*/, fs/*:number*/, rs/*:number*/, FS/*:string*/, o/*:Sheet2CSVOpts*/)/*:?string*/ {\n\tvar isempty = true;\n\tvar row/*:Array<string>*/ = [], txt = \"\", rr = encode_row(R);\n\tvar dense = sheet[\"!data\"] != null;\n\tvar datarow = dense && sheet[\"!data\"][R] || [];\n\tfor(var C = r.s.c; C <= r.e.c; ++C) {\n\t\tif (!cols[C]) continue;\n\t\tvar val = dense ? datarow[C]: sheet[cols[C] + rr];\n\t\tif(val == null) txt = \"\";\n\t\telse if(val.v != null) {\n\t\t\tisempty = false;\n\t\t\ttxt = ''+(o.rawNumbers && val.t == \"n\" ? val.v : format_cell(val, null, o));\n\t\t\tfor(var i = 0, cc = 0; i !== txt.length; ++i) if((cc = txt.charCodeAt(i)) === fs || cc === rs || cc === 34 || o.forceQuotes) {txt = \"\\\"\" + txt.replace(qreg, '\"\"') + \"\\\"\"; break; }\n\t\t\tif(txt == \"ID\") txt = '\"ID\"';\n\t\t} else if(val.f != null && !val.F) {\n\t\t\tisempty = false;\n\t\t\ttxt = '=' + val.f; if(txt.indexOf(\",\") >= 0) txt = '\"' + txt.replace(qreg, '\"\"') + '\"';\n\t\t} else txt = \"\";\n\t\t/* NOTE: Excel CSV does not support array formulae */\n\t\trow.push(txt);\n\t}\n\tif(o.blankrows === false && isempty) return null;\n\treturn row.join(FS);\n}\n\nfunction sheet_to_csv(sheet/*:Worksheet*/, opts/*:?Sheet2CSVOpts*/)/*:string*/ {\n\tvar out/*:Array<string>*/ = [];\n\tvar o = opts == null ? {} : opts;\n\tif(sheet == null || sheet[\"!ref\"] == null) return \"\";\n\tvar r = safe_decode_range(sheet[\"!ref\"]);\n\tvar FS = o.FS !== undefined ? o.FS : \",\", fs = FS.charCodeAt(0);\n\tvar RS = o.RS !== undefined ? o.RS : \"\\n\", rs = RS.charCodeAt(0);\n\tvar endregex = new RegExp((FS==\"|\" ? \"\\\\|\" : FS)+\"+$\");\n\tvar row = \"\", cols/*:Array<string>*/ = [];\n\tvar colinfo/*:Array<ColInfo>*/ = o.skipHidden && sheet[\"!cols\"] || [];\n\tvar rowinfo/*:Array<ColInfo>*/ = o.skipHidden && sheet[\"!rows\"] || [];\n\tfor(var C = r.s.c; C <= r.e.c; ++C) if (!((colinfo[C]||{}).hidden)) cols[C] = encode_col(C);\n\tvar w = 0;\n\tfor(var R = r.s.r; R <= r.e.r; ++R) {\n\t\tif ((rowinfo[R]||{}).hidden) continue;\n\t\trow = make_csv_row(sheet, r, R, cols, fs, rs, FS, o);\n\t\tif(row == null) { continue; }\n\t\tif(o.strip) row = row.replace(endregex,\"\");\n\t\tif(row || (o.blankrows !== false)) out.push((w++ ? RS : \"\") + row);\n\t}\n\treturn out.join(\"\");\n}\n\nfunction sheet_to_txt(sheet/*:Worksheet*/, opts/*:?Sheet2CSVOpts*/) {\n\tif(!opts) opts = {}; opts.FS = \"\\t\"; opts.RS = \"\\n\";\n\tvar s = sheet_to_csv(sheet, opts);\n\tif(typeof $cptable == 'undefined' || opts.type == 'string') return s;\n\tvar o = $cptable.utils.encode(1200, s, 'str');\n\treturn String.fromCharCode(255) + String.fromCharCode(254) + o;\n}\n\nfunction sheet_to_formulae(sheet/*:Worksheet*/)/*:Array<string>*/ {\n\tvar y = \"\", x, val=\"\";\n\tif(sheet == null || sheet[\"!ref\"] == null) return [];\n\tvar r = safe_decode_range(sheet['!ref']), rr = \"\", cols/*:Array<string>*/ = [], C;\n\tvar cmds/*:Array<string>*/ = [];\n\tvar dense = sheet[\"!data\"] != null;\n\tfor(C = r.s.c; C <= r.e.c; ++C) cols[C] = encode_col(C);\n\tfor(var R = r.s.r; R <= r.e.r; ++R) {\n\t\trr = encode_row(R);\n\t\tfor(C = r.s.c; C <= r.e.c; ++C) {\n\t\t\ty = cols[C] + rr;\n\t\t\tx = dense ? (sheet[\"!data\"][R]||[])[C] : sheet[y];\n\t\t\tval = \"\";\n\t\t\tif(x === undefined) continue;\n\t\t\telse if(x.F != null) {\n\t\t\t\ty = x.F;\n\t\t\t\tif(!x.f) continue;\n\t\t\t\tval = x.f;\n\t\t\t\tif(y.indexOf(\":\") == -1) y = y + \":\" + y;\n\t\t\t}\n\t\t\tif(x.f != null) val = x.f;\n\t\t\telse if(x.t == 'z') continue;\n\t\t\telse if(x.t == 'n' && x.v != null) val = \"\" + x.v;\n\t\t\telse if(x.t == 'b') val = x.v ? \"TRUE\" : \"FALSE\";\n\t\t\telse if(x.w !== undefined) val = \"'\" + x.w;\n\t\t\telse if(x.v === undefined) continue;\n\t\t\telse if(x.t == 's') val = \"'\" + x.v;\n\t\t\telse val = \"\"+x.v;\n\t\t\tcmds[cmds.length] = y + \"=\" + val;\n\t\t}\n\t}\n\treturn cmds;\n}\n\nfunction sheet_add_json(_ws/*:?Worksheet*/, js/*:Array<any>*/, opts)/*:Worksheet*/ {\n\tvar o = opts || {};\n\tvar dense = _ws ? (_ws[\"!data\"] != null) : o.dense;\n\tif(DENSE != null && dense == null) dense = DENSE;\n\tvar offset = +!o.skipHeader;\n\tvar ws/*:Worksheet*/ = _ws || ({});\n\tif(!_ws && dense) ws[\"!data\"] = [];\n\tvar _R = 0, _C = 0;\n\tif(ws && o.origin != null) {\n\t\tif(typeof o.origin == 'number') _R = o.origin;\n\t\telse {\n\t\t\tvar _origin/*:CellAddress*/ = typeof o.origin == \"string\" ? decode_cell(o.origin) : o.origin;\n\t\t\t_R = _origin.r; _C = _origin.c;\n\t\t}\n\t}\n\tvar range/*:Range*/ = ({s: {c:0, r:0}, e: {c:_C, r:_R + js.length - 1 + offset}}/*:any*/);\n\tif(ws['!ref']) {\n\t\tvar _range = safe_decode_range(ws['!ref']);\n\t\trange.e.c = Math.max(range.e.c, _range.e.c);\n\t\trange.e.r = Math.max(range.e.r, _range.e.r);\n\t\tif(_R == -1) { _R = _range.e.r + 1; range.e.r = _R + js.length - 1 + offset; }\n\t} else {\n\t\tif(_R == -1) { _R = 0; range.e.r = js.length - 1 + offset; }\n\t}\n\tvar hdr/*:Array<string>*/ = o.header || [], C = 0;\n\tvar ROW = [];\n\tjs.forEach(function (JS, R/*:number*/) {\n\t\tif(dense && !ws[\"!data\"][_R + R + offset]) ws[\"!data\"][_R + R + offset] = [];\n\t\tif(dense) ROW = ws[\"!data\"][_R + R + offset];\n\t\tkeys(JS).forEach(function(k) {\n\t\t\tif((C=hdr.indexOf(k)) == -1) hdr[C=hdr.length] = k;\n\t\t\tvar v = JS[k];\n\t\t\tvar t = 'z';\n\t\t\tvar z = \"\";\n\t\t\tvar ref = dense ? \"\" : (encode_col(_C + C) + encode_row(_R + R + offset));\n\t\t\tvar cell/*:Cell*/ = dense ? ROW[_C + C] : ws[ref];\n\t\t\tif(v && typeof v === 'object' && !(v instanceof Date)){\n\t\t\t\tif(dense) ROW[_C + C] = v;\n\t\t\t\telse ws[ref] = v;\n\t\t\t} else {\n\t\t\t\tif(typeof v == 'number') t = 'n';\n\t\t\t\telse if(typeof v == 'boolean') t = 'b';\n\t\t\t\telse if(typeof v == 'string') t = 's';\n\t\t\t\telse if(v instanceof Date) {\n\t\t\t\t\tt = 'd';\n\t\t\t\t\tif(!o.cellDates) { t = 'n'; v = datenum(v); }\n\t\t\t\t\tz = (cell != null && cell.z && fmt_is_date(cell.z)) ? cell.z : (o.dateNF || table_fmt[14]);\n\t\t\t\t}\n\t\t\t\telse if(v === null && o.nullError) { t = 'e'; v = 0; }\n\t\t\t\tif(!cell) {\n\t\t\t\t\tif(!dense) ws[ref] = cell = ({t:t, v:v}/*:any*/);\n\t\t\t\t\telse ROW[_C + C] = cell = ({t:t, v:v}/*:any*/);\n\t\t\t\t} else {\n\t\t\t\t\tcell.t = t; cell.v = v;\n\t\t\t\t\tdelete cell.w; delete cell.R;\n\t\t\t\t\tif(z) cell.z = z;\n\t\t\t\t}\n\t\t\t\tif(z) cell.z = z;\n\t\t\t}\n\t\t});\n\t});\n\trange.e.c = Math.max(range.e.c, _C + hdr.length - 1);\n\tvar __R = encode_row(_R);\n\tif(dense && !ws[\"!data\"][_R]) ws[\"!data\"][_R] = [];\n\tif(offset) for(C = 0; C < hdr.length; ++C) {\n\t\tif(dense) ws[\"!data\"][_R][C + _C] = {t:'s', v:hdr[C]};\n\t\telse ws[encode_col(C + _C) + __R] = {t:'s', v:hdr[C]};\n\t}\n\tws['!ref'] = encode_range(range);\n\treturn ws;\n}\nfunction json_to_sheet(js/*:Array<any>*/, opts)/*:Worksheet*/ { return sheet_add_json(null, js, opts); }\n\n/* get cell, creating a stub if necessary */\nfunction ws_get_cell_stub(ws/*:Worksheet*/, R, C/*:?number*/)/*:Cell*/ {\n\t/* A1 cell address */\n\tif(typeof R == \"string\") {\n\t\tif(ws[\"!data\"] != null) {\n\t\t\tvar RC = decode_cell(R);\n\t\t\tif(!ws[\"!data\"][RC.r]) ws[\"!data\"][RC.r] = [];\n\t\t\treturn ws[\"!data\"][RC.r][RC.c] || (ws[\"!data\"][RC.r][RC.c] = {t:'z'});\n\t\t}\n\t\treturn ws[R] || (ws[R] = {t:'z'});\n\t}\n\t/* cell address object */\n\tif(typeof R != \"number\") return ws_get_cell_stub(ws, encode_cell(R));\n\t/* R and C are 0-based indices */\n\treturn ws_get_cell_stub(ws, encode_col(C||0) + encode_row(R));\n}\n\n/* find sheet index for given name / validate index */\nfunction wb_sheet_idx(wb/*:Workbook*/, sh/*:number|string*/) {\n\tif(typeof sh == \"number\") {\n\t\tif(sh >= 0 && wb.SheetNames.length > sh) return sh;\n\t\tthrow new Error(\"Cannot find sheet # \" + sh);\n\t} else if(typeof sh == \"string\") {\n\t\tvar idx = wb.SheetNames.indexOf(sh);\n\t\tif(idx > -1) return idx;\n\t\tthrow new Error(\"Cannot find sheet name |\" + sh + \"|\");\n\t} else throw new Error(\"Cannot find sheet |\" + sh + \"|\");\n}\n\n/* simple blank workbook object */\nfunction book_new()/*:Workbook*/ {\n\treturn { SheetNames: [], Sheets: {} };\n}\n\n/* add a worksheet to the end of a given workbook */\nfunction book_append_sheet(wb/*:Workbook*/, ws/*:Worksheet*/, name/*:?string*/, roll/*:?boolean*/)/*:string*/ {\n\tvar i = 1;\n\tif(!name) for(; i <= 0xFFFF; ++i, name = undefined) if(wb.SheetNames.indexOf(name = \"Sheet\" + i) == -1) break;\n\tif(!name || wb.SheetNames.length >= 0xFFFF) throw new Error(\"Too many worksheets\");\n\tif(roll && wb.SheetNames.indexOf(name) >= 0) {\n\t\tvar m = name.match(/(^.*?)(\\d+)$/);\n\t\ti = m && +m[2] || 0;\n\t\tvar root = m && m[1] || name;\n\t\tfor(++i; i <= 0xFFFF; ++i) if(wb.SheetNames.indexOf(name = root + i) == -1) break;\n\t}\n\tcheck_ws_name(name);\n\tif(wb.SheetNames.indexOf(name) >= 0) throw new Error(\"Worksheet with name |\" + name + \"| already exists!\");\n\n\twb.SheetNames.push(name);\n\twb.Sheets[name] = ws;\n\treturn name;\n}\n\n/* set sheet visibility (visible/hidden/very hidden) */\nfunction book_set_sheet_visibility(wb/*:Workbook*/, sh/*:number|string*/, vis/*:number*/) {\n\tif(!wb.Workbook) wb.Workbook = {};\n\tif(!wb.Workbook.Sheets) wb.Workbook.Sheets = [];\n\n\tvar idx = wb_sheet_idx(wb, sh);\n\t// $FlowIgnore\n\tif(!wb.Workbook.Sheets[idx]) wb.Workbook.Sheets[idx] = {};\n\n\tswitch(vis) {\n\t\tcase 0: case 1: case 2: break;\n\t\tdefault: throw new Error(\"Bad sheet visibility setting \" + vis);\n\t}\n\t// $FlowIgnore\n\twb.Workbook.Sheets[idx].Hidden = vis;\n}\n\n/* set number format */\nfunction cell_set_number_format(cell/*:Cell*/, fmt/*:string|number*/) {\n\tcell.z = fmt;\n\treturn cell;\n}\n\n/* set cell hyperlink */\nfunction cell_set_hyperlink(cell/*:Cell*/, target/*:string*/, tooltip/*:?string*/) {\n\tif(!target) {\n\t\tdelete cell.l;\n\t} else {\n\t\tcell.l = ({ Target: target }/*:Hyperlink*/);\n\t\tif(tooltip) cell.l.Tooltip = tooltip;\n\t}\n\treturn cell;\n}\nfunction cell_set_internal_link(cell/*:Cell*/, range/*:string*/, tooltip/*:?string*/) { return cell_set_hyperlink(cell, \"#\" + range, tooltip); }\n\n/* add to cell comments */\nfunction cell_add_comment(cell/*:Cell*/, text/*:string*/, author/*:?string*/) {\n\tif(!cell.c) cell.c = [];\n\tcell.c.push({t:text, a:author||\"SheetJS\"});\n}\n\n/* set array formula and flush related cells */\nfunction sheet_set_array_formula(ws/*:Worksheet*/, range, formula/*:string*/, dynamic/*:boolean*/) {\n\tvar rng = typeof range != \"string\" ? range : safe_decode_range(range);\n\tvar rngstr = typeof range == \"string\" ? range : encode_range(range);\n\tfor(var R = rng.s.r; R <= rng.e.r; ++R) for(var C = rng.s.c; C <= rng.e.c; ++C) {\n\t\tvar cell = ws_get_cell_stub(ws, R, C);\n\t\tcell.t = 'n';\n\t\tcell.F = rngstr;\n\t\tdelete cell.v;\n\t\tif(R == rng.s.r && C == rng.s.c) {\n\t\t\tcell.f = formula;\n\t\t\tif(dynamic) cell.D = true;\n\t\t}\n\t}\n\tvar wsr = decode_range(ws[\"!ref\"]);\n\tif(wsr.s.r > rng.s.r) wsr.s.r = rng.s.r;\n\tif(wsr.s.c > rng.s.c) wsr.s.c = rng.s.c;\n\tif(wsr.e.r < rng.e.r) wsr.e.r = rng.e.r;\n\tif(wsr.e.c < rng.e.c) wsr.e.c = rng.e.c;\n\tws[\"!ref\"] = encode_range(wsr);\n\treturn ws;\n}\n\nvar utils/*:any*/ = {\n\tencode_col: encode_col,\n\tencode_row: encode_row,\n\tencode_cell: encode_cell,\n\tencode_range: encode_range,\n\tdecode_col: decode_col,\n\tdecode_row: decode_row,\n\tsplit_cell: split_cell,\n\tdecode_cell: decode_cell,\n\tdecode_range: decode_range,\n\tformat_cell: format_cell,\n\tsheet_add_aoa: sheet_add_aoa,\n\tsheet_add_json: sheet_add_json,\n\tsheet_add_dom: sheet_add_dom,\n\taoa_to_sheet: aoa_to_sheet,\n\tjson_to_sheet: json_to_sheet,\n\ttable_to_sheet: parse_dom_table,\n\ttable_to_book: table_to_book,\n\tsheet_to_csv: sheet_to_csv,\n\tsheet_to_txt: sheet_to_txt,\n\tsheet_to_json: sheet_to_json,\n\tsheet_to_html: sheet_to_html,\n\tsheet_to_formulae: sheet_to_formulae,\n\tsheet_to_row_object_array: sheet_to_json,\n\tsheet_get_cell: ws_get_cell_stub,\n\tbook_new: book_new,\n\tbook_append_sheet: book_append_sheet,\n\tbook_set_sheet_visibility: book_set_sheet_visibility,\n\tcell_set_number_format: cell_set_number_format,\n\tcell_set_hyperlink: cell_set_hyperlink,\n\tcell_set_internal_link: cell_set_internal_link,\n\tcell_add_comment: cell_add_comment,\n\tsheet_set_array_formula: sheet_set_array_formula,\n\tconsts: {\n\t\tSHEET_VISIBLE: 0,\n\t\tSHEET_HIDDEN: 1,\n\t\tSHEET_VERY_HIDDEN: 2\n\t}\n};\n\nvar _Readable;\nfunction set_readable(R) { _Readable = R; }\n\nfunction write_csv_stream(sheet/*:Worksheet*/, opts/*:?Sheet2CSVOpts*/) {\n\tvar stream = _Readable();\n\tvar o = opts == null ? {} : opts;\n\tif(sheet == null || sheet[\"!ref\"] == null) { stream.push(null); return stream; }\n\tvar r = safe_decode_range(sheet[\"!ref\"]);\n\tvar FS = o.FS !== undefined ? o.FS : \",\", fs = FS.charCodeAt(0);\n\tvar RS = o.RS !== undefined ? o.RS : \"\\n\", rs = RS.charCodeAt(0);\n\tvar endregex = new RegExp((FS==\"|\" ? \"\\\\|\" : FS)+\"+$\");\n\tvar row/*:?string*/ = \"\", cols/*:Array<string>*/ = [];\n\tvar colinfo/*:Array<ColInfo>*/ = o.skipHidden && sheet[\"!cols\"] || [];\n\tvar rowinfo/*:Array<RowInfo>*/ = o.skipHidden && sheet[\"!rows\"] || [];\n\tfor(var C = r.s.c; C <= r.e.c; ++C) if (!((colinfo[C]||{}).hidden)) cols[C] = encode_col(C);\n\tvar R = r.s.r;\n\tvar BOM = false, w = 0;\n\tstream._read = function() {\n\t\tif(!BOM) { BOM = true; return stream.push(\"\\uFEFF\"); }\n\t\twhile(R <= r.e.r) {\n\t\t\t++R;\n\t\t\tif ((rowinfo[R-1]||{}).hidden) continue;\n\t\t\trow = make_csv_row(sheet, r, R-1, cols, fs, rs, FS, o);\n\t\t\tif(row != null) {\n\t\t\t\tif(o.strip) row = row.replace(endregex,\"\");\n\t\t\t\tif(row || (o.blankrows !== false)) return stream.push((w++ ? RS : \"\") + row);\n\t\t\t}\n\t\t}\n\t\treturn stream.push(null);\n\t};\n\treturn stream;\n}\n\nfunction write_html_stream(ws/*:Worksheet*/, opts/*:?Sheet2HTMLOpts*/) {\n\tvar stream = _Readable();\n\n\tvar o = opts || {};\n\tvar header = o.header != null ? o.header : HTML_BEGIN;\n\tvar footer = o.footer != null ? o.footer : HTML_END;\n\tstream.push(header);\n\tvar r = decode_range(ws['!ref']);\n\tstream.push(make_html_preamble(ws, r, o));\n\tvar R = r.s.r;\n\tvar end = false;\n\tstream._read = function() {\n\t\tif(R > r.e.r) {\n\t\t\tif(!end) { end = true; stream.push(\"</table>\" + footer); }\n\t\t\treturn stream.push(null);\n\t\t}\n\t\twhile(R <= r.e.r) {\n\t\t\tstream.push(make_html_row(ws, r, R, o));\n\t\t\t++R;\n\t\t\tbreak;\n\t\t}\n\t};\n\treturn stream;\n}\n\nfunction write_json_stream(sheet/*:Worksheet*/, opts/*:?Sheet2CSVOpts*/) {\n\tvar stream = _Readable({objectMode:true});\n\n\tif(sheet == null || sheet[\"!ref\"] == null) { stream.push(null); return stream; }\n\tvar val = {t:'n',v:0}, header = 0, offset = 1, hdr/*:Array<any>*/ = [], v=0, vv=\"\";\n\tvar r = {s:{r:0,c:0},e:{r:0,c:0}};\n\tvar o = opts || {};\n\tvar range = o.range != null ? o.range : sheet[\"!ref\"];\n\tif(o.header === 1) header = 1;\n\telse if(o.header === \"A\") header = 2;\n\telse if(Array.isArray(o.header)) header = 3;\n\tswitch(typeof range) {\n\t\tcase 'string': r = safe_decode_range(range); break;\n\t\tcase 'number': r = safe_decode_range(sheet[\"!ref\"]); r.s.r = range; break;\n\t\tdefault: r = range;\n\t}\n\tif(header > 0) offset = 0;\n\tvar rr = encode_row(r.s.r);\n\tvar cols/*:Array<string>*/ = [];\n\tvar counter = 0;\n\tvar dense = sheet[\"!data\"] != null;\n\tvar R = r.s.r, C = 0;\n\tvar header_cnt = {};\n\tif(dense && !sheet[\"!data\"][R]) sheet[\"!data\"][R] = [];\n\tvar colinfo/*:Array<ColInfo>*/ = o.skipHidden && sheet[\"!cols\"] || [];\n\tvar rowinfo/*:Array<RowInfo>*/ = o.skipHidden && sheet[\"!rows\"] || [];\n\tfor(C = r.s.c; C <= r.e.c; ++C) {\n\t\tif(((colinfo[C]||{}).hidden)) continue;\n\t\tcols[C] = encode_col(C);\n\t\tval = dense ? sheet[\"!data\"][R][C] : sheet[cols[C] + rr];\n\t\tswitch(header) {\n\t\t\tcase 1: hdr[C] = C - r.s.c; break;\n\t\t\tcase 2: hdr[C] = cols[C]; break;\n\t\t\tcase 3: hdr[C] = o.header[C - r.s.c]; break;\n\t\t\tdefault:\n\t\t\t\tif(val == null) val = {w: \"__EMPTY\", t: \"s\"};\n\t\t\t\tvv = v = format_cell(val, null, o);\n\t\t\t\tcounter = header_cnt[v] || 0;\n\t\t\t\tif(!counter) header_cnt[v] = 1;\n\t\t\t\telse {\n\t\t\t\t\tdo { vv = v + \"_\" + (counter++); } while(header_cnt[vv]); header_cnt[v] = counter;\n\t\t\t\t\theader_cnt[vv] = 1;\n\t\t\t\t}\n\t\t\t\thdr[C] = vv;\n\t\t}\n\t}\n\tR = r.s.r + offset;\n\tstream._read = function() {\n\t\twhile(R <= r.e.r) {\n\t\t\tif ((rowinfo[R-1]||{}).hidden) continue;\n\t\t\tvar row = make_json_row(sheet, r, R, cols, header, hdr, o);\n\t\t\t++R;\n\t\t\tif((row.isempty === false) || (header === 1 ? o.blankrows !== false : !!o.blankrows)) {\n\t\t\t\tstream.push(row.row);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\treturn stream.push(null);\n\t};\n\treturn stream;\n}\n\nvar __stream = {\n\tto_json: write_json_stream,\n\tto_html: write_html_stream,\n\tto_csv: write_csv_stream,\n\tset_readable: set_readable\n};\nexport const version = XLSX.version;\nexport {\n\tparse_xlscfb,\n\tparse_zip,\n\treadSync as read,\n\treadFileSync as readFile,\n\treadFileSync,\n\twriteSync as write,\n\twriteFileSync as writeFile,\n\twriteFileSync,\n\twriteFileAsync,\n\twriteSyncXLSX as writeXLSX,\n\twriteFileSyncXLSX as writeFileXLSX,\n\tutils,\n\tset_fs,\n\tset_cptable,\n\t__stream as stream,\n\tSSF,\n\tCFB\n};\nexport default {\n\tparse_xlscfb,\n\tparse_zip,\n\tread: readSync,\n\treadFile: readFileSync,\n\treadFileSync,\n\twrite: writeSync,\n\twriteFile: writeFileSync,\n\twriteFileSync,\n\twriteFileAsync,\n\twriteXLSX: writeSyncXLSX,\n\twriteFileXLSX: writeFileSyncXLSX,\n\tutils,\n\tset_fs,\n\tset_cptable,\n\tstream: __stream,\n\tSSF,\n\tCFB\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../es2015/.internal/bundled/xlsx/xlsx.mjs\n// module id = 3BtD\n// module chunks = bf3e","var toString = {}.toString;\n\nmodule.exports = Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Dropbox/www/amcharts4dev/node_modules/isarray/index.js\n// module id = 6I2M\n// module chunks = 71c9 bf3e","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <http://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nvar base64 = require('base64-js')\nvar ieee754 = require('ieee754')\nvar isArray = require('isarray')\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Use Object implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * Due to various browser bugs, sometimes the Object implementation will be used even\n * when the browser supports typed arrays.\n *\n * Note:\n *\n *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,\n *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.\n *\n *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.\n *\n *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of\n *     incorrect length in some situations.\n\n * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they\n * get the Object implementation, which is slower but behaves correctly.\n */\nBuffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined\n  ? global.TYPED_ARRAY_SUPPORT\n  : typedArraySupport()\n\n/*\n * Export kMaxLength after typed array support is determined.\n */\nexports.kMaxLength = kMaxLength()\n\nfunction typedArraySupport () {\n  try {\n    var arr = new Uint8Array(1)\n    arr.__proto__ = {__proto__: Uint8Array.prototype, foo: function () { return 42 }}\n    return arr.foo() === 42 && // typed array instances can be augmented\n        typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`\n        arr.subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`\n  } catch (e) {\n    return false\n  }\n}\n\nfunction kMaxLength () {\n  return Buffer.TYPED_ARRAY_SUPPORT\n    ? 0x7fffffff\n    : 0x3fffffff\n}\n\nfunction createBuffer (that, length) {\n  if (kMaxLength() < length) {\n    throw new RangeError('Invalid typed array length')\n  }\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = new Uint8Array(length)\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    if (that === null) {\n      that = new Buffer(length)\n    }\n    that.length = length\n  }\n\n  return that\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {\n    return new Buffer(arg, encodingOrOffset, length)\n  }\n\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new Error(\n        'If encoding is specified then the first argument must be a string'\n      )\n    }\n    return allocUnsafe(this, arg)\n  }\n  return from(this, arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\n// TODO: Legacy, not needed anymore. Remove in next major version.\nBuffer._augment = function (arr) {\n  arr.__proto__ = Buffer.prototype\n  return arr\n}\n\nfunction from (that, value, encodingOrOffset, length) {\n  if (typeof value === 'number') {\n    throw new TypeError('\"value\" argument must not be a number')\n  }\n\n  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {\n    return fromArrayBuffer(that, value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'string') {\n    return fromString(that, value, encodingOrOffset)\n  }\n\n  return fromObject(that, value)\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(null, value, encodingOrOffset, length)\n}\n\nif (Buffer.TYPED_ARRAY_SUPPORT) {\n  Buffer.prototype.__proto__ = Uint8Array.prototype\n  Buffer.__proto__ = Uint8Array\n  if (typeof Symbol !== 'undefined' && Symbol.species &&\n      Buffer[Symbol.species] === Buffer) {\n    // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\n    Object.defineProperty(Buffer, Symbol.species, {\n      value: null,\n      configurable: true\n    })\n  }\n}\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be a number')\n  } else if (size < 0) {\n    throw new RangeError('\"size\" argument must not be negative')\n  }\n}\n\nfunction alloc (that, size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(that, size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpretted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(that, size).fill(fill, encoding)\n      : createBuffer(that, size).fill(fill)\n  }\n  return createBuffer(that, size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(null, size, fill, encoding)\n}\n\nfunction allocUnsafe (that, size) {\n  assertSize(size)\n  that = createBuffer(that, size < 0 ? 0 : checked(size) | 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) {\n    for (var i = 0; i < size; ++i) {\n      that[i] = 0\n    }\n  }\n  return that\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(null, size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(null, size)\n}\n\nfunction fromString (that, string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('\"encoding\" must be a valid string encoding')\n  }\n\n  var length = byteLength(string, encoding) | 0\n  that = createBuffer(that, length)\n\n  var actual = that.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    that = that.slice(0, actual)\n  }\n\n  return that\n}\n\nfunction fromArrayLike (that, array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0\n  that = createBuffer(that, length)\n  for (var i = 0; i < length; i += 1) {\n    that[i] = array[i] & 255\n  }\n  return that\n}\n\nfunction fromArrayBuffer (that, array, byteOffset, length) {\n  array.byteLength // this throws if `array` is not a valid ArrayBuffer\n\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\\'offset\\' is out of bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\\'length\\' is out of bounds')\n  }\n\n  if (byteOffset === undefined && length === undefined) {\n    array = new Uint8Array(array)\n  } else if (length === undefined) {\n    array = new Uint8Array(array, byteOffset)\n  } else {\n    array = new Uint8Array(array, byteOffset, length)\n  }\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = array\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    that = fromArrayLike(that, array)\n  }\n  return that\n}\n\nfunction fromObject (that, obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0\n    that = createBuffer(that, len)\n\n    if (that.length === 0) {\n      return that\n    }\n\n    obj.copy(that, 0, 0, len)\n    return that\n  }\n\n  if (obj) {\n    if ((typeof ArrayBuffer !== 'undefined' &&\n        obj.buffer instanceof ArrayBuffer) || 'length' in obj) {\n      if (typeof obj.length !== 'number' || isnan(obj.length)) {\n        return createBuffer(that, 0)\n      }\n      return fromArrayLike(that, obj)\n    }\n\n    if (obj.type === 'Buffer' && isArray(obj.data)) {\n      return fromArrayLike(that, obj.data)\n    }\n  }\n\n  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < kMaxLength()` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= kMaxLength()) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + kMaxLength().toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return !!(b != null && b._isBuffer)\n}\n\nBuffer.compare = function compare (a, b) {\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError('Arguments must be Buffers')\n  }\n\n  if (a === b) return 0\n\n  var x = a.length\n  var y = b.length\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  var i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length)\n  var pos = 0\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i]\n    if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    }\n    buf.copy(buffer, pos)\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' &&\n      (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    string = '' + string\n  }\n\n  var len = string.length\n  if (len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n      case undefined:\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) return utf8ToBytes(string).length // assume utf8\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect\n// Buffer instances.\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  var i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  var len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  var len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  var len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length | 0\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  var str = ''\n  var max = exports.INSPECT_MAX_BYTES\n  if (this.length > 0) {\n    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')\n    if (this.length > max) str += ' ... '\n  }\n  return '<Buffer ' + str + '>'\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError('Argument must be a Buffer')\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  var x = thisEnd - thisStart\n  var y = end - start\n  var len = Math.min(x, y)\n\n  var thisCopy = this.slice(thisStart, thisEnd)\n  var targetCopy = target.slice(start, end)\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset  // Coerce to Number.\n  if (isNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (Buffer.TYPED_ARRAY_SUPPORT &&\n        typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1\n  var arrLength = arr.length\n  var valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  var i\n  if (dir) {\n    var foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  // must be an even number of digits\n  var strLen = string.length\n  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string')\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (isNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction latin1Write (buf, string, offset, length) {\n  return asciiWrite(buf, string, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset | 0\n    if (isFinite(length)) {\n      length = length | 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  // legacy write(string, encoding, offset, length) - remove in v0.13\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  var remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n        return asciiWrite(this, string, offset, length)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Write(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  var res = []\n\n  var i = start\n  while (i < end) {\n    var firstByte = buf[i]\n    var codePoint = null\n    var bytesPerSequence = (firstByte > 0xEF) ? 4\n      : (firstByte > 0xDF) ? 3\n      : (firstByte > 0xBF) ? 2\n      : 1\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = ''\n  var i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; ++i) {\n    out += toHex(buf[i])\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  for (var i = 0; i < bytes.length; i += 2) {\n    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    newBuf = this.subarray(start, end)\n    newBuf.__proto__ = Buffer.prototype\n  } else {\n    var sliceLen = end - start\n    newBuf = new Buffer(sliceLen, undefined)\n    for (var i = 0; i < sliceLen; ++i) {\n      newBuf[i] = this[i + start]\n    }\n  }\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  var val = this[offset + --byteLength]\n  var mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var i = byteLength\n  var mul = 1\n  var val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var mul = 1\n  var i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nfunction objectWriteUInt16 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {\n    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>\n      (littleEndian ? i : 1 - i) * 8\n  }\n}\n\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nfunction objectWriteUInt32 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffffffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {\n    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff\n  }\n}\n\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset + 3] = (value >>> 24)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 1] = (value >>> 8)\n    this[offset] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = 0\n  var mul = 1\n  var sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  var sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 3] = (value >>> 24)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  var len = end - start\n  var i\n\n  if (this === target && start < targetStart && targetStart < end) {\n    // descending copy from end\n    for (i = len - 1; i >= 0; --i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {\n    // ascending copy from start\n    for (i = 0; i < len; ++i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, start + len),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0)\n      if (code < 256) {\n        val = code\n      }\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  var i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val)\n      ? val\n      : utf8ToBytes(new Buffer(val, encoding).toString())\n    var len = bytes.length\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+\\/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = stringtrim(str).replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction stringtrim (str) {\n  if (str.trim) return str.trim()\n  return str.replace(/^\\s+|\\s+$/g, '')\n}\n\nfunction toHex (n) {\n  if (n < 16) return '0' + n.toString(16)\n  return n.toString(16)\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\nfunction isnan (val) {\n  return val !== val // eslint-disable-line no-self-compare\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Dropbox/www/amcharts4dev/node_modules/buffer/index.js\n// module id = Ul5o\n// module chunks = 71c9 bf3e","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Dropbox/www/amcharts4dev/node_modules/process/browser.js\n// module id = Xm2t\n// module chunks = 0471 bf3e","'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  var i\n  for (i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Dropbox/www/amcharts4dev/node_modules/base64-js/index.js\n// module id = ZUfS\n// module chunks = 71c9 bf3e"],"sourceRoot":""}